<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Inizia Qui on Alberto Reineri</title>
		<link>https://albertoreineri.it/categories/inizia-qui/</link>
		<description>Recent content in Inizia Qui on Alberto Reineri</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>it</language>
		<lastBuildDate>Thu, 18 Jan 2024 00:00:00 +0000</lastBuildDate>
		<atom:link href="https://albertoreineri.it/categories/inizia-qui/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Le basi Di GIT: Impara il versioning!</title>
			<link>https://albertoreineri.it/blog/le-basi-di-git/</link>
			<pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-basi-di-git/</guid>
			<description>Nel vasto panorama dello sviluppo software, la gestione efficace del codice svolge un ruolo cruciale nel determinare il successo di un progetto. In questo contesto, Git si erge come uno strumento indispensabile, fornendo un sistema di controllo versione potente ed efficiente. La sua adozione non solo semplifica la collaborazione tra sviluppatori, ma offre anche un metodo robusto per tracciare le modifiche nel tempo, gestire branch distinti e risolvere conflitti in modo ordinato.</description>
			<content type="html"><![CDATA[<p>Nel vasto panorama dello sviluppo software, la gestione efficace del codice svolge un ruolo cruciale nel determinare il successo di un progetto. In questo contesto, Git si erge come uno strumento indispensabile, fornendo un sistema di controllo versione potente ed efficiente. La sua adozione non solo semplifica la collaborazione tra sviluppatori, ma offre anche un metodo robusto per tracciare le modifiche nel tempo, gestire branch distinti e risolvere conflitti in modo ordinato.</p>
<p>Questa guida pratica vuole di condurti attraverso i fondamenti della gestione del codice con Git, offrendo una panoramica chiara e dettagliata delle procedure fondamentali. Dall&rsquo;installazione iniziale fino alla collaborazione avanzata su piattaforme come GitHub, esploreremo passo dopo passo come sfruttare appieno le potenzialità di Git per migliorare il tuo flusso di lavoro dello sviluppo.
Che tu sia un principiante che inizia il suo viaggio nello sviluppo software o un professionista esperto che desidera perfezionare le proprie competenze, questa guida ti accompagnerà nella tua esperienza con Git, aprendoti le porte a un mondo di gestione del codice più organizzato e collaborativo.</p>
<h2 id="1-installazione-di-git">1. Installazione di Git:</h2>
<p>Il primo passo fondamentale per intraprendere il tuo viaggio nella gestione del codice con Git è l&rsquo;installazione dello strumento sul tuo sistema. Git è una risorsa versatile e può essere installato su diverse piattaforme, tra cui Windows, macOS e Linux. Segui attentamente i passaggi corrispondenti al tuo sistema operativo per garantire una corretta installazione.</p>
<h3 id="windows">Windows:</h3>
<ul>
<li>Visita il sito ufficiale di Git (<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>) e scarica l&rsquo;installer.</li>
<li>Esegui l&rsquo;installer scaricato, seguendo le istruzioni di installazione.</li>
<li>Durante l&rsquo;installazione, assicurati di selezionare l&rsquo;opzione per &ldquo;Usare Git e strumenti da riga di comando&rdquo; per abilitare l&rsquo;utilizzo di Git da linea di comando.</li>
</ul>
<h3 id="macos">macOS:</h3>
<ul>
<li>Se stai utilizzando macOS, è consigliabile utilizzare Homebrew per l&rsquo;installazione. Apri il terminale e esegui il comando:
<pre tabindex="0"><code>brew install git
</code></pre></li>
<li>Attendere il completamento dell&rsquo;installazione.</li>
</ul>
<h3 id="linux-ubuntu">Linux (Ubuntu):</h3>
<ul>
<li>Su sistemi basati su Ubuntu, esegui i seguenti comandi nel terminale:
<pre tabindex="0"><code>sudo apt update
sudo apt install git
</code></pre></li>
<li>Conferma l&rsquo;installazione quando richiesto.</li>
</ul>
<p>Verifica l&rsquo;installazione eseguendo il comando <code>git --version</code> nel terminale. Se Git è stato installato correttamente, verrà visualizzata la versione attuale.</p>
<p>Con Git installato sul tuo sistema, hai aperto la porta per sfruttare appieno le sue funzionalità di gestione del codice. Nelle sezioni successive, esploreremo come inizializzare un repository e cominciare a tracciare le modifiche al tuo codice con precisione.</p>
<h2 id="2-creazione-di-un-repository">2. Creazione di un Repository:</h2>
<p>Ora che hai Git installato sul tuo sistema, il passo successivo è inizializzare un repository Git all&rsquo;interno della directory del tuo progetto. Un repository è essenzialmente un contenitore che terrà traccia delle modifiche al tuo codice nel tempo. Segui attentamente questi passaggi per creare il tuo repository:</p>
<ol>
<li>
<p><strong>Apertura del Terminale o della Console:</strong> Apri il terminale se sei su macOS o Linux, o la console se sei su Windows.</p>
</li>
<li>
<p><strong>Spostamento nella Directory del Progetto:</strong> Utilizza il comando <code>cd</code> per spostarti nella directory del tuo progetto. Ad esempio:
cd percorso/verso/il/tuo/progetto</p>
</li>
<li>
<p><strong>Inizializzazione del Repository:</strong> Esegui il comando <code>git init</code> per inizializzare un nuovo repository Git nella directory del progetto.</p>
</li>
</ol>
<pre tabindex="0"><code>git init
</code></pre><ol start="4">
<li><strong>Verifica dello Stato del Repository:</strong> Puoi utilizzare il comando <code>git status</code> per verificare lo stato del tuo repository, visualizzando i file che sono stati modificati o aggiunti e quelli pronti per il commit.</li>
</ol>
<p>Adesso hai creato con successo il tuo primo repository Git. Da questo momento in poi, Git inizierà a tenere traccia delle modifiche ai tuoi file. Nel prossimo passo, esploreremo come aggiungere i file al repository e registrare le modifiche tramite i commit.</p>
<h2 id="3-aggiunta-di-file-al-repository">3. Aggiunta di File al Repository:</h2>
<p>Ora che il tuo repository Git è stato inizializzato, è il momento di iniziare a monitorare e registrare le modifiche ai tuoi file. Utilizzeremo il comando <code>git add</code> per preparare i file e il comando <code>git commit</code> per confermare le modifiche. Ecco come procedere:</p>
<h3 id="aggiunta-di-file-al-repository">Aggiunta di File al Repository:</h3>
<p>Utilizza il comando <code>git add &lt;nome file&gt;</code> per aggiungere un singolo file al cosiddetto &ldquo;staging area&rdquo;, il luogo dove Git prepara i file per il successivo commit.</p>
<pre><code> git add nomefile.txt
</code></pre>
<p>Se desideri aggiungere tutti i file modificati o nuovi, puoi utilizzare il comando:</p>
<pre><code> git add .
</code></pre>
<p>Assicurati di sostituire <code>&lt;nome file&gt;</code> con il nome effettivo del tuo file.</p>
<h3 id="verifica-dello-stato-del-repository">Verifica dello Stato del Repository:</h3>
<p>Puoi sempre verificare lo stato attuale del repository con il comando <code>git status</code>. Questo ti mostrerà i file che sono stati aggiunti al &ldquo;staging area&rdquo; e quelli che sono ancora in attesa di essere aggiunti.</p>
<pre tabindex="0"><code>git status
</code></pre><h3 id="conferma-delle-modifiche-con-un-commit">Conferma delle Modifiche con un Commit:</h3>
<p>Una volta che hai aggiunto i file desiderati, è ora di effettuare un commit per registrare le modifiche nel repository. Utilizza il comando <code>git commit</code> seguito da un messaggio descrittivo:</p>
<pre><code>  git commit -m &quot;Descrizione delle modifiche&quot;
</code></pre>
<p>Il messaggio del commit dovrebbe essere chiaro e descrittivo, in modo che tu possa capire facilmente le modifiche apportate in futuro.</p>
<p>Ora hai ufficialmente registrato le tue prime modifiche nel repository Git. Nel prossimo passo, esploreremo ulteriormente i concetti di branch, permettendoti di lavorare su diverse linee di sviluppo in modo organizzato.</p>
<h2 id="4-commit-delle-modifiche">4. Commit delle Modifiche:</h2>
<p>Dopo aver aggiunto i file desiderati al tuo repository tramite la &ldquo;staging area&rdquo;, è giunto il momento di effettuare un commit. I commit in Git sono come istantanee del tuo progetto in un determinato momento, e ogni commit ha un messaggio descrittivo associato che indica le modifiche apportate. Ecco come eseguire un commit:</p>
<h3 id="esecuzione-del-commit">Esecuzione del Commit:</h3>
<p>Utilizza il comando <code>git commit -m &quot;Messaggio del commit&quot;</code> per registrare ufficialmente le modifiche nel repository.</p>
<pre><code> git commit -m &quot;Implementato il sistema di autenticazione&quot;
</code></pre>
<p>Il messaggio del commit dovrebbe essere chiaro e informativo, spiegando brevemente le modifiche apportate in questo specifico commit.</p>
<h3 id="visualizzazione-della-cronologia-dei-commit">Visualizzazione della Cronologia dei Commit:</h3>
<p>Puoi visualizzare la cronologia dei commit con il comando <code>git log</code>. Questo mostrerà una lista di tutti i commit nel repository, con informazioni dettagliate su chi ha effettuato il commit, quando è stato eseguito e il messaggio associato.</p>
<h3 id="ritorno-a-versioni-precedenti-opzionale">Ritorno a Versioni Precedenti (opzionale):</h3>
<p>Se desideri tornare a una versione precedente del tuo progetto, puoi farlo utilizzando il comando <code>git checkout &lt;ID commit&gt;</code> o <code>git checkout &lt;nome branch&gt;</code>. Questo ti permette di esplorare il tuo progetto in uno stato specifico.</p>
<h3 id="visualizzazione-delle-differenze-opzionale">Visualizzazione delle Differenze (opzionale):</h3>
<p>Puoi visualizzare le differenze tra le versioni con il comando <code>git diff</code>. Questo comando ti mostrerà le modifiche apportate tra la tua copia di lavoro attuale e l&rsquo;ultima versione registrata nel repository.</p>
<p>Effettuare commit regolari e descrittivi è una pratica cruciale per tenere traccia delle modifiche nel tempo e facilitare la collaborazione con altri sviluppatori. Nella prossima sezione, esploreremo l&rsquo;utilizzo di branch, che consente di lavorare su diverse linee di sviluppo in modo separato.</p>
<h2 id="5-creazione-di-branch">5. Creazione di Branch:</h2>
<p>L&rsquo;utilizzo di branch in Git consente di sviluppare diverse linee di codice in modo separato, permettendo un lavoro parallelo su diverse funzionalità o correzioni senza influenzare il branch principale. Vediamo come creare e gestire i branch in Git:</p>
<h3 id="creazione-di-un-nuovo-branch">Creazione di un Nuovo Branch:</h3>
<p>Utilizza il comando <code>git branch &lt;nome branch&gt;</code> per creare un nuovo branch. Ad esempio:</p>
<pre><code> git branch feature-autenticazione
</code></pre>
<p>Questo crea un nuovo branch chiamato &ldquo;feature-autenticazione&rdquo;, ma attualmente rimani nel tuo branch corrente.</p>
<h3 id="cambio-tra-i-branch">Cambio tra i Branch:</h3>
<p>Per spostarti da un branch all&rsquo;altro, utilizza il comando <code>git checkout &lt;nome branch&gt;</code>:
<code>bash git checkout feature-autenticazione </code>
Oltre a <code>git checkout</code>, puoi anche utilizzare il comando più recente <code>git switch</code>:
<code>bash git switch feature-autenticazione </code></p>
<h3 id="creazione-e-cambio-branch-in-un-unico-passaggio">Creazione e Cambio Branch in un Unico Passaggio:</h3>
<p>Puoi creare e cambiare immediatamente al nuovo branch con il comando:
<code>bash git checkout -b feature-autenticazione </code>
oppure con:
<code>bash git switch -c feature-autenticazione </code></p>
<h3 id="visualizzazione-di-tutti-i-branch">Visualizzazione di Tutti i Branch:</h3>
<p>Puoi visualizzare tutti i branch presenti nel tuo repository utilizzando il comando:
<code>bash git branch </code>
Il branch corrente sarà evidenziato con un asterisco.</p>
<h3 id="merge-di-branch">Merge di Branch:</h3>
<p>Una volta completato il lavoro su un branch, è possibile unire le modifiche al branch principale (solitamente &ldquo;master&rdquo;) utilizzando il comando <code>git merge</code>. Ad esempio:
<code>bash git checkout master git merge feature-autenticazione </code>
o, in un unico passaggio:
<code>bash git switch master git merge feature-autenticazione </code></p>
<p>Utilizzare i branch in modo efficace consente di organizzare e gestire le modifiche al codice in modo pulito e strutturato. Nella prossima sezione, approfondiremo il processo di unione di branch e la gestione dei conflitti che possono sorgere durante questa operazione.</p>
<h2 id="6-unione-di-branch">6. Unione di Branch:</h2>
<p>L&rsquo;unione di branch in Git è un passo cruciale per combinare le modifiche effettuate su branch separati, consentendo di consolidare il lavoro svolto in diverse direzioni. Ecco come gestire l&rsquo;unione di branch:</p>
<h3 id="spostamento-al-branch-di-destinazione">Spostamento al Branch di Destinazione:</h3>
<p>Prima di unire i branch, assicurati di trovarti nel branch di destinazione. Per esempio, se desideri unire il branch &ldquo;feature-autenticazione&rdquo; al branch &ldquo;master&rdquo;, esegui:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git checkout master
</span></span></code></pre></div><p>Se stai usando il comando <code>git switch</code>, puoi usare:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git switch master
</span></span></code></pre></div><h3 id="unione-di-branch">Unione di Branch:</h3>
<p>Utilizza il comando <code>git merge</code> per unire il branch di destinazione con il branch di partenza. Ad esempio:
<code>bash git merge feature-autenticazione </code>
Git cercherà di unire automaticamente le modifiche, ma potrebbero sorgere conflitti che richiederanno una risoluzione manuale.</p>
<h3 id="risoluzione-dei-conflitti">Risoluzione dei Conflitti:</h3>
<p>Se si verificano conflitti durante l&rsquo;unione di branch, Git lo segnalerà. Utilizza il comando <code>git status</code> per identificare i file in conflitto.
Modifica manualmente i file in conflitto risolvendo le differenze, quindi esegui:
<code>bash git add &lt;file in conflitto&gt; git merge --continue </code>
Continua il processo fino a quando tutti i conflitti sono risolti.</p>
<h3 id="annullamento-dellunione-opzionale">Annullamento dell&rsquo;Unione (opzionale):</h3>
<p>Se desideri annullare l&rsquo;unione e riprovare, puoi utilizzare il comando:
<code>bash git merge --abort </code>
oppure, se stai utilizzando Git versione 2.27 o successiva:
<code>bash git restore --source=HEAD --staged --worktree -- &lt;file in conflitto&gt; </code></p>
<h3 id="verifica-del-risultato">Verifica del Risultato:</h3>
<p>Dopo unire i branch, esegui il comando <code>git log</code> per verificare che le modifiche siano state consolidate correttamente.</p>
<p>Unire i branch è un aspetto fondamentale dello sviluppo collaborativo, consentendo a diversi membri del team di lavorare su funzionalità separate senza influenzare direttamente il branch principale. La gestione efficace degli eventuali conflitti durante l&rsquo;unione è essenziale per mantenere l&rsquo;integrità del codice. Nella prossima sezione, esploreremo ulteriormente la gestione del versionamento, consentendoti di esplorare diverse versioni del tuo progetto nel tempo.</p>
<h2 id="7-gestione-del-versionamento">7. Gestione del Versionamento:</h2>
<p>La gestione del versionamento in Git consente di esplorare diverse versioni del tuo progetto nel tempo, offrendo un modo potente per tornare indietro e ispezionare lo stato del codice in qualsiasi momento. Vediamo come sfruttare questa funzionalità:</p>
<h3 id="visualizzazione-della-cronologia-dei-commit-1">Visualizzazione della Cronologia dei Commit:</h3>
<p>Utilizza il comando <code>git log</code> per visualizzare la cronologia dei commit nel tuo repository.
<code>bash git log </code>
Questo elencherà tutti i commit con i relativi dettagli, inclusi ID, autore, data e messaggio del commit.</p>
<h3 id="tornare-a-versioni-precedenti">Tornare a Versioni Precedenti:</h3>
<p>Puoi tornare a una versione precedente del tuo progetto utilizzando il comando <code>git checkout</code> seguito dall&rsquo;ID del commit o del branch desiderato.
<code>bash git checkout &lt;ID commit&gt; </code>
Ad esempio, per tornare al branch principale (solitamente &ldquo;master&rdquo;):
<code>bash git checkout master </code></p>
<h3 id="creazione-di-un-nuovo-branch-da-un-commit-specifico-opzionale">Creazione di un Nuovo Branch da un Commit Specifico (opzionale):</h3>
<p>Se desideri creare un nuovo branch basato su una versione specifica, puoi utilizzare il comando:
<code>bash git checkout -b nuovo-branch &lt;ID commit&gt; </code></p>
<h3 id="annullamento-delle-modifiche-locali">Annullamento delle Modifiche Locali:</h3>
<p>Se hai apportato modifiche nel tuo codice ma desideri scartarle e tornare all&rsquo;ultimo commit, puoi utilizzare il comando:
<code>bash git checkout -- . </code></p>
<h3 id="ripristino-di-file-da-un-commit-specifico-opzionale">Ripristino di File da un Commit Specifico (opzionale):</h3>
<p>Se desideri ripristinare uno o più file da un commit specifico, puoi utilizzare il comando:
<code>bash git checkout &lt;ID commit&gt; -- &lt;nome file&gt; </code></p>
<h3 id="utilizzo-di-git-diff">Utilizzo di <code>git diff</code>:</h3>
<p>Il comando <code>git diff</code> ti consente di confrontare le differenze tra il tuo stato di lavoro attuale e un commit specifico o un branch.
<code>bash git diff &lt;ID commit&gt; </code></p>
<h3 id="ritorno-al-branch-corrente">Ritorno al Branch Corrente:</h3>
<p>Dopo aver esplorato una versione specifica, assicurati di tornare al branch corrente utilizzando <code>git checkout</code> o <code>git switch</code>.
<code>bash git checkout nome-branch </code></p>
<p>Grazie a questi comandi, hai ora la flessibilità di esplorare il tuo progetto attraverso diverse fasi di sviluppo. La gestione del versionamento ti consente di mantenere un controllo preciso sullo stato del tuo codice nel tempo, un aspetto essenziale per lo sviluppo software efficace. Nella prossima sezione, esploreremo come collaborare con altri sviluppatori su GitHub.</p>
<h2 id="8-collaborazione-su-github">8. Collaborazione su GitHub:</h2>
<p>GitHub è una piattaforma di hosting basata su Git che facilita la collaborazione e la condivisione del codice tra sviluppatori. Impareremo come caricare il tuo repository su GitHub, collaborare con altri sviluppatori e gestire il flusso di lavoro con le pull request:</p>
<h3 id="creazione-di-un-account-su-github-se-non-hai-già-uno">Creazione di un Account su GitHub (se non hai già uno):</h3>
<p>Visita <a href="https://github.com/">GitHub</a> e crea un account se non ne hai già uno.</p>
<h3 id="creazione-di-un-nuovo-repository-su-github">Creazione di un Nuovo Repository su GitHub:</h3>
<p>Dalla tua dashboard su GitHub, fai clic su &ldquo;New&rdquo; per creare un nuovo repository.
Assegna un nome al repository, aggiungi una descrizione opzionale e inizializza con un README se desideri.
Fai clic su &ldquo;Create repository&rdquo;.</p>
<h3 id="collegamento-del-repository-locale-a-github">Collegamento del Repository Locale a GitHub:</h3>
<p>Utilizza i comandi seguenti per collegare il tuo repository locale a quello su GitHub:
<code>bash git remote add origin &lt;URL del tuo repository su GitHub&gt; git branch -M main git push -u origin main </code>
Questo aggiunge un collegamento remoto chiamato &ldquo;origin&rdquo; e carica il tuo branch principale su GitHub.</p>
<h3 id="aggiornamento-del-repository-locale-da-github">Aggiornamento del Repository Locale da GitHub:</h3>
<p>Puoi scaricare le ultime modifiche dal repository su GitHub utilizzando il comando:
<code>bash git pull origin main </code></p>
<h3 id="creazione-di-una-pull-request">Creazione di una Pull Request:</h3>
<p>Quando desideri contribuire al progetto di qualcun altro, crea una &ldquo;pull request&rdquo; (PR).
Fai clic su &ldquo;Pull requests&rdquo; nella scheda del repository su GitHub e quindi su &ldquo;New pull request&rdquo;.
Seleziona il branch del tuo fork e il branch di destinazione, quindi fai clic su &ldquo;Create pull request&rdquo;.</p>
<h3 id="revisione-delle-pull-request">Revisione delle Pull Request:</h3>
<p>Se sei il proprietario del repository, puoi revisionare le PR ricevute e, se necessario, approvarle.
Puoi commentare direttamente sul codice, evidenziare linee specifiche e avviare discussioni.</p>
<h3 id="fusione-della-pull-request">Fusione della Pull Request:</h3>
<p>Dopo la revisione, fai clic su &ldquo;Merge pull request&rdquo; per integrare le modifiche nel branch di destinazione.
Puoi scegliere di eliminare il branch dopo la fusione.</p>
<h3 id="sincronizzazione-del-repository-locale">Sincronizzazione del Repository Locale:</h3>
<p>Dopo la fusione, puoi sincronizzare il tuo repository locale con le modifiche utilizzando:
<code>bash git pull origin main </code></p>
<p>Questo processo di collaborazione su GitHub è essenziale per lavorare in team, consentendo una gestione trasparente delle modifiche e facilitando la revisione del codice. Nella prossima sezione, esploreremo come gestire eventuali conflitti che possono sorgere durante le fusioni di branch o le pull request.</p>
<h2 id="9-risoluzione-di-conflitti">9. Risoluzione di Conflitti:</h2>
<p>Durante la collaborazione su un progetto Git con altri sviluppatori, è possibile che si verifichino conflitti quando si tenta di unire branch o fusionare pull request. I conflitti si verificano quando le modifiche apportate in una branch interferiscono con le modifiche apportate in un&rsquo;altra, richiedendo una risoluzione manuale. Ecco come gestire i conflitti:</p>
<h3 id="rilevamento-di-conflitti">Rilevamento di Conflitti:</h3>
<p>Durante un&rsquo;operazione di unione di branch o di una pull request, Git può segnalare che ci sono conflitti.
Puoi rilevare i conflitti anche utilizzando il comando <code>git status</code>, che mostrerà i file in conflitto.</p>
<h3 id="risoluzione-manuale-dei-conflitti">Risoluzione Manuale dei Conflitti:</h3>
<p>Apri i file in conflitto con un editor di testo e cerca le sezioni contrassegnate da Git come &ldquo;&laquo;&laquo;&laquo;&lt;&rdquo;, &ldquo;=======&rdquo; e &ldquo;&raquo;&raquo;&raquo;&gt;&rdquo;. Queste sezioni rappresentano le modifiche conflittuali.
Modifica manualmente il codice per risolvere le differenze in conflitto, mantenendo solo le parti necessarie.
Rimuovi anche i marcatori di conflitto.</p>
<h3 id="aggiunta-e-commit-delle-modifiche">Aggiunta e Commit delle Modifiche:</h3>
<p>Dopo aver risolto i conflitti, utilizza il comando <code>git add &lt;nome file&gt;</code> per segnare i file come risolti.
Successivamente, esegui un commit per confermare la risoluzione dei conflitti:
<code>bash git commit -m &quot;Risoluzione dei conflitti&quot; </code></p>
<h3 id="fusione-del-branch-o-pull-request">Fusione del Branch o Pull Request:</h3>
<p>Prosegui con l&rsquo;operazione di fusione del branch o di accettazione della pull request.
Se stai risolvendo i conflitti in una pull request su GitHub, la PR verrà aggiornata automaticamente dopo che hai effettuato il commit di risoluzione dei conflitti.</p>
<h3 id="continuazione-delloperazione-originale">Continuazione dell&rsquo;Operazione Originale:</h3>
<p>Dopo aver risolto i conflitti, puoi continuare con l&rsquo;operazione originale, come la fusione del branch o l&rsquo;accettazione della pull request.</p>
<p>La risoluzione dei conflitti è un aspetto comune quando si lavora in un ambiente collaborativo. È essenziale affrontare i conflitti in modo tempestivo per mantenere l&rsquo;integrità del codice e garantire una collaborazione senza problemi. Con questi passaggi, sarai in grado di gestire i conflitti e proseguire con il tuo flusso di lavoro. Nella sezione successiva, esploreremo alcune best practice per garantire una gestione del codice fluida e senza intoppi.</p>
<h2 id="10-best-practice-per-una-gestione-del-codice-efficace">10. Best Practice per una Gestione del Codice Efficace:</h2>
<p>Una gestione del codice efficace è essenziale per lo sviluppo software di successo. Seguire alcune best practice ti aiuterà a mantenere un flusso di lavoro organizzato, migliorare la collaborazione e ridurre potenziali problemi. Ecco alcune raccomandazioni:</p>
<ul>
<li>
<p><strong>Messaggi di Commit Significativi:</strong> Scrivi messaggi di commit chiari e descrittivi. I messaggi informativi aiutano te e gli altri sviluppatori a comprendere le modifiche apportate in un determinato commit.</p>
</li>
<li>
<p><strong>Commit Frequenti e Atomici:</strong> Effettua commit frequenti e atomici. Un commit dovrebbe rappresentare una singola unità logica di lavoro. Questo semplifica la revisione del codice e la gestione dei conflitti.</p>
</li>
<li>
<p><strong>Branch Descrittivi:</strong> Usa nomi di branch descrittivi e significativi. Questo facilita la comprensione del lavoro svolto su ciascun branch e semplifica la gestione dei branch stessi.</p>
</li>
<li>
<p><strong>Aggiornamento Regolare del Repository:</strong> Mantieni il tuo repository locale aggiornato con i cambiamenti dal repository remoto. Utilizza <code>git pull</code> regolarmente per ottenere le ultime modifiche.</p>
</li>
<li>
<p><strong>Evita il Codice &ldquo;Spaghetti&rdquo;:</strong> Scrivi codice pulito e ben strutturato. Utilizza pratiche di codifica consistenti e seguine le linee guida del progetto.</p>
</li>
<li>
<p><strong>Utilizzo di .gitignore:</strong> Utilizza un file <code>.gitignore</code> per escludere file temporanei, file di build e altri elementi non desiderati dal controllo versione.</p>
</li>
<li>
<p><strong>Test Unitari e Test di Integrazione:</strong> Implementa test unitari e di integrazione per garantire la stabilità del codice. Esegui test regolarmente durante lo sviluppo.</p>
</li>
<li>
<p><strong>Documentazione Adeguata:</strong> Documenta il tuo codice in modo chiaro e completo. Questo aiuta sia te che gli altri sviluppatori a comprendere il funzionamento del codice.</p>
</li>
<li>
<p><strong>Code Reviews:</strong> Partecipa alle revisioni del codice. Le revisioni sono un&rsquo;opportunità per migliorare la qualità del codice, condividere conoscenze e garantire la coerenza nel progetto.</p>
</li>
<li>
<p><strong>Backup Regolari:</strong> Esegui backup regolari del tuo repository, soprattutto prima di operazioni delicate come la fusione di branch complessi o la modifica di parti cruciali del codice.</p>
</li>
</ul>
<p>Seguendo queste best practice, sarai in grado di mantenere un ambiente di sviluppo sano e collaborativo. Una gestione del codice ben organizzata è fondamentale per la crescita e il successo a lungo termine di qualsiasi progetto software.</p>
<h2 id="conclusione">Conclusione:</h2>
<p>Navigare nel complesso mondo dello sviluppo web e della gestione del codice richiede competenze solide e una comprensione approfondita degli strumenti a disposizione. In questa guida, abbiamo esplorato i fondamenti della gestione del codice con Git, fornendo una panoramica dettagliata dei concetti chiave e delle pratiche consigliate.</p>
<p>Dall&rsquo;installazione di Git e la creazione di repository, alla gestione di branch, conflitti e pull request, hai acquisito una solida base per gestire progetti software in modo efficace. Abbiamo anche esaminato l&rsquo;importante aspetto della collaborazione su GitHub, consentendoti di lavorare con altri sviluppatori in un ambiente distribuito.</p>
<p>Per migliorare ulteriormente il tuo flusso di lavoro, abbiamo esplorato best practice come l&rsquo;uso di messaggi di commit significativi, la scrittura di codice pulito, l&rsquo;implementazione di test e l&rsquo;automazione dei processi con Git Hooks. Infine, hai imparato come gestire efficientemente le dipendenze attraverso l&rsquo;uso di Git Submodules.</p>
<p>Ricorda che lo sviluppo software è un percorso continuo di apprendimento. Mantieni aggiornate le tue competenze, esplora nuove tecnologie e partecipa attivamente alla community dello sviluppo web. Con una solida comprensione di Git e delle pratiche consigliate, sei pronto per affrontare sfide più complesse nel tuo viaggio di sviluppo web. Buona codifica!</p>
]]></content>
		</item>
		
		<item>
			<title>1. Le basi dell&#39;HTML</title>
			<link>https://albertoreineri.it/blog/le-basi-dell-html/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-basi-dell-html/</guid>
			<description>L’HTML è la base del web, c’è dappertutto! Ogni pagina internet che visualizzi ha del codice HTML al suo interno. Se vuoi diventare uno sviluppatore web quindi la prima cosa da fare è un corso intensivo di HTML!
Questo corso è rivolto ai principianti, pertanto se conosci già l’HTML questo articolo non fa per te, se invece sei agli inizi BENVENUTO e buono studio! Vedrai che imparerai presto a cerare fantastici contenuti web!</description>
			<content type="html"><![CDATA[<p><strong>L’HTML è la base del web</strong>, c’è dappertutto! Ogni pagina internet che visualizzi ha del codice HTML al suo interno. Se vuoi diventare uno sviluppatore web quindi la prima cosa da fare è un corso intensivo di HTML!</p>
<hr>
<p><em>Questo corso è rivolto ai <strong>principianti</strong>, pertanto se conosci già l’HTML questo articolo non fa per te, se invece sei agli inizi <strong>BENVENUTO</strong> e buono studio! Vedrai che <strong>imparerai presto</strong> a cerare fantastici contenuti web!</em></p>
<hr>
<p>L’HTML non è proprio un linguaggio di programmazione, ma è un <strong>linguaggio di markup,</strong> infatti HTML è l’acronimo di <em>HyperText Markup Language</em>.</p>
<p>Ciò significa che l’HTML non fa operazioni di calcolo, ma sostanzialmente indica al browser <strong>come <em>montare</em> la pagina</strong>, cosa posizionare e come posizionarlo.</p>
<h2 id="cosa-serve-per-iniziare">Cosa serve per iniziare</h2>
<p>Per iniziare a scrivere codice HTML <strong>non servono super computer</strong> nè programmi pesanti e costosi.</p>
<p>Se vuoi iniziare a sviluppare contenuti per il web inizialmente <strong>ti bastano 2 cose:</strong></p>
<ul>
<li>web browser</li>
<li>editor di testo</li>
</ul>
<h3 id="web-browser">Web Browser</h3>
<p>Sviluppando qualcosa che sarà fruibile attraverso un browser, <strong>il browser è fondamentale</strong>. Ne esistono veramente molti e tutti validi, ma il mio consiglio è di utilizzare <strong><a href="https://www.google.com/intl/it_it/chrome/">Google Chrome</a></strong>.</p>
<p>Se non sei un fan del browser di google eccoti alcune alternative:</p>
<ul>
<li><a href="https://www.microsoft.com/it-it/edge">Microsoft Edge</a> (Windows)</li>
<li><a href="https://www.apple.com/it/safari/">Safari</a> (Mac)</li>
<li><a href="https://www.mozilla.org/it/firefox/new/">Mozilla Firefox</a></li>
</ul>
<h3 id="editor-di-testo">Editor di testo</h3>
<p>L’altro software <strong>fondamentale</strong> per sviluppare per il web è un editor di testo.</p>
<p>Un editor di testo è un programma che <strong>consente di scrivere il codice.</strong> Si potrebbe utilizzare banalmente il classico editor di testo del sistema operativo (Blocco note o Text edit), ma fortunatamente esistono software dedicati allo sviluppo che rendono la scrittura del codice molto più semplice.</p>
<p>Il mio consiglio è di utilizzare <strong><a href="https://code.visualstudio.com/">VS Code</a></strong>, a mio avviso in questo momento è il migliore in assoluto.</p>
<p>Anche qui hai comunque molta scelta! Ecco alcune delle migliori <strong>alternative</strong> a VS Code:</p>
<ul>
<li><a href="https://www.sublimetext.com/">Sublime Text</a></li>
<li><a href="https://atom.io/">Atom</a></li>
<li><a href="http://brackets.io/">Brackets</a></li>
<li><a href="https://notepad-plus-plus.org/downloads/">Notepad++</a></li>
</ul>
<h2 id="creiamo-il-nostro-primo-file-html">Creiamo il nostro primo file HTML</h2>
<p>Ora che hai scaricato un browser e un editor di testo, possiamo crerare il nostro primo file HTML.</p>
<p>Creiamo una <strong>cartella</strong> sul desktop chiamata “<strong>HTML</strong>“. Ora apriamo questa cartella con <strong>VS Code</strong>, facendo click con il tasto destro del mouse all’interno della cartella e cliccando “<strong>Apri con Code</strong>“</p>
<p><img src="images/Group-5-1.jpeg" alt=""></p>
<p>Ora possiamo creare il nostro file con VS Code.</p>
<p>Clicchiamo “<strong>CTRL+N</strong>” per creare un nuovo file e poi “<strong>CTRL+S</strong>” per salvarlo, con il nome “<strong><em>index.html</em></strong>“.</p>
<p>Tutti i file HTML devono avere estensione .html, cioè finire con .html, questo farà capire al browser il tipo di file che sta leggendo.</p>
<p>Puoi creare i file anche tramite il menù in alto, cliccando su “File-New File” oppure con l’icona specifica nella barra laterale sulla sinistra.</p>
<p><strong>PERFETTO! Abbiamo creato il nostro primo file HTML!</strong></p>
<h2 id="struttura-base">Struttura base</h2>
<p>Ogni pagina HTML è diversa, ma tutte hanno una <strong>struttura base comune</strong>, uno <em><strong>scheletro</strong></em> sul quale sono costruite.</p>
<p><em>VS Code</em> ci permette di creare questo scheletro in maniera <strong>semplicissima e molto veloce.</strong></p>
<p>Ci basterà aprire il file, inserire un <strong>punto esclamativo</strong> e cliccare il tasto “<strong>tab</strong>“. In questo modo VS Code creerà la struttura base della nostra pagina HTML in automatico.</p>
<p>Se hai fatto questa operazione dovresti vedere comparire questo codice all’interno del file:</p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Questo è lo <em><strong>scheletro</strong></em> di ogni pagina HTML. Andiamo ad analizzarlo!</p>
<h2 id="i-tag-html">I tag HTML</h2>
<p>L’HTML è un linguaggio basato sui <strong>tag</strong>.</p>
<p>Ogni tag indica una <strong>tipologia di contenuto.</strong></p>
<p><strong>Struttura base</strong>: <nometag>contenuto</nometag></p>
<p>Qualsiasi contenuto è sempre inserito all’interno di un <strong>tag</strong>, che <strong>indica al browser come trattare quel tipo di contenuto</strong>.</p>
<p>Generalmente i tag hanno un inizio e una fine, il tag di fine inizia con uno slash(/).</p>
<p>Esistono però alcuni tag senza tag di chiusura, come il tag <br>, che è utilizzato per andare a capo.</p>
<h2 id="esempi-di-tag">Esempi di tag:</h2>
<pre tabindex="0"><code>&lt;html&gt;&lt;/html&gt;
</code></pre><p>Questi tag indicano dove inizia e dove finisce la pagina HTML. Tutto il contenuto va inserito fra questi due!</p>
<pre tabindex="0"><code>&lt;head&gt;&lt;/head&gt;
</code></pre><p>Questo tag permette di inserire delle informazioni relative alla pagina, come il titolo, gli stili da inserire, gli script etc. (Questo ti sarà più chiaro man mano che andrai avanti)</p>
<pre tabindex="0"><code>&lt;body&gt;&lt;/body&gt;
</code></pre><p>All’interno di questi tag c’è il vero e proprio contenuto della pagina</p>
<pre tabindex="0"><code>&lt;h1&gt;La mia prima pagina web&lt;/h1&gt;
</code></pre><p>I titoli sono inseriti dentro i tag heading, che vanno dall’1 al 6, in ordine di importanza. Il titolo della pagina deve essere inserito fra i tag <h1></h1>, il sottotitolo <h2></h2> e così via.</p>
<pre tabindex="0"><code>&lt;br&gt;
</code></pre><p>Questo tag indica al browser di andare a capo.</p>
<pre tabindex="0"><code>&lt;!-- Questo è un commento --&gt;
</code></pre><p>In qualiasi tipo di codice è molto importante inserire i commenti. Questi permettono di inserire delle note all’interno del codice, per poter capire meglio cosa si sta scrivendo o per inserire delle frasi rivolte ai colleghi etc.</p>
<pre tabindex="0"><code>&lt;ul&gt;

    &lt;li&gt;Questo è un item di un elenco&lt;/li&gt;

    &lt;li&gt;Questo è un altro item&lt;/li&gt;

&lt;/ul&gt;
</code></pre><p>Il tag <ul> permette di inserire un elenco. Per inserire un elenco numerato c’è il tag <ol> (Unordered List e Ordered List).</p>
<p>Ogni elemento di un elenco deve essere inserito con il tag <li> (List Item)</p>
<h2 id="sporchiamoci-le-mani">Sporchiamoci le mani</h2>
<p>Iniziamo ora a <strong>modificare lo</strong> <strong><em>scheletro</em></strong> della nostra pagina HTML.</p>
<p>Iniziamo a modificare la <strong>lingua</strong>, modificando “en” con “it” nella <strong>riga 2</strong> del nostro file.</p>
<p>La riga 2 sarà quindi così:</p>
<pre tabindex="0"><code>&lt;html lang=&#34;en&#34;&gt;
</code></pre><p>Ora andiamo sulla riga 6 e modifichiamo il titolo, nel tag <code>&lt;title&gt;</code>.</p>
<p>Chiamiamo questa pagina “<strong>La mia prima pagina web</strong>“</p>
<pre tabindex="0"><code>&lt;title&gt;La mia prima pagina web&lt;/title&gt;
</code></pre><p>Ora salviamo il file e apriamolo, semplicemente aprendo la cartella “<strong>HTML</strong>” e facendoci <strong>doppio click</strong> sopra.</p>
<p><img src="images/image-1536x529-1-1024x353.png" alt=""></p>
<p>Ci troveremo di fonte una <strong>pagina completamente bianca</strong>, perché non abbiamo ancora inserito nessun codice nel contenuto.</p>
<p>Possiamo vedere però che il nome della scheda in alto è “<strong>La mia prima pagina web</strong>“. Questo è il <code>&lt;title&gt;</code> della nostra pagina.</p>
<p><strong>Ora inseriamo un po’ di contenuto.</strong></p>
<p>Andiamo <strong>fra i tag <body></body></strong> e inseriamo questo:</p>
<pre tabindex="0"><code>   &lt;h1&gt;La mia prima pagina web&lt;/h1&gt;
    &lt;p&gt;Benvenuto nella mia prima pagina web!&lt;/p&gt;
    &lt;br&gt;&lt;!-- questo è un a capo--&gt;
    &lt;p&gt;Questo è il secondo paragrafo della mia prima pagina web&lt;/p&gt;
    &lt;br&gt;
    &lt;h2&gt;Elenco&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li&gt;Primo Item&lt;/li&gt;
        &lt;li&gt;Secondo Item&lt;/li&gt;
    &lt;/ul&gt;
</code></pre><p>Ora <strong>salva la pagina e aggiornala nel browser</strong>, vedrai comparire del contenuto!</p>
<p><img src="images/image-1.png" alt=""></p>
<p>Non è difficile da capire, ogni tag spiega se stesso.</p>
<p><strong>CONGRATULAZIONI!</strong></p>
<p><strong>Hai appena creato la tua prima pagina web!</strong></p>
<p>Ma addentriamoci ancora un po’ nell’HTML.</p>
<h2 id="inseriamo-unimmagine">Inseriamo un’immagine</h2>
<p>Per inserire un’immagine in una pagina HTML bisogna utilizzare il tag <strong><img></strong>, con alcuni attributi.</p>
<p>Gli <strong>attributi</strong> forniscono <strong>informazioni aggiuntive</strong> ai tag html. Per esempio il tag <img> indicherà al browser di inserire un’immagine, ma quale immagine? A questa domanda rispondiamo con l’attributo “<strong>src</strong>“, cioè la sorgente da cui il browser può attingere per inserire l’immagine.</p>
<p>Esempio:</p>
<pre tabindex="0"><code>&lt;img src=&#34;immagini/foto.jpg&#34;&gt;
</code></pre><p>In questo esempio il browser inserirà l’immagine <strong>foto.jpg</strong> presente nella cartella “<strong>immagini</strong>“.</p>
<p>Proviamo ora ad inserire un’immagine nella nostra pagina.</p>
<p>Andiamo nella nostra cartella “<strong>HTML</strong>” sul desktop e creiamo una cartella chiamata “<strong>img</strong>“, all’interno di questa cartella inseriamo ora una qualsiasi immagine in formato <strong>JPG</strong>.</p>
<p>Adesso <strong>richiamiamo l’immagine nel nostro file <em>index.html</em>,</strong> in questo modo:</p>
<pre tabindex="0"><code>&lt;img src=&#34;img/immagine.jpg&#34;&gt;
</code></pre><p>Ora <strong>salviamo</strong> il file e <strong>aggiorniamo</strong> il browser.</p>
<p><img src="images/image-2-768x370-1.png" alt=""></p>
<p>Vediamo che l’immagine viene visualizzata nella nostra pagina html.</p>
<p>Però è un po’ <strong>troppo grande!</strong> Almeno nel mio caso, questo dipende dalle dimensioni dell’immagine.</p>
<p>Per visualizzare l’immagine in modo più carino possiamo aggiungere un altro attributo al nostro tag <img>: <strong>l’attributo height o width</strong></p>
<pre tabindex="0"><code>    &lt;img src=&#34;img/immagine.jpg&#34; width=&#34;200&#34;&gt;
</code></pre><p>In questo modo sto <strong>impostando la larghezza dell’immagine a 200px.</strong> Ed ecco che si vede tutto decisamente meglio.</p>
<p><img src="images/image-3.png" alt=""></p>
<p>In questo modo posso <strong>ridimensionare</strong> l’immagine.</p>
<p>Ora <strong>andiamo ancora più a fondo</strong> nell’html.</p>
<h2 id="i-contenitori">I contenitori</h2>
<p>Nelle nostre pagine html possiamo inserire dei <strong>contenitori</strong>, nei quali inserire del contenuto. Questi sono molto utili per <strong>suddividere le pagine e gestire i contenuti al meglio.</strong></p>
<h3 id="div"><div></h3>
<p>Un primo tipo di contenitore è il tag <strong><div></strong>. Questo crea una <strong>sezione</strong> nella pagina. È un <strong>block element</strong>, cioè il contenuto dopo questo tag è inserito <strong>a capo</strong>.</p>
<h3 id="span"><span></h3>
<p>Lo <strong><span></strong> è un contenitore ma <strong>inline</strong>, cioè <strong>non va a capo</strong> dopo di esso.</p>
<p>Se voglio creare un quadrato verde nel sito dovrò utilizzare un <div>, se invece voglio colorare una parola di rosso allora userò il tag <span>.</p>
<p><strong>Eccoti un esempio:</strong></p>
<p>Aggiungi questo codice a <em><strong>index.html</strong></em></p>
<pre tabindex="0"><code>    &lt;div style=&#34;background-color: green;&#34;&gt;
        Questo è un contenitore con sfondo verde
    &lt;/div&gt;
    &lt;p&gt;
        Questo è un paragrafo con del testo inserito a caso. In questo testo voglio &lt;span style=&#34;color:red&#34;&gt;colorare&lt;/span&gt; una parola di rosso
    &lt;/p&gt;
</code></pre><p>ed ecco il <strong>risultato</strong></p>
<p><img src="images/image-4-1536x666-1-1024x444.png" alt=""></p>
<p>Per inserire i colori ho utilizzato l’attributo “style”, che permette di inserire del codice CSS all’interno dell’HTML, ma lo vedremo meglio nella <a href="/blog/le-basi-del-css/">guida</a> <a href="/corso-intensivo-di-css/">al CSS.</a></p>
<h2 id="i-form">I form</h2>
<p>Un altro elemento molto importante di una pagina web è il <strong>form</strong>.</p>
<p>Navigando online avrai compilato moltissime volte dei <strong>moduli</strong>, che siano di contatto, di prenotazione etc.</p>
<p>Per inserire un form occorre utilizzare il tag <strong><form></form></strong> e al suo interno inserire <strong>le tipologia di input</strong> richieste.</p>
<p><strong>Esempio</strong> di form:</p>
<pre tabindex="0"><code>  &lt;form&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Nome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Cognome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;select name=&#34;select&#34; id=&#34;&#34;&gt;
            &lt;option value=&#34;0&#34;&gt;Opzione 1&lt;/option&gt;
            &lt;option value=&#34;1&#34;&gt;Opzione 2&lt;/option&gt;
            &lt;option value=&#34;2&#34;&gt;Opzione 3&lt;/option&gt;
        &lt;/select&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;textarea name=&#34;&#34; id=&#34;&#34; cols=&#34;30&#34; rows=&#34;10&#34; placeholder=&#34;Inserisci il testo qui.&#34;&gt;&lt;/textarea&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;input type=&#34;checkbox&#34; name=&#34;privacy&#34; value=&#34;0&#34;&gt;Accetto la Privacy Policy
        &lt;br&gt;&lt;br&gt;
        &lt;button&gt;Invia&lt;/button&gt;
    &lt;/form&gt;
</code></pre><p>Prova a inserire questo codice in <strong><em>index.html</em></strong>, salvare e aggiornare.</p>
<p>Vedrai comparire dei campi compilabili.</p>
<p><strong>Questi campi sono</strong></p>
<ul>
<li>input di tipo text nel caso del nome e del cognome.</li>
<li>select nel caso del menù a tendina</li>
<li>textarea nel caso dell’area di testo</li>
<li>input di tipo checkbox per accettare la privacy</li>
<li>button per il bottone di invio</li>
</ul>
<p>Premendo sul tasto “<strong>Invia</strong>” non succederà nulla. Per far svolgere un’azione alla nostra pagina html occorre integrarla con altri linguaggi. Ricordi che <strong>l’HTML è solamente un linguaggio di markup</strong>, non di programmazione.</p>
<p>Per questa guida è tutto. Ti lascio ancora <strong>il codice per intero della nostra <em>index.html</em></strong> con i <strong>commenti</strong> che spiegano cosa fa ogni cosa.</p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;La mia prima pagina web&lt;/title&gt;&lt;!-- Il titolo della pagina che appare nella scheda del browser --&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- Titolo --&gt;
    &lt;h1&gt;La mia prima pagina web&lt;/h1&gt;
    &lt;!-- Paragrafo --&gt;
    &lt;p&gt;Benvenuto nella mia prima pagina web!&lt;/p&gt;

    &lt;br&gt;&lt;!-- questo è un a capo--&gt;

    &lt;!-- Sottotitolo --&gt;
    &lt;h2&gt;Sottotitolo&lt;/h2&gt;

    &lt;p&gt;Questo è il secondo paragrafo della mia prima pagina web&lt;/p&gt;

    &lt;br&gt;

    &lt;h2&gt;Elenco&lt;/h2&gt;
    &lt;!-- Elenco --&gt;
    &lt;ul&gt;
        &lt;li&gt;Primo Item&lt;/li&gt;&lt;!-- Item di un elenco --&gt;
        &lt;li&gt;Secondo Item&lt;/li&gt;
    &lt;/ul&gt;

    &lt;!-- Immagine --&gt;
    &lt;img src=&#34;img/immagine.jpg&#34; width=&#34;200&#34;&gt;

    &lt;!-- DIV: block element --&gt;
    &lt;div style=&#34;background-color: green;&#34;&gt;
        Questo è un contenitore con sfondo verde
    &lt;/div&gt;

    &lt;!-- SPAN: inline element --&gt;
    &lt;p&gt;
        Questo è un paragrafo con del testo inserito a caso. In questo testo voglio
        &lt;span style=&#34;color:red&#34;&gt;colorare&lt;/span&gt; una parola di rosso
    &lt;/p&gt;

    &lt;!-- FORM --&gt;
    &lt;form&gt;
        &lt;!-- Casella di testo --&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Nome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Cognome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Menù a tendina --&gt;
        &lt;select name=&#34;select&#34; id=&#34;&#34;&gt;
            &lt;option value=&#34;0&#34;&gt;Opzione 1&lt;/option&gt;
            &lt;option value=&#34;1&#34;&gt;Opzione 2&lt;/option&gt;
            &lt;option value=&#34;2&#34;&gt;Opzione 3&lt;/option&gt;
        &lt;/select&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Area di testo --&gt;
        &lt;textarea name=&#34;&#34; id=&#34;&#34; cols=&#34;30&#34; rows=&#34;10&#34; placeholder=&#34;Inserisci il testo qui.&#34;&gt;&lt;/textarea&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Checkbox--&gt;
        &lt;input type=&#34;checkbox&#34; name=&#34;privacy&#34; value=&#34;0&#34;&gt;Accetto la Privacy Policy
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Bottone --&gt;
        &lt;button&gt;Invia&lt;/button&gt;
    &lt;/form&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><strong>Ora puoi iniziare a smanettare un po’ con i tag</strong> che hai imparato, provando a <strong>creare e modificare qualche pagina HTML!</strong></p>
<p>Leggi anche <em><a href="/blog/le-basi-del-css/">Le basi del CSS &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>2. Le basi del CSS</title>
			<link>https://albertoreineri.it/blog/le-basi-del-css/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-basi-del-css/</guid>
			<description>Il CSS è il linguaggio di formattazione del web. Sta per Cascading Style Sheets ed è utilizzato per assegnare uno stile alle pagine html.
Ha una sintassi specifica e permette di separare l’html dal suo stile, mantene do così il codice pulito ed ordinato.
Come l’HTML, anche il css non è un linguaggio di programmazione, è un linguaggio utilizzato per creare i layout delle pagine web. Consente di gestire gli spazi, modificare i colori, creare i layout e tutto ciò che ha a che fare con la parte grafica di un contenuto web.</description>
			<content type="html"><![CDATA[<p>Il CSS è il linguaggio di <strong>formattazione</strong> del web. Sta per <em>Cascading Style Sheets</em> ed è utilizzato per <strong>assegnare uno stile alle pagine html</strong>.</p>
<p>Ha una sintassi specifica e permette di separare l’html dal suo stile, mantene do così il <strong>codice pulito ed ordinato</strong>.</p>
<p>Come l’HTML, anche il css <strong>non è un linguaggio di programmazione</strong>, è un linguaggio utilizzato per creare i layout delle pagine web. Consente di gestire gli spazi, modificare i colori, creare i layout e tutto ciò che ha a che fare con la parte grafica di un contenuto web.</p>
<hr>
<p><em>Questo corso è rivolto ai <strong>principianti</strong>, pertanto se conosci già il CSS questo articolo non fa per te, se invece sei agli inizi <strong>BENVENUTO</strong> e buono studio! Vedrai che <strong>imparerai presto</strong> a cerare fantastici contenuti web!</em></p>
<hr>
<p>Questo articolo è una continuazione del la guida <a href="/blog/le-basi-dellhtml/">Le basi di</a> <a href="/blog/le-basi-dell-html/">HTML</a>, che puoi trovare <a href="/blog/le-basi-dellhtml/">qui</a>.</p>
<p>Se ti perdi durante l’articolo sul fondo di questo articolo potrai trovare il codice di tutto ciò che andremo a creare.</p>
<h2 id="come-inserire-il-css-in-una-pagina-html">Come inserire il CSS in una pagina HTML</h2>
<p>Il CSS da solo quindi non serve a nulla, ma <strong>deve essere inserito in una pagina html.</strong></p>
<p>Esistono <strong>3 modi</strong> per inserire del codice CSS in una pagina HTML</p>
<ul>
<li><strong>Inline CSS</strong></li>
<li><strong>CSS Interno</strong></li>
<li><strong>CSS Esterno</strong></li>
</ul>
<h3 id="inline-css">Inline CSS</h3>
<p>Consente di inserire del codice CSS <strong>direttamente all’interno del codice HTML.</strong></p>
<p>Con questo metodo <strong>i linguaggi HTML e CSS restano mischiati insieme</strong>. Un esempio di questa tipologia di codice è quello che abbiamo inserito nel corso intensivo di HTML, quando abbiamo impostato lo sfondo verde al div, o il rosso alla parola nello span.</p>
<p><strong>Esempio</strong>:</p>
<pre tabindex="0"><code>&lt;div style=&#34;background-color:green&gt;Ciao Mondo&lt;/div&gt;
</code></pre><p>Sebbene sia molto veloce da applicare, <strong>è il modo peggiore</strong> per inserire del codice CSS.</p>
<p><strong>Mischiare i linguaggi di programmazione non è mai un bene</strong>, è meglio imparare fin da subito che l’ordine è una caratteristica fondamentale per un buon sviluppatore.</p>
<p>Vediamo quindi gli altri metodi.</p>
<h3 id="css-interno">CSS Interno</h3>
<p>Questo metodo consiste nell’inserire il codice CSS <strong>all’interno dell’head</strong> della pagina HTML.</p>
<p>In questo modo il CSS è all’interno della pagina HTML ma <strong>non in mezzo al contenuto HTML.</strong> È una scelta sicuramente migliore rispetto all’Inline CSS ma non ancora ottimale.</p>
<p>Per inserire del CSS interno occorre andare <strong>fra i tag <head></head></strong> e indicare che stiamo per scrivere del codice CSS, in questo modo:</p>
<pre tabindex="0"><code>&lt;style type=&#34;text/css&#34;&gt;


&lt;/style&gt;
</code></pre><p>All’interno del tag <style> possiamo inserire il codice CSS.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>&lt;style type=&#34;text/css&#34;&gt;
   h1{
      color:red
   }
&lt;/style&gt;
</code></pre><p>In questo caso <strong>tutti gli h1 della pagina saranno rossi.</strong></p>
<h3 id="css-esterno">CSS Esterno</h3>
<p>Questo è <strong>il modo migliore</strong> e più efficiente di gestire i file CSS.</p>
<p>Consiste nel <strong>creare un file esterno</strong>, che deve avere estensione .css, e <strong>richiamarlo nell’head della pagina HTML.</strong></p>
<p>In questo modo <strong>i linguaggi sono ben separati</strong>, ognuno nel suo file.</p>
<p><strong>Esempio:</strong></p>
<p>Ora <strong>creiamo un nuovo file</strong> (CTRL+N) e salviamolo (CTRL+S) con il nome “<strong><em>style.css</em></strong>“.</p>
<p>In questo file possiamo inserire questo:</p>
<pre tabindex="0"><code>h1{
   color:red;
}
</code></pre><p>Ora <strong>salviamo</strong> “<strong><em>style.css</em></strong>” e apriamo “<em><strong>index.html</strong></em>“.</p>
<p>Andiamo <strong>nell’head</strong> di “index.html” e inseriamo questo sotto al title:</p>
<pre tabindex="0"><code>&lt;link rel=&#34;stylesheet&#34; href=&#34;style.css&#34;&gt;
</code></pre><p>Se apri il file “<strong><em>index.html</em></strong>” nel tuo browser noterai che <strong>l’h1 ora è rosso.</strong></p>
<p>Questi sono <strong>i tre metodi</strong> per inserire del codice CSS in una pagina HTML. Come avrai potuto capire <strong>il metodo migliore è il terzo</strong>, ma ci sono alcune occasioni nelle quali può essere utile applicare uno dei primi due metodi.</p>
<p>Ora che abbiamo imparato a inserire il CSS in una pagina HTML iniziamo a parlare proprio di CSS!</p>
<h2 id="sintassi-css">Sintassi CSS</h2>
<p>Il CSS è un linguaggio con una <strong>sintassi specifica</strong>. Se si commette un <strong>errore</strong> nella scrittura della sintassi il codice <strong>non funzionerà.</strong></p>
<p>Ecco uno <strong>schema</strong> che raccoglie gli <strong>elementi</strong> del linguaggio CSS:</p>
<p><img src="images/schema-CSS.jpeg" alt=""></p>
<h3 id="selettore">Selettore</h3>
<p>Indica <strong>l’oggetto a cui applicare lo stile</strong>. Questo può essere un tag html, come <h1>, <p> etc., oppure una classe o un id (approfondiremo classi e id fra poco).</p>
<h3 id="proprietà">Proprietà</h3>
<p>Una proprietà è una <strong>regola che si applica al selettore</strong>. Il CSS ha moltissime proprietà, man mano che imparerai questo linguaggio ne scoprirai sempre di più. Fortunatamente VS Code offre una lista di tutte le proprietà, visibile premendo “CTRL+Space Bar”.</p>
<p>Nell’esempio di prima la proprietà è “<em><strong>color</strong></em>“, altre fra le più utilizzate sono “background-color”, “margin”, “padding”, “border” etc.</p>
<h3 id="valore">Valore</h3>
<p>È il <strong>valore da assegnare alla proprietà</strong>. Può essere un colore, un numero in pixel o altro ancora. Imparerai ad utilizzare i valori corretti man mano che utilizzerai il CSS.</p>
<p>Proprietà e Valore devono essere racchiusi in una <strong>parentesi graffa.</strong></p>
<p>Al termine di ogni Valore occorre inserire un “<strong>punto e virgola</strong>“.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>h1{
   color:red;
}
</code></pre><ul>
<li><strong>h1</strong> è il <strong>selettore</strong></li>
<li>sopo il selettore apro la <strong>graffa</strong></li>
<li><strong>color</strong> è la <strong>Proprietà</strong></li>
<li><strong>red</strong> è il <strong>Valore</strong></li>
<li>alla fine del valore inserisco il <strong>punto e virgola</strong></li>
<li>chiudo la <strong>graffa</strong>.</li>
</ul>
<p>Dopo questa piccola introduzione teorica <strong>iniziamo a fare sul serio!</strong></p>
<h2 id="iniziamo-a-sporcarci-le-mani"><strong>Iniziamo a sporcarci le mani</strong></h2>
<p>Andiamo nel nostro file “style.css” e iniziamo a scrivere del codice CSS!</p>
<p>Iniziamo con il dare uno stile generale alla nostra pagina, utilizzando il selettore “body”, in questo modo:</p>
<pre tabindex="0"><code>body{
   color:#444;
   background-color:#f2f2f2
}
</code></pre><p>In questo modo abbiamo inserito un colore grigio scuro al testo e un bianco leggermente sporco allo sfondo.</p>
<h2 id="i-colori">I colori</h2>
<p>Nel codice CSS ci sono <strong>vari modi con i quali inserire i colori:</strong></p>
<ul>
<li>Nome del colore</li>
<li>Esadecimale</li>
<li>RGB</li>
</ul>
<h3 id="nome-del-colore">Nome del colore</h3>
<p>Questo modo consente di indicare il colore semplicemente scrivendo il <strong>nome del colore in inglese</strong>.</p>
<p>Per esempio se voglio un colore bianco basterà scrivere “white”, e così via.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>color:blue;
</code></pre><h3 id="esadecimale">Esadecimale</h3>
<p>Il colore è indicato utilizzando un codice esadecimale, chiamato anche <strong>Hex code</strong>. Per utilizzare questo metodo occorre inserire un # seguito dal codice a 6 cifre. È di gran lunga il metodo più utilizzato.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>color:#f4f4f4;
</code></pre><h3 id="rgb">RGB</h3>
<p>Consiste nell’indicare il colore utilizzando il <strong>metodo RGB</strong>. È possibile anche utilizzare delle trasparenze con l’RGBA.</p>
<p><strong>Esempi:</strong></p>
<p><strong>RGB:</strong></p>
<pre tabindex="0"><code>rgb(243, 163, 44)
</code></pre><p><strong>RGBA</strong>:</p>
<pre tabindex="0"><code>rgba(243, 163, 44,.7)
</code></pre><p>In questo caso il “.7” indica che la trasparenza sarà al 70%.</p>
<h2 id="font">Font</h2>
<p>Una delle prime cose da fare quando si personalizza un layout è <strong>scegliere un bel font.</strong></p>
<p>Per inserire un font in un sito web occorre <strong>importarlo</strong>, per essere certi che qualsiasi utente su qualsiasi computer visualizzi il font corretto.</p>
<p>Fortunatamente <strong>google</strong> mette a disposizione moltissimi <strong>font</strong> in maniera <strong>gratuita</strong> e semplicissima da utilizzare. Vediamo come.</p>
<p>Per prima cosa andiamo su <strong>google fonts</strong>, a questo link: <a href="https://fonts.google.com/">https://fonts.google.com/</a></p>
<p>Qua possiamo cercare il font che più ci piace. In questa guida utilizzeremo il “<strong>Source Sans Pro</strong>“.</p>
<p>Inseriamo quindi “<strong>Source Sans Pro</strong>” nella barra di ricerca di Google Fonts</p>
<p><img src="images/image-5.png" alt=""></p>
<p>e lo <strong>selezioniamo</strong>.</p>
<p>Ora ci troveremo di fronte ad una schermata come questa:</p>
<p><img src="images/image-6-1536x725-1-1024x483.png" alt=""></p>
<p>Sulla destra possiamo cliccare su “<strong>+ Select this style</strong>” in corrispondenza del carattere che vogliamo. Possiamo selezionarli tutti per avere tutte le variabili possibili del font, ma per ottimizzare i tempo di caricamento della pagina è meglio selezionare solo l’essenziale.</p>
<p>In questa guida selezioniamo solo il “<strong>regular 400</strong>” e il “<strong>bold 700</strong>“.</p>
<p>Ora si aprirà sulla destra una finestra come questa:</p>
<p><img src="images/image-7.png" alt=""></p>
<p>Qua clicchiamo su “<strong>Embed</strong>” e successivamente su “<strong>@import</strong>“</p>
<p><img src="images/image-8.png" alt=""></p>
<p>Adesso possiamo copiare il contenuto fra <em><style></em> e <em></style></em> e incollarlo nel nostro <strong>“style.css</strong>“, cancellando tutto il resto.</p>
<p>Ora aggiungiamo questo codice:</p>
<pre tabindex="0"><code>body{
    font-family: &#39;Source Sans Pro&#39;, sans-serif;
    font-size: 22px;
    font-weight: 400;
    font-style: normal;
    line-height: 35px;
}
</code></pre><p>In questo modo abbiamo impostato <strong>“Source Sans Pro” come font primario</strong> del sito.</p>
<p>Ecco cos’altro abbiamo impostato:</p>
<ul>
<li><strong>Font-size</strong> indica la <strong>dimensione</strong> del font, che abbiamo settato a 22 pixel.</li>
<li><strong>Font-weight</strong> indica lo <strong>spessore</strong> del font, in questo caso è settato come regolare. In questo campo possiamo utilizzare sia i numeri da 100 a 900, sia il nome, da “lighter” a “bolder”. Logicamente occorrerà importare queste dimensioni da google fonts, per il momento abbiamo importato solo il 400 e il 700.</li>
<li><strong>Font-style</strong> indica lo <strong>stile</strong> del font, in questo caso è normale. Puoi inserire per esempio “italiac” per avere un font in corsivo.</li>
<li><strong>Line-height</strong> indica <strong>l’altezza</strong> del font, lo spazio fra le righe, in questo caso impostato a 35 pixel.</li>
</ul>
<p>Prova a <strong>salvare</strong> il foglio di stile e <strong>aggiornare</strong> la pagina, vedrai che <strong>il testo sarà cambiato!</strong></p>
<h2 id="classi-e-id">Classi e id</h2>
<p>Come abbiamo già accennato poco fa, è possibile impostare delle classi e degli id ai tag html, in modo da poterli <strong>raggruppare</strong> alcune regole di css.</p>
<p>Classi e id sono <strong>attributi</strong> che possiamo <strong>aggiungere ai tag html</strong> per distinguerli fra loro.</p>
<h3 id="id">Id</h3>
<p>Un <strong>id</strong> è un <strong>attributo univoco</strong>, va utilizzato nel caso ci sia un elemento particolare che <strong>non si ripeterà</strong> mai. Se per esempio voglio che un titolo sia giallo, solo quel titolo, posso dargli un id particolare.</p>
<p>Per indicare un id nel CSS occorre farlo precedere da un <strong>hashtag</strong></p>
<p><strong>Esempio:</strong></p>
<p><strong><em>style.css</em></strong></p>
<pre tabindex="0"><code>#giallo{
   color:yellow
}
</code></pre><p><strong><em>index.html</em></strong></p>
<pre tabindex="0"><code>&lt;h2 id=&#34;giallo&#34;&gt;Questo titolo è giallo&lt;/h2&gt;
</code></pre><h3 id="classi">Classi</h3>
<p>Una classe è un <strong>elemento che ritorna spesso</strong>, e che quindi posso <strong>riutilizzare</strong>. Per esempio se voglio inserire una serie di bottoni con la stessa formattazione, posso dare loro la classe “<strong>bottone</strong>“, impostarla una sola volta nel CSS e questa verrà applicata a tutti gli elementi con la classe “bottone”</p>
<p>Per indicare una classe nel CSS occorre farla precedere da un <strong>punto</strong>.</p>
<p><strong>Esempio:</strong></p>
<p><em><strong>style.css</strong></em></p>
<pre tabindex="0"><code>.bottone{
   background-color:coral;
   border-radius: 15px;
   color:white;
}
</code></pre><p><strong><em>index.html</em></strong></p>
<pre tabindex="0"><code>&lt;div class=&#34;bottone&#34;&gt;Premi qui!&lt;/div&gt;
</code></pre><h2 id="margin-e-padding">Margin e Padding</h2>
<p>Per gestire gli spazi fra gli elementi si possono utilizzare “<strong>margin</strong>” e “<strong>padding</strong>“.</p>
<p>Ecco uno <strong>schema</strong> per spiegarti che differenza c’è fra i due:</p>
<p><img src="images/margin-e-padding-1.jpeg" alt=""></p>
<p>Il <strong>margin</strong> indica lo spazio <strong>all’esterno</strong> del contenuto, il <strong>padding</strong> lo spazio <strong>all’interno</strong>.</p>
<p>È possibile indicare la <strong>direzione</strong> dello spazio sia per il margin che per il padding, per esempio se si vuole inserire un margine superiore occorre utiilzzare “<strong>margin-top</strong>“.</p>
<p>Ecco alcuni <strong>esempi</strong>:</p>
<p><em><strong>style.css</strong></em></p>
<pre tabindex="0"><code>.box-margin{
    background-color: coral;
    margin:50px
}
.box-padding{
    background-color: coral;
    padding:50px
}
.box-margin-top{
    margin-top: 50px;
    background-color: aquamarine;
}
</code></pre><p><strong><em>index.html</em></strong></p>
<pre tabindex="0"><code>    &lt;h2&gt;Margin e Padding&lt;/h2&gt;
    &lt;h3&gt;Margin:&lt;/h3&gt;
    &lt;div class=&#34;box-margin&#34;&gt;
        Questo è un box con del margine
    &lt;/div&gt;

    &lt;div class=&#34;box-margin-top&#34;&gt;
        Questo box ha solo il margine superiore
    &lt;/div&gt;

    &lt;h3&gt;Padding&lt;/h3&gt;
    &lt;div class=&#34;box-padding&#34;&gt;
        Questo è un box con del padding
    &lt;/div&gt;
</code></pre><h2 id="contenitore">Contenitore</h2>
<p>Gli elementi del CSS possono essere <strong>uno dentro l’altro</strong>, in questo modo permettono di creare layout più elaborati.</p>
<p>Proviamo a rendere la nostra pagina HTML un po’ più carina inserendola in un <strong>contenitore</strong>.</p>
<p>Andiamo <strong>sotto il tag body</strong> e inseriamo un <strong>div</strong> con classe “<strong>container</strong>“, in questo modo:</p>
<pre tabindex="0"><code>&lt;div class=&#34;container&#34;&gt;
</code></pre><p>Ora andiamo prima del </body> e <strong>chiudiamo questo div</strong>, inserendo:</p>
<pre tabindex="0"><code>&lt;/div&gt;
</code></pre><p>Ora aggiungiamo questo codice nel nostro “<strong>style.css</strong>“:</p>
<pre tabindex="0"><code>.container{
    max-width: 800px;
    margin: 0 auto;
}
</code></pre><p>In questo modo abbiamo impostato una <strong>larghezza massima del contenuto della nostra pagina a 800 pixel</strong>, e impostato il margine del contenuto a 0 pixel dall’alto e dal basso e <strong>automaticamente</strong> da destra e sinistra.</p>
<p>Ora <strong>salviamo</strong> e <strong>aggiorniamo</strong> e vedremo il contenuto inserito a centro pagina, più carino no?</p>
<h2 id="immagine-come-sfondo">Immagine come sfondo</h2>
<p>Vediamo ancora un’ultima cosa prima di terminare questa prima carrellata generale di CSS: come inserire <strong>un’immagine come sfondo</strong> di un elemento.</p>
<p>Per poter inserire un’immagine come sfondo occorre utilizzare la proprietà “<strong>background-image</strong>“.</p>
<p>Creiamo un <strong>div</strong> che conterrà la nostra immagine nel file <strong>html</strong>:</p>
<pre tabindex="0"><code>&lt;div class=&#34;immagine-sfondo&#34;&gt;
    Questo div ha un&#39;immagine di sfondo!
&lt;/div&gt;
</code></pre><p>E inseriamo l’url all’immagine tramite il <strong>CSS</strong> nel nostro “style.css”:</p>
<pre tabindex="0"><code>.immagine-sfondo{
    background-image: url(img/immagine.jpg);
    height:500px;
    text-align: center;
    padding-top: 250px;
    color:white;
}
</code></pre><p>In questo modo abbiamo impostato <strong>la nostra immagine come sfondo.</strong> Abbiamo anche impostato <strong>un’altezza</strong> in modo da far vedere bene l’immagine.</p>
<p>Prova a <strong>salvare</strong> e <strong>aggiornare</strong> e vedrai cosa succede.</p>
<p><strong>Ora prova a smanettare un po’</strong> con queste classi e con queste regole, modificando dimensioni, font, colori, immagini e tutto ciò che hai in mente!</p>
<p>Ricorda che <strong>il modo migliore per imparare e dedicare tanto tempo</strong> alla pratica, quindi <strong>inizia a darci dentro con il CSS!</strong></p>
<h3 id="codice-completo">Codice completo:</h3>
<p>Qua puoi trovare il <strong>codice completo</strong> dei file index.html e style.css</p>
<p><strong><em>index.html</em></strong></p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;La mia prima pagina web&lt;/title&gt;&lt;!-- Il titolo della pagina che appare nella scheda del browser --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;style.css&#34;&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;div class=&#34;container&#34;&gt;
    &lt;!-- Titolo --&gt;
    &lt;h1&gt;La mia prima pagina web&lt;/h1&gt;
    &lt;!-- Paragrafo --&gt;
    &lt;p&gt;Benvenuto nella mia prima pagina web!&lt;/p&gt;

    &lt;br&gt;&lt;!-- questo è un a capo--&gt;

    &lt;!-- Sottotitolo --&gt;
    &lt;h2&gt;Sottotitolo&lt;/h2&gt;

    &lt;p&gt;Questo è il secondo paragrafo della mia prima pagina web&lt;/p&gt;

    &lt;br&gt;

    &lt;h2&gt;Elenco&lt;/h2&gt;
    &lt;!-- Elenco --&gt;
    &lt;ul&gt;
        &lt;li&gt;Primo Item&lt;/li&gt;&lt;!-- Item di un elenco --&gt;
        &lt;li&gt;Secondo Item&lt;/li&gt;
    &lt;/ul&gt;

    &lt;!-- Immagine --&gt;
    &lt;img src=&#34;img/immagine.jpg&#34; width=&#34;200&#34;&gt;

    &lt;!-- DIV: block element --&gt;
    &lt;div style=&#34;background-color: green;&#34;&gt;
        Questo è un contenitore con sfondo verde
    &lt;/div&gt;

    &lt;!-- SPAN: inline element --&gt;
    &lt;p&gt;
        Questo è un paragrafo con del testo inserito a caso. In questo testo voglio
        &lt;span style=&#34;color:red&#34;&gt;colorare&lt;/span&gt; una parola di rosso
    &lt;/p&gt;

    &lt;!-- FORM --&gt;
    &lt;form&gt;
        &lt;!-- Casella di testo --&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Nome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Cognome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Menù a tendina --&gt;
        &lt;select name=&#34;select&#34; id=&#34;&#34;&gt;
            &lt;option value=&#34;0&#34;&gt;Opzione 1&lt;/option&gt;
            &lt;option value=&#34;1&#34;&gt;Opzione 2&lt;/option&gt;
            &lt;option value=&#34;2&#34;&gt;Opzione 3&lt;/option&gt;
        &lt;/select&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Area di testo --&gt;
        &lt;textarea name=&#34;&#34; id=&#34;&#34; cols=&#34;30&#34; rows=&#34;10&#34; placeholder=&#34;Inserisci il testo qui.&#34;&gt;&lt;/textarea&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Checkbox--&gt;
        &lt;input type=&#34;checkbox&#34; name=&#34;privacy&#34; value=&#34;0&#34;&gt;Accetto la Privacy Policy
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Bottone --&gt;
        &lt;button&gt;Invia&lt;/button&gt;
    &lt;/form&gt;

    &lt;h2&gt;Margin e Padding&lt;/h2&gt;
    &lt;h3&gt;Margin:&lt;/h3&gt;
    &lt;div class=&#34;box-margin&#34;&gt;
        Questo è un box con del margine
    &lt;/div&gt;

    &lt;div class=&#34;box-margin-top&#34;&gt;
        Questo box ha solo il margine superiore
    &lt;/div&gt;

    &lt;h3&gt;Padding&lt;/h3&gt;
    &lt;div class=&#34;box-padding&#34;&gt;
        Questo è un box con del padding
    &lt;/div&gt;

&lt;div class=&#34;immagine-sfondo&#34;&gt;
    Questo div ha un&#39;immagine di sfondo!
&lt;/div&gt;

&lt;/div&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><strong><em>style.css</em></strong></p>
<pre tabindex="0"><code>@import url(&#39;https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;700&amp;display=swap&#39;);
body{
    font-family: &#39;Source Sans Pro&#39;, sans-serif;
    font-size: 22px;
    font-weight: lighter;
    line-height: 35px;
    font-style: normal;
}
.box-margin{
    background-color: coral;
    margin:50px
}
.box-padding{
    background-color: coral;
    padding:50px
}
.box-margin-top{
    margin-top: 50px;
    background-color: aquamarine;
}
.container{
    max-width: 800px;
    margin: 0 auto;
}
.immagine-sfondo{
    background-image: url(img/immagine.jpg);
    height:500px;
    text-align: center;
    padding-top: 250px;
    color:white;
}
</code></pre><p><em><a href="/blog/le-basi-dellhtml/">&laquo; Le basi di HTML</a></em></p>
<p><em><a href="/blog/le-basi-di-javascript/">Le basi di Javascript &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>3. Le basi di Javascript</title>
			<link>https://albertoreineri.it/blog/le-basi-di-javascript/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-basi-di-javascript/</guid>
			<description>Javascript è il linguaggio che permette di creare animazioni nei contenuti web. Tutte le gallery, gli slider, i pop up, le transizioni di pagina e ogni effetto animato che vedi navigando online è realizzato con Javascript.
Questo linguaggio si è sviluppato moltissimo, passando dall’essere una cosa in più, un modo per creare effetti divertenti e simpatici, ad essere oggi uno dei più utilizzati al mondo, non solo per animazioni. ma per creare vere e proprie strutture software in grado di far funzionare applicativi potentissimi.</description>
			<content type="html"><![CDATA[<p><strong>Javascript</strong> è il linguaggio che permette di <strong>creare animazioni</strong> nei contenuti web. Tutte le gallery, gli slider, i pop up, le transizioni di pagina e ogni effetto animato che vedi navigando online è realizzato con <strong>Javascript</strong>.</p>
<p>Questo linguaggio <strong>si è sviluppato moltissimo</strong>, passando dall’essere una cosa in più, un modo per creare effetti divertenti e simpatici, ad essere oggi uno dei più utilizzati al mondo, non solo per animazioni. ma per creare <strong>vere e proprie strutture software</strong> in grado di far funzionare applicativi potentissimi.</p>
<p>In questo articolo <strong>tratteremo le basi</strong>, partiremo <strong>da zero</strong> e vedremo come funziona questo linguaggio di programmazione, e creeremo insieme qualcosa di <strong>semplice</strong> ma utile per capire come utilizzare questo linguaggio.</p>
<p>Faremo prima un po’ di teoria e poi passeremo a creare qualcosa di utilizzabile sulla nostra pagina web.</p>
<p>Se ti perdi durante l’articolo sul fondo di questo articolo potrai trovare il codice di tutto ciò che andremo a creare.</p>
<hr>
<p><em>Questo corso è rivolto ai <strong>principianti</strong>, pertanto se conosci già Javascript questo articolo non fa per te, se invece sei agli inizi <strong>BENVENUTO</strong> e buono studio! Vedrai che <strong>imparerai presto</strong> a cerare fantastici contenuti web!</em></p>
<hr>
<h2 id="inserire-javascript-nellhtml">Inserire Javascript nell’HTML</h2>
<p>Iniziamo ad <strong>inserire</strong> del codice Javascript nel nostro file html (se non sai di cosa sto parlando dai un’occhiata ai nostri articoli su <a href="/blog/le-basi-dellhtml/">HTML</a> e <a href="/blog/le-basi-del-css/">CSS</a>)</p>
<p>Come per il codice CSS, anche il Javascript può essere inserit in <strong>modi diversi:</strong></p>
<ul>
<li>Javascript interno</li>
<li>Javascript esterno</li>
</ul>
<h3 id="codice-javascript-interno">Codice Javascript interno</h3>
<p>In questo caso il codice Javascript è inserito <strong>direttamente nel file html</strong> prima del fine body (</body>).</p>
<p><strong>Esempio:</strong></p>
<p>Apriamo il nostro “<strong>index.html</strong>“, andiamo sul fondo e inseriamo questo codice appena prima del tag <code>&lt;/body&gt;</code>:</p>
<pre tabindex="0"><code>&lt;script&gt;
   alert(&#34;CIAO&#34;);
&lt;/script&gt;
</code></pre><p>Ora <strong>salviamo</strong> e <strong>apriamo</strong> la pagina “index.html”. Ecco che apparirà un <strong>popup</strong> con scritto “CIAO!”.</p>
<p><img src="images/image-10.png" alt=""></p>
<h2 id="codice-javascript-esterno">Codice Javascript esterno</h2>
<p>Per inserire il javascript esterno occorre <strong>creare un file .js</strong> e <strong>importarlo</strong> nell’html. Come per il CSS questo è <strong>il metodo migliore</strong>, quasi sempre.</p>
<p><strong>Esempio:</strong></p>
<p>Andiamo nella nostra cartella “<strong>HTML</strong>” sul desktop, la apriamo con code (guadra la guida <a href="/blog/le-basi-dellhtml/">Le basi di HTML</a>) e creiamo un file (<strong>CTRL+N</strong>) e lo salviamo (<strong>CTRL+S</strong>) con il nome “<em><strong>scripts.js</strong></em>“.</p>
<p>All’interno di questo file scriviamo:</p>
<pre tabindex="0"><code>alert(&#34;CIAO&#34;);
</code></pre><p>Ora <strong>salviamo</strong> “<strong><em>scripts.js</em></strong>” e apriamo “<strong><em>index.html</em></strong>“.</p>
<p>Qua, sempre prima del <em></body></em>, inseriamo questo:</p>
<pre tabindex="0"><code>&lt;script src=&#34;scripts.js&#34;&gt;&lt;/script&gt;
</code></pre><p>Ora <strong>salviamo</strong> e <strong>aggiorniamo</strong> il browser.</p>
<p><strong>Il risultato è uguale a prima</strong>: il popup, solo che il modo con cui l’abbiamo fatto apparire è diverso.</p>
<h2 id="un-po-di-teoria">Un po’ di teoria</h2>
<h3 id="alert">Alert</h3>
<p>Abbiamo appena utilizzato la funziona “<strong>alert</strong>“, che permette di far apparire un <strong>popup</strong> nella pagina web con del testo al suo interno. Raramente questo è utilizzato per i popup, perché l&rsquo;<strong>estetica è un po’ bruttina</strong> ed esistono metodi molto migliori per far comparire dei popup nelle pagine web, ma può essere molto utile <strong>in fase di debugging</strong>.</p>
<p>Se sto creando una funzione e non riesco a trovare l’errore, posso inserire un “alert” a metà funzione e vedere così se l’errore si verifica prima o dopo.</p>
<h3 id="consolelog">Console.log</h3>
<p>Un altro modo per visualizzare errori in Javascript è la funzione “<strong>console.log</strong>“. Questa permette di <strong>inserire del testo nella console di Javascript</strong>. Anche questa è molto utile in fase di debug e sviluppo.</p>
<p><strong>Ecco un esempio:</strong></p>
<pre tabindex="0"><code>console.log(&#34;CIAO!&#34;);
</code></pre><p>Se inserisci questa in “<em><strong>scripts.js</strong></em>“, salvi e aggiorni, non vedrai accadere niente. Questo perché il <strong>“CIAO!”</strong> che abbiamo scritto <strong>è inserito nella console di Javascript</strong>, non nel body della pagina. Per vedere la console Javascript premi il tasto “<strong>f12</strong>“, oppure fai click con il tasto destro e clicca su “<strong>ispeziona</strong>” (Su google chrome, ma è molto simile su tutti i browser)</p>
<p><img src="images/image-11-1536x353-1-1024x235.png" alt=""></p>
<h3 id="commenti">Commenti</h3>
<p>I <strong>commenti</strong> sono <strong>importantissimi</strong> in ogni linguaggio di programmazione.</p>
<p>Per inserire i commenti in Javascript esistono <strong>due modi:</strong></p>
<p>Se il commento è su <strong>una sola riga</strong> puoi inserire un <strong>doppio slash</strong> prima della riga. In questo modo <strong>tutta la riga sarà commentata.</strong></p>
<p><strong>Esempio</strong></p>
<pre tabindex="0"><code>// Questo è un commento su una riga Javascript
</code></pre><p>Se invece <strong>il commento è più lungo</strong>, puoi usare la stessa sintassi del CSS: <strong><em>/* Commento */</em></strong></p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>/*
Questo è un commento
Javascript su più righe
*/
</code></pre><h3 id="variabili">Variabili</h3>
<p>A differenza di HTML e CSS, <strong>Javscript è un vero e proprio linguaggio di programmazione</strong>, e non dei più semplici.</p>
<p>Come ogni linguaggio di prograammazione è possibile <strong>utilizzare delle variabili per memorizzare i dati e fare calcoli.</strong></p>
<p>Inserire una variabile è molto semplice, basta inserire “<strong>var</strong>” prima della variabile, in questo modo:</p>
<pre tabindex="0"><code>var anni = 30;
</code></pre><p>È fondamentale <strong>inserire il punto e virgola</strong> alla fine della variabile, per indicare che la regola finisce in quel punto. Senza il punto e virgola verranno generati degli errori.</p>
<p>Ora possiamo <strong>richiamare la variabile dentro il console.log</strong> oppure in un <strong>alert</strong>, in questo modo:</p>
<pre tabindex="0"><code>console.log(anni);
</code></pre><p>oppure:</p>
<pre tabindex="0"><code>alert(anni);
</code></pre><p><strong>Salviamo</strong> e <strong>aggiorniamo</strong> e vedremo il numero “<strong>30</strong>” apparire nel popup oppure nella cosole.</p>
<p><strong>Ma possiamo fare di più!</strong></p>
<p>Impostiamo <strong>una serie di variabili:</strong></p>
<pre tabindex="0"><code>var nome = &#34;Marco&#34;;
var altezza = &#34;1.83&#34;;
var anni = 30;
</code></pre><p>Adesso possiamo c<strong>reare una frase ed inserire al suo interno le nostre variabili,</strong> oltre che utilizzarle per fare dei calcoli.</p>
<p>I <strong>valori testuali devono essere inseriti fra virgolette</strong>, mentre i <strong>valori numerici senza</strong>. In questo modo possiamo fare anche delle <strong>operazioni aritmetiche.</strong></p>
<p><strong>Ecco un esempio:</strong></p>
<pre tabindex="0"><code>console.log(&#39;Ciao, mi chiamo &#39; + nome + &#39; e sono alto &#39; + altezza + &#39; metri. In questo momento ho &#39; + anni + &#39; anni. Fra 5 anni avrò &#39; + (anni + 5) + &#39; anni.&#39;); &lt;/script&gt;
</code></pre><p>Per inserire una <strong>variabile in un testo</strong> occorre <strong>concatenarla</strong>, metterla insieme.</p>
<p>Per fare questo abbiamo utilizzato il segno <strong>‘+’.</strong></p>
<h3 id="funzioni">Funzioni</h3>
<p>Le funzioni sono delle <strong>parti di codice che svolgono una determinata azione</strong>.</p>
<p>Isolando una parte di codice in una funzione, questa potrà essere <strong>richiamata</strong> più volte all’interno del progetto.</p>
<p>Le funzioni possono avere dei <strong>parametri</strong>, che ne personalizzano l’azione.</p>
<p><strong>Esempio:</strong></p>
<p>Andiamo sul file <em><strong>scripts.js</strong></em> e scriviamo:</p>
<pre tabindex="0"><code>function ciao() {
   alert (&#34;CIAO&#34;);
}
</code></pre><p>Ora andiamo sul file _<strong>index.htm</strong>_l e aggiungiamo un bottone, in questo modo:</p>
<pre tabindex="0"><code>&lt;button onclick=&#34;ciao()&#34;&gt;Salutami&lt;/button&gt;
</code></pre><p><strong>Salviamo</strong> e <strong>aggiorniamo</strong> e vedremo che <strong>cliccando sul nuovo bottone apparirà il popup con scritto “CIAO”.</strong></p>
<h3 id="parametri">Parametri</h3>
<p>Adesso aggiungiamo un <strong>parametro</strong>. Andiamo nella funzione a la modifichiamo così:</p>
<pre tabindex="0"><code>function ciao(nome) {
    alert (&#34;CIAO &#34;+nome);
 }
</code></pre><p>e sul file <em><strong>index.html</strong></em> modifichiamo così il bottone:</p>
<pre tabindex="0"><code>&lt;button onclick=&#34;ciao(&#39;Marco&#39;)&#34;&gt;Salutami&lt;/button&gt;
</code></pre><p><strong>Salviamo</strong> e <strong>aggiorniamo</strong> e possiamo vedere che ora il saluto è rivolto al nome inserito nel parametro della funzione!</p>
<p>“Marco” è il nostro parametro</p>
<h3 id="if-else">If Else</h3>
<p>Gli “If” sono <strong>alla base di tutta la programmazione</strong>. Ogni azione è fatta come conseguenza di un’altra. Vediamo cosa significa.</p>
<p>Utilizziamo sempre il bottone del saluto. Possiamo prevedere che se il nome è “Marco” allora il popup dirà “Ciao Marco”, se invece il nome è “Mark”, possiamo far apparire “Hello Mark”.</p>
<p><strong>Vediamo come fare:</strong></p>
<p>Sostituiamo la funzione con questa:</p>
<pre tabindex="0"><code>function ciao(nome) {
    if(nome==&#34;Marco&#34;){
        alert (&#34;CIAO &#34;+nome);
    }else if(nome==&#34;Mark&#34;){
        alert (&#34;Hello &#34;+nome);
    }else{
        alert (&#34;Buongiorno &#34;+nome);
    }
 }
</code></pre><p>Ora possiamo andare a <strong>modificare il parametro nel bottone</strong>, da “Marco” a “Mark”, oppure inserire un nome totalmente diverso.</p>
<p>Se il nome è Marco allora il popup sarà “Ciao Marco”, se Mark allora “Hello Mark”, se altro sarà “Buongiorno + nome”.</p>
<p>Da notare come <strong>ci siano due segni uguale</strong>, questo perché nel Javascript un uguale assegna il valore, per confrontarli invece occorre usarne 2 o 3 a seconda dei casi. Per il momento ci basta sapere che quando dobbiamo connfrontare più valori bisogna inserire 2 segni uguale.</p>
<h3 id="eventi">Eventi</h3>
<p><strong>Il Javascript può essere richiamato all’interno dell’HTML all’accadere di determinati eventi,</strong> per esempio al click, al passaggio con il mouse etc.</p>
<p>Oggi esistono anche molti altri modi, ma per iniziare questi sono i più semplici ed immediati.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>&lt;button onclick=&#34;alert(&#39;CIAO!&#39;)&#34;&gt;Salutami&lt;/button&gt;
</code></pre><p>In questo caso al click del bottone apparirà il <strong>popup di saluto.</strong></p>
<h2 id="creiamo-il-nostro-primo-effetto">Creiamo il nostro primo effetto</h2>
<p>Al di là della teoria, <strong>a noi interessa soprattutto vedere come possiamo utilizzare Javascript per creare gli effetti per le nostre pagine web.</strong></p>
<p>Quindi ora andremo a <strong>creare un semplice effetto che cambierà lo sfondo del body al click di un bottone.</strong></p>
<p><strong>Vediamo come fare:</strong></p>
<p>Iniziamo con il creare un bottone nella nostra <em><strong>index.html:</strong></em></p>
<pre tabindex="0"><code>&lt;button onclick=&#34;cambiaSfondo()&#34;&gt; Cambia sfondo! &lt;/button&gt;
</code></pre><p>Ora andiamo nel nostro <strong><em>scripts.js</em></strong> e creiamo la funzione <strong>cambiaSfondo()</strong>:</p>
<pre tabindex="0"><code>function cambiaSfondo(){
   document.body.style.backgroundColor=&#39;#000&#39;;
}
</code></pre><p>Se <strong>salviamo</strong> e <strong>aggiorniamo</strong> vedremo che ora <strong>al click del bottone lo sfondo diventerà nero.</strong></p>
<p>Abbiamo detto al browser che al click del bottone deve selezionare il colore di sfondo del body (body.style.backgroundcolor) e impostarlo a nero.</p>
<p>Notiamo però che <strong>è un’unica azione</strong>, una volta che lo sfondo è nero non possiamo più tornare al bianco…</p>
<p><strong>Andiamo ad aggiungere ancora qualche linea di codice:</strong></p>
<pre tabindex="0"><code>function cambiaSfondo(){
    var sfondo = document.body.style.backgroundColor;
    if(sfondo==&#34;rgb(0, 0, 0)&#34;){
        document.body.style.backgroundColor=&#39;#fff&#39;;
    }else{
        document.body.style.backgroundColor=&#39;#000&#39;;

    }
}
</code></pre><p>In questo modo facciamo un <strong>controllo del colore di sfond</strong>o. Se è nero lo impostiamo bianco, altrimento sarà nero.</p>
<p>Così facendo possiamo <strong>cambiare colore di sfondo ogni volta che clicchiamo sul bottone.</strong></p>
<p><strong>Congratulazioni! Hai appena creato il tuo primo effetto Javascript!!!</strong></p>
<h2 id="animazione-di-un-componente">Animazione di un componente</h2>
<p>Se al posto dello sfondo intero volessimo modificare solamente un <strong>componente</strong>, possiamo farlo utilizzando gli <strong>id</strong> (<a href="/blog/le-basi-del-css/">Le basi di CSS</a>).</p>
<p>Iniziamo con il creare un <strong>div con id=”box”</strong></p>
<pre tabindex="0"><code>&lt;div id=&#34;box&#34; onmouseover=&#34;cambiaBoxOver()&#34; onmouseout=&#34;cambiaBoxOut()&#34;&gt;
   Questo contenitore cambiarà colore al passaggio del mouse
&lt;/div&gt;
</code></pre><p>Ora <strong>creiamo le due funzioni in scripts.js:</strong></p>
<pre tabindex="0"><code> function cambiaBoxOver(){
    document.getElementById(&#39;box&#39;).style.backgroundColor=&#34;coral&#34;;
    document.getElementById(&#39;box&#39;).style.color=&#34;blue&#34;;
}

 function cambiaBoxOut(){
    document.getElementById(&#39;box&#39;).style.backgroundColor=&#34;white&#34;;
    document.getElementById(&#39;box&#39;).style.color=&#34;black&#34;;

}
</code></pre><p><strong>Salviamo</strong> e <strong>aggiorniamo</strong> e vediamo che <strong>il contenitore cambia colore e sfondo al passaggio del mouse.</strong></p>
<p>Molto bene, <strong>queste sono le basi per iniziare a smanettare un po’ con il Javascript.</strong></p>
<p><strong>Cercando online potrai trovare moltissime guide e tutorial sull’argomento.</strong></p>
<p><strong>È però bene conoscere anche un po’ di Javascript</strong> e soprattutto JQuery, per poter <strong>evitare di installare un’infinità di plugin e crearci da soli tutti gli effetti e le funzioni che vogliamo!</strong></p>
<h3 id="codice-completo">CODICE COMPLETO:</h3>
<p><strong>index.html</strong></p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;La mia prima pagina web&lt;/title&gt;&lt;!-- Il titolo della pagina che appare nella scheda del browser --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;style.css&#34;&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div class=&#34;container&#34;&gt;

        &lt;!-- Javascript --&gt;
        &lt;button onclick=&#34;ciao(&#39;Ugo&#39;)&#34;&gt;Salutami&lt;/button&gt;
        &lt;!-- Titolo --&gt;
        &lt;button onclick=&#34;cambiaSfondo()&#34;&gt;
            Cambia sfondo!
        &lt;/button&gt;
        &lt;div id=&#34;box&#34; onmouseover=&#34;cambiaBoxOver()&#34; onmouseout=&#34;cambiaBoxOut()&#34;&gt;
            Questo contenitore cambiarà colore al passaggio del mouse
        &lt;/div&gt;
        &lt;!-- /Javascript--&gt;

        &lt;h1&gt;La mia prima pagina web&lt;/h1&gt;

        &lt;!-- Paragrafo --&gt;
        &lt;p&gt;Benvenuto nella mia prima pagina web!&lt;/p&gt;

        &lt;br&gt;&lt;!-- questo è un a capo--&gt;

        &lt;!-- Sottotitolo --&gt;
        &lt;h2&gt;Sottotitolo&lt;/h2&gt;

        &lt;p&gt;Questo è il secondo paragrafo della mia prima pagina web&lt;/p&gt;

        &lt;br&gt;

        &lt;h2&gt;Elenco&lt;/h2&gt;
        &lt;!-- Elenco --&gt;
        &lt;ul&gt;
            &lt;li&gt;Primo Item&lt;/li&gt;&lt;!-- Item di un elenco --&gt;
            &lt;li&gt;Secondo Item&lt;/li&gt;
        &lt;/ul&gt;

        &lt;!-- Immagine
    &lt;img src=&#34;img/immagine.jpg&#34; width=&#34;200&#34;&gt; --&gt;

        &lt;!-- DIV: block element --&gt;
        &lt;div style=&#34;background-color: green;&#34;&gt;
            Questo è un contenitore con sfondo verde
        &lt;/div&gt;

        &lt;!-- SPAN: inline element --&gt;
        &lt;p&gt;
            Questo è un paragrafo con del testo inserito a caso. In questo testo voglio
            &lt;span style=&#34;color:red&#34;&gt;colorare&lt;/span&gt; una parola di rosso
        &lt;/p&gt;

        &lt;!-- FORM --&gt;
        &lt;form&gt;
            &lt;!-- Casella di testo --&gt;
            &lt;input type=&#34;text&#34; placeholder=&#34;Nome&#34;&gt;
            &lt;br&gt;&lt;br&gt;
            &lt;input type=&#34;text&#34; placeholder=&#34;Cognome&#34;&gt;
            &lt;br&gt;&lt;br&gt;
            &lt;!-- Menù a tendina --&gt;
            &lt;select name=&#34;select&#34; id=&#34;&#34;&gt;
                &lt;option value=&#34;0&#34;&gt;Opzione 1&lt;/option&gt;
                &lt;option value=&#34;1&#34;&gt;Opzione 2&lt;/option&gt;
                &lt;option value=&#34;2&#34;&gt;Opzione 3&lt;/option&gt;
            &lt;/select&gt;
            &lt;br&gt;&lt;br&gt;
            &lt;!-- Area di testo --&gt;
            &lt;textarea name=&#34;&#34; id=&#34;&#34; cols=&#34;30&#34; rows=&#34;10&#34; placeholder=&#34;Inserisci il testo qui.&#34;&gt;&lt;/textarea&gt;
            &lt;br&gt;&lt;br&gt;
            &lt;!-- Checkbox--&gt;
            &lt;input type=&#34;checkbox&#34; name=&#34;privacy&#34; value=&#34;0&#34;&gt;Accetto la Privacy Policy
            &lt;br&gt;&lt;br&gt;
            &lt;!-- Bottone --&gt;
            &lt;button&gt;Invia&lt;/button&gt;
        &lt;/form&gt;

        &lt;h2&gt;Margin e Padding&lt;/h2&gt;
        &lt;h3&gt;Margin:&lt;/h3&gt;
        &lt;div class=&#34;box-margin&#34;&gt;
            Questo è un box con del margine
        &lt;/div&gt;

        &lt;div class=&#34;box-margin-top&#34;&gt;
            Questo box ha solo il margine superiore
        &lt;/div&gt;

        &lt;h3&gt;Padding&lt;/h3&gt;
        &lt;div class=&#34;box-padding&#34;&gt;
            Questo è un box con del padding
        &lt;/div&gt;

        &lt;!--
&lt;div class=&#34;immagine-sfondo&#34;&gt;
    Questo div ha un&#39;immagine di sfondo!
&lt;/div&gt;
--&gt;

    &lt;/div&gt;

    &lt;script src=&#34;scripts.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><strong>scripts.js</strong></p>
<pre tabindex="0"><code>function cambiaSfondo(){
    var sfondo = document.body.style.backgroundColor;
    if(sfondo==&#34;rgb(0, 0, 0)&#34;){
        document.body.style.backgroundColor=&#39;#fff&#39;;
    }else{
        document.body.style.backgroundColor=&#39;#000&#39;;

    }
}

function ciao(nome) {
    if(nome==&#34;Marco&#34;){
        alert (&#34;CIAO &#34;+nome);
    }else if(nome==&#34;Mark&#34;){
        alert (&#34;Hello &#34;+nome);
    }else{
        alert (&#34;Buongiorno &#34;+nome);
    }

 }

 function cambiaBoxOver(){
    document.getElementById(&#39;box&#39;).style.backgroundColor=&#34;coral&#34;;
    document.getElementById(&#39;box&#39;).style.color=&#34;blue&#34;;
}

 function cambiaBoxOut(){
    document.getElementById(&#39;box&#39;).style.backgroundColor=&#34;white&#34;;
    document.getElementById(&#39;box&#39;).style.color=&#34;black&#34;;

}
</code></pre><p><em><a href="/blog/le-basi-dellhtml/">&laquo; Le basi di CSS</a></em></p>
<p><em><a href="/blog/le-basi-di-bootstrap/">Le basi di Bootstrap &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>4. Le basi di Bootstrap</title>
			<link>https://albertoreineri.it/blog/le-basi-di-bootstrap/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-basi-di-bootstrap/</guid>
			<description>Questa guida fa riferimento a Bootstrap 4, ora è uscita la versione 5&amp;hellip; Appena avrò un attimo di tempo la aggiornerò!
Se vuoi diventare uno sviluppatore web oggi non puoi fare a meno che scontrarti con bootstrap.
Come dice il sito web uffiliale, Bootstrap è il framework HTML, CSS e JS più popolare al mondo!
Una vastissima parte dei layout web sono create attraverso Bootstrap, perché rende lo sviluppo responsive semplice e veloce.</description>
			<content type="html"><![CDATA[<p><em>Questa guida fa riferimento a Bootstrap 4, ora è uscita la versione 5&hellip; Appena avrò un attimo di tempo la aggiornerò!</em></p>
<hr>
<p>Se vuoi diventare uno <strong>sviluppatore web</strong> oggi non puoi fare a meno che scontrarti con <strong>bootstrap</strong>.</p>
<p>Come dice il <a href="https://getbootstrap.com/">sito web uffiliale</a>, <strong>Bootstrap è il framework HTML, CSS e JS più popolare al mondo!</strong></p>
<p>Una vastissima parte dei layout web sono create attraverso <strong>Bootstrap</strong>, perché rende lo sviluppo responsive <strong>semplice e veloce.</strong></p>
<p>Sebbene esisteno anche altre alternative, Bootstrap rimane un fondamento nei <strong>layout del web</strong>.</p>
<h2 id="cosè-bootstrap">Cos’è Bootstrap</h2>
<p>Ma che cos’è praticamente <strong>Bootstrap</strong>?</p>
<p>Bootstrap è un insieme di <strong>librerie css e js</strong> che velocizzano la realizzazione dei layout delle pagine web.</p>
<p>È stato sviluppato da <strong>Twitter</strong> ed è un progetto <strong>open source.</strong></p>
<h2 id="come-includere-bootstrap">Come includere Bootstrap</h2>
<p>Per poter utilizzare Bootstrap occorre includerlo nel progetto, <strong>inserendo</strong> le librerie css e js nella pagina web.</p>
<p>Questo può essere fatto in <strong>2 modi:</strong></p>
<ul>
<li>Tramite CDN</li>
<li>Scaricando i file</li>
</ul>
<h3 id="cdn">CDN</h3>
<p>Questo metodo consiste nel <strong>richiamare Bootstrap dalla CDN</strong>. È facile e veloce, non occorre scaricare nulla, basta inserire questo codice nell’<strong><em><head></em></strong>:</p>
<pre tabindex="0"><code>&lt;link rel=&#34;stylesheet&#34; href=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; integrity=&#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&#34; crossorigin=&#34;anonymous&#34;&gt;
</code></pre><p>e questo prima della fine del <strong><em><body></em></strong>:</p>
<pre tabindex="0"><code>&lt;script src=&#34;https://code.jquery.com/jquery-3.3.1.slim.min.js&#34; integrity=&#34;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&#34; integrity=&#34;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&#34; integrity=&#34;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
</code></pre><p><strong><em>E voilà!</em></strong> Bootstrap è inserito sul sito ed è pronto a funzionare!</p>
<h3 id="scaricando-i-file">Scaricando i file</h3>
<p>Questo metodo consiste nello <strong>scaricare i file di bootstrap</strong>, inserirli nella cartella del sito web e <strong>richiamarli</strong>.</p>
<p>I file di Bootstrap sono <strong>scaricabili</strong> a questa pagina:</p>
<p><a href="https://getbootstrap.com/docs/4.0/getting-started/download/">https://getbootstrap.com/docs/4.0/getting-started/download/</a></p>
<p>Una volta scaricati occorrerà inserire il file <strong>css nell&rsquo;<head></strong> e il <strong>js prima del </body>.</strong></p>
<p>Nel download saranno presenti <strong>molte versioni</strong> dei file, a noi interessano quelli minizzati:</p>
<ul>
<li>bootstrap.min.css</li>
<li>bootstrap.min.js</li>
</ul>
<p>Inseriamo quindi questo codice nell’<em><strong><head></strong></em>:</p>
<pre tabindex="0"><code>&lt;link rel=&#34;stylesheet&#34; href=&#34;css/bootstrap.min.css&#34;&gt;
</code></pre><p>E questo prima del <strong><em></body></em></strong>:</p>
<pre tabindex="0"><code>&lt;script src=&#34;js/bootstrap.min.css&#34;&gt;&lt;/script&gt;
</code></pre><p>Proseguendo <strong>utilizzeremo il metodo CDN</strong>, per semplicità e velocità di configurazione.</p>
<p><strong>Ecco il template di base da cui partiremo:</strong></p>
<pre tabindex="0"><code>&lt;!doctype html&gt;
&lt;html lang=&#34;it&#34;&gt;
  &lt;head&gt;
    &lt;!-- Required meta tags --&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1, shrink-to-fit=no&#34;&gt;

    &lt;!-- Bootstrap CSS --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; integrity=&#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&#34; crossorigin=&#34;anonymous&#34;&gt;

    &lt;!-- Ulteriore CSS --&gt;

    &lt;title&gt;Corso intensivo Bootstrap!&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Corso intensivo Bootstrap!&lt;/h1&gt;

    &lt;!-- Ulteriore Javascript --&gt;

    &lt;!-- jQuery, Popper.js e Bootstrap JS **L&#39;ordine è molto importante, non modificarlo** --&gt;
    &lt;script src=&#34;https://code.jquery.com/jquery-3.3.1.slim.min.js&#34; integrity=&#34;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&#34; integrity=&#34;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&#34; integrity=&#34;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre><h2 id="la-griglia-di-bootstrap">La griglia di Bootstrap</h2>
<p>La <strong>parte fondamentale</strong> di Bootstrap è la sua griglia.</p>
<p>Bootstrap utilizza un sistema basato su <strong>12 colonne</strong>, che si <strong>adattano</strong> alla dimensione dello <strong>schermo</strong>.</p>
<p>La griglia è composta da un <strong>contenitore</strong> (<em>container</em>), al cui interno vengono inserite delle <strong>righe</strong> (<em>row</em>), al cui interno possono essere inserite delle <strong>colonne</strong> (<em>col</em>).</p>
<p>Le colonne possono essere configurate in modo che la loro <strong>larghezza si adatti e cambi</strong> a seconda della dimensione dello schermo.</p>
<p><strong>Ma è tutto più facile a farsi che a dirsi, quindi iniziamo!</strong></p>
<p>Creiamo un <strong>layout</strong> suddiviso su <strong>2 colonne</strong> che diventeranno 1 se lo schermo è più piccolo di un laptop!</p>
<p>Sotto l&rsquo;<h1> del nostro file inseriamo questo:</p>
<pre tabindex="0"><code>    &lt;!-- Layout 2 colonne Laptop, 1 colonna da tablet in giù --&gt;
    &lt;div class=&#34;container bg-secondary&#34;&gt;
        &lt;div class=&#34;row&#34;&gt;
            &lt;div class=&#34;col-lg-6 bg-success&#34;&gt;
                Colonna 1
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 bg-warning&#34;&gt;
                Colonna 2
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre><p>Il codice si spiega da solo!</p>
<p>Ecco che abbiamo un layout con 2 colonne su <strong>desktop</strong>:</p>
<p><img src="images/image-15-1024x76.png" alt=""></p>
<p>E di 1 colonna da <strong>tablet</strong> in giù:</p>
<p><img src="images/image-17.png" alt=""></p>
<p>Vedrai che la larghezza è minore dell’intero schermo del desktop.</p>
<p>Se vuoi una larghezza del layout al 100% sostituisci “<strong>container</strong>” con “<strong>container-fluid</strong>“.</p>
<h2 id="come-visualizzare-la-modalità-mobile-da-pc">Come visualizzare la modalità mobile da pc</h2>
<p>Per avere un’idea di come il sito sarà sui vari <strong>dispositivi</strong> puoi utilizzare la funzione “<strong>Toggle Device</strong>” di Chrome.</p>
<p>Su google chrome premi <strong>f12</strong> e poi questa <strong>icona</strong> sulla sinistra:</p>
<p><img src="images/image-18.png" alt=""></p>
<p>Dopodiché in alto potrai scegliere un dispositivo mobile oppure selezionare le <strong>dimensioni</strong> che preferisci attraverso l’opzione “<strong>Responsive</strong>“</p>
<p><img src="images/image-20.png" alt=""></p>
<h2 id="breakpoints">Breakpoints</h2>
<p>Bootstrap ha già preimpostati vari <strong>breakpoints</strong>, dal <strong>desktop</strong> al <strong>mobile</strong>.</p>
<p>Indicando <strong>col-lg-6</strong> significa che il contenuto occuperà <strong>6 colonne delle 12</strong> disponibili finché la larghezza è maggiore di lg, dopodiché il contenuto occuperà l’intera larghezza dello schermo.</p>
<p>Ecco una tabella delle <strong>dimensioni</strong> e delle colonne di bootstrap:</p>
<p>|   | Extra small
&lt;576px | Small
≥576px | Medium
≥768px | Large
≥992px | Extra large</p>
<table>
<thead>
<tr>
<th>≥1200px</th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Max container width</td>
<td>None (auto)</td>
<td>540px</td>
<td>720px</td>
<td>960px</td>
<td>1140px</td>
</tr>
<tr>
<td>Class prefix</td>
<td><code>.col-</code></td>
<td><code>.col-sm-</code></td>
<td><code>.col-md-</code></td>
<td><code>.col-lg-</code></td>
<td><code>.col-xl-</code></td>
</tr>
</tbody>
</table>
<p>È possibile creare <strong>layout complessi in modo semplice</strong>, grazie a questo sistema di suddivisione delle colonne.</p>
<p>Ecco un <strong>esempio</strong>:</p>
<pre tabindex="0"><code>    &lt;!-- Layout 2 colonne Laptop, 3 colonna da tablet, 1 colonna da smartphone --&gt;
    &lt;div class=&#34;container bg-secondary&#34;&gt;
        &lt;div class=&#34;row&#34;&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-success&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-warning&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-success&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-warning&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-success&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-warning&#34;&gt;
                Colonna
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre><p>In questo caso abbiamo 2 colonne da desktop, 3 da tablet e 1 da smartphone.</p>
<p>Ora <strong>prova anche tu</strong> a creare dei layout utilizzando la tabella qua sopra! Il modo migliore per imparare è <strong>provare, provare e provare!</strong></p>
<h2 id="componenti">Componenti</h2>
<p>Bootstrap, oltre alla griglia, comprende una serie di <strong>componenti già belli e pronti</strong> da utilizzare sui nostri siti, basta copiare il componente, <strong>incollarlo</strong> nel nostro sito e poi andarlo a modificare come più ci piace!</p>
<p>Tutti i componenti sono visibili a questo <strong>link</strong>:</p>
<p><a href="https://getbootstrap.com/docs/4.3/components/alerts/">https://getbootstrap.com/docs/4.3/components/alerts/</a></p>
<p>Sulla sinistra vedrai un menù con l’elenco dei componenti.</p>
<p><strong>Vediamo adesso quelli più utilizzati!</strong></p>
<h3 id="navbar">Navbar</h3>
<p>Andiamo a creare una <strong>navbar</strong> per il nostro sito!</p>
<p>Nulla di più semplice con Bootstrap, ci basterà andare a cercare “<strong>Navbar</strong>” fra i vari componenti (<a href="https://getbootstrap.com/docs/4.3/components/navbar/">https://getbootstrap.com/docs/4.3/components/navbar/</a>) e <strong>copiare il codice</strong> per inserirla, nel nostro caso questo:</p>
<pre tabindex="0"><code>&lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
  &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Navbar&lt;/a&gt;
  &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
    &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
  &lt;/button&gt;

  &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
    &lt;ul class=&#34;navbar-nav mr-auto&#34;&gt;
      &lt;li class=&#34;nav-item active&#34;&gt;
        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
      &lt;/li&gt;
      &lt;li class=&#34;nav-item&#34;&gt;
        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Link&lt;/a&gt;
      &lt;/li&gt;
      &lt;li class=&#34;nav-item dropdown&#34;&gt;
        &lt;a class=&#34;nav-link dropdown-toggle&#34; href=&#34;#&#34; id=&#34;navbarDropdown&#34; role=&#34;button&#34; data-toggle=&#34;dropdown&#34; aria-haspopup=&#34;true&#34; aria-expanded=&#34;false&#34;&gt;
          Dropdown
        &lt;/a&gt;
        &lt;div class=&#34;dropdown-menu&#34; aria-labelledby=&#34;navbarDropdown&#34;&gt;
          &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Action&lt;/a&gt;
          &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Another action&lt;/a&gt;
          &lt;div class=&#34;dropdown-divider&#34;&gt;&lt;/div&gt;
          &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Something else here&lt;/a&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li class=&#34;nav-item&#34;&gt;
        &lt;a class=&#34;nav-link disabled&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Disabled&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;form class=&#34;form-inline my-2 my-lg-0&#34;&gt;
      &lt;input class=&#34;form-control mr-sm-2&#34; type=&#34;search&#34; placeholder=&#34;Search&#34; aria-label=&#34;Search&#34;&gt;
      &lt;button class=&#34;btn btn-outline-success my-2 my-sm-0&#34; type=&#34;submit&#34;&gt;Search&lt;/button&gt;
    &lt;/form&gt;
  &lt;/div&gt;
&lt;/nav&gt;
</code></pre><p>Vogliamo però apportare qualche <strong>modifica</strong>, per esempio non ci serve la ricerca sulla navbar, ma vogliamo che il nome del sito sia a sinistra, mente il menù a destra.</p>
<p>Ci basterà quindi <strong>eliminare il form</strong> di ricerca e modificare il margine del menù, da “<strong>mr-auto</strong>” a “<strong>ml-auto</strong>“, nell’ul “navbar-nav”:</p>
<pre tabindex="0"><code>    &lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
        &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Navbar&lt;/a&gt;
        &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
          &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
        &lt;/button&gt;

        &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
          &lt;ul class=&#34;navbar-nav ml-auto&#34;&gt;
            &lt;li class=&#34;nav-item active&#34;&gt;
              &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
            &lt;/li&gt;
            &lt;li class=&#34;nav-item&#34;&gt;
              &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Link&lt;/a&gt;
            &lt;/li&gt;
            &lt;li class=&#34;nav-item dropdown&#34;&gt;
              &lt;a class=&#34;nav-link dropdown-toggle&#34; href=&#34;#&#34; id=&#34;navbarDropdown&#34; role=&#34;button&#34; data-toggle=&#34;dropdown&#34; aria-haspopup=&#34;true&#34; aria-expanded=&#34;false&#34;&gt;
                Dropdown
              &lt;/a&gt;
              &lt;div class=&#34;dropdown-menu&#34; aria-labelledby=&#34;navbarDropdown&#34;&gt;
                &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Action&lt;/a&gt;
                &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Another action&lt;/a&gt;
                &lt;div class=&#34;dropdown-divider&#34;&gt;&lt;/div&gt;
                &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Something else here&lt;/a&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li class=&#34;nav-item&#34;&gt;
              &lt;a class=&#34;nav-link disabled&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Disabled&lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/nav&gt;
</code></pre><p>Vediamo che abbiamo la nostra bella <strong>navbar pronta e responsiva!</strong></p>
<p>Prova a visualizzare in modalità smartphone, vedrai che il menù scompare e apparirà <strong>l’hamburgher</strong> che mostrerà il menù al click:</p>
<p><strong>Desktop:</strong></p>
<p><img src="images/image-21-1536x495-1-1024x330.png" alt=""></p>
<p><strong>Mobile:</strong></p>
<p><img src="images/image-22.png" alt=""></p>
<h3 id="bottoni">Bottoni</h3>
<p>Un altro componente utilissimo sono i <strong>bottoni</strong>! Bootstrap fornisce un insieme di bottoni già pronti e <strong>ben formattati</strong>, disponibili nei colori più utilizzati, eccoli qui:</p>
<pre tabindex="0"><code>&lt;button type=&#34;button&#34; class=&#34;btn btn-primary&#34;&gt;Primary&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-secondary&#34;&gt;Secondary&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-success&#34;&gt;Success&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-danger&#34;&gt;Danger&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-warning&#34;&gt;Warning&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-info&#34;&gt;Info&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-light&#34;&gt;Light&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-dark&#34;&gt;Dark&lt;/button&gt;

&lt;button type=&#34;button&#34; class=&#34;btn btn-link&#34;&gt;Link&lt;/button&gt;
</code></pre><p><img src="images/image-24.png" alt=""></p>
<p>La classe “<strong>btn</strong>” indica il bottone, mentre “<strong>btn-primary</strong>” indica la tipologia del bottone.</p>
<h3 id="caroselli">Caroselli</h3>
<p>Inserire dei caroselli non è mai stato così semplice! Anche qua basta andare a cercare il componente “<strong>Carousel</strong>” sul sito di bootstrap ed inserire il codice!</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>&lt;div id=&#34;carouselExampleIndicators&#34; class=&#34;carousel slide&#34; data-ride=&#34;carousel&#34;&gt;
  &lt;ol class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carouselExampleIndicators&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carouselExampleIndicators&#34; data-slide-to=&#34;1&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carouselExampleIndicators&#34; data-slide-to=&#34;2&#34;&gt;&lt;/li&gt;
  &lt;/ol&gt;
  &lt;div class=&#34;carousel-inner&#34;&gt;
    &lt;div class=&#34;carousel-item active&#34;&gt;
      &lt;img src=&#34;...&#34; class=&#34;d-block w-100&#34; alt=&#34;...&#34;&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
      &lt;img src=&#34;...&#34; class=&#34;d-block w-100&#34; alt=&#34;...&#34;&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
      &lt;img src=&#34;...&#34; class=&#34;d-block w-100&#34; alt=&#34;...&#34;&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;a class=&#34;carousel-control-prev&#34; href=&#34;#carouselExampleIndicators&#34; role=&#34;button&#34; data-slide=&#34;prev&#34;&gt;
    &lt;span class=&#34;carousel-control-prev-icon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Previous&lt;/span&gt;
  &lt;/a&gt;
  &lt;a class=&#34;carousel-control-next&#34; href=&#34;#carouselExampleIndicators&#34; role=&#34;button&#34; data-slide=&#34;next&#34;&gt;
    &lt;span class=&#34;carousel-control-next-icon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Next&lt;/span&gt;
  &lt;/a&gt;
&lt;/div&gt;
</code></pre><p>Logicamente dobbiamo <strong>inserire un “src” alle immagini</strong> per farle visualizzare, ma il carosello funziona fina da subito!</p>
<h3 id="form">Form</h3>
<p>Anche creare <strong>form graficamente accettabili</strong> è velocissimo! Bootstrap consente di creare degli input carini e ben stilizzati senza perdere il minimo tempo!</p>
<p>Ecco un <strong>esempio</strong>:</p>
<pre tabindex="0"><code>&lt;form&gt;
  &lt;div class=&#34;form-group&#34;&gt;
    &lt;label for=&#34;exampleInputEmail1&#34;&gt;Email address&lt;/label&gt;
    &lt;input type=&#34;email&#34; class=&#34;form-control&#34; id=&#34;exampleInputEmail1&#34; aria-describedby=&#34;emailHelp&#34; placeholder=&#34;Enter email&#34;&gt;
    &lt;small id=&#34;emailHelp&#34; class=&#34;form-text text-muted&#34;&gt;We&#39;ll never share your email with anyone else.&lt;/small&gt;
  &lt;/div&gt;
  &lt;div class=&#34;form-group&#34;&gt;
    &lt;label for=&#34;exampleInputPassword1&#34;&gt;Password&lt;/label&gt;
    &lt;input type=&#34;password&#34; class=&#34;form-control&#34; id=&#34;exampleInputPassword1&#34; placeholder=&#34;Password&#34;&gt;
  &lt;/div&gt;
  &lt;div class=&#34;form-group form-check&#34;&gt;
    &lt;input type=&#34;checkbox&#34; class=&#34;form-check-input&#34; id=&#34;exampleCheck1&#34;&gt;
    &lt;label class=&#34;form-check-label&#34; for=&#34;exampleCheck1&#34;&gt;Check me out&lt;/label&gt;
  &lt;/div&gt;
  &lt;button type=&#34;submit&#34; class=&#34;btn btn-primary&#34;&gt;Submit&lt;/button&gt;
&lt;/form&gt;
</code></pre><p><img src="images/image-26-1024x254.png" alt=""></p>
<p>Questi sono solo <strong>alcuni</strong> dei <strong>componenti</strong> disponibili! Naviga un po’ fra la lista dei componenti e <strong>prova ad inserirli per vedere come funzionano!</strong></p>
<p>Una volta che ti sarai impadronito della griglia potrai cerare siti web responsive in maniera rapida e veloce!</p>
<p>E non dimenticare che <strong>Bootstrap è cross-browser</strong>, cioè funziona sempre e ovunque senza problemi!</p>
<h2 id="modificare-bootstrap">Modificare Bootstrap</h2>
<p>Puoi anche <strong>aggiungere un tuo file css</strong> personale per andare a sovrascrivere alcune classi di bootstrap e personalizzarle come vuoi!</p>
<p>Se per esempio vogliamo che il btn-primary sia arancione, possiamo creare un nostro file css con questo al suo interno:</p>
<pre tabindex="0"><code>.btn-primary{
   background-color:orange !important;
}
</code></pre><p>Ricordati solamente di <strong>inserire questo css dopo bootstrap</strong>, in modo che vada a sovrascriverlo!</p>
<p>Così tutti i btn-primary saranno <strong>arancione</strong> anziché blu!</p>
<h2 id="layout-di-esempio">Layout di esempio</h2>
<p>Creiamo ora una <strong>home page semplice utilizzando solo bootstrap!</strong></p>
<h3 id="template-di-base"><strong>Template di base:</strong></h3>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;IE=edge&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&gt;
    &lt;!-- I 3 meta tags qua sopra DEVONO essere inseriti come primi --&gt;
    &lt;meta name=&#34;description&#34; content=&#34;Corso intensivo di Bootstrap&#34;&gt;
    &lt;meta name=&#34;author&#34; content=&#34;Specialista WP!&#34;&gt;

    &lt;title&gt;Corso intensivo di Bootstrap&lt;/title&gt;

    &lt;!-- Bootstrap CSS --&gt;
    &lt;link href=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; rel=&#34;stylesheet&#34;&gt;

&lt;/head&gt;

&lt;body&gt;

    &lt;!-- JQuery e Bootstrap JavaScript  --&gt;
    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><h3 id="navbar-1">Navbar:</h3>
<p>Ora inseriamo una <strong>navbar con il menù allineato a destra</strong>, come abbiamo visto prima:</p>
<pre tabindex="0"><code>    &lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
        &lt;div class=&#34;container&#34;&gt;
            &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Corso intensivo di Bootstrap&lt;/a&gt;
            &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
                &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
            &lt;/button&gt;

            &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
                &lt;ul class=&#34;navbar-nav ml-auto&#34;&gt;
                    &lt;li class=&#34;nav-item active&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Chi sono&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Blog&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Contatti&lt;/a&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/nav&gt;
</code></pre><h3 id="contenuto">Contenuto</h3>
<p>Ora creiamo il classico layout con il <strong>contenuto sulla sinistra</strong> e una <strong>sidebar sulla destra</strong>. Da smartphone invece la sidebar sarà sotto il contenuto.</p>
<pre tabindex="0"><code>    &lt;div class=&#34;container mt-5&#34;&gt;

        &lt;div class=&#34;row&#34;&gt;
            &lt;!-- CONTENUTO --&gt;
            &lt;div class=&#34;col-sm-8&#34;&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;15 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 2&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;16 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 3&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;17 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- NAVIGATION LINKS --&gt;
                &lt;nav aria-label=&#34;Page navigation example&#34;&gt;
                    &lt;ul class=&#34;pagination justify-content-center mb-5&#34;&gt;
                        &lt;li class=&#34;page-item disabled&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Precedente&lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;2&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;3&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;Successivo&lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/nav&gt;
                &lt;!-- /NAVIGATION LINKS --&gt;
            &lt;/div&gt;
            &lt;!-- /CONTENUTO --&gt;

            &lt;!-- SIDEBAR --&gt;
            &lt;div class=&#34;col-sm-3 col-sm-offset-1&#34;&gt;
                &lt;div&gt;
                    &lt;h4&gt;Chi sono&lt;/h4&gt;
                    &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Ultimi articoli&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 1&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 2&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 3&lt;/a&gt;&lt;/li&gt;

                    &lt;/ol&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Social&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
                    &lt;/ol&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;!-- /SIDEBAR --&gt;

        &lt;/div&gt;&lt;!-- /.row --&gt;

    &lt;/div&gt;&lt;!-- /.container --&gt;
</code></pre><p>Particolarità:</p>
<ul>
<li><strong>mt-5</strong> sta per “margin-top:5rem”.</li>
<li><strong>offset</strong> serve per lasciare colonne vuote prima del contenuto</li>
</ul>
<h3 id="footer">Footer</h3>
<p>Infine inseriamo il footer:</p>
<pre tabindex="0"><code>    &lt;footer&gt;
        &lt;div class=&#34;container text-center mb-5&#34;&gt;
            &lt;p&gt;Sito realizzato da &lt;a href=&#34;&#34;&gt;Specialista WP!&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/footer&gt;
</code></pre><p>Ed ecco un <strong>layout classico semplice realizzato interamente con Bootstrap!</strong></p>
<p><img src="images/image-29-1024x834.png" alt=""></p>
<p>Come vedi <strong>Bootstrap è uno strumento fantastico</strong> per creare layout web in pochissimo tempo!</p>
<p><strong>Prova ad utilizzarlo</strong> modificando la pagina che abbiamo creato per <strong>renderla più tua</strong>, aggiungi un css esterno, cambia i colori, <strong>crea una pagina “chi sono”</strong> da linkare e utilizza lo stesso layout, insomma sbizzarrisciti come meglio credi!</p>
<p><strong>Il miglior modo per imparare è provare, provare, provare!</strong></p>
<p>Come avrai potuto capire <strong>Bootstrap utilizza JQuery</strong>, una libreria Javascript!</p>
<p>Vuoi sapere come funziona?</p>
<p><a href="/blog/le-basi-di-jquery/">Vai alla guida Le basi di JQuery &raquo;</a></p>
<p>Per maggior chiarezza ecco il <strong>codice completo</strong> del layout base con Bootstrap!</p>
<p>I <strong>commenti</strong> ti aiuteranno a capire le varie sezioni!</p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;IE=edge&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&gt;
    &lt;!-- I 3 meta tags qua sopra DEVONO essere inseriti come primi --&gt;
    &lt;meta name=&#34;description&#34; content=&#34;Corso intensivo di Bootstrap&#34;&gt;
    &lt;meta name=&#34;author&#34; content=&#34;Specialista WP!&#34;&gt;

    &lt;title&gt;Corso intensivo di Bootstrap&lt;/title&gt;

    &lt;!-- Bootstrap CSS --&gt;
    &lt;link href=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; rel=&#34;stylesheet&#34;&gt;

&lt;/head&gt;

&lt;body&gt;

    &lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
        &lt;div class=&#34;container&#34;&gt;
            &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Il mio primo tema&lt;/a&gt;
            &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
                &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
            &lt;/button&gt;

            &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
                &lt;ul class=&#34;navbar-nav ml-auto&#34;&gt;
                    &lt;li class=&#34;nav-item active&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Chi sono&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Blog&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Contatti&lt;/a&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/nav&gt;


    &lt;div class=&#34;container mt-5&#34;&gt;

        &lt;div class=&#34;row&#34;&gt;
            &lt;!-- CONTENUTO --&gt;
            &lt;div class=&#34;col-sm-8&#34;&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;15 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 2&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;16 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 3&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;17 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- NAVIGATION LINKS --&gt;
                &lt;nav aria-label=&#34;Page navigation example&#34;&gt;
                    &lt;ul class=&#34;pagination justify-content-center mb-5&#34;&gt;
                        &lt;li class=&#34;page-item disabled&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Precedente&lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;2&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;3&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;Successivo&lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/nav&gt;
                &lt;!-- /NAVIGATION LINKS --&gt;
            &lt;/div&gt;
            &lt;!-- /CONTENUTO --&gt;

            &lt;!-- SIDEBAR --&gt;
            &lt;div class=&#34;col-sm-3 col-sm-offset-1&#34;&gt;
                &lt;div&gt;
                    &lt;h4&gt;Chi sono&lt;/h4&gt;
                    &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Ultimi articoli&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 1&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 2&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 3&lt;/a&gt;&lt;/li&gt;

                    &lt;/ol&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Social&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
                    &lt;/ol&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;!-- /SIDEBAR --&gt;

        &lt;/div&gt;&lt;!-- /.row --&gt;

    &lt;/div&gt;&lt;!-- /.container --&gt;

    &lt;footer&gt;
        &lt;div class=&#34;container text-center mb-5&#34;&gt;
            &lt;p&gt;Sito realizzato da &lt;a href=&#34;&#34;&gt;Specialista WP!&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/footer&gt;


    &lt;!-- JQuery e Bootstrap JavaScript  --&gt;
    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><em><a href="/blog/le-basi-di-javascript/">&laquo; Le basi di Javascript</a></em></p>
<p><em><a href="/blog/le-basi-di-jquery/">Le basi di jQuery &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>5. Le basi di jQuery</title>
			<link>https://albertoreineri.it/blog/le-basi-di-jquery/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-basi-di-jquery/</guid>
			<description>Se hai letto le nostre guide precedenti, ormai saprai bene che HTML, CSS e Javascript sono i tre linguaggi fondamentali del web.
Con l’HTML strutturiamo i nostri siti, con il CSS li modelliamo e li formattiamo e con il Javascript aggiungiamo funzionalità interattive e animazioni.
JQuery è una libreria Javascript che consente di ottenere grandi risultati scrivendo meno codice. In pratica si potrebbe utilizzare il vanilla Javascript (Javascript puro) per fare le stesse cose che si fanno con JQuery, però con questa libreria è più semplice e veloce!</description>
			<content type="html"><![CDATA[<p>Se hai letto le nostre <a href="/guide">guide precedenti</a>, ormai saprai bene che <strong>HTML</strong>, <strong>CSS</strong> e <strong>Javascript</strong> sono i tre <strong>linguaggi fondamentali</strong> del web.</p>
<p>Con <strong>l’HTML</strong> strutturiamo i nostri siti, con il <strong>CSS</strong> li modelliamo e li formattiamo e con il <strong>Javascript</strong> aggiungiamo funzionalità interattive e animazioni.</p>
<p><strong><a href="https://jquery.com/">JQuery</a></strong> è una libreria Javascript che consente di <strong>ottenere grandi risultati scrivendo meno codice</strong>. In pratica si potrebbe utilizzare il vanilla Javascript (Javascript puro) per fare le stesse cose che si fanno con JQuery, però con questa libreria è più <strong>semplice</strong> e <strong>veloce</strong>!</p>
<p>Inoltre JQuery <strong>è compatibile con la maggior parte dei browser,</strong> il che significa che non dobbiamo preoccuparci di testare gli effettu su tutti i browser presenti, ma possiamo stare tranquilli che tutto funzionerà ovunque!</p>
<p>Vuoi <strong>vedere</strong> come <strong>JQuery è più semplice</strong> rispetto a Javascript?</p>
<p><strong>Ecco un esempio!</strong></p>
<p>In questo esempio andremo ad inserire la stringa “<strong>Ciao mondo!</strong>” in un div con id #ciao, guarda la differenza fra i due codici:</p>
<p><strong>Javascript:</strong></p>
<pre tabindex="0"><code>document.getElementById(&#39;ciao&#39;).innerHTML = &#39;Ciao mondo!&#39;
</code></pre><p><strong>JQuery:</strong></p>
<pre tabindex="0"><code>$(&#39;#ciao&#39;).html(&#39;Ciao mondo!&#39;)
</code></pre><p><strong>Visto?</strong> Già da una cosa semplicissima come questa si può vedere che il codice è molto più semplice con JQuery!</p>
<p><strong>Ti sei convinto</strong> che può valere la pena imparare ad utilizzare questa libreria? Molto bene!</p>
<p><strong>Iniziamo!</strong></p>
<h2 id="installazione-di-jquery">Installazione di JQuery</h2>
<p><strong>JQuery</strong> è semplicemente un <strong>file Javascript</strong> da inserire nel nostro HTML.</p>
<p>Questo inserimento può essere fatto in <strong>due modi:</strong> tramite <strong>CDN</strong> oppure <strong>scaricando</strong> i file in locale.</p>
<p>Puoi <strong>scaricare</strong> i file di JQuery dal sito ufficiale a questo link:</p>
<p><a href="https://jquery.com/download/">https://jquery.com/download/</a></p>
<p>Oppure puoi utilizzare una <strong>CDN</strong>, come faremo in questa guida. Utilizzeremo infatti una CDN di google:</p>
<p><a href="https://developers.google.com/speed/libraries/">https://developers.google.com/speed/libraries/</a></p>
<h3 id="template-html">Template HTML</h3>
<p>Iniziamo con il creare un file <strong>HTML</strong> di base in cui installare JQuery. Ecco il nostro <strong>scheletro</strong> HTML:</p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;
  &lt;head&gt;
    &lt;title&gt;Corso intensivo jQuery&lt;/title&gt;
    &lt;!-- CSS --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;css/styles.css&#34; /&gt;
  &lt;/head&gt;

  &lt;body&gt;


    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;js/scripts.js&#34;&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Ecco il nostro scheletro. Insieme al file html creiamo anche una cartella “<strong>css</strong>” con al suo interno un file “<em>style.css</em>” e una cartella “<strong>js</strong>” con al suo interno un file “<em>scripts.js</em>“.</p>
<p>Ricordati di inserire il file “scripts.js” sotto a JQuery, altrimenti non funzionerà!</p>
<p>Molto bene, abbiamo un progetto web configurato per poter utilizzare <strong>JQuery</strong>, vediamo ora come usare questa libreria!</p>
<h2 id="le-basi">Le basi</h2>
<p><strong>JQuery</strong> è utilizzato per <strong>connettersi con gli elementi HTML</strong> nel browser tramite <strong>DOM</strong>.</p>
<p>Il <strong>DOM</strong> (Document Object Model) è il metodo con cui <strong>Javascript</strong> (e quindi anche JQuery) <strong>interagisce con l’HTML</strong> nel browser.</p>
<p>Per visualizzare esattamente qual è il DOM, facciamo clic con il tasto destro sulla pagina nel browser e selezioniamo <strong>Ispeziona</strong>. Il codice HTML che vediamo nel riquadro di ispezione è il DOM. Ogni elemento HTML è considerato un oggetto che JavaScript può utilizzare. JavaScript può aggiungere, rimuovere e modificare ognuno di questi elementi.</p>
<p>Il livello più esterno del DOM è l’oggetto <strong>document</strong>. Per iniziare a manipolare la pagina con jQuery, dobbiamo prima assicurarci che il document sia pronto, “<em>ready</em>“.</p>
<p>Apriamo quindi il nostro file <em>scripts.js</em> e inseriamo questo codice:</p>
<pre tabindex="0"><code>$(document).ready(function() {
  // Tutte le funzioni di JQuery vanno inserite qui!
})
</code></pre><p>Qualsiasi jQuery personalizzato che scriveremo sarà contenuto all’interno di questa <strong>funzione</strong>. </p>
<p>Nell’introduzione di questo articolo, abbiamo visto un semplice script “<strong>Ciao mondo!</strong>“. Per avviare questo script e stampare il testo sul browser con jQuery, per prima cosa creiamo un elemento vuoto a cui applichiamo un id “ciao”.</p>
<p>Torniamo quindi nel nostro <em>index.html</em> e inseriamo questo nel <em><body>:</em></p>
<pre tabindex="0"><code>&lt;p id=&#34;ciao&#34;&gt;&lt;/p&gt;
</code></pre><p><strong>jQuery</strong> viene chiamato con e rappresentato dal <strong>simbolo del dollaro</strong> ( <code>$</code>). Accediamo al DOM con jQuery utilizzando principalmente la <strong>sintassi CSS</strong> e applichiamo un’azione con un metodo. Un esempio di base di jQuery segue questo formato:</p>
<pre tabindex="0"><code>$(&#39;selector&#39;).method()
</code></pre><p>Poiché un ID è rappresentato da un simbolo hash (#) nei CSS, accederemo all’ID ciao con il selettore <em>#ciao</em> <em>#ciao</em>. <em>html()</em> è un metodo che modifica l’HTML all’interno di un elemento.</p>
<pre tabindex="0"><code>$(&#39;#ciao&#39;).html(&#39;Ciao mondo!&#39;)
</code></pre><p>Il codice viene eseguito non <strong>appena il documento è pronto.</strong></p>
<p><strong>Salviamo</strong> tutto e apriamo index.html nel browser, <strong>vedremo apparire l</strong>a scritta “Ciao mondo”. Questa scritta è stata inserita da JQuery!</p>
<h2 id="i-selettori">I selettori</h2>
<p>La maggior parte dei <strong>selettori jQuery s</strong>ono gli stessi di quelli che utilizziamo nei <a href="/blog/le-basi-del-css/">CSS</a>, con alcune aggiunte specifiche di jQuery. L’elenco completo dei selettori jQuery <a href="https://api.jquery.com/category/selectors/">è disponibile qui</a> .</p>
<p>Di seguito una breve panoramica di alcuni dei selettori più comunemente usati.</p>
<ul>
<li><em>$(“*”)</em>– <strong>Carattere jolly:</strong> seleziona ogni elemento.</li>
<li><em>$(this)</em>– <strong>Corrente:</strong> seleziona l’elemento corrente su cui operare all’interno di una funzione.</li>
<li><em>$(“p”)</em>– <strong>Elemento:</strong> seleziona ogni istanza del _<p>_tag.</li>
<li><em>$(“.esempio”)</em>– <strong>Classe:</strong> seleziona ogni elemento a cui è applicata la classe “esempio”.</li>
<li><em>$(“#esempio”)</em>– <strong>Id:</strong> seleziona una singola istanza dell’ID univoco “esempio”.</li>
<li><em>$(“[type=’text’]”)</em>– <strong>Attributo:</strong> seleziona qualsiasi elemento con _text_applicato _type_all’attributo.</li>
<li><em>$(“p:first-of-type”)</em>– <strong>Pseudo Element:</strong> seleziona il primo <em><p></em>.</li>
</ul>
<p>Generalmente, le <strong>classi</strong> e gli <strong>ID</strong> sono ciò che verrà utilizzato maggiormente: le classi quando si vogliono selezionare più elementi e gli id â€‹â€‹quando si vuole selezionarne solo uno.</p>
<h2 id="eventi-jquery">Eventi jQuery</h2>
<p>Nell’esempio “Ciao mondo!”, il codice è stato eseguito non appena la pagina è stata caricata e il documento era pronto, e quindi non richiedeva l’interazione dell’utente. Chiaramente in questo caso, avremmo potuto facilmente scrivere il testo direttamente nell’HTML senza preoccuparci di jQuery.</p>
<p>Tuttavia, dovremo utilizzare jQuery se vogliamo <strong>far apparire il testo sulla pagina con il clic di un pulsante</strong>. Possiamo aggiungere un pulsante al nostro HTML per attivare l’evento.</p>
<pre tabindex="0"><code>&lt;button id=&#34;trigger&#34;&gt;Cliccami!&lt;/button&gt;
&lt;p id=&#34;ciao&#34;&gt;&lt;/p&gt;
</code></pre><p>Ora possiamo usare il metodo <em>click()</em> per inserire il nostro testo “Ciao mondo!”:</p>
<pre tabindex="0"><code>$(&#39;#trigger&#39;).click(function() {
  $(&#39;#ciao&#39;).html(&#39;Ciao mondo!&#39;)
})
</code></pre><p>Salva e aggiorna e se tutto è andato liscio, facendo clic sul pulsante vedrai apparire il testo.</p>
<p>Un elenco completo dei metodi degli eventi jQuery <a href="https://api.jquery.com/category/events/">è disponibile qui</a> . Un <strong>evento</strong> avviene ogni volta che l’utente interagisce con il browser. Abbiamo appena appreso <a href="https://api.jquery.com/click/">click ()</a> , che viene eseguito con un solo clic del mouse.</p>
<p>Di seguito ti lascio una breve panoramica di alcuni dei metodi di eventi più comunemente utilizzati.</p>
<ul>
<li><a href="https://api.jquery.com/hover/">hover ()</a> – <strong>Hover</strong> viene eseguito quando il mouse viene spostato su un elemento. <a href="https://api.jquery.com/mouseenter/">mouseenter ()</a> e <a href="https://api.jquery.com/mouseleave/">mouseleave () si</a> applicano solo al mouse che entra o esce da un elemento, rispettivamente.</li>
<li><a href="https://api.jquery.com/submit/">submit ()</a> – <strong>Submit</strong> viene eseguito quando viene inviato un modulo.</li>
<li><a href="https://api.jquery.com/scroll/">scroll ()</a> – Lo <strong>scorrimento</strong> viene eseguito quando si <a href="https://api.jquery.com/scroll/">scorre</a> lo schermo.</li>
<li><a href="https://api.jquery.com/keydown/">keydown ()</a> – <strong>Keydown</strong> viene eseguito quando si preme un tasto sulla tastiera.</li>
</ul>
<h2 id="effetti-jquery">Effetti jQuery</h2>
<p><a href="https://api.jquery.com/category/effects/">Gli effetti jQuery</a> lavorano di pari passo con gli eventi consentendo di aggiungere facilmente animazioni e manipolare in altro modo gli elementi della pagina.</p>
<p>Faremo un esempio in cui <strong>apriamo e chiudiamo un overlay / popup modale.</strong> Mentre potremmo usare <strong>due id</strong>: uno per aprire la modal e un altro per chiuderla. Utilizzeremo una classe per aprire e chiudere facilmente la modal con la stessa funzione.</p>
<p><strong>index.html</strong></p>
<pre tabindex="0"><code>&lt;button class=&#34;trigger&#34;&gt;Apri&lt;/button&gt;

&lt;section class=&#34;overlay&#34;&gt;
  &lt;button class=&#34;trigger&#34;&gt;Chiudi&lt;/button&gt;
&lt;/section&gt;
</code></pre><p>Useremo una minima quantità di CSS per nascondere il <em>overlay</em> con <em>display: none</em> e centrarlo sullo schermo.</p>
<p><strong>style.css</strong></p>
<pre tabindex="0"><code>.overlay {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 200px;
  width: 200px;
  background: gray;
}
</code></pre><p>Infine, useremo il metodo <em>toggle()</em>, che commuterà la proprietà  <em>display</em> CSS tra <em>none</em> e <em>block</em>, nascondendo e mostrando l’overlay quando si fa clic.</p>
<pre tabindex="0"><code>$(&#39;.trigger&#39;).click(function() {
  $(&#39;.overlay&#39;).toggle()
})
</code></pre><p>Ora potrai <strong>attivare / disattivare la visibilità del modale facendo clic sui pulsanti.</strong></p>
<p>Puoi anche provare a modificare <em>toggle()</em> per <em>fadeToggle()</em> o <em>slideToggle()</em> per vedere un paio di altri effetti incorporati jQuery.</p>
<p>Di seguito una breve panoramica di alcuni dei metodi di effetto più comunemente usati.</p>
<ul>
<li><a href="https://api.jquery.com/toggle/">toggle ()</a> – <strong>Attiva</strong> / <strong>disattiva</strong> la visibilità di uno o più elementi. <a href="https://api.jquery.com/show/">show ()</a> e <a href="https://api.jquery.com/hide/">hide ()</a> sono gli effetti unidirezionali correlati.</li>
<li><a href="https://api.jquery.com/fadetoggle/">fadeToggle ()</a> – <strong>Fade Toggle</strong> attiva / <strong>disattiva</strong> la visibilità e anima l’opacità di uno o più elementi. <a href="https://api.jquery.com/fadein/">fadeIn ()</a> e <a href="https://api.jquery.com/fadeout/">fadeOut ()</a> sono i relativi effetti unidirezionali.</li>
<li><a href="https://api.jquery.com/slidetoggle/">slideToggle ()</a> – <strong>Slide Toggle</strong> attiva o <strong>disattiva</strong> la visibilità di uno o più elementi con un effetto scorrevole. <a href="https://api.jquery.com/slidedown/">slideDown ()</a> e <a href="https://api.jquery.com/slideup">slideup ()</a> sono i relativi effetti unidirezionali.</li>
<li><a href="https://api.jquery.com/animate/">animate ()</a> – <strong>Animate</strong> esegue effetti di animazione personalizzati sulla proprietà CSS di un elemento.</li>
</ul>
<h2 id="conclusione">Conclusione</h2>
<p>Ora che hai imparato le basi di JQuery puoi <strong>sbizzarrirti</strong> e provare a realizzare gli effetti che vuoi!</p>
<p>Prova quindi a <strong>creare qualche effetto</strong> all’hover del mouse, al click, allo scroll, andando a modificare le <strong>classi CSS</strong> come il colore, lo sfondo o anche l’immagine!</p>
<p><strong>Con JQuery si può fare veramente di tutto</strong>, basta mettersi sotto e studiare un pochino!</p>
<p>Ora che hai capito le basi dei linguaggi <strong>front-end</strong> è ora di dedicare un po’ di tempo anche al <strong>linguaggio principale di WordPress:</strong></p>
<p><em><a href="/blog/le-basi-di-bootstrap/">&laquo; Le basi di Bootstrap</a></em></p>
<p><em><a href="/blog/le-basi-di-php/">Le basi di PHP &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>6. Le basi di PHP</title>
			<link>https://albertoreineri.it/blog/le-basi-di-php/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-basi-di-php/</guid>
			<description>PHP è uno dei linguaggi di programmazione più utilizzati al mondo in ambito web.
Moltissime grandi aziende lo utilizzano per i loro progetti, tra cui
Facebook Wikipedia Yahoo Mailchimp Slack Dailymotion Etsy Fra queste c’è anche Automattic, l’azienda che ha realizzato e gestisce WordPress.
Il nostro CMS è infatti realizzato utilizzando il PHP.
Come per ogni Framework è sempre bene conoscere, almeno in linea generale, il linugaggio su cui è costruito.</description>
			<content type="html"><![CDATA[<p><strong>PHP</strong> è uno dei linguaggi di programmazione <strong>più utilizzati al mondo</strong> in ambito web.</p>
<p>Moltissime <strong>grandi aziende</strong> lo utilizzano per i loro progetti, tra cui</p>
<ul>
<li>Facebook</li>
<li>Wikipedia</li>
<li>Yahoo</li>
<li>Mailchimp</li>
<li>Slack</li>
<li>Dailymotion</li>
<li>Etsy</li>
</ul>
<p>Fra queste c’è anche Automattic, l’azienda che ha realizzato e gestisce <strong>WordPress</strong>.</p>
<p>Il nostro <strong>CMS</strong> è infatti realizzato utilizzando il <strong>PHP</strong>.</p>
<p>Come per ogni Framework è sempre bene conoscere, almeno in linea generale, il linugaggio su cui è costruito. In questo caso a noi interessa <strong>WordPress</strong>, perciò <strong>è bene sapere un po’ di PHP</strong> per riuscire a comprenderlo a fondo.</p>
<p>Vediamo quindi <strong>come funziona il PHP</strong></p>
<h2 id="il-php">Il PHP</h2>
<p>Il php è un linguaggio <strong>lato server,</strong> cioè non può funzionare semplicemente sul browser, come avviene per HTML, CSS e Javascript, ma <strong>ha bisogno di un server</strong> per poter funzionare.</p>
<p>La particolarità del PHP è che <strong>può essere eseguito all’interno delle pagine HTML,</strong> può essere inserito direttamente in mezzo ai vari tag html.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>&lt;html&gt;
   &lt;head&gt;&lt;/head&gt;
   &lt;body&gt;
      &lt;?php echo &#34;CIAO&#34;; ?&gt;
   &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>In questo caso puoi notare come <strong>il PHP sia inserito direttamente nel body della pagina HTML.</strong></p>
<p>Questo rende il suo utilizzo molto <strong>semplice</strong> ed immediato.</p>
<h3 id="server-locale">Server locale</h3>
<p>Per poter iniziare a utilizzare PHP sul nostro computer dobbiamo <strong>utilizzare un server locale.</strong></p>
<p>Come già detto prima, se HTML, CSS e Javascript possono girare nel browser, il PHP ha bisogno di un server.</p>
<p>Esistono molti server locali. In questa guida utilizzeremo <a href="/blog/come-funziona-xampp/">XAMPP</a>, perché è semplice e disponibile per tutti i sistemi operativi.</p>
<p>Se vuoi sapere come installare XAMPP guarda <a href="/blog/come-funziona-xampp/">qui</a>.</p>
<h3 id="sintassi-di-base">Sintassi di base</h3>
<p>Come già detto il PHP viene eseguito nelle pagine HTML, ma occorre <strong>separare ciò che è PHP da ciò che non lo è.</strong></p>
<p>Il codice PHP va inserito all’interno di questi tag: <code>&lt;?php</code> e <code>?&gt;</code></p>
<pre tabindex="0"><code>&lt;?php
    //Codice php
?&gt;
</code></pre><p>Tutto ciò inserito fra questi tag sarà php, il resto sarà HTML.</p>
<h3 id="fine-riga">Fine riga</h3>
<p>Come per il Javascript, anche il PHP necessita del <strong>punto e virgola</strong> alla fine di ogni riga, per poter capire dove termina una regola e ne inizia un’altra. Ricordati perciò semprio di inserire il punto e virgola dopo ogni riga</p>
<pre tabindex="0"><code>echo &#34;CIAO&#34;;
</code></pre><h3 id="commenti">Commenti</h3>
<p>I commenti possono essere di <strong>due tipi:</strong></p>
<p><strong>Una riga:</strong> Se si vuole commentare l’intera riga basta inserire un <strong>doppio slash</strong> all’inizio della riga</p>
<pre tabindex="0"><code>// Commento di una riga
</code></pre><p><strong>Più righe:</strong> Per commentare più righe occorre utilizzare <strong><em>/* commento */.</em></strong></p>
<pre tabindex="0"><code>/* Commento su
più righe
Commento
Commento*/
</code></pre><h3 id="variabili">Variabili</h3>
<p>Le variabili in PHP sono precedute da <strong>$</strong>, in questo modo:</p>
<pre tabindex="0"><code>$saluto = &#34;CIAO&#34;;
echo $saluto;
</code></pre><p><strong>Iniziamo!</strong></p>
<p>Per prima cosa andando nella cartella <strong>htdocs</strong> di XAMPP e creando una nuova cartella “<strong>php_test</strong>“.</p>
<h2 id="stampare-testo-in-html">Stampare testo in HTML</h2>
<p>Iniziamo con un semplice esercizio: stampiamo il classico “<strong>Ciao mondo!</strong>” su una pagina HTML.</p>
<p>Creiamo un file <strong>“index.php</strong>” e apriamolo con <strong>VS Code.</strong></p>
<p>Ora possiamo premere <strong>Punto esclamativo</strong> seguito da <strong>tab</strong>, in questo modo <strong>VS Code</strong> ci fornirà lo <strong>scheletro</strong> html di base.</p>
<p>Ora procediamo a <strong>stampare la nostra scritta.</strong></p>
<p>La funzione PHP per stampare del testo è <strong>echo();</strong></p>
<p>Scriviamo quindi questo nel body:</p>
<pre tabindex="0"><code>&lt;?php
   echo(&#34;Ciao mondo!&#34;);
?&gt;
</code></pre><p>Ora <strong>salviamo</strong>, apriamo il browser e <strong>andiamo a questo link:</strong></p>
<p><a href="http://localhost/php_test">http://localhost/php_test</a></p>
<p>Se tutto è andato liscio dovremmo vedere scritto “<strong>Ciao mondo!</strong>“.</p>
<p><strong>Perfetto</strong>! Hai iniziato ad usare il PHP. Ma ora andiamo un po’ più a fondo.</p>
<h2 id="variabili-1">Variabili</h2>
<p>In php possiamo <strong>definire una variabile</strong> con questa sintassi:</p>
<pre tabindex="0"><code>$x = 1;
$y = &#34;ciao&#34;;
$z = True;
</code></pre><p>Abbiamo appena definito una variabile denominata <em>x</em> con il numero 1, una variabile denominata <em>y</em> con la stringa “ciao” e un nome variabile <em>z</em> con il valore booleano True. Una volta definiti, possiamo usarli nel codice.</p>
<p>PHP ha molti tipi di variabili, ma i tipi di variabili più basilari sono numeri interi (numeri interi), float (numeri decimali), stringhe e valori booleani.</p>
<p>PHP può utilizzare anche <strong>array</strong> e oggetti che spiegheremo più avanti.</p>
<p>Le variabili possono anche essere impostate su <strong>NULL</strong>, il che significa che le variabili esistono, ma non contengono alcun valore.</p>
<h2 id="operatori-aritmetici">Operatori aritmetici</h2>
<p>Possiamo usare semplici operatori aritmetici per <strong>aggiungere</strong>, <strong>sottrarre</strong> o <strong>concatenare</strong> le variabili.</p>
<p>Possiamo anche <strong>stampare</strong> le variabili PHP usando il comando <em>echo</em> (come abbiamo visto poco fa).</p>
<p>Proviamo per esempio a sommare due numeri, inserire il risultato in una nuova variabile e stamparla.</p>
<pre tabindex="0"><code>$x = 1;
$y = 2;
$somma = $x + $y;
echo $somma;       // Stampa 3
</code></pre><h2 id="concatenare-stringhe">Concatenare stringhe</h2>
<p>In PHP è possibile concatenare variabili e stringhe utilizzando il pungo (<em>.</em>), in questo modo:</p>
<pre tabindex="0"><code>$anni = 30;
$nome = &#34;Marco&#34;;
echo $nome . &#34; ha &#34; . $anni . &#34; anni!&#34;;
</code></pre><h2 id="stringhe">Stringhe</h2>
<p>Le stringhe sono <strong>variabili che contengono testo</strong>. Ad esempio, una stringa che contiene un nome è definita come segue:</p>
<pre tabindex="0"><code>$nome = &#34;Marco&#34;;
echo $nome;
</code></pre><p>Possiamo <strong>formattare facilmente le stringhe usando le variabili</strong>. Per esempio:</p>
<pre tabindex="0"><code>$nome = &#34;Marco&#34;;
$frase = &#34;Ciao $nome&#34;;
echo $frase;
</code></pre><p>Possiamo anche <strong>concatenare</strong> le stringhe usando l’ <em>.</em> operatore punto . Per esempio:</p>
<pre tabindex="0"><code>$nome = &#34;Marco&#34;;
$cognome = &#34;Rossi&#34;;
$nome_completo = $nome . &#34; &#34; . $cognome;
echo $nome_completo;
</code></pre><p>Per misurare la <strong>lunghezza</strong> di una stringa, utilizziamo la funzione <em>strlen</em>:</p>
<pre tabindex="0"><code>$string = &#34;Misuriamo quanti caratteri ha questa stringa&#34;;
echo strlen($string);
</code></pre><p>Per tagliare una parte di una stringa e restituirla come nuova stringa, possiamo usare la funzione <em>substr</em>:</p>
<pre tabindex="0"><code>$filename = &#34;image.png&#34;;
$extension = substr($filename, strlen($filename) - 3);
echo &#34;L&#39;estensione di questo file è $extension&#34;;
</code></pre><h2 id="matrici-semplici">Matrici semplici</h2>
<p>Le matrici sono un tipo speciale di v<strong>ariabile che può contenere molte variabili</strong> e tenerle in un elenco.</p>
<p>Ad esempio, supponiamo di voler creare un elenco di tutti i numeri dispari tra 1 e 10. Una volta creato l’elenco, possiamo assegnare nuove variabili che faranno riferimento a una variabile nell’array, utilizzando l’indice della variabile.</p>
<p>Per utilizzare la prima variabile nell’elenco (in questo caso il numero 1), dovremo fornire <strong>il primo indice</strong>, che è <strong>0</strong>, poiché PHP utilizza indici basati su zero, come quasi tutti i linguaggi di programmazione oggi.</p>
<pre tabindex="0"><code>$numeri_dispari = [1,3,5,7,9];
$primo_numero_dispari = $numeri_dispari[0];
$secondo_numero_dispari = $numeri_dispari[1];

echo &#34;Il primo numero dispari è $primo_numero_dispari\n&#34;;
echo &#34;Il secondo numero dispari è $secondo_numero_dispari\n&#34;;
</code></pre><p>Ora possiamo aggiungere nuove variabili usando un indice. Per aggiungere un elemento alla fine dell’elenco, possiamo assegnare l’array con l’indice 5 (la sesta variabile):</p>
<pre tabindex="0"><code>$numeri_dispari = [1,3,5,7,9];
$numeri_dispari[5] = 11;
print_r($numeri_dispari);
</code></pre><h2 id="loop">Loop</h2>
<p>I loop ci aiutano a scorrere su una variabile utilizzando un indice. Esistono <strong>due tipi di loop</strong>: <strong>semplice</strong> (stile C) e un loop <strong>foreach</strong>.</p>
<h3 id="loop-semplice">Loop semplice</h3>
<p>I loop sono molto utili quando dobbiamo <strong>scorrere su un array e fare riferimento al membro dell’array usando un indice che cambia</strong>. Ad esempio, supponiamo di avere un elenco di numeri dispari. Per stamparli, dobbiamo fare riferimento a ciascun articolo singolarmente. Il codice che scriviamo nel ciclo for può usare l’indice <em>i</em>, che cambia in ogni iterazione del ciclo for.</p>
<pre tabindex="0"><code>$numeri = [1,3,5,7,9];
for ($i = 0; $i &lt; count($numeri); $i=$i+1) {
    $numero = $numeri[$i];
    echo $numero . &#34;\n&#34;;
}
</code></pre><p><strong>La prima riga del ciclo for definisce 3 parti:</strong></p>
<ul>
<li>La dichiarazione di inizializzazione – nel nostro caso, inizializziamo la variabile <em>$i</em> su 0.</li>
<li>L’istruzione condizionale – questa istruzione viene valutata in ogni ciclo. Il loop si interrompe quando questa condizione non è soddisfatta. Questo accadrà quando la variabile <em>$i</em> sarà più grande della lunghezza dell’array.</li>
<li>L’istruzione incrementale: questa istruzione viene eseguita ogni volta per aumentare la variabile indice della quantità necessaria. Di solito aumenteremo <em>$i</em> di 1. Esistono anche due modi più brevi per aumentare una variabile di 1. </li>
</ul>
<h3 id="ciclo-foreach">Ciclo foreach</h3>
<p>Il ciclo <strong>foreach</strong> esegue il loop su un elemento come una matrice o un oggetto, fornendo i membri in una specifica variabile uno alla volta.</p>
<p>Ad esempio, supponiamo di voler creare un elenco di tutti i numeri dispari tra 1 e 10 e stamparli uno per uno, come nell’esempio precedente. Questa volta, useremo il <em>foreach</em>   invece di un <em>for</em>  regolare con una variabile. Invece di utilizzare la variabile come indice dell’array, otteniamo l’elemento dall’array direttamente nella variabile <em>$numeri_dispari</em> .</p>
<pre tabindex="0"><code>$numeri_dispari = [1,3,5,7,9];
foreach ($numeri_dispari as $numero) {
  echo $numero . &#34;\n&#34;;
}
</code></pre><h2 id="ciclo-di-while">Ciclo di While</h2>
<p>I cicli <strong>While</strong> sono semplici blocchi che vengono eseguiti ripetutamente fino a quando non viene soddisfatta la condizione del ciclo while.</p>
<p>Ecco un esempio di un ciclo che viene eseguito per un totale di 10 volte:</p>
<pre tabindex="0"><code>$counter = 0;

while ($counter &lt; 10) {
    $counter += 1;
    echo &#34;Funzione eseguita $counter\n volte.&lt;br&gt;&#34;;
}
</code></pre><h2 id="funzioni">funzioni</h2>
<p>Le funzioni sono semplici <strong>blocchi di codice che possiamo chiamare da qualsiasi luogo</strong>. Ad esempio, possiamo creare una funzione che somma un elenco di numeri e restituisce il risultato. Chiamiamo questa funzione <em>somma</em>.</p>
<p>Una funzione riceve un elenco di argomenti separati da virgole. Ogni argomento esiste solo nel contesto della funzione, nel senso che diventano variabili all’interno del blocco funzione, ma non sono definiti al di fuori di quel blocco funzione.</p>
<pre tabindex="0"><code>// Definiamo una funzione chiamata &#34;somma&#34; che farà la somma di una lista di numeri
function somma($numeri) {
    // inizializziamo la variabile somma
    $somma = 0;

    // Sommiamo i numero
    foreach ($numeri as $numero) {
        $somma += $numero;
    }

    // restituiamo la somma
    return $somma;
}

// Esempio di utilizzo della funzione
echo somma([1,2,3,4,5,6,7,8,9,10]);
</code></pre><p>In questo caso abbiamo la funzione “<em><strong>somma</strong></em>” che sommerà tutti i numeri che passeremo al loro interno.</p>
<p><strong>Richiamiamo</strong> quindi la funzione in un <em>echo</em>, in questo modo stamperemo la somma dei numeri inseriti nel’array dentro la funzione.</p>
<p>Come per ogni cosa il metodo migliore è sempre quello di <strong>provare, provare e riprovare!</strong></p>
<p><strong>Prenditi quindi il tuo tempo</strong> e prova a smanettare un po’ con le funzioni che hai imparato qui sopra!</p>
<p>Il PHP consente di fare ben altre cose, ma <strong>per iniziare con WordPress questo può bastare!</strong></p>
<p><strong>Quando ti senti pronto prova</strong> adare un’occhiata alle nostre guide per <strong><a href="/blog/creare-un-tema-wordpress-da-zero-parte-1/">creare un tema WordPress da zero</a></strong>, così potra imettere in pratica quello che hai imparato</p>
<p><em><a href="/blog/le-basi-di-jquery/">&laquo; Le basi di jQuery</a></em></p>
]]></content>
		</item>
		
	</channel>
</rss>
