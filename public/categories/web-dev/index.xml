<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Web Dev on Alberto Reineri</title>
		<link>https://albertoreineri.it/categories/web-dev/</link>
		<description>Recent content in Web Dev on Alberto Reineri</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>it</language>
		<lastBuildDate>Sat, 20 Jan 2024 05:00:00 +0000</lastBuildDate>
		<atom:link href="https://albertoreineri.it/categories/web-dev/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Nuovo Sito Sperimentale</title>
			<link>https://albertoreineri.it/blog/nuovo-sito-sperimentale/</link>
			<pubDate>Sat, 20 Jan 2024 05:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/nuovo-sito-sperimentale/</guid>
			<description>Vi presento il mio nuovo Sito Web!!!
Lo so, potrebbe sembrare poco convenzionale. Non c&amp;rsquo;è l&amp;rsquo;effetto WOW che ci si aspetterebbe, almeno non sotto forma di animazioni sgargianti o stravaganti. È un sito semplice, basato principalmente sul testo. Potrebbe sembrare che non segua del tutto le regole di Google, ma in realtà c&amp;rsquo;è di più di quanto si possa vedere a prima vista.
Perché un Sito così poco SEO friendly Ho deciso di fare un cambio radicale!</description>
			<content type="html"><![CDATA[<p>Vi presento il mio nuovo Sito Web!!!</p>
<p>Lo so, potrebbe sembrare poco convenzionale. <strong>Non c&rsquo;è l&rsquo;effetto WOW</strong> che ci si aspetterebbe, almeno non sotto forma di animazioni sgargianti o stravaganti. È un sito semplice, basato principalmente sul testo. Potrebbe sembrare che <strong>non segua del tutto le regole di Google</strong>, ma in realtà c&rsquo;è di più di quanto si possa vedere a prima vista.</p>
<h2 id="perché-un-sito-così-poco-seo-friendly">Perché un Sito così poco SEO friendly</h2>
<p>Ho deciso di fare un cambio radicale! In origine, questo sito era la <strong>vetrina della mia attività da Web Developer Freelance</strong>. In passato, aveva colori vivaci, animazioni ed effetti per dimostrare le mie competenze e attirare nuovi clienti.</p>
<p>Al momento fortunatamente non ho più bisogno di <em>mettermi in mostra</em> così tanto. Questo per varie ragioni:</p>
<h3 id="non-ho-necessità-economiche-di-trovare-nuovi-clienti">Non ho necessità economiche di trovare nuovi clienti</h3>
<p>Al momento mi trovo in una situazione di equilibrio piuttosto stabile (<em>per quanto può essere stabile una partita IVA&hellip;</em>).
Ho delle collaborazioni a lungo termine soddisfacenti e riempio le mie giornate con la programmazione.
Accetto sempre volentieri nuovi clienti e nuovi progetti su cui lavorare, anche se recentemente mi è capitato di dover rinunciare e orientare possibili clienti verso altre realtà! Esserndo un Libero Professionista singolo non ho la struttura per ampliarmi all&rsquo;infinito, e sinceramente non voglio crearla al momento. Per ora mi accontento di rimanere da solo.
Questo comporta però che debba rinunciare a qualche lavoro. Le giornate hanno un numero limitato di ore e anche la mia testa ha un numero limitato di progetti che è in grado di gestire, quindi per ora posso dire di essere saturo.</p>
<p>Forse fra qualche anno mi aprirò a nuove possibilità, oppure salderò ancora di più le collaborazioni attuali e chiuderò con il freelancing&hellip; Chi lo sa&hellip; Staremo a vedere come evolvono le cose! È inutile guardare troppo in là, il mondo è in continuo cambiamento e bisogna essere sempre pronti a cambiare!</p>
<h3 id="voglio-un-sito-che-mi-rappresenti">Voglio un sito che mi rappresenti</h3>
<p>Il mio sito deve essere prima di tutto <strong>mio</strong>! Può sembrare scontato, ma oggi per <em>attrarre</em> il pubblico devi apparire figo, moderno, vivace, gioioso e chi più ne ha più ne metta!
In passato l&rsquo;ho fatto perché era necessario, ma in realtà io non sono così&hellip;
Sono una persona piuttosto seria, calma e pacata. Amo il silenzio e la quiete, non amo le cose troppo sgargianti&hellip;</p>
<p>Non mi definirei inquadrato, ho sempre portato i capelli lunghi, vesto sportivo e sono abbastanza liberale, ma tendo a prendere le cose sul serio, forse fin troppo.</p>
<h3 id="vetrina">Vetrina</h3>
<p>Questo sito quindi non è più la mia vetrina, o per meglio dire il suo essere vetrina non è più un fattore centrale.
Per ora sono ancora attive le pagine promozionali <a href="/servizi">Servizi</a> e <a href="/portfolio">Portfolio</a>, ma non escludo la possibilità di eliminarle in futuro e mantenere solamente il blog.
Inoltre ho in mente di creare anche una sezione Extra, dove inserire ciò che faccio al di fuori del mondo web.</p>
<p>### SEO
In realtà però la SEO è presente eccome in questo sito. I test di LightHouse sono super positivi e mi aspetto che l&rsquo;indicizzazione migliori. È vero che non ci sono immagini, ma i contenuti sono già molto letti e ora i tempi di caricamento sono molto migliorati. Solo il tempo mi dirà se tutto questo può funzionare.</p>
<h3 id="uscire-dai-social">Uscire dai Social</h3>
<p>Come obiettivo a lungo termine vorrei utilizzare questo sito come mia unica presenza online.
Da tempo mi sono stufato dei social network. Stanno diventando sempre più invasivi e ogni volta che penso a cosa portano della mia vita sono più le cose che mi tolgono rispetto a ciò che mi danno, perciò vorrei uscirne del tutto a breve.
Sono costretto a mantenerli attivi perché mi capita di usarli per lavoro, ma spero di poterli chiudere a breve e essere presente online solo attraverso questo sito.
Se succederà creerò anche una sezione &ldquo;Extra&rdquo; dove raccogliere qualche mia curiosità al di fuori della programmazione.</p>
<h2 id="come-funziona-questo-sito">Come funziona questo Sito</h2>
<p>Inizio col dire che questo sito è sviluppato con Hugo, un framework open source per la creazione di siti statici. Questo mi permette di poterlo gestire completamente tramite GitHub. Ho quindi rinunciato al mio dominio personale e sto utilizzando <a href="https://albertoreineri.github.io/">albertoreineri.github.io</a>. L&rsquo;unica cosa a cui ho dovuto rinunciare è la mail associata al mio dominio personale, perciò uso gmail. Questo negli anni non è mai stato un problema per i miei clienti e mi solleva dalla gestione di dominio, dns e server per questo sito. Un bel lavoro in meno per me!</p>
<p>Ma come funziona questo sito così particolare? Bé in realtà no è difficile&hellip;
La cosa principale è che la navbar è spostata in basso, non in alto come in tutti i siti. Questo per rendere il sito più comodo nell&rsquo;utilizzo, più in stile app. Se lo apri da mobile puoi utilizzare la navbar semplicemente col pollice senza stirarlo fino al top dello schermo, ma cliccando comodamente in basso.</p>
<p>Questo sito è orientato a una piacevole esperienza della lettura. Per questo esiste solo la modalità scura. Leggere testo bianco su sfondo scuro è più rilassante per gli occhi e <em>stressa</em> meno la mente.
Inoltre la struttura presenta il solo testo senza sidebar o altro. Talvolta è presente l&rsquo;indice dei contenuti sulla destra, sempre per migliorare la lettura del contenuto.
Infine allo scroll la navbar sparisce del tutto e il testo diventa l&rsquo;unica cosa presente in pagina, per garantire l&rsquo;esperienza di lettura migliore possibile.</p>
<p>Scrollando verso l&rsquo;alto o raggiungendo il fondo della pagina la navbar tornerà visibile e si potrà cambiare pagina.</p>
<p>Come features aggiuntive c&rsquo;è la possibiltà di effettuare la ricerca nei contenuti del sito e il multilingua, che è ancora in fase di sviluppo ma sarà online a breve.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Questo è il mio nuovo sito. Non so quanto durerà! Come sviluppatore web, sono sempre alla ricerca di nuove sfide, e il modo migliore per capire una tecnologia è provarla direttamente. Potrebbe essere completamente diverso fra due mesi, o potrei rimanere fedele a questo approccio per anni.</p>
<p>In ogni caso vi terrò informati in questo blog!</p>
<p>A presto!</p>
<p><em>Alberto</em></p>
]]></content>
		</item>
		
		<item>
			<title>Le 9 migliori estensioni di Visual Studio Code</title>
			<link>https://albertoreineri.it/blog/le-9-migliori-estensioni-di-visual-studio-code/</link>
			<pubDate>Sun, 29 Oct 2023 09:12:22 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-9-migliori-estensioni-di-visual-studio-code/</guid>
			<description>Visual Studio Code (VS Code) è diventato uno degli editor di codice più popolari tra gli sviluppatori grazie alla sua flessibilità e alla vasta gamma di estensioni disponibili. Le estensioni di VS Code offrono funzionalità aggiuntive che possono migliorare significativamente il flusso di lavoro di uno sviluppatore. In questo articolo, esploreremo le 10 migliori estensioni di Visual Studio Code che ti aiuteranno a potenziare il tuo ambiente di sviluppo e renderanno la tua esperienza di programmazione ancora più efficiente e produttiva.</description>
			<content type="html"><![CDATA[<p>Visual Studio Code (VS Code) è diventato uno degli editor di codice più popolari tra gli sviluppatori grazie alla sua flessibilità e alla vasta gamma di estensioni disponibili. Le estensioni di VS Code offrono funzionalità aggiuntive che possono migliorare significativamente il flusso di lavoro di uno sviluppatore. In questo articolo, esploreremo le 10 migliori estensioni di Visual Studio Code che ti aiuteranno a potenziare il tuo ambiente di sviluppo e renderanno la tua esperienza di programmazione ancora più efficiente e produttiva.</p>
<h2 id="eslint">ESLint</h2>
<p>ESLint è un alleato fondamentale per ogni sviluppatore che cerca di scrivere codice JavaScript pulito e senza errori. Questa potente estensione per Visual Studio Code integra perfettamente ESLint nel tuo ambiente di sviluppo, offrendoti suggerimenti e avvertimenti in tempo reale mentre scrivi il tuo codice. Con ESLint, puoi mantenere uno standard di codifica uniforme, individuare e correggere errori comuni, migliorare la qualità del tuo software e risparmiare tempo prezioso nella fase di debug. Non compromettere la qualità del tuo codice JavaScript: installa ESLint for Visual Studio Code oggi e semplifica il processo di scrittura del codice pulito e senza errori.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">Link »</a></p>
<h2 id="bracket-pair-colorizer">Bracket Pair Colorizer</h2>
<p>Il codice ben strutturato è la chiave per una programmazione efficiente, e l&rsquo;estensione “Bracket Pair Colorizer” per Visual Studio Code è il tuo compagno ideale per mantenere il tuo codice organizzato e facilmente leggibile. Questa estensione attribuisce colori distinti e intuitivi alle coppie di parentesi, parentesi graffe e parentesi quadre nel tuo codice, rendendo semplice la visualizzazione delle relazioni tra parentesi aperte e chiuse. Non perderai mai più il filo della tua struttura di codice, eliminando errori di parentesizzazione e semplificando il debug. Con “Bracket Pair Colorizer”, puoi concentrarti sulla scrittura del codice senza preoccuparti di errori di formattazione o parentesizzazione. Rendi la tua esperienza di sviluppo più efficiente e visivamente chiara: installa Bracket Pair Colorizer oggi e porta un tocco di colore all&rsquo;organizzazione del tuo codice.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2">Link »</a></p>
<h2 id="prettier">Prettier</h2>
<p>La coerenza nella formattazione del codice è fondamentale per una collaborazione efficace e per mantenere il tuo progetto organizzato. L&rsquo;estensione “Prettier” per Visual Studio Code è uno strumento indispensabile per garantire che il tuo codice JavaScript, TypeScript, HTML, CSS e molte altre lingue sia sempre formattato in modo impeccabile. Prettier si integra perfettamente nel tuo flusso di lavoro, applicando automaticamente le regole di formattazione predefinite o personalizzate al tuo codice con un semplice clic o al salvataggio del file. Con Prettier, dimenticati delle lunghe discussioni sulla formattazione del codice in team di sviluppo e concentrati sulla scrittura di codice di alta qualità. Installa Prettier – Code Formatter oggi e scopri come rendere la formattazione del codice un processo senza sforzo e uniforme in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode">Link »</a></p>
<h2 id="gitlens">GitLens</h2>
<p>Se sei un appassionato di Git e desideri massimizzare la tua produttività nello sviluppo software, l&rsquo;estensione “GitLens” per Visual Studio Code è uno strumento che non puoi permetterti di non avere. GitLens porta la potenza e la trasparenza di Git direttamente nel tuo ambiente di sviluppo. Questa estensione mette in evidenza chiaramente le informazioni chiave su ogni riga di codice: chi ha apportato le modifiche, quando sono state apportate e persino il perché delle modifiche con annotazioni Git Blame e commit.</p>
<p>Con GitLens, puoi esplorare la cronologia del tuo progetto con facilità, confrontare rami, recuperare facilmente le versioni precedenti e molto altro. La tua comprensione del flusso di lavoro Git diventerà più profonda, il che si tradurrà in una maggiore efficienza nello sviluppo e una migliore collaborazione nel team. Se vuoi portare la gestione del tuo codice al livello successivo, non cercare oltre: installa GitLens oggi e scopri come questa estensione può rendere il controllo di versione con Git più potente e accessibile che mai direttamente in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens">Link »</a></p>
<h2 id="live-server">Live Server</h2>
<p>“Live Server” è l&rsquo;alleato perfetto per ogni sviluppatore web che cerca di semplificare e migliorare il processo di sviluppo front-end. Questa estensione per Visual Studio Code ti offre la capacità di avviare un server web locale direttamente dalla tua area di lavoro, trasformando il tuo ambiente di sviluppo in un&rsquo;esperienza dinamica e interattiva.</p>
<p>Con “Live Server,” puoi visualizzare istantaneamente le modifiche apportate al tuo codice HTML, CSS o JavaScript nel browser senza la necessità di ricaricare manualmente la pagina. Questo significa che puoi concentrarti sulla scrittura del codice e vedere immediatamente come le tue modifiche influenzano la tua pagina web.</p>
<p>Inoltre, “Live Server” offre funzionalità aggiuntive come il supporto per l&rsquo;autoaggiornamento della pagina, la possibilità di visualizzare il tuo sito web su dispositivi mobili e la gestione intelligente delle porte. Questo rende l&rsquo;estensione un compagno ideale per lo sviluppo web responsivo e il debug.</p>
<p>Se vuoi rendere il tuo flusso di lavoro di sviluppo web più fluido, installa “Live Server” oggi e scopri come questa estensione semplifica il tuo processo di sviluppo, risparmiando tempo prezioso e migliorando la tua efficienza nello sviluppo front-end.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer">Link »</a></p>
<h2 id="material-icon-theme">Material Icon Theme</h2>
<p>Dai un tocco di stile e organizzazione visiva al tuo ambiente di sviluppo con l&rsquo;estensione “Material Icon Theme” per Visual Studio Code. Questa estensione trasforma le iconografie standard dei file e delle cartelle in icone vivaci e ben progettate basate sul popolare design “Material Design” di Google.</p>
<p>Con “Material Icon Theme,” puoi immediatamente identificare il tipo di file o cartella che stai cercando grazie a un set completo di icone chiaramente riconoscibili. Sia che tu stia lavorando su file JavaScript, HTML, CSS, immagini o documentazione, questa estensione offre un&rsquo;esperienza visiva migliorata che ti aiuta a trovare rapidamente ciò di cui hai bisogno nel tuo progetto.</p>
<p>Inoltre, “Material Icon Theme” è altamente personalizzabile, consentendoti di scegliere tra diverse varianti di icone e regolare le impostazioni per adattarle al tuo stile personale. È un modo semplice ma potente per migliorare l&rsquo;aspetto del tuo ambiente di sviluppo e renderlo più intuitivo e accattivante.</p>
<p>Se desideri una visione fresca e moderna del tuo spazio di lavoro in Visual Studio Code, installa “Material Icon Theme” oggi e scopri come questa estensione può rendere il tuo ambiente di sviluppo più esteticamente piacevole e funzionale.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme">Link »</a></p>
<h2 id="debugger-for-chrome">Debugger for Chrome</h2>
<p>Porta il debugging del tuo codice JavaScript e TypeScript a un nuovo livello di precisione e controllo con l&rsquo;estensione “Debugger for Chrome” per Visual Studio Code. Questa potente estensione ti permette di connettere il tuo ambiente di sviluppo direttamente al browser Google Chrome, aprendo le porte per il debugging interattivo di applicazioni web front-end.</p>
<p>Con “Debugger for Chrome,” puoi impostare punti di interruzione, eseguire il codice passo dopo passo, esaminare variabili e risolvere errori direttamente dal tuo editor. Questo livello di integrazione tra il tuo ambiente di sviluppo e il browser ti consente di identificare e risolvere i problemi più rapidamente, accelerando il processo di sviluppo.</p>
<p>L&rsquo;estensione supporta funzionalità avanzate come il mapping sorgente, che ti consente di debuggare il codice TypeScript o JavaScript originale anche se viene eseguito in un ambiente diverso da quello di sviluppo. Inoltre, puoi connettere istanze multiple di Chrome contemporaneamente e passare tra di esse senza soluzione di continuità.</p>
<p>Se sei un web developer alla ricerca di un potente strumento per il debugging delle tue applicazioni web, non cercare oltre: installa “Debugger for Chrome” oggi e scopri come questa estensione può migliorare la tua efficienza nello sviluppo front-end, riducendo il tempo trascorso nella ricerca e risoluzione degli errori.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome">Link »</a></p>
<h2 id="auto-rename-tag">Auto Rename Tag</h2>
<p>Semplifica il tuo flusso di lavoro di sviluppo web con l&rsquo;estensione “Auto Rename Tag” per Visual Studio Code. Questo strumento intuitivo e potente ti offre la capacità di rinominare automaticamente le etichette HTML e XML mentre lavori sul tuo codice, evitando così errori di tag errati o inconsistenze.</p>
<p>Con “Auto Rename Tag,” quando rinomini un tag di apertura o chiusura in un documento HTML o XML, l&rsquo;estensione si attiva automaticamente e aggiorna in modo coerente l&rsquo;altro tag corrispondente. Questo processo avviene in tempo reale, risparmiandoti il tempo e la fatica necessari per modificare manualmente entrambi i tag. Inoltre, l&rsquo;estensione funziona con una vasta gamma di lingue e framework web, rendendola un compagno ideale per sviluppatori web di tutti i tipi.</p>
<p>Inoltre, “Auto Rename Tag” è altamente personalizzabile, consentendoti di adattare le impostazioni secondo le tue preferenze e abitudini di sviluppo. È un modo semplice per migliorare la coerenza e la precisione del tuo codice HTML e XML, riducendo al minimo gli errori di sintassi e semplificando la manutenzione del tuo progetto.</p>
<p>Se desideri semplificare la tua scrittura di codice HTML e XML e mantenere un flusso di lavoro fluido e senza errori, installa “Auto Rename Tag” oggi e scopri come questa estensione può rendere il tuo sviluppo web più efficiente e accurato in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag">Link »</a></p>
<h2 id="code-spell-checker">Code Spell Checker</h2>
<p>La precisione nel codice è fondamentale, e “Code Spell Checker” per Visual Studio Code è il tuo compagno ideale per garantire che il tuo codice sorgente sia privo di errori di ortografia e grammatica. Questa estensione mette a disposizione un controllo ortografico integrato direttamente nel tuo ambiente di sviluppo, consentendoti di individuare e correggere gli errori di scrittura mentre scrivi il codice.</p>
<p>Con “Code Spell Checker,” le parole scritte in modo errato o non riconosciute vengono evidenziate per l&rsquo;attenzione immediata, e puoi correggerle facilmente con suggerimenti di correzione. Questa estensione supporta una vasta gamma di lingue e dialetti, rendendola adatta per sviluppatori in tutto il mondo.</p>
<p>Inoltre, “Code Spell Checker” è altamente personalizzabile, consentendoti di aggiungere parole personalizzate al dizionario o di escludere specifiche directory o file dal controllo ortografico. Puoi anche scegliere tra diverse lingue e configurare le preferenze di correzione ortografica in base alle tue esigenze.</p>
<p>Se desideri migliorare la qualità del tuo codice e comunicare in modo più chiaro ed efficace, installa “Code Spell Checker” oggi e scopri come questa estensione può contribuire a una scrittura di codice più precisa e priva di errori in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker">Link »</a></p>
<h2 id="conclusione">Conclusione:</h2>
<p>Le estensioni di Visual Studio Code possono davvero trasformare il modo in cui sviluppi il tuo progetto, rendendo l&rsquo;esperienza di programmazione più intuitiva, produttiva e senza intoppi. Le 10 estensioni descritte in questo articolo sono solo alcune delle molte disponibili, ma rappresentano un punto di partenza eccellente per potenziare il tuo ambiente di sviluppo. Scegli quelle che meglio si adattano alle tue esigenze e inizia a sfruttare appieno il potenziale di Visual Studio Code per ottimizzare il tuo flusso di lavoro e raggiungere risultati straordinari nello sviluppo del software.</p>
]]></content>
		</item>
		
		<item>
			<title>8 consigli sulla produttività per sviluppatori e programmatori</title>
			<link>https://albertoreineri.it/blog/8-consigli-sulla-produttivit%C3%A0-per-sviluppatori-e-programmatori/</link>
			<pubDate>Fri, 22 Jul 2022 07:42:48 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/8-consigli-sulla-produttivit%C3%A0-per-sviluppatori-e-programmatori/</guid>
			<description>Non è facile mantenere la produttività da sviluppatori. È un lavoro mentalmente stressante che può esaurire rapidamente la mente e richiede molta attenzione. Capire come puoi concentrarti sul tuo lavoro, prendere scorciatoie usando l&amp;rsquo;automazione e gestire le distrazioni può aiutarti molto a ottenere il massimo dal tuo orario di lavoro. In questa raccolta, puoi trovare i migliori suggerimenti sulla produttività per sviluppatori e programmatori, dalla ricerca dei migliori strumenti per sviluppatori alle pause regolari fino all&amp;rsquo;eliminazione delle distrazioni durante il lavoro.</description>
			<content type="html"><![CDATA[<p>Non è facile mantenere la produttività da sviluppatori. È un lavoro mentalmente stressante che può esaurire rapidamente la mente e richiede molta attenzione. Capire come puoi concentrarti sul tuo lavoro, prendere scorciatoie usando l&rsquo;automazione e gestire le distrazioni può aiutarti molto a ottenere il massimo dal tuo orario di lavoro. In questa raccolta, puoi trovare i migliori suggerimenti sulla produttività per sviluppatori e programmatori, dalla ricerca dei migliori strumenti per sviluppatori alle pause regolari fino all&rsquo;eliminazione delle distrazioni durante il lavoro.</p>
<h3 id="1-trova-il-miglior-editor-di-codice">1. TROVA IL MIGLIOR EDITOR DI CODICE</h3>
<p>La produttività degli sviluppatori inizia con un buon editor di codice. Sebbene ci siano molte ottime opzioni sul mercato, è difficile dire quale sia la migliore: tutto dipende dai tuoi obiettivi e dalle tue esigenze. Vale la pena provare <a href="/blog/5-migliori-editor-di-testo-per-sviluppatori">diversi editor di testo</a> per vedere quale si adatta meglio al tuo flusso di lavoro. Ecco alcune cose importanti da tenere in considerazione:</p>
<ul>
<li>Quale/i linguaggio/i di programmazione stai utilizzando. Hai bisogno di un editor di codice che offra l&rsquo;evidenziazione della sintassi per i linguaggi di cui hai bisogno (almeno come plug-in). Alcuni editor di codice sono inoltre dotati di evidenziatori di sintassi per tecnologie popolari come React, non solo per linguaggi di programmazione.</li>
<li>Se l&rsquo;editor di codice scelto ha un tema adeguato e un ecosistema di plug-in che fornisce le funzionalità di cui hai bisogno (ad esempio, un tema ad alto contrasto se hai problemi di vista).</li>
<li>Se affidi il tuo lavoro a una piattaforma di condivisione del codice, come GitHub o Bitbucket, potresti trovare utile la funzionalità <a href="/blog/come-usare-git/">Git integrata</a>. Ad esempio, Visual Studio Code ti consente di eseguire il commit direttamente del tuo lavoro su GitHub senza uscire dall&rsquo;editor.</li>
<li>Se desideri utilizzare i tuoi frammenti di codice e/o le scorciatoie da tastiera, è anche una buona idea scegliere un editor di codice che ti consenta di aggiungerli o importarli.</li>
</ul>
<h3 id="2-inizia-ogni-giorno-con-il-compito-più-difficile">2. INIZIA OGNI GIORNO CON IL COMPITO PIÙ DIFFICILE</h3>
<p>È facile perdersi nelle attività quotidiane e anche la procrastinazione è un&rsquo;abitudine comune degli sviluppatori, soprattutto se <a href="/10-consigli-per-freelance-e-liberi-professionisti/">lavori come libero professionista</a>e devi gestire le tue scadenze. Pertanto, capita spesso di lavorare tutto il giorno e alla fine della giornata ti rendi conto di aver fatto a malapena qualcosa. Puoi evitarlo se, invece del multitasking, crei una gerarchia di attività quotidiane e inizi con l&rsquo;attività più difficile ogni giorno.</p>
<p>Sebbene il multitasking sia stato visto come una cosa positiva per molti anni, si è scoperto che non è adatto alla maggior parte delle persone. <a href="https://www.forbes.com/sites/lisaquast/2017/02/06/want-to-be-more-productive-stop-multi-tasking">La ricerca ha dimostrato</a> che solo il 2% della popolazione è bravo nel multitasking, mentre il resto può subire una perdita di produttività fino al 40%. Quindi, se sei nel 2% continua con il multitasking, altrimenti dai la priorità alle tue attività e concentrati solo su una cosa alla volta.</p>
<h3 id="3-fai-delle-pause-regolarmente">3. FAI DELLE PAUSE REGOLARMENTE</h3>
<p>Gli esseri umani non possono concentrarsi sulla stessa cosa per un tempo illimitato e questo è particolarmente vero per il duro lavoro mentale della programmazione. Puoi trovare diversi studi sul limite di tempo in cui le persone possono concentrarsi su un&rsquo;attività senza che la loro mente si allontani da qualcos&rsquo;altro. Ad esempio, <a href="http://naturalhealthcare.ca/glossaries.phtml?term=sustained+attention#.XgqCCPx7nIU">questo studio</a> afferma che l&rsquo;attenzione prolungata è possibile per circa 45 minuti, mentre <a href="https://www.theatlantic.com/business/archive/2014/09/science-tells-you-how-many-minutes-should-you-take-a-break-for-work-17/380369/">un altro</a> menziona 52 minuti consecutivi seguiti da una pausa di 17 minuti.</p>
<p>Poi, abbiamo la famosa <a href="https://en.wikipedia.org/wiki/Pomodoro_Technique">Tecnica del Pomodoro</a> che utilizza un timer da cucina a forma di pomodoro per misurare il tempo. Funziona con intervalli di tempo di 25 minuti con pause brevi di 5 minuti e pause lunghe di 10 minuti. La tecnica Pomodoro è diventata così popolare tra la comunità degli sviluppatori che ci sono persino <a href="https://tomato-timer.com/">app Pomodoro</a> che puoi usare mentre lavori.</p>
<p>Tutto sommato, non esiste una regola d&rsquo;oro qui e ognuno ha un limite di tempo diverso, quindi dovrai sperimentare un po&rsquo; per scoprire cosa funziona meglio per te. Inoltre, non vale la pena seguire una regola molto rigida: se sei già nel flusso, non interrompere il tuo lavoro solo perché è arrivato il momento della pausa.</p>
<p>Tuttavia, c&rsquo;è una cosa importante da ricordare. La pausa deve essere una vera pausa quando ti alzi dalla scrivania. Controllare e-mail, notifiche Slack, social media, blog o semplicemente fissare qualsiasi tipo di schermo non conta come una pausa per il tuo cervello: ogni singola ricerca sull&rsquo;argomento lo afferma come un dato di fatto.</p>
<h3 id="4-pianifica-le-tue-attività-in-anticipo">4. PIANIFICA LE TUE ATTIVITÀ IN ANTICIPO</h3>
<p>La pianificazione delle attività in anticipo può anche aumentare notevolmente la produttività. Puoi creare elenchi di attività e controllare le attività completate utilizzando <a href="https://www.developerdrive.com/creating-a-simple-to-do-application-part-1/">To Do app</a> come <a href="https://www.wunderlist.com/">Wunderlist</a> e <a href="https://todoist.com/">Todoist</a> o impostare flussi di lavoro con un&rsquo;app come <a href="https://trello.com/">Trello</a> . Al giorno d&rsquo;oggi, ci sono anche molte fantastiche opzioni che ti consentono di integrare diversi strumenti di produttività, come <a href="https://zapier.com/">Zapier</a> e <a href="https://ifttt.com/">IFTTT</a> (If This Then That).</p>
<p>Con la pianificazione delle attività, dovrai anche condurre alcuni esperimenti e pensare al tipo di strumenti di cui avrai veramente bisogno. Puoi sicuramente utilizzare più di un&rsquo;app per gestire le attività, tuttavia può diventare dispersivo utilizzare troppi strumenti contemporaneamente. In alcuni casi, un&rsquo;eccessiva complessità può persino portare a una perdita di produttività.</p>
<h3 id="5-tieni-traccia-delle-tue-ore-di-lavoro">5. TIENI TRACCIA DELLE TUE ORE DI LAVORO</h3>
<p>Sebbene non a tutti piaccia tenere traccia delle proprie ore di lavoro, utilizzare un&rsquo;app di monitoraggio del tempo può aiutare molto in caso di problemi con la gestione del tempo. Il monitoraggio del tempo può aumentare la tua produttività principalmente perché puoi vedere come hai trascorso le ore durante il giorno in modo da poter escludere possibili distrazioni. I cronometri possono anche essere una manna dal cielo se sei un libero professionista, poiché ti aiutano a fatturare i tuoi clienti su base oraria.</p>
<h3 id="6-automatizza-le-attività-ripetitive">6. AUTOMATIZZA LE ATTIVITÀ RIPETITIVE</h3>
<p>L&rsquo;automazione delle attività ripetitive è un must in questi giorni come sviluppatore. Non è una coincidenza che DevOps (l&rsquo;intersezione di sviluppo e operazioni) sia di gran moda di recente. Non avrai bisogno di molta automazione nella fase di sviluppo, tuttavia, rendere il tuo codice di sviluppo pronto per la produzione comporta molte attività ripetitive.</p>
<p>Ad esempio, come sviluppatore frontend, puoi utilizzare un task runner per eseguire automaticamente attività di routine sul tuo codice, come minimizzazione, ottimizzazione delle immagini e altro. Abbiamo un articolo recente sui <a href="/blog/6-migliori-tool-per-sviluppo-frontend">migliori strumenti di compilazione per sviluppatori frontend</a> , ma ci sono anche molte ottime opzioni per la programmazione backend che vale la pena dare un&rsquo;occhiata.</p>
<h3 id="7-utilizzare-la-riga-di-comando">7. UTILIZZARE LA RIGA DI COMANDO</h3>
<p>Oltre ad automatizzare le attività, è anche una buona idea prendere l&rsquo;abitudine di utilizzare la riga di comando nel flusso di lavoro quotidiano. Innanzitutto, puoi velocizzare notevolmente il tuo flusso di lavoro se utilizzi una CLI (Command Line Interface) invece di una GUI (Graphical User Interface). Ad esempio, ecco un tutorial su come <a href="/blog/usare-la-riga-di-comando-con-wordpress-grazie-a-wp-cli">configurare la CLI di WordPress</a> per accelerare lo sviluppo e la manutenzione di WordPress. In secondo luogo, l&rsquo;uso sicuro dei comandi CLI è un&rsquo;abilità di programmazione importante che puoi utilizzare in molte altre aree del tuo lavoro.</p>
<h3 id="8-elimina-le-distrazioni">8. ELIMINA LE DISTRAZIONI</h3>
<p>Le distrazioni sono il più grande nemico della produttività, quindi è necessario trovare un modo per eliminarle il più possibile. Sfortunatamente, hanno una natura subdola, quindi non è affatto facile catturarli. Ciò è dovuto principalmente al fatto che molte volte non sembrano prima una distrazione.</p>
<p>Ad esempio, controllare la posta elettronica ogni ora, guardare un nuovo tutorial video su YouTube o chattare con i colleghi su Slack possono essere visti come attività legate al lavoro, ma se ci dedichi troppo tempo, potresti scoprire che non hai ottenuto così tanto entro la fine della giornata.</p>
<p>Quindi, devi stare molto attento alle distrazioni e prendere precauzioni ovunque puoi. Ad esempio, puoi decidere di controllare le tue e-mail solo due volte al giorno, disattivare le notifiche Slack mentre lavori o bloccare i siti Web che distraggono frequentemente durante il lavoro.</p>
<h3 id="conclusione">CONCLUSIONE</h3>
<p>Se segui questsi suggerimenti sulla produttività o almeno alcuni di essi, puoi utilizzare il tuo orario di lavoro in modo più efficiente e allo stesso tempo migliorare il tuo flusso di lavoro e di sviluppo. Sebbene prendere una nuova abitudine all&rsquo;inizio possa essere difficile, diventa rapidamente una seconda natura.</p>
<p>Ricorda che la sperimentazione è l&rsquo;elemento chiave della produttività. Se provi una tecnica o uno strumento che non funziona per te, abbandonalo e passa a quello successivo, finché non trovi quello che si adatta meglio al tuo flusso di lavoro e alla tua personalità.</p>
<p>E, se hai bisogno di altri suggerimenti unici per sviluppatori e programmatori, non perdere il nostro articolo su <a href="/blog/come-scegliere-quale-linguaggio-di-programmazione-imparare">come scegliere quale linguaggio di programmazione imparare</a> .</p>
<p>{{- /* This comment removes trailing newlines. */ -}}</p>
]]></content>
		</item>
		
		<item>
			<title>5 migliori editor di testo per sviluppatori</title>
			<link>https://albertoreineri.it/blog/5-migliori-editor-di-testo-per-sviluppatori/</link>
			<pubDate>Mon, 18 Jul 2022 12:37:13 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/5-migliori-editor-di-testo-per-sviluppatori/</guid>
			<description>Gli editor di testo sono probabilmente gli strumenti più importanti degli sviluppatori web. Trovarne uno che si adatti meglio al tuo flusso di lavoro e ai tuoi obiettivi e che abbia tutte le funzionalità di cui hai bisogno può farti risparmiare molto tempo e migliorare notevolmente la qualità del tuo codice.
In questo articolo, ti mostrerò i cinque migliori editor di codice multipiattaforma per sviluppatori web. Tutti funzionano sui tre principali sistemi operativi, Windows, Linux e OS X.</description>
			<content type="html"><![CDATA[<p>Gli editor di testo sono probabilmente gli strumenti più importanti degli sviluppatori web. Trovarne uno che si adatti meglio al tuo flusso di lavoro e ai tuoi obiettivi e che abbia tutte le funzionalità di cui hai bisogno può farti risparmiare molto tempo e migliorare notevolmente la qualità del tuo codice.</p>
<p>In questo articolo, ti mostrerò i cinque migliori editor di codice multipiattaforma per sviluppatori web. Tutti funzionano sui tre principali sistemi operativi, Windows, Linux e OS X. Le funzionalità di cui avrai bisogno dipendono principalmente dal tuo stile di lavoro, dalle attuali conoscenze di coding e dal tipo di lavoro che devi effettuare. Puoi avere un solo editor di riferimento che usi per tutto, ma molti sviluppatori utilizzano editor di codice diversi per eseguire attività diverse.</p>
<p>Ora, vediamo i cinque migliori editor di codice multipiattaforma per sviluppatori web.</p>
<h3 id="1-atom1-figure-classwp-block-image-size-full">1. <a href="https://atom.io/">ATOM</a> <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="420" src="/wp-content/uploads/2022/06/atom.jpeg" alt="" class="wp-image-524" srcset="/wp-content/uploads/2022/06/atom.jpeg 800w, /wp-content/uploads/2022/06/atom-768x403.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Atom è un editor di codice gratuito e open source creato da GitHub. All&rsquo;inizio era l&rsquo;editor di testo interno di GitHub, ma pochi anni dopo (nel 2014) hanno deciso di rilasciarlo al pubblico. Poiché Atom offre agli sviluppatori molte funzionalità avanzate, è diventato rapidamente uno degli editor di codice più popolari.</p>
<p>La sua interfaccia utente è eccezionalmente ben progettata, poiché puoi dividere l&rsquo;interfaccia in diversi riquadri per confrontare facilmente file diversi. Ha molte funzionalità importanti che possono migliorare notevolmente il flusso di lavoro di sviluppo, come un gestore di pacchetti integrato, una funzionalità di completamento automatico intelligente, la navigazione nel file system, una funzione di sostituzione di facile utilizzo e altro ancora.</p>
<p>Atom include anche migliaia di <a href="https://atom.io/packages">pacchetti</a> e <a href="https://atom.io/themes">temi</a> open source , molti dei quali sono creati da sviluppatori di terze parti. Ad esempio, <a href="https://teletype.atom.io/">Teletype</a>, il suo ultimo pacchetto creato dal core team, rende possibile la collaborazione in tempo reale per gli sviluppatori che necessitano di uno strumento affidabile per la programmazione in coppia o il social coding.</p>
<p><strong>Pro:</strong></p>
<ul>
<li>diverse opzioni di personalizzazione</li>
<li>un gestore di pacchetti integrato</li>
<li>pacchetti facili da installare</li>
<li>Git integrazione</li>
<li>open source e gratuito</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>l&rsquo;avvio a volte richiede molto tempo</li>
<li>problemi di prestazioni occasionali (potrebbero rallentare il sistema)</li>
</ul>
<h3 id="2-codice-di-visual-studio5-figure-classwp-block-image-size-full">2. <a href="https://code.visualstudio.com/">CODICE DI VISUAL STUDIO</a> <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="395" src="/wp-content/uploads/2022/06/visual-studio-code.jpeg" alt="" class="wp-image-525" srcset="/wp-content/uploads/2022/06/visual-studio-code.jpeg 800w, /wp-content/uploads/2022/06/visual-studio-code-768x379.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Visual Studio Code è l&rsquo;editor di codice sorgente multipiattaforma di Microsoft che funziona su tutti i principali sistemi operativi. È interessante notare che Visual Studio Code è stato creato sulla base dei componenti open source di Atom, tuttavia Microsoft ha rimosso alcune funzionalità e ne ha aggiunte alcune di nuove. È anche più veloce di Atom, sia all&rsquo;avvio che durante l&rsquo;esecuzione. Visual Studio Code è completamente personalizzabile; puoi trovare molti temi e plugin diversi nel <a href="https://marketplace.visualstudio.com/vscode">market ufficiale</a>. Puoi installarli facilmente dall&rsquo;editor e iniziare a usarli immediatamente.</p>
<p>Visual Studio Code ha molte fantastiche funzionalità che possono migliorare notevolmente il flusso di lavoro di sviluppo. Probabilmente la più notevole è la  funzione di completamento automatico di <em>IntelliSense</em> che fornisce un elenco di suggerimenti intelligenti durante la scrittura del codice. Visual Studio Code ha anche un ottimo debugger integrato che consente di eseguire il debug direttamente dall&rsquo;editor. Inoltre, supporta Git per impostazione predefinita; ha una visuale Git separata in cui puoi eseguire diversi comandi Git.</p>
<p><strong>Pro:</strong></p>
<ul>
<li>market facile da usare e piacevole ecosistema di estensione</li>
<li>integrazione Git integrata</li>
<li>Funzione di completamento automatico di IntelliSense</li>
<li>debugger integrato</li>
<li>altamente personalizzabile</li>
<li>gratuito e open source</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>branding un po&rsquo; confuso (non ha nulla a che fare con Visual Studio)</li>
</ul>
<h3 id="3-brackets7-figure-classwp-block-image-size-full">3. <a href="http://brackets.io/">BRACKETS</a> <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="468" src="/wp-content/uploads/2022/06/brackets.jpeg" alt="" class="wp-image-526" srcset="/wp-content/uploads/2022/06/brackets.jpeg 800w, /wp-content/uploads/2022/06/brackets-768x449.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Brackets è stato creato appositamente per i web designer e gli sviluppatori front-end da Adobe Systems. Può essere l&rsquo;editor di codice sorgente ideale per te se svolgi principalmente lavori di front-end (HTML, CSS, JavaScript). Una delle sue caratteristiche più straordinarie è che ti consente di stabilire una connessione in tempo reale con Google Chrome. Ciò significa che puoi vedere immediatamente le modifiche che stai apportando nel browser.</p>
<p>Sebbene sia possibile dividere l&rsquo;editor in riquadri verticali o orizzontali per eseguire la codifica affiancata, Brackets introduce anche la pratica funzione <em>di modifica in-line</em> . Ad esempio, se selezioni un ID CSS specifico con il cursore, puoi aprire l&rsquo;editor inline premendo le combinazioni di tasti Ctrl + E (su Windows) o Cmd + E (su Mac). Quindi, Brackets ti mostrerà tutti i selettori appartenenti a quell&rsquo;ID all&rsquo;interno di una finestra in linea. Brackets supporta anche Sass e LESS, il che significa che puoi usarli insieme alle funzionalità di modifica in linea e anteprima dal vivo.</p>
<p><strong>Professionisti:</strong></p>
<ul>
<li>supporto del preprocessore</li>
<li>strumenti visivi per lo sviluppo front-end</li>
<li>leggero (solo 40 MB)</li>
<li>si sincronizza con il browser (tramite la funzione Anteprima dal vivo)</li>
<li>open source e gratuito</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>gestione confusa delle estensioni (ad es. nessuna opzione di filtro nel registro)</li>
<li>meno estensioni e temi rispetto ad altri editor di codice</li>
<li>non adatto per lavorare in linguaggi di backend (es. PHP, Python, Ruby o WordPress)</li>
</ul>
<h3 id="4sublime-text8-figure-classwp-block-image-size-full">4.<a href="https://www.sublimetext.com/">SUBLIME TEXT</a> <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="455" src="/wp-content/uploads/2022/06/sublime-text.jpeg" alt="" class="wp-image-527" srcset="/wp-content/uploads/2022/06/sublime-text.jpeg 800w, /wp-content/uploads/2022/06/sublime-text-768x437.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Sublime Text è già alla sua terza versione principale (Sublime Text 3) ed è un editor di testo piuttosto popolare all&rsquo;interno della comunità degli sviluppatori web. Devo aggiungere che non è gratuito, tuttavia viene fornito con una prova gratuita. Per un uso continuato, è necessario acquistare una licenza per $ 80. Tuttavia, Sublime Text non ti blocca se non lo fai, solo occasionalmente mostra un avviso pop-up che ti chiede di acquistare la licenza.</p>
<p>Una delle funzionalità più interessanti di Sublime Text è il comando <strong>Goto Anything</strong> che puoi attivare premendo la scorciatoia da tastiera <kbd>Ctrl</kbd>+ . <kbd>P</kbd>. Quindi, puoi aprire rapidamente file o passare a determinate parole, linee o simboli. Sublime Text ti fornisce anche una sofisticata tavolozza dei comandi attraverso la quale puoi accedere facilmente a diverse funzionalità come controllare le associazioni dei tasti o passare a un&rsquo;altra tavolozza di colori.</p>
<p>Inoltre, consente selezioni multiple e modifiche suddivise, e ha anche un enorme <a href="https://packagecontrol.io/">ecosistema di pacchetti</a>. I pacchetti possono essere installati con il gestore di pacchetti di Sublime Text tramite la tavolozza dei comandi.</p>
<p><strong>Pro:</strong></p>
<ul>
<li>Funzioni Vai a Qualsiasi cosa e Selezione multipla</li>
<li>modalità senza distrazioni</li>
<li>cambio di progetto istantaneo</li>
<li>ecosistema di pacchetti avanzati</li>
<li>grandi prestazioni su qualsiasi piattaforma (supera tutti gli altri editor di codice sorgente)</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>non gratis</li>
<li>non è facile integrarlo con Git</li>
</ul>
<h3 id="5-light-table10--figure-classwp-block-image-size-full">5. <a href="http://lighttable.com/">LIGHT TABLE</a>  <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="447" src="/wp-content/uploads/2022/06/light-table.jpeg" alt="" class="wp-image-528" srcset="/wp-content/uploads/2022/06/light-table.jpeg 800w, /wp-content/uploads/2022/06/light-table-768x429.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Light Table è iniziata come <a href="https://www.kickstarter.com/projects/ibdknox/light-table">campagna Kickstarter</a>  nel 2012 ed è riuscita a raccogliere più di $ 300.000. Funziona su tutti i principali sistemi operativi, inclusi Windows, Linux e Mac OS X, tuttavia il processo di installazione attualmente richiede <a href="https://github.com/LightTable/LightTable/blob/master/README.md#downloads">alcuni passaggi aggiuntivi</a> per gli utenti di OS X. Light Table ha un&rsquo;interfaccia utente elegante e snella che elimina tutto il disordine, ma fornisce comunque una tavolozza dei comandi e un cercatore sfocato. È scritto in ClojureScript e attualmente supporta HTML, CSS, JavaScript, Python, Clojure e ClojureScript.</p>
<p>Con Light Table, puoi facilmente eseguire una valutazione in linea all&rsquo;interno del tuo codice, il che significa che non devi utilizzare la console quando desideri visualizzare i risultati. La funzione <strong>watches</strong> ti consente di tenere traccia di qualsiasi valore importante all&rsquo;interno del tuo codice. Inoltre, Light Table consente anche di incorporare tutto ciò di cui il tuo progetto ha bisogno, come grafici, giochi e visualizzazioni. Light Table ha un plugin manager integrato (disponibile dal menu <em>Visualizza &gt; Plugin Manager</em> ), con anche una buona selezione di plugin.</p>
<p><strong>Pro:</strong></p>
<ul>
<li>valutazione in linea e <em>watches</em></li>
<li>Incorpora qualsiasi funzione</li>
<li>potente gestore di plugin</li>
<li>altamente personalizzabile</li>
<li>interfaccia veloce e ordinata</li>
<li>gratuito e open source</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>attualmente nessun supporto PHP predefinito, quindi lo sviluppo di WordPress richiede alcuni passaggi aggiuntivi (puoi usare questo <a href="https://github.com/thierrymarianne/LightTable-PHP">plugin PHP</a> , per esempio)</li>
</ul>
<h3 id="prossimi-passi">PROSSIMI PASSI</h3>
<p>Oltre a scegliere l&rsquo;editor di codice più adatto alle tue esigenze, potresti voler cercare anche altri strumenti di sviluppo web. In tal caso, dai un&rsquo;occhiata al nostro articolo sui  <a href="http://www.developerdrive.com/2018/01/9-best-free-cloud-ides/">migliori IDE cloud</a> o dai un&rsquo;occhiata alla nostra  <a href="http://www.developerdrive.com/2015/02/essential-tools-for-modern-web-development/">raccolta di strumenti essenziali</a>  che consigliamo per lo sviluppo web moderno.</p>
]]></content>
		</item>
		
		<item>
			<title>I migliori temi per Visual Studio Code</title>
			<link>https://albertoreineri.it/blog/i-migliori-temi-per-visual-studio-code/</link>
			<pubDate>Mon, 04 Jul 2022 21:26:57 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/i-migliori-temi-per-visual-studio-code/</guid>
			<description>Lavorare in un ambiente piacevole è fondamentale per la produttività. Visual Studio code ultimamente sta guadagnando sempre più popolarità, e se mi segui saprai già che è il mio editor preferito! Vediamo oggi quali sono i miei temi preferiti per Visual Studio Code, sia chiari che scuri!
Nel 2019 Visual Studio Code (VSCode) è stato l&amp;rsquo;editor di testo più utilizzato dagli sviluppatori secondo, con il 50% degli 87.317 intervistati che lo utilizzano.</description>
			<content type="html"><![CDATA[<p>Lavorare in un ambiente piacevole è fondamentale per la produttività. Visual Studio code ultimamente sta guadagnando sempre più popolarità, e se mi segui saprai già che è il mio editor preferito! Vediamo oggi quali sono i miei temi <a href="/blog/software-per-sviluppo-web/">preferiti</a> per Visual Studio Code, sia chiari che scuri!</p>
<p>Nel 2019 <a href="https://code.visualstudio.com/">Visual Studio Code</a> (VSCode) è stato l&rsquo;editor di testo più utilizzato dagli sviluppatori secondo, con il 50% degli 87.317 intervistati che lo utilizzano. Questo è stato un grande passo avanti dopo essere stato classificato al 13° posto tra gli strumenti di sviluppo popolari su Stackoverflow.</p>
<p>VSCode dispone di un velocissimo editor di codice sorgente, ideale per l&rsquo;uso quotidiano. Con il supporto per centinaia di linguaggi di programmazione diversi, tra cui C++, Java, Javascript, JSON, Julia, PHP etc. migliora la tua produttività con la corrispondenza delle parentesi, la selezione dei riquadri, l&rsquo;evidenziazione della sintassi, l&rsquo;indentazione automatica e altro ancora.</p>
<p>Tuttavia, con oltre 5.000 temi tra cui scegliere, può essere scoraggiante trovare il migliore per te. Se stai cercando i migliori temi VSCode da provare, ecco a te i miei preferiti!</p>
<h2 id="anc-0.wp-block-heading"><strong>Come installare temi in Visual Studio Code</strong></h2>
<p>Puoi installare temi in Visual Studio Code in due modi principali. Puoi visitare il Marketplace e selezionare il tema che desideri scaricare, oppure puoi cercare in VSCode IDE.</p>
<h3 id="metodo-1-marketplace">Metodo 1: <strong>Marketplace</strong></h3>
<p>1: Visita il <a href="https://marketplace.visualstudio.com/vscode" target="_blank" rel="noreferrer noopener">Marketplace</a> e seleziona il tema che desideri scaricare. In VSCode, fai clic su File&gt;Preferenze&gt;Tema colore per aprire il selettore Tema colore sul tuo PC Windows. Se sei su macOS, fai clic su Code&gt;Preferenze&gt;Tema colore</p>
<p>Puoi anche aprire il selettore usando la scorciatoia da tastiera “Ctrl+K Ctrl+T”.</p>
<p>2: Usa i tasti cursore per scorrere e visualizzare in anteprima i colori del tema</p>
<p>3: Seleziona il tema che desideri e premi “Invio” sulla tastiera<figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/1-how-to-install-vscode-themes-from-marketplace.png" alt="" class="wp-image-1588" /> </figure></p>
<h3 id="metodo-2-ricerca-in-vscode">Metodo 2: ricerca in VSCode</h3>
<p>In alternativa, puoi installare un tema cercandolo dentro VSCode. Dall&rsquo;icona <a href="https://www.tabnine.com/blog/top-42-free-vscode-extensions/" target="_blank" rel="noreferrer noopener">Estensioni</a> sul lato sinistro di VSCode, cerca il tema richiesto e fai clic su Installa.<figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/2-how-to-install-vscode-themes-in-ide-1024x576.jfif" alt="" class="wp-image-1590" /> </figure></p>
<h2 id="anc-1.wp-block-heading"><strong>I migliori temi scuri per VSCode</strong></h2>
<p>Se non vuoi farti male agli occhi usando un tema chiaro tutto il giorno, un tema scuro è sicuramente consigliato per la tua vista. Sebbene VSCode abbia un tema Dark+ predefinito, potrebbe non essere il tuo preferito… Magari desideri un mix di colori e sfumature diversi. </p>
<p>Ecco i migliori temi oscuri per VSCode:</p>
<h3 id="one-dark-profigure-classwp-block-image"><strong>One Dark Pro</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/3-one-dark-pro-1024x861.png" alt="" class="wp-image-1591" /> </figure></p>
<p>One Dark Pro è il tema VSCode più popolare e ampiamente scaricato con quasi 4 milioni di installazioni. Si basa sul tema One Dark di Atom ed è adatto per gli sviluppatori che amano i temi in modalità oscura. Ha combinazioni ben miscelate e colori di evidenziazione della sintassi molto <em>cool</em> che lo rendono visivamente accattivante. </p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme">Scarica One Dark pro</a></p>
<h3 id="dracula-officialfigure-classwp-block-image"><strong>Dracula Official</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/4-dracula-official-screenshot-989x1024.png" alt="" class="wp-image-1592" /> </figure></p>
<p>Creato da Zeno Rocha, Dracula Official è un tema scuro per VSCode e altre oltre 181 app. Ha download in tutto il mondo con oltre 2 milioni di utenti e ha ricevuto una valutazione media di 4,9 da 81 revisori. Vanta fantastiche combinazioni di colori e contrasti per migliorare la tua produttività.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula">Scarica Dracula ufficiale</a></p>
<h3 id="darculafigure-classwp-block-image"><strong>Darcula</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/5-darcula-screenshot-1024x760.png" alt="" class="wp-image-1594" /> </figure></p>
<p>Se hai utilizzato gli IDE Jetbrains e Android Studio, ti sei sicuramente imbattuto nel tema Darcula. Sebbene sia facile confondere Dracula Official con il Darcula, quest&rsquo;ultimo offre una combinazione di colori accuratamente scuri per oltre 195+ app, editor di codice ed emulatori di terminale, incluso VSCode. </p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=rokoroku.vscode-theme-darcula">Scarica il tema Darcula</a></p>
<p>### <strong>Synthwave &lsquo;84</strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/6-synthwave-theme-1024x672.jpg" alt="" class="wp-image-1595" /> </figure></p>
<p>Il tema Synthwave &lsquo;84 è un semplice tema CSS che celebra l&rsquo;estetica degli anni &lsquo;80 nello sviluppo web moderno. È influenzato dalla musica e dalle copertine dei moderni marchi Synthwave come Timecop 1893, The Midnight e FM-84. Ti consente di sperimentare l&rsquo;effetto bagliore dei sogni al neon degli anni &lsquo;80 con colori ben miscelati, rendendolo uno dei temi più eleganti e di classe.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode">Scarica Synthwave &lsquo;84</a></p>
<h3 id="tema-atom-one-darkfigure-classwp-block-image"><strong>Tema Atom One Dark</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/7-atom-one-dark-preview-1024x617.png" alt="" class="wp-image-1596" /> </figure></p>
<p>Creato da Mahmoud Ali, è stato l&rsquo;ispirazione per il tema One Dark e si basa sul tema dell&rsquo;Atom IDE. A differenza di altri temi dark, ha solo una variante: oscuro. È un&rsquo;opzione eccellente se ti manca Atom ma non vuoi tornarci. Vanta quasi 2 milioni di installazioni in tutto il mondo con una valutazione di 5/5.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=akamud.vscode-theme-onedark">Scarica Atom One Dark</a></p>
<p>### <strong><strong>Night Owl</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/8-nightowl-first-screen.jpg" alt="" class="wp-image-1597" /> </figure></p>
<p>Sei un nottambulo a cui piace programmare di notte quando il resto del mondo dorme? Lo sono anche io! Il tema Night Owl può fare per te. Presenta un tema chiaro e uno scuro, che aiuta le persone daltoniche e garantisce una facile visualizzazione alla luce del giorno.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl">Scarica Night Owl</a></p>
<h2 id="anc-2.wp-block-heading"><strong>I migliori temi chiari per VSCode</strong></h2>
<p>I temi chiari sono consigliati per la codifica della luce diurna. Poiché i programmatori trascorrono la maggior parte del lavoro di giorno, spesso si può avere bisogno di un tema luminoso elegante che aiuti a programmare con facilità. Personalmente li utilizzo quando lavoro all&rsquo;aperto sotto al sole.</p>
<p>Ecco i migliori temi di luce per VSCode:</p>
<p>### <strong><strong>Quie t Light</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/9-quiet-light.png" alt="" class="wp-image-1598" /> </figure></p>
<p>Creato inizialmente per l&rsquo;editor di testo Espresso su Mac, Quiet Light è un porting ufficiale del tema Quiet Light. Sebbene VSCode venga fornito con un tema Quiet Light predefinito, questo ha più modifiche per soddisfare i tuoi gusti e le tue preferenze. Supporta diversi linguaggi, inclusi JavaScript, PHP, HTML, CSS, Python e altri.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=onecrayon.theme-quietlight-vsc">Scarica Quiet Light</a></p>
<p>### <strong><strong>Bracket Lights Pro</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/10-brackets-light-pro-1024x597.png" alt="" class="wp-image-1599" /> </figure></p>
<p>Bracket Lights Pro è un tema accattivante grazie alla sua bellissima tavolozza di colori. Incanala il tema chiaro dell&rsquo;editor di codice Brackets di Adobe su VSCode. Sebbene Adobe abbia terminato il suo supporto per Brackets il 1° settembre 2021, ti piacerà usare Bracket Lights Pro per il suo aspetto pulito.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=fehey.brackets-light-pro">Scarica Bracket Lights Pro</a></p>
<p>### <strong><strong>Bluloco Light</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/11-blulocojs-1024x926.png" alt="" class="wp-image-1600" /> </figure></p>
<p>Se desideri un tema con raffinatezza e un&rsquo;ampia gamma di colori nella tavolozza, non sbaglierai con Bluloco Light. Biforcato inizialmente da One Light Theme, presenta un uso più ampio della coerenza del colore e degli ambiti della sintassi per quanto riguarda leggibilità, contrasto ed estetica.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=uloco.theme-bluloco-light">Scarica Bluloco Light</a></p>
<p>### ## <strong>I migliori temi per VSCode</strong> {#anc-3.wp-block-heading}</p>
<p>VSCode è senza dubbio uno dei migliori editor di codice, con una vasta gamma di estensioni supportate dalla comunità. Disponibile su macOS, Windows e Linux, puoi soddisfare quasi tutte le tue esigenze di programmazione indipendentemente dal sistema operativo. </p>
<p>Ecco i migliori temi per VSCode:</p>
<p>### <strong><strong>Tokyo Night</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_night-1024x713.png" alt="Notte di Tokio" class="wp-image-1605" /> <figcaption>Tokyo Night</figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_night_storm-1-1024x713.png" alt="Tempesta notturna di Tokyo" class="wp-image-1602" /><figcaption>Tokyo Night Storm</figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_day-1024x712.png" alt="Giornata di Tokyo" class="wp-image-1603" /><figcaption>Tokyo Day</figcaption></figure></p>
<p>Questo tema è pulito, fresco e rilassante con colori calmi. Celebra le luci del centro di Tokyo di notte ed è disponibile sia in versione chiara che scura. La sua perfetta miscela e combinazione di colori aiutano a meditare mentre scrivi codici.</p>
<p>[Scarica <a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night">Tokyo Night</a>]<a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night">12</a></p>
<p>### <strong><strong>GitHub Theme</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/13-github-132220037-3cd3e777-55a6-445f-9a2e-da6020ebd78d-1024x640.png" alt="" class="wp-image-1604" /> <figcaption>Temi GitHub</figcaption></figure></p>
<p>Il tema GitHub porta l&rsquo;esperienza GitHub in VSCode. È simile ai temi ufficiali di GitHub.com ed è popolare tra gli sviluppatori che preferiscono i temi classici. È disponibile sia in chiaro che in scuro</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme">Scarica GitHub Theme</a></p>
<h3 id="winter-is-comingfigure-classwp-block-image"><strong><strong>Winter is Coming</strong></strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-html-1024x605.png" alt="" class="wp-image-1608" /> <figcaption><strong><strong>Dark Blue HTML</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-js-1024x605.png" alt="" class="wp-image-1609" /><figcaption><strong><strong>Dark Blue JavaScript</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-ts-1024x605.png" alt="" class="wp-image-1610" /><figcaption><strong><strong>Dark Blue TypeScript</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-winteriscoming-1024x605.png" alt="JavaScript leggero" class="wp-image-1606" /><figcaption><strong><strong>Light JavaScript</strong></strong></figcaption></figure></p>
<p>Se sei un grande fan di Game of Thrones, avrai sicuramente sentito questa frase diverse volte! È stato creato da John Papa ed è disponibile in diverse versioni, tra cui blu scuro, nero scuro e chiaro. Racchiude un equilibrio nelle sue combinazioni di colori, rendendolo perfetto per la codifica durante il giorno e la notte.</p>
<p>[Scarica <a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.winteriscoming">Winter is Coming</a>]<a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.winteriscoming">14</a></p>
<h3 id="firefox-themefigure-classwp-block-image"><strong><strong>Firefox Theme</strong></strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/15-theme-preview-1-1024x576.gif" alt="Tema Firefox" class="wp-image-1612" /> </figure></p>
<p>Il tema Firefox è basato sugli strumenti per sviluppatori di Mozilla Firefox. Il suo perfetto equilibrio di colori freddi gli conferisce un aspetto elegante con icone illuminate al neon. Per passare facilmente da una scheda all&rsquo;altra, fornisce una sottolineatura evidenziata sulle schede aperte per garantire una transizione rapida. È disponibile nelle versioni scura e chiara.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=Heron.firefox-devtools-theme">Scarica il tema Firefox</a></p>
<h3 id="nu-discofigure-classwp-block-image"><strong>Nu Disco</strong><figure class="wp-block-image"></h3>
<p><a href="https://www.tabnine.com/blog/wp-content/uploads/2021/11/17-discojs.png"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/17-discojs-1024x733.png" alt="Nu Disco" class="wp-image-1615" /></a><figcaption>Nu Disco</figcaption></figure></p>
<p>Nu Disco è stato creato da Danny Banks ed è alimentato da Style Dictionary. I suoi colori di sintassi sono posizionati magnificamente con colori contrastanti per semplificare la tua esperienza di codifica. Disponibile nelle versioni scura e chiara, è perfettamente progettato per essere facile da usare in ambienti luminosi e scarsamente illuminati.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dbanksdesign.nu-disco">Scarica il tema Nu Disco</a></p>
<h2 id="anc-4.wp-block-heading"><strong>Incartare</strong></h2>
<p>VSCode è un ottimo editor di codice che supporta centinaia di linguaggi e funzionalità avanzate, tra cui l&rsquo;evidenziazione della sintassi, l&rsquo;indentazione automatica e gli snippet. È adatto per lo sviluppo Web moderno e dispone di un debugger interattivo per visualizzare gli stack di chiamate ed eseguire variabili.</p>
<p>Provare uno dei temi di Visual Studio Code che ho suggerito qua sopra può aiutarti molto durante le tue sessioni di coding. Sebbene i temi sopra riportati rendano il tuo IDE colorato e aiutino i tuoi occhi a pungere meno, non ti renderanno certo un programmatore migliore… Ma lavorare in un ambiente piacevole è sicuramente più motivante!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>6 migliori tool per sviluppo Frontend</title>
			<link>https://albertoreineri.it/blog/6-migliori-tool-per-sviluppo-frontend/</link>
			<pubDate>Tue, 28 Jun 2022 12:03:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/6-migliori-tool-per-sviluppo-frontend/</guid>
			<description>Il codice utilizzato nella produzione è diverso dal codice di sviluppo. In produzione, è necessario creare pacchetti che funzionino velocemente, gestire le dipendenze, automatizzare le attività, caricare moduli esterni e altro ancora. Gli strumenti che consentono di trasformare il codice di sviluppo in codice di produzione sono chiamati tool di compilazione. Gli sviluppatori frontend lavorano principalmente con i seguenti tipi di strumenti di compilazione:
package managers, task runners, module loaders, module bundlers, etc… In questo articolo potrai trovare raccolto i migliori strumenti di build che puoi utilizzare nello sviluppo frontend.</description>
			<content type="html"><![CDATA[<p>Il codice utilizzato nella produzione è diverso dal codice di sviluppo. In produzione, è necessario creare pacchetti che funzionino velocemente, gestire le dipendenze, automatizzare le attività, caricare moduli esterni e altro ancora. Gli strumenti che consentono di trasformare il codice di sviluppo in codice di produzione sono chiamati tool di compilazione. Gli sviluppatori frontend lavorano principalmente con i seguenti tipi di strumenti di compilazione:</p>
<ul>
<li>package managers,</li>
<li>task runners,</li>
<li>module loaders,</li>
<li>module bundlers,</li>
<li>etc…</li>
</ul>
<p>In questo articolo potrai trovare raccolto i migliori strumenti di build che puoi utilizzare nello sviluppo frontend. Nota che tutti questi strumenti vengono eseguiti da riga di comando, quindi non sono dotati di un&rsquo;interfaccia utente grafica.</p>
<h2 id="1-npm-package-manager">1. NPM (PACKAGE MANAGER)</h2>
<p>L&rsquo;acronimo <a href="https://github.com/npm/cli">npm</a> sta per Node Package Maid che è il gestore di pacchetti predefinito di Node.js. Quando <a href="https://nodejs.org/en/download/">installi Node.js</a> sul tuo sistema, anche npm viene installato automaticamente e puoi accedervi dall&rsquo;interfaccia da riga di comando. Con npm puoi installare qualsiasi pacchetto Node.js con un solo comando.</p>
<p>Puoi trovare tutti i pacchetti Node.js esistenti nel registro npm a cui puoi accedere tramite la barra di ricerca nella parte superiore della home page di npm. Devi solo digitare il nome del pacchetto che stai cercando (ad esempio <em>‘postcss&rsquo;</em> ) nella barra di ricerca e verrai indirizzato alla pagina del pacchetto che include tutto ciò che devi sapere sul pacchetto, il suo processo di installazione e tutto delle sue dipendenze.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Facile processo di installazione.</li>
<li>Software multipiattaforma (Windows, Linux, macOS, SmarOS e altro).</li>
<li>Centinaia di migliaia di pacchetti.</li>
<li>Gestione efficiente delle dipendenze tramite il file <em>package.json</em>.</li>
<li>Molteplici opzioni di configurazione (tramite riga di comando).</li>
<li>Ampia documentazione e utile community.</li>
</ul>
<h2 id="2-yarn-package-manager">2. YARN (PACKAGE MANAGER)</h2>
<p><a href="https://yarnpkg.com/lang/en/">Yarn</a> è un gestore di pacchetti frontend che può essere utilizzato come alternativa a npm. Poiché Yarn stesso è un pacchetto Node.js, devi installare Node.js prima di poter utilizzare Yarn sul tuo sistema. Quindi, devi solo seguire la <a href="https://yarnpkg.com/en/docs/install">guida all&rsquo;installazione</a> per utilizzarla per gestire le dipendenze del frontend.</p>
<p>Sebbene npm sia un ottimo strumento, scoprirai che la creazione di pacchetti con esso a volte richiede molto tempo. Questo non è necessariamente un problema se non hai molte dipendenze da installare o non usi regolarmente un gestore di pacchetti. Tuttavia, se lavori su un progetto pesante, può essere una buona idea utilizzare Yarn permette tempi di costruzione ultraveloci.</p>
<p>Yarn velocizza il processo di compilazione memorizzando nella cache ogni pacchetto in modo da non dover scaricare le dipendenze più volte. Esegue anche operazioni parallele per ridurre ulteriormente i tempi di costruzione.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Strumento multipiattaforma (Windows, Linux, macOS) con guide di installazione separate per ciascuna piattaforma.</li>
<li>Compatibile con tutti i pacchetti Node.js.</li>
<li>Tempi di <em>build</em> rapidi.</li>
<li>Modalità offline.</li>
</ul>
<h2 id="3-grunt-task-runner">3. GRUNT (TASK RUNNER)</h2>
<p><a href="https://gruntjs.com/">Grunt</a> è un task runner frontend che ti consente di automatizzare attività ripetitive come minimizzazione, linting, test e altro. I task runner sono diversi dai gestori di pacchetti, poiché non puoi usarli per gestire le dipendenze. Ne hai bisogno solo se desideri eseguire le stesse attività durante ogni processo di compilazione.</p>
<p>Poiché Grunt è un pacchetto Node.js, puoi installarlo con npm, Yarn o un altro gestore di pacchetti Node.js. Grunt mantiene le dipendenze personalizzate necessarie per eseguire le attività predefinite nel file <em>package.json</em> . Puoi definire le tue attività nel Gruntfile (<a href="https://gruntjs.com/sample-gruntfile">vedi un esempio</a>) che viene eseguito durante ogni processo di compilazione ed esegue automaticamente ogni attività che include.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Strumento da riga di comando multipiattaforma che funziona su qualsiasi sistema operativo.</li>
<li>Processo di configurazione semplice.</li>
<li>Enorme ecosistema con centinaia di plugin per aggiungere strumenti frontend (come Sass, Jade, JSHint, Handlebars, RequireJS e altri) che completano le attività preconfigurate.</li>
<li>Attività asincrone se necessario.</li>
<li>Ampia documentazione.</li>
<li>Ampiamente adottato.</li>
</ul>
<h3 id="4-gulp-task-runner">4. GULP (TASK RUNNER)</h3>
<p><a href="https://gulpjs.com/">Gulp</a> è un altro task runner automatizzato e anche il più forte concorrente di Grunt. Simile a Grunt, puoi utilizzare Gulp per automatizzare attività front-end ricorrenti come la preelaborazione CSS, l&rsquo;ottimizzazione delle immagini e molti altri. È anche un pacchetto Node.js che puoi installare con i gestori di pacchetti npm e Yarn. Puoi definire le tue attività in <a href="https://gulpjs.com/docs/en/getting-started/javascript-and-gulpfiles">Gulpfile</a> e configurare le tue dipendenze relative alle tue attività nel file <em>package.json</em> .</p>
<p>La più grande differenza rispetto a Grunt è che Gulp utilizza una tecnica di automazione più efficiente che consente tempi di costruzione più rapidi. Mentre Grunt utilizza i file temporanei per elaborare le attività, Gulp esegue operazioni in memoria senza scrivere in file temporanei. Queste operazioni in memoria sono chiamate <a href="https://nodejs.org/api/stream.html#stream_stream">node streams</a> e possono farti risparmiare molto tempo, soprattutto se desideri elaborare più attività in ogni build.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Task runner multipiattaforma che può essere installato come un normale pacchetto Node.js.</li>
<li>Utilizza i flussi Node per velocizzare le operazioni.</li>
<li>Enorme ecosistema con migliaia di plugin.</li>
<li>Base di codice di qualità utilizzando le best practice di Node.js.</li>
<li>Documentazione facile da seguire.</li>
<li>Superficie API minima per una semplice adozione.</li>
</ul>
<h2 id="5-browserify-module-loaderbundler">5. BROWSERIFY (MODULE LOADER/BUNDLER)</h2>
<p><a href="http://browserify.org/">Browserify</a> è un caricatore di moduli Node.js che ti consente di raggruppare le tue dipendenze front-end e caricarle come un unico file JavaScript nel browser dell&rsquo;utente. I gestori di pacchetti come npm e Yarn caricano i moduli sul lato server utilizzando la funzione <em><a href="https://nodejs.org/api/modules.html#modules_require_id">require()</a></em> di Node.js progettata per caricare i moduli. Browserify porta il metodo <em>require()</em> sul lato client, il che può comportare un enorme aumento delle prestazioni.</p>
<p>Con Browserify, il browser del tuo utente deve caricare un solo file JavaScript statico che contiene tutte le dipendenze su cui si basa il tuo progetto. Puoi aggiungere il tuo JavaScript in bundle come tag script alla tua pagina e sei a posto. Tuttavia, tieni presente che poiché Browserify è un modulo Node.js e un&rsquo;implementazione dell&rsquo;API CommonJS (simile a npm), puoi utilizzarlo solo per caricare moduli Node.js ma non altri tipi di file JavaScript (o altri).</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Raggruppa tutte le dipendenze di Node.js in un unico file.</li>
<li>Velocizza le applicazioni modulari che si basano su più moduli Node.js.</li>
<li>Consente requisiti esterni (è possibile richiedere moduli da altri tag script ).</li>
<li>Consente di dividere i pacchetti, se necessario.</li>
<li>Esclude, ignora e trasforma le funzionalità.</li>
<li>Documentazione dettagliata e utile <a href="https://github.com/browserify/browserify-handbook">manuale di Browserify</a> .</li>
</ul>
<h2 id="6-webpack-module-loaderbundler">6. WEBPACK (MODULE LOADER/BUNDLER)</h2>
<p><a href="https://webpack.js.org/">Webpack</a> è un bundler di moduli avanzato che ti consente di raggruppare tutte le tue dipendenze e caricarle come risorse statiche nel browser dell&rsquo;utente. Mentre Browserify raggruppa solo i moduli Node.js, Webpack può gestire qualsiasi tipo di file front-end come file <em>.html</em> , <em>.css, .js, .scss</em> , immagini e altre risorse.</p>
<p>Oltre ai moduli CommonJS utilizzati nell&rsquo;ecosistema Node.js, Webpack può anche raggruppare moduli <a href="https://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMAScript</a> e <a href="https://github.com/amdjs/amdjs-api/wiki/AMD">AMD</a> nativi (altre specifiche del modulo JavaScript). Webpack analizza il tuo progetto e crea un grafico delle dipendenze. Quindi, in base al grafico delle dipendenze, raggruppa i tuoi file e moduli in uno o più file statici che puoi aggiungere alla tua pagina HTML.</p>
<p>Poiché Webpack stesso è anche un modulo Node.js, puoi installarlo con npm o con il gestore di pacchetti Yarn.</p>
<p>Per impostazione predefinita, la configurazione dei progetti Webpack richiede molto tempo a causa delle molteplici opzioni che consentono di perfezionare il progetto. Tuttavia, dal Webpack 4, include un&rsquo;opzione di configurazione zero che automatizza il processo di compilazione e richiede solo la definizione del file di immissione.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Molteplici opzioni di configurazione.</li>
<li>Codice suddiviso in blocchi più piccoli che possono essere caricati in modo asincrono.</li>
<li>Supporto per mappe di origine.</li>
<li>Opzione di configurazione zero (dal Webpack 4).</li>
<li>Enorme ecosistema con una ricca interfaccia di plugin.</li>
</ul>
<h2 id="conclusione">CONCLUSIONE</h2>
<p>Gli strumenti di compilazione frontend ti aiutano a trasformare il codice di sviluppo in codice pronto per la produzione che può essere eseguito su qualsiasi dispositivo o piattaforma senza problemi. In questa raccolta, abbiamo esaminato gli strumenti di compilazione più adottati che puoi utilizzare nel tuo progetto Web, inclusi gestori di pacchetti, task runner e caricatori/bundler di moduli.</p>
<p>Oltre alle soluzioni ampiamente adottate, ci sono anche (relativamente) nuovi strumenti sul mercato che stanno guadagnando costantemente terreno, come il gestore di pacchetti <a href="https://pnpm.js.org/">pnpm</a> (un&rsquo;alternativa a npm e Yarn), il bundle di moduli <a href="https://parceljs.org/">Parcel</a> (un&rsquo;alternativa a Webpack) e il bundler di moduli <a href="https://rollupjs.org/blog/en/">Rollup</a> ES (simile a Browserify ma raggruppa i moduli ECMAScript invece di quelli CommonJS). Se sei alla ricerca di nuove soluzioni, vale la pena dare un&rsquo;occhiata anche a questi nuovi strumenti.</p>
<p>L&rsquo;aggiunta di nuovi strumenti al tuo flusso di lavoro può portare il tuo processo di sviluppo a un livello superiore. </p>
<p>Come sempre, <em>Buon Codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Usare il browser senza mouse – Hacker Style</title>
			<link>https://albertoreineri.it/blog/usare-il-browser-senza-mouse-hacker-style/</link>
			<pubDate>Mon, 06 Jun 2022 09:34:22 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/usare-il-browser-senza-mouse-hacker-style/</guid>
			<description>Passiamo molto, moltissimo tempo sul browser ormai, e usare il mouse per la navigazione può essere frustranete per noi sviluppatori… Ma è possibile farne a meno e muoversi solamente utilizzando la tastiera, come un vero hacker! Vediamo come si fa.
Vimium Extension Per prima cosa devi scaricare l&amp;rsquo;estensione Vimium. Io uso Google Chrome, ma è presente anche per Firefox e Safari (se usi Brave o Edge non preoccuparti, puoi installare l&amp;rsquo;estensione per Google Chrome, funzionerà perfettamente perché questi browser condividono la stessa base).</description>
			<content type="html"><![CDATA[<p>Passiamo molto, moltissimo tempo sul browser ormai, e usare il mouse per la navigazione può essere frustranete per noi sviluppatori… Ma è possibile farne a meno e muoversi solamente utilizzando la tastiera, come un vero hacker! Vediamo come si fa.</p>
<h2 id="vimium-extension">Vimium Extension</h2>
<p>Per prima cosa devi scaricare l&rsquo;estensione <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noreferrer noopener">Vimium</a>. Io uso Google Chrome, ma è presente anche per <a href="https://addons.mozilla.org/it/firefox/addon/vimium-ff/" target="_blank" rel="noreferrer noopener">Firefox</a> e <a href="https://apps.apple.com/us/app/vimari/id1480933944?mt=12" target="_blank" rel="noreferrer noopener">Safari</a> (se usi Brave o Edge non preoccuparti, puoi installare l&rsquo;estensione per Google Chrome, funzionerà perfettamente perché questi browser condividono la stessa base).</p>
<p>Dopo averla installata potrete iniziare ad utilizzare il vostro browser direttamente dalla tasitera.</p>
<p>La base dei comandi è quella del software Vim, quindi se siete su Linux probabilmente vi troverete già a vostro agio, altrimenti non preoccupatevi, basterà qualche minuti di pratica per abbandonare il mouse per sempre!</p>
<p>Ecco i comandi principali per utilizzarlo:</p>
<h2 id="navigare-nella-pagina-corrente">Navigare nella pagina corrente:</h2>
<pre class="wp-block-code"><code>?       mostra l'elenco dei comandi disponibili (molto utile all'inizio)
h       scroll verso sinistra
j       scroll verso il basso
k       scroll verso l'alto
l       scroll verso destra
gg      scroll in cima alla pagina
G       scroll in fondo alla pagina
d       scroll in basso di metà pagina
u       scroll in alto di metà pagina
f       apri un link nella tab corrente
F       apri link in nuova tab
r       ricarica
gs      visualizza codice sorgente</code></pre>
<h2 id="navigare-in-altre-pagina">Navigare in altre pagina:</h2>
<pre class="wp-block-code"><code>o       Apri URL
O       Apri URL in nuova tab
b       Apri preferiti
B       Apri preferiti in nuova tab</code></pre>
<h2 id="cronologia">Cronologia:</h2>
<pre class="wp-block-code"><code>H       Vai a pagina precedente
L       Vai a pagina successiva</code></pre>
<h2 id="manipolazione-tabs">Manipolazione tabs:</h2>
<pre class="wp-block-code"><code>J, gT      Vai un tab verso sinistra
K, gt      Vai un tab verso destra
g0         Vai alla prima tab
g$         Vai all'ultima tab
t          Crea tab
x          Chiudi tab corrente
X          Riapri tab chiusa
T          Cerca fra le tab</code></pre>
<p>Ecco qua, questi sono solamente i comandi principali, ne esistono altri che puoi leggere qua: <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noreferrer noopener"><a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb">https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb</a></a></p>
<p>E questo è tutto! Non ti resta che provare ad utilizzarli e vedrai che in breve tempo potrai usare il browser totalmente in hacker style ?‍?</p>
<p>Come sempre <em>buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Come creare un effetto Overlay in CSS</title>
			<link>https://albertoreineri.it/blog/come-creare-un-effetto-overlay-in-css/</link>
			<pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-creare-un-effetto-overlay-in-css/</guid>
			<description>Personalmente utilizzo moltissimo gli overlay per migliorare la leggibilità del testo sopra un&amp;rsquo;immagine, ma che cos&amp;rsquo;è questo overlay?
In poche parole non è nient&amp;rsquo;altro che un livello intermedio fra l&amp;rsquo;immagine e il testo, un livello che va &amp;lsquo;opacizzare&amp;rsquo; l&amp;rsquo;immagine per rendere più leggibile il testo.
Logicamente con l&amp;rsquo;overlay il testo risulta molto più leggibile, e secondo me l&amp;rsquo;immagnie è anche meno impattante, meno fastidiosa.
Farlo non è affatto difficile.
Come si fa Basterà recarci all&amp;rsquo;interno del contenitore dell&amp;rsquo;immagine, in questo caso nel div con classe sidebar e aggiungere un elemento chiamato &amp;ldquo;overlay&amp;rdquo;</description>
			<content type="html"><![CDATA[<p>Personalmente utilizzo moltissimo gli overlay per migliorare la leggibilità del testo sopra un&rsquo;immagine, <strong>ma che cos&rsquo;è questo overlay?</strong></p>
<p>In poche parole non è nient&rsquo;altro che un <strong>livello intermedio fra l&rsquo;immagine e il testo</strong>, un livello che va &lsquo;opacizzare&rsquo; l&rsquo;immagine per rendere più leggibile il testo.</p>
<p>Logicamente <strong>con l&rsquo;overlay il testo risulta molto più leggibile</strong>, e secondo me l&rsquo;immagnie è anche meno impattante, meno fastidiosa.</p>
<p>Farlo non è affatto difficile.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/KiZMQCs0SSg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="come-si-fa">Come si fa</h2>
<p>Basterà recarci all&rsquo;interno del contenitore dell&rsquo;immagine, in questo caso nel <em>div</em> con classe <em>sidebar</em> e aggiungere un elemento chiamato &ldquo;<em>overlay</em>&rdquo;</p>
<pre tabindex="0"><code> &lt;div class=&#34;sidebar&#34; style=&#34;background:url(&#39;https://images.unsplash.com/photo-1534067783941-51c9c23ecefd?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80&#39;)&#34;&gt;
        &lt;div class=&#34;overlay&#34;&gt;&lt;/div&gt;
        &lt;div class=&#34;sidebar-inner&#34;&gt;
            &lt;div class=&#34;site-header&#34;&gt;
                &lt;h2&gt;Nome Sito Web&lt;/h2&gt;
                &lt;i&gt;Lorem ipsum dolor sit amet&lt;/i&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre><p>Con l&rsquo;html siamo a posto, ora spostiamoci nel nostro file <strong>CSS</strong> e dobbiamo solamente creare questa classe:</p>
<pre tabindex="0"><code>.overlay{
    position: absolute;
    top:0;
    left: 0;
    right: 0;
    bottom:0;
    background-color: rgba(0, 0, 0, 0.4);
    z-index: 2;
    width: 100%;
    height: 100%;
}
</code></pre><p><em><strong>E Voilà! Tutto finito!</strong></em></p>
<p>Ora non resta che personalizzarla a piacere, cambiando il colore e il livello di opacità.</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Come scegliere quale linguaggio di programmazione imparare</title>
			<link>https://albertoreineri.it/blog/come-scegliere-quale-linguaggio-di-programmazione-imparare/</link>
			<pubDate>Thu, 29 Jul 2021 09:55:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-scegliere-quale-linguaggio-di-programmazione-imparare/</guid>
			<description>Il settore IT cambia in modo incredibilmente veloce. Tecnologie e linguaggi di programmazione che vanno di moda oggi diventeranno obsoleti domani. Le tendenze vanno e vengono e anche il mercato del lavoro è in continua evoluzione. Quindi, come scegliere quale linguaggio di programmazione imparare dopo? Per trovare la risposta giusta, devi prendere in considerazione molte cose, come ad esempio:
tendenze del settore, il mercato del lavoro, il tuo attuale set di abilità, i requisiti del tuo progetto, la disponibilità di risorse per l&amp;rsquo;apprendimento, e molti altri.</description>
			<content type="html"><![CDATA[<p>Il settore IT cambia in modo incredibilmente veloce. Tecnologie e linguaggi di programmazione che vanno di moda oggi diventeranno obsoleti domani. Le tendenze vanno e vengono e anche il mercato del lavoro è in continua evoluzione. Quindi, come scegliere quale linguaggio di programmazione imparare dopo? Per trovare la risposta giusta, devi prendere in considerazione molte cose, come ad esempio:</p>
<ul>
<li>tendenze del settore,</li>
<li>il mercato del lavoro,</li>
<li>il tuo attuale set di abilità,</li>
<li>i requisiti del tuo progetto,</li>
<li>la disponibilità di risorse per l&rsquo;apprendimento,</li>
<li>e molti altri.</li>
</ul>
<p>In questo articolo, vedremo un paio di suggerimenti su come scegliere il prossimo linguaggio di programmazione imparare. Non si tratta di regole rigide, ma di linee guida flessibili che puoi applicare in base alle tue esigenze.</p>
<h2 id="determina-i-tuoi-obiettivi">DETERMINA I TUOI OBIETTIVI</h2>
<p>Prima di fare qualsiasi altra cosa, la cosa più importante che devi fare è determinare i tuoi obiettivi. Pensa al motivo per cui vuoi imparare un nuovo linguaggio di programmazione e quale risultato finale vuoi ottenere. La domanda numero uno che devi porre a te stesso è se vuoi espandere le tue abilità verticalmente o orizzontalmente.</p>
<p>Se vuoi mettere il piede in una nuova area, devi espandere le tue conoscenze <em>orizzontalmente</em> . Un tipico esempio è quando sei uno sviluppatore front-end e vuoi diventare uno sviluppatore full-stack. Oppure, quando hai familiarità con un linguaggio back-end come Java e vuoi impararne un altro come Python. In questo caso, dovrai impostare un percorso di apprendimento che inizia a livello principiante.</p>
<p>Tuttavia, se vuoi acquisire conoscenze specifiche in un&rsquo;area che già conosci, devi pensare in <em>verticale</em> . Questo accade, ad esempio, quando sei uno sviluppatore Python e vuoi imparare, ad esempio, il machine learning. In questo caso, non è necessario iniziare da un livello principiante. Molte volte, non hai nemmeno bisogno di imparare un nuovo linguaggio di programmazione, ma solo nuove metodologie, framework, librerie o altri strumenti basati sulle conoscenze che già possiedi.</p>
<h2 id="valuta-il-tuo-attuale-set-di-abilità">VALUTA IL TUO ATTUALE SET DI ABILITÀ</h2>
<p>Quando hai fissato i tuoi obiettivi, il passo successivo è decidere come raggiungerli al meglio. Poiché esistono molti linguaggi e tecnologie di programmazione, capita spesso di poter raggiungere lo stesso obiettivo di apprendimento attraverso percorsi diversi.</p>
<p>Ad esempio, se vuoi diventare uno sviluppatore full-stack puoi scegliere tra diversi linguaggi di back-end come PHP, Java, Python o NodeJS. Tuttavia, se conosci già un linguaggio basata su C è più facile impararne un altro. Oppure, se sei un esperto di JavaScript front-end, puoi imparare NodeJS molto più velocemente di un linguaggio completamente nuovo come Python o Java.</p>
<p>Il modo migliore per ottenere un quadro realistico delle tue attuali conoscenze è fare un elenco di tutti i linguaggi, i framework, gli strumenti e le tecnologie che conosci. Se vuoi imparare un nuovo linguaggio di programmazione per trovare un lavoro, la tua lista delle competenze può anche servire come base per il tuo curriculum.</p>
<p>Se sai quali sono i tuoi obiettivi e quali conoscenze hai già, puoi passare al passaggio successivo: condurre un&rsquo;approfondita ricerca di mercato.</p>
<h2 id="ricerca-il-mercato">RICERCA IL MERCATO</h2>
<p>Conoscere i propri obiettivi ed essere consapevoli delle proprie capacità attuali è una cosa, ma per quanto riguarda il mercato? Può facilmente succedere che tu abbia impostato gli obiettivi giusti e scelto un linguaggio che sia in linea con le tue abilità, ma magari non c&rsquo;è una reale richiesta per questo…</p>
<p>Per evitare di sprecare il tuo tempo prezioso nell&rsquo;apprendimento di un nuovo linguaggio di programmazione che non interessa a nessuno, devi condurre ricerche di mercato. Ecco le risorse più importanti che vale la pena dare un&rsquo;occhiata.</p>
<h3 id="1-indice-tiobe">1. INDICE TIOBE</h3>
<p>Il <a href="https://www.tiobe.com/tiobe-index/">TIOBE Programming Community Index</a> è spesso utilizzato come standard del settore per determinare la popolarità dei linguaggi di programmazione. Viene pubblicato ogni mese e mostra come diversi linguaggi di programmazione hanno guadagnato o perso trazione rispetto al mese precedente. Pubblicano anche una breve analisi del settore ogni mese che riassume i cambiamenti più importanti che devi conoscere.<figure class="wp-block-image size-full"></p>
<p><img loading="lazy" decoding="async" width="850" height="425" src="/wp-content/uploads/2022/06/tiobe-community-index.jpeg" alt="" class="wp-image-508" srcset="/wp-content/uploads/2022/06/tiobe-community-index.jpeg 850w, /wp-content/uploads/2022/06/tiobe-community-index-768x384.jpeg 768w" sizes="(max-width: 850px) 100vw, 850px" /> </figure></p>
<h3 id="2-github-octoverse">2. GITHUB OCTOVERSE</h3>
<p><a href="https://octoverse.github.com/">GitHub Octoverse</a> è un report annuale che riassume le tendenze più importanti su GitHub. Ti fornisce una miriade di informazioni come:</p>
<ul>
<li>la popolarità dei linguaggi di programmazione,</li>
<li>i linguaggi in rapida crescita,</li>
<li>i migliori progetti open source,</li>
<li>le organizzazioni più attive,</li>
<li>i tag più popolari,</li>
<li>gli argomenti in rapida crescita,</li>
<li>e molti altri…</li>
</ul>
<p>È una risorsa eccellente e vale sicuramente la pena dare un&rsquo;occhiata prima di decidere come andare avanti con l&rsquo;apprendimento. Oltre al rapporto Octoverse pubblicato annualmente, GitHub ha anche una pagina <a href="https://github.com/explore">Explore</a> . Qui, GitHub pubblica quotidianamente i repository, gli argomenti, le app e i framework più di tendenza.</p>
<h3 id="3-stack-overflow-insights">3. STACK OVERFLOW INSIGHTS</h3>
<p>Puoi trovare molte informazioni utili su quale linguaggio di programmazione scegliere anche nel sottodominio <a href="https://insights.stackoverflow.com/">Insights di Stack Overflow . </a><a href="https://insights.stackoverflow.com/survey">Senza dubbio, il materiale più importante qui è il sondaggio annuale per gli sviluppatori</a> di Stack Overflow che contiene tutto ciò che potresti voler sapere sul settore.</p>
<p>Ad esempio, nel 2019, quasi 90.000 sviluppatori hanno partecipato al sondaggio di 20 minuti che copre diversi argomenti, dalle loro tecnologie preferite alle preferenze lavorative. Oltre al sondaggio annuale, puoi trovare analisi approfondite, report in primo piano e set di dati archiviati anche su Stack Overflow Insights.<figure class="wp-block-image size-full"></p>
<p><img loading="lazy" decoding="async" width="850" height="381" src="/wp-content/uploads/2022/06/stack-overflow-insights.jpeg" alt="" class="wp-image-509" srcset="/wp-content/uploads/2022/06/stack-overflow-insights.jpeg 850w, /wp-content/uploads/2022/06/stack-overflow-insights-768x344.jpeg 768w" sizes="(max-width: 850px) 100vw, 850px" /> </figure></p>
<h3 id="4-google-trend">4. GOOGLE TREND</h3>
<p><a href="https://trends.google.com/trends/">Google Trends</a> può aiutarti a scegliere quale linguaggio di programmazione imparare in tre modi diversi:</p>
<ol>
<li>Puoi controllare i dati storici fino al 2004, specificati dalla posizione.</li>
<li>Puoi confrontare la popolarità di due o più linguaggi di programmazione. Ad esempio, puoi eseguire una query C# vs. Java .</li>
<li>Oltre ai linguaggi di programmazione, puoi anche cercare la popolarità di tecnologie correlate come librerie JavaScript, framework o temi WordPress .</li>
</ol>
<p>In effetti, Google Trends è un potente strumento di ricerca che ti consente di eseguire query e confronti completamente unici, quanti ne desideri, e tutto gratuitamente.<figure class="wp-block-image size-full"></p>
<p><img loading="lazy" decoding="async" width="850" height="414" src="/wp-content/uploads/2022/06/google-trends-programming-languages.jpeg" alt="" class="wp-image-510" srcset="/wp-content/uploads/2022/06/google-trends-programming-languages.jpeg 850w, /wp-content/uploads/2022/06/google-trends-programming-languages-768x374.jpeg 768w" sizes="(max-width: 850px) 100vw, 850px" /> </figure></p>
<h3 id="5-piattaforme-di-ricerca-lavoro">5. PIATTAFORME DI RICERCA LAVORO</h3>
<p>Le piattaforme di lavoro non sono utili solo se stai cercando direttamente un lavoro, ma puoi anche utilizzarli per ricercare le tendenze del settore specifiche per il campo a cui ti rivolgi. Ad esempio, se vuoi imparare lo sviluppo di app cloud, puoi dare un&rsquo;occhiata ai lavori correlati per vedere quali linguaggi di programmazione, competenze e strumenti stanno cercando i datori di lavoro.</p>
<p>Oltre a siti di lavoro tradizionali come Subito o Indeed, puoi anche cercare lavori per programmatori nei seguenti luoghi:</p>
<ul>
<li>siti di lavoro remoti come <a href="https://weworkremotely.com/">We Work Remotely</a> ,</li>
<li>reti professionali come <a href="https://www.linkedin.com/">LinkedIn</a> ,</li>
<li>sezioni di lavoro in riviste online per sviluppatori come <a href="https://www.smashingmagazine.com/jobs/">Smashing Jobs</a> ,</li>
<li>newsletter professionali con una sezione di lavoro come <a href="https://javascriptweekly.com/">JavaScript Weekly</a> .</li>
</ul>
<p>Dopo aver ricercato un paio di lavori relativi al campo che vuoi esplorare, avrai una conoscenza aggiornata su ciò che le aziende stanno cercando.</p>
<h2 id="cerca-materiali-didattici">CERCA MATERIALI DIDATTICI</h2>
<p>Ora che conosci i tuoi obiettivi, le tue capacità e hai anche studiato il mercato, c&rsquo;è solo una cosa da fare. Devi verificare la disponibilità e la qualità dei materiali didattici relativi ai linguaggi di programmazione o alle tecnologie che ti interessano. I linguaggi popolari come Java o JavaScript hanno ampie risorse di apprendimento online, mentre le tecnologie o i framework più recenti non sono sempre ben coperti.</p>
<h2 id="quindi-quale-linguaggio-di-programmazione-imparare">QUINDI, QUALE LINGUAGGIO DI PROGRAMMAZIONE IMPARARE?</h2>
<p>Quale linguaggio di programmazione imparare, prima di tutto, dipende dai tuoi obiettivi professionali e dalle attuali competenze. Inoltre, devi anche tenere in considerazione le tendenze del mercato e la disponibilità di risorse di apprendimento.</p>
<p>Tuttavia, se dopo un po&rsquo; si scopre che un certo linguaggio di programmazione non ti piace, è una buona idea considerare di passare a uno diverso. Ciò che funziona per una persona potrebbe essere un incubo per un&rsquo;altra e viceversa, tutto dipende dalle tue esigenze.</p>
<p>Se vuoi dare un&rsquo;occhiata ad altre risorse di apprendimento per sviluppatori, puoi dare un&rsquo;occhiata anche alla sezione <a href="/guide">Guide</a> del blog.</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Strumenti essenziali per lo Sviluppo Web</title>
			<link>https://albertoreineri.it/blog/strumenti-essenziali-per-lo-sviluppo-web/</link>
			<pubDate>Thu, 24 Jun 2021 12:49:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/strumenti-essenziali-per-lo-sviluppo-web/</guid>
			<description>Ogni giorno noi sviluppatori utilizziamo un&amp;rsquo;ampia gamma di strumenti per completare le nostre attività. E poiché tutti differiamo nelle preferenze, così anche gli strumenti che utilizziamo possono essere diversi. Tuttavia, ci sono molti tool tra cui scegliere e provarli uno per uno sarà controproducente, per non dire, difficile. Quindi non sarebbe bello avere qualcosa come un coltello svizzero per gli sviluppatori? Sai, strumenti utili che potresti semplicemente estrarre dalla sezione dei tuoi preferiti?</description>
			<content type="html"><![CDATA[<p>Ogni giorno noi sviluppatori utilizziamo un&rsquo;ampia gamma di strumenti per completare le nostre attività. E poiché tutti differiamo nelle preferenze, così anche gli strumenti che utilizziamo possono essere diversi. Tuttavia, ci sono molti tool tra cui scegliere e provarli uno per uno sarà controproducente, per non dire, difficile. Quindi non sarebbe bello avere qualcosa come un coltello svizzero per gli sviluppatori? Sai, strumenti utili che potresti semplicemente estrarre dalla sezione dei tuoi preferiti? Questo ti evita la fatica di fare molte ricerche su Google che potrebbero portare alla procrastinazione.</p>
<p>Sebbene non esista un elenco definitivo, o addirittura autorevole, ho cercato di raccogliere alcuni strumenti per lo sviluppo web di cui non potrei fare a meno.</p>
<h2 id="applicazioni-generali">APPLICAZIONI GENERALI</h2>
<p>Queste applicazioni non sono necessariamente esclusive dello sviluppo. Diamine, anche uno studente universitario potrà utilizzare questi strumenti alcune volte. Ma sono comunque essenziali. Una volta aggiunti al tuo arsenale, questi strumenti ti aiuteranno nelle tue attività organizzative come prendere appunti, aggiungere segnalibri, archiviare documenti o risorse e strumenti di produttività generali che ti assicurano di portare a termine il lavoro.</p>
<h3 id="evernote">EVERNOTE</h3>
<p>Le attività di freelance come lo sviluppo web dipendono fortemente dalla produttività e dall&rsquo;organizzazione. Come sviluppatore, devi ricordare (o almeno prendere nota di) quasi tutto ciò che riguarda il tuo lavoro, comprese segnalazioni di bug, scadenze e altro. Meno male che c&rsquo;è un&rsquo;applicazione per le note che ti permette di ricordare tutto. Per inciso, il suo slogan ti incoraggia anche a “Ricordare tutto”. Quello strumento è  <a href="https://evernote.com/">Evernote</a> .</p>
<p>Uso Evernote da un po&rsquo; di tempo ormai e ne sto diventando dipendente… In effetti, ho Evernote installato su ogni dispositivo che possiedo. E con Evernote, posso acquisire, caricare e sincronizzare da qualsiasi dispositivo ovunque.</p>
<p>Evernote ha usi diversi come attività, elenchi, pianificazioni, segnalibri e altro. Puoi anche usare Evernote per avere un piccolo database di frammenti di codice che puoi usare quando vuoi. E poiché viene fornito con un web clipper, puoi facilmente ottenere le tue informazioni dal tuo browser alla tua app Evernote.</p>
<h3 id="google-drive">GOOGLE DRIVE</h3>
<p>Ovviamente non poteva mancare <a href="http://drive.google.com/">Google Drive</a>. Questo strumento mi dà la possibilità di condividere i miei documenti (e file) con clienti e colleghi. Di solito utilizzo Drive in modo intercambiabile con Dropbox (ma preferisco Drive perché lo trovo più facile da usare). Google Drive consente inoltre ai miei colleghi di commentare i documenti, così la comunicazione diventa più facile e meglio documentata.</p>
<h2 id="gestione-di-progetto">GESTIONE DI PROGETTO</h2>
<p>Lo sviluppo è un processo multi-thread in cui a volte hai bisogno di altre persone con cui lavorare. Devi anche stabilire buone linee di comunicazione tra te e i tuoi clienti. Gli strumenti di gestione dei progetti ti aiutano a organizzare e monitorare ogni attività, report e bug.</p>
<h3 id="asana">ASANA</h3>
<p>Asana ha tutto ciò che cerchi su uno strumento di gestione dei progetti: fissare scadenze, monitorare le singole attività, commentare e discutere le attività ed etichettare ogni sottoattività.</p>
<p>In verità, Asana rimane in cima alla mia lista di strumenti di gestione dei progetti.</p>
<h3 id="basecamp">BaseCamp</h3>
<p>Tuttavia, se non sei completamente venduto su Asana, c&rsquo;è <a href="http://basecamp.com/">Basecamp</a> , un altro strumento intuitivo di gestione dei progetti che ti consente di creare note e attività. La sua semplicità è spesso il punto di forza di Basecamp in quanto puoi navigare facilmente attraverso il sito Web senza nemmeno sforzarti di imparare (e familiarizzare con) l&rsquo;interfaccia.</p>
<h2 id="editor-di-testo">EDITOR DI TESTO</h2>
<p>Non puoi sviluppare nulla se non hai nulla con cui scrivere il tuo codice. Questo è il motivo per cui dovresti scegliere un editor di testo che ti piace davvero, beh, perché la codifica è il cuore dello sviluppo. Ecco alcune scelte:</p>
<h3 id="sublime">SUBLIME</h3>
<p><a href="http://www.sublimetext.com/">Sublime</a>  è un editor di testo multipiattaforma ed efficiente. Personalmente scelgo Sublime perché ha ottime funzionalità come plug-in e componenti aggiuntivi per attività specifiche della lingua. Ci sono anche molti comandi da tastiera per semplificare la codifica. Ha anche una finestra senza distrazioni che ti consente di concentrarti su ciò che stai sviluppando.</p>
<h3 id="blocco-note-">BLOCCO NOTE ++</h3>
<p>Prima di provare Sublime, ero un grande fan di <a href="http://notepad-plus-plus.org/">Notepad++</a>  e molti di voi potrebbero esserlo, principalmente perché Notepad++ è in circolazione da molto tempo. Quello che mi è piaciuto di Notepad++ è perché è facile da usare e combina la familiarità di base di Notepad.</p>
<p>Ma non lasciarti ingannare dalla sua semplicità. Notepad ++ ha un&rsquo;interfaccia personalizzabile in cui puoi nascondere le barre degli strumenti per creare un&rsquo;interfaccia priva di distrazioni. Ha anche una mappa del documento per salvarti dallo scorrimento scomodo.</p>
<h2 id="strumenti-di-sviluppo-locale">STRUMENTI DI SVILUPPO LOCALE</h2>
<p>Modificare molte cose su un sito Web live è pericoloso, potresti essere in grado di sovrascrivere i file inconsapevolmente e ciò potrebbe causare molti problemi. Ecco perché prima di implementare modifiche importanti sul tuo sito, dovresti testare tutto localmente (ad esempio usando  <em>localhost</em> ). Da qui questi strumenti:</p>
<h3 id="xampp">XAMPP</h3>
<p><a href="https://www.apachefriends.org/index.html">XAMPP</a>  (X-OS, Apache, MySQL, PHP, PERL) è un ambiente di test open source che raggruppa gli strumenti più diffusi per garantire un flusso di lavoro più fluido.</p>
<p>Quello che mi piace di XAMPP è che è disponibile per tutti i sistemi operativi, questo, ovviamente, aiuta quando hai un paio di computer con sistemi operativi diversi perché non devi scaricare (e imparare a usare) un software diverso solo per sviluppare qualcosa.</p>
<h3 id="mamp">MAMP</h3>
<p><a href="http://www.mamp.info/en/">MAMP</a>  (Mac, Apache, MySQL PHP) è un altro ambiente di test per sviluppatori. Tuttavia, questo è esclusivo per gli utenti Mac.</p>
<p>Se non sei un utente Mac (e non hai bisogno di Perl), ti consiglio di usare <a href="http://www.wampserver.com/en/">WAMP</a> .</p>
<h2 id="versioning">Versioning</h2>
<p>Non importa quanto sei uno sviluppatore esperto, ci saranno volte in cui non otterrai ciò che desideri al primo tentativo. Il più delle volte, lo sviluppo è per tentativi ed errori. Più modifiche apporti al tuo codice, più dovresti monitorare le modifiche che apporti. Gli strumenti di controllo della versione ti aiutano a tenere traccia di tutto.</p>
<h3 id="git">Git</h3>
<p><a href="http://git-scm.com/">Git</a>  è uno strumento open source per il controllo della versione e la gestione del codice che ti consente di vedere le modifiche applicate al tuo progetto usando i repository.</p>
<p>In qualità di sviluppatore, puoi aggiungere nuove funzionalità utilizzando la ramificazione e l&rsquo;unione in Git. E lo strumento ti consente di unire solo una volta che il codice è stabilizzato. Apportare modifiche alla tua applicazione è solo più sicuro. Questo è essenziale per i team che tendono a cambiare molte cose nel loro progetto e spesso hanno difficoltà a monitorare tali cambiamenti.</p>
<h3 id="beanstalk">BEANSTALK</h3>
<p><a href="http://beanstalkapp.com/">BeanStalk</a>  è un host per repository di codice e consente a te (e ai tuoi compagni di squadra) di collaborare e salvare i codici in una posizione remota e inviarli al tuo server.</p>
<h2 id="ftp">FTP</h2>
<p>Ovviamente, quando tutto è a posto, devi trasferire i tuoi file sul tuo server. E per questo, hai bisogno di un solido client FTP. Sì, sul tuo CPanel è presente un client di trasferimento file, ma i client FTP possono inviare facilmente e rapidamente più file al server Web utilizzando formati diversi.</p>
<h3 id="filezilla">FILEZILLA</h3>
<p><a href="https://filezilla-project.org/">Filezilla</a>  è un client FTP open source e multipiattaforma popolare per la sua facilità d&rsquo;uso. La maggior parte degli utenti si attiene a FileZilla perché è veloce e gratuito. La cosa fantastica di questo strumento è che è affidabile e ha persino una versione portatile che puoi semplicemente collegare a qualsiasi computer.</p>
<h3 id="cyberduck">CYBERDUCK</h3>
<p>Per gli utenti Mac a cui non piace Filezilla, <a href="https://cyberduck.io/?l=en">Cyberduck</a>  è un&rsquo;altra opzione. Come il suo concorrente più flessibile, Cyberduck è gratuito. Ha anche funzionalità come sguardo rapido, ringhio e modifica remota utilizzando uno degli editor di testo di cui abbiamo discusso nella parte precedente dell&rsquo;articolo.</p>
<h2 id="ide-ambienti-di-sviluppo-integrati">IDE (AMBIENTI DI SVILUPPO INTEGRATI)</h2>
<p>Gli IDE sono strumenti all-in-one che ti consentono di modificare codice, eseguire il debug, trasferimenti di file e altro ancora.</p>
<h3 id="netbeans">NetBeans</h3>
<p><a href="https://netbeans.org/">Netbeans</a>  è un IDE open source e flessibile che ti consente di sviluppare in PHP, Ruby on Rails, JavaScript e altro. Ha una funzione di editing potente e intuitiva, supporta FTP e MySQL. Quello che mi piace di più di Netbeans è il suo navigatore di codici che funziona bene per me.</p>
<h3 id="eclipse">Eclipse</h3>
<p><a href="https://eclipse.org/">Eclipse</a>  è anche un ottimo IDE. La cosa fantastica di Eclipse è che viene fornito con plug-in che ti consentono di fare quasi tutto ciò che vuoi.</p>
<h2 id="frameworks">FRAMEWORKS</h2>
<p>Questi framework sono per lo più front-end, perché non è necessario esercitare così tanto sforzo nella costruzione di un design squallido da zero quando puoi utilizzare framework migliori e più puliti.</p>
<h3 id="bootstrap">BOOTSTRAP</h3>
<p><a href="http://getbootstrap.com/">Bootstrap</a>  è uno dei framework front-end più popolari con cui creare la tua interfaccia utente. Personalmente ho scelto Bootstrap perché era il più facile da usare tra gli altri framework (come Foundation). Bootstrap viene fornito con una vasta gamma di esempi, modelli ed elementi personalizzabili che possono aiutare il tuo design ad avere un aspetto migliore. Inoltre, grazie alla sua popolarità, l&rsquo;utilizzo di Bootstrap ti dà accesso a un buon supporto.</p>
<h3 id="foundation">FOUNDATION</h3>
<p>Come Bootstrap, <a href="http://foundation.zurb.com/">Foundation</a>  ti fornisce anche un buon progetto per gli elementi front-end reattivi di cui hai bisogno. Ha una buona struttura a griglia ed è facile da modellare e personalizzare.</p>
]]></content>
		</item>
		
		<item>
			<title>Come ho creato un’app per le note</title>
			<link>https://albertoreineri.it/blog/come-ho-creato-unapp-per-le-note/</link>
			<pubDate>Mon, 03 Aug 2020 21:57:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-ho-creato-unapp-per-le-note/</guid>
			<description>In rete esistono molte app per le note. Le ho provate quasi tutte ma nessuna ha mai soddisfatto al pieno le mie esigenze.
Quando cerco un’app per le note ho bisogno di alcune cose fondamentali:
Grafica piacevole e minimale (odio il superfluo) Modalità notte Facilità di formattazione (non devo far granché, ma almeno poter inserire il grassetto in maniera semplice e veloce) Disponibile su tutti i dispositivi (odio dover usare per forza il pc o lo smartphone e non poter condividere) Una volta che ho capito come avrei voluto avere la mia app per le note non mi restava altro che iniziare a crearla!</description>
			<content type="html"><![CDATA[<p>In rete esistono <strong>molte app per le note.</strong> Le ho provate quasi tutte ma <strong>nessuna ha mai soddisfatto al pieno le mie esigenze</strong>.</p>
<p>Quando cerco un’app per le note ho bisogno di alcune cose <strong>fondamentali</strong>:</p>
<ul>
<li>Grafica <strong>piacevole</strong> e minimale (odio il superfluo)</li>
<li>Modalità <strong>notte</strong></li>
<li>Facilità di <strong>formattazione</strong> (non devo far granché, ma almeno poter inserire il grassetto in maniera semplice e veloce)</li>
<li>Disponibile su <strong>tutti i dispositivi</strong> (odio dover usare per forza il pc o lo smartphone e non poter condividere)</li>
</ul>
<p>Una volta che ho capito come avrei voluto avere la mia app per le note non mi restava altro che <strong>iniziare a crearla!</strong></p>
<p>Così è nata <a href="https://www.albynotes.albydev.net/" target="_blank" rel="noreferrer noopener">Albertonotes</a>!</p>
<p>Ho preso spunto soprattutto dall’app <a href="https://apps.apple.com/it/app/note/id1110145109" target="_blank" rel="noreferrer noopener">Note</a> di Apple e da <a href="https://simplenote.com/" target="_blank" rel="noreferrer noopener">Simplenote</a>, due fantastiche app, ma la prima è disponibile solo su <strong>iPhone</strong>, <strong>iPad</strong> e <strong>Mac</strong>, mentre la seconda permette la formattazione solo in <strong>markdown</strong> e bisogna sempre <em>switchare</em> fra testo editato e renderizzato, non proprio il massimo…</p>
<p>Ho così deciso di <strong>prendere il meglio da entrambe</strong> e metterlo inseme in qualcosa di mio.</p>
<h2 id="ho-utilizzato">Ho utilizzato:</h2>
<h3 id="php-e-mysql">PHP e MySQL</h3>
<p>Ho pensato di fare tutto in Javascript, magari con Node JS, ma lo <a href="/blog/cms-framework-o-core-language/">stack <strong>php e mysql</strong></a> lo conosco molto bene e visto che si tratta di un side project ho scelto la via più semplice per me</p>
<h3 id="ajax">Ajax</h3>
<p>Per evitare il reload della pagina ad ogni salvataggio, cambio di nota etc. ho utilizzato delle chiamate ajax.</p>
<p>In questo modo <strong>la pagina è sempre fissa</strong>, cambia solo il contenuto di alcune sessioni. se riuscirò a creare anche le varie app desktop e mobile questa funzionalità sarà molto utile, oltre che dare una piacevole esperienza utente</p>
<h3 id="quill-js">Quill JS</h3>
<p>Per formattare le note ho utilizzato <strong><a href="https://quilljs.com/" target="_blank" rel="noreferrer noopener">Quill JS</a></strong>, un fantastico editor in Javascript molto semplice da implementare e gestire.</p>
<p>Sono stato a lungo indeciso, in passato utilizzavo spesso <a href="https://ckeditor.com/ckeditor-4/demo/#inline" target="_blank" rel="noreferrer noopener">CkEditor</a> ma è un po’ pesantuccio. Mi interessava anche <a href="https://editorjs.io/" target="_blank" rel="noreferrer noopener">Editor Js</a>, molto bello graficamente ma mi è sembrato ancora un po’ agli inizi.</p>
<p>Quill JS è per me la scelta migliore, almeno per il momento.</p>
<h3 id="orange-framework">Orange Framework</h3>
<p>Non ne ho ancora parlato molto ma ho costruito un mio framework in php per creare le mie web app.</p>
<p>Ho lavorato con <strong>Laravel</strong> e <strong>CodeIgniter</strong>, ma mi trovo meglio a fare tutto da me. Voglio precisare che non si tratta di reinventare la ruota come molti dicono, ma di sviluppare le cose per bene la prima volta e riutilizzarle in seguito.</p>
<p>Ho iniziato creando il modulo di login, poi studiando un’architettura software decente e ora ho una struttura abbastanza pronta all’uso e soprattutto portable. Posso copiare i singoli moduli che mi interessano da un progetto all’altro, modificare il file di configurazione e sono sicuro che funzionano.</p>
<p>Potete provare l’app qui: <a href="https://typewrite.reineristudio.com/">https://www.albynotes.albydev.net</a></p>
<p>Sono ancora in <strong>fase beta</strong>, quindi ogni consiglio o segnalazione di bug è ben accetto!</p>
<p>Fammi sapere nei commenti cosa ne pensi o se vuoi saperne di più.</p>
<p>Spero che questo articolo sia stato interessante.</p>
]]></content>
		</item>
		
		<item>
			<title>Nascondere l’estensione alla fine dell’URL</title>
			<link>https://albertoreineri.it/blog/nascondere-lestensione-alla-fine-dellurl/</link>
			<pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/nascondere-lestensione-alla-fine-dellurl/</guid>
			<description>Oggi vedere l’estensione alla fine dell’URL non è il massimo, sia per quanto riguarda la SEO che per la “figura” che il sito fa con l’utente finale, sarebbe meglio nasconderla.
La possibilità di sceglierci gli URL è fondamentale per creare un buon sito. Utilizzando nel modo corretto le pagine PHP si può arrivare semplicemente a questo risultato nascondendo solamente l’estensione dall’URL
In questa guida vedremo come “cancellare” il .php alla fine dell’URL.</description>
			<content type="html"><![CDATA[<p>Oggi vedere l’estensione alla fine dell’URL non è il massimo, sia per quanto riguarda la SEO che per la “figura” che il sito fa con l’utente finale, sarebbe meglio nasconderla.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/VWqwsKL2-mM" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>La <strong>possibilità di sceglierci gli URL</strong> è fondamentale per creare un buon sito. Utilizzando nel modo corretto le pagine PHP si può arrivare semplicemente a questo risultato nascondendo solamente l’estensione dall’URL</p>
<p>In questa guida vedremo come <strong>“cancellare” il .php</strong> alla fine dell’URL.</p>
<p>Per fare questo è sufficiente <strong>inserire il seguente codice nel file .htaccess</strong> nella root del sito. Se il file .htaccess non esiste createlo utilizzando un editor di testo.</p>
<pre tabindex="0"><code>RewriteEngine on

RewriteCond %{THE_REQUEST} /([^.]+)\.php [NC]

RewriteRule ^ /%1 [NC,L,R]

RewriteCond %{REQUEST_FILENAME}.php -f

RewriteRule ^ %{REQUEST_URI}.php [NC,L]
</code></pre><p>In questo modo tutti i vostri file “.php” verranno visualizzati senza estensione.</p>
<p>Così facendo tutto il sito risulta migliore. Gli indirizzi saranno molto più “<em>seo friendly</em>” e ne gioverà anche la sicurezza del sito web.</p>
<p>Se guardi i siti moderni delle grandi aziende ormai nessuno utilizza più l’estensione alla fine dell’URL.</p>
<p>Oggi possiamo utilizzare anche framework che ci permettono di gestire gli URL in maniera completamente personalizzata e ottimale, ma non sempre si ha bisogno di un intero framework. Spesso per piccoli progetti conviene fare le cose da zero, e in questi casi basta qualche riga di codice nel file .htaccess e si può facilmente nascondere l’estensione dall’URL.</p>
<p>Se vuoi imparare ad utilizzare un semplice sistema di routing, per organizzare il sito web nel modo migliore e gestire al meglio i tuoi URL, leggi questo <a href="https://albydev.net/blog/semplice-sistema-di-routing-in-php/">articolo</a>. È molto basico e semplice ma può essere utilizzato per piccoli progetti senza grandi pretese. Certo non ha nulla a che vedere con il routing di <a href="https://laravel.com/">Laravel</a> per esempio, ma può essere un buon punto di partenza per migliorare le proprie skills.</p>
]]></content>
		</item>
		
		<item>
			<title>Starter Theme per WordPress</title>
			<link>https://albertoreineri.it/blog/starter-theme-per-wordpress/</link>
			<pubDate>Wed, 18 Dec 2019 21:44:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/starter-theme-per-wordpress/</guid>
			<description>Dopo aver utilizzato WordPress per vari progetti ho deciso di creare e condividere il mio starter theme.
Con questo progetto è possibile partire da una base pre-fatta e velocizzare i tempi di creazione di un nuovo tema da zero.
Il tema comprende già:
bootstrap font awesome back on top Sviluppare temi da zero consente di ottenere risultati molto elevati, permettendo una personalizzazione praticamente totale, un’ottimizzazione dei caricamenti e aumentando la sicurezza del sito, a patto che ci sappia cosa si sta facendo.</description>
			<content type="html"><![CDATA[<p>Dopo aver utilizzato WordPress per vari progetti ho deciso di creare e condividere il mio starter theme.</p>
<p>Con questo progetto è possibile partire da una base pre-fatta e velocizzare i tempi di creazione di un nuovo tema da zero.</p>
<p>Il tema comprende già:</p>
<ul>
<li>bootstrap</li>
<li>font awesome</li>
<li>back on top</li>
</ul>
<p>Sviluppare temi da zero consente di ottenere risultati molto elevati, permettendo una personalizzazione praticamente totale, un’ottimizzazione dei caricamenti e aumentando la sicurezza del sito, a patto che ci sappia cosa si sta facendo.</p>
<h2 id="no-ai-temi-pre-fatti">No ai temi pre fatti</h2>
<p>Questa è una mia opinione del tutto personale, può essere condivisa o meno.</p>
<p>Personalmente non mi sono mai trovato bene con i temi prefatti acquistabili su themeforest o altre piattaforme simili. C’è sempre qualcosa che vorrei fare ma che non posso…</p>
<p>Preferisco fare da zero e avere la completa gestione di tutto, potermi muovere come voglio, prendermi carico dei problemi e risolverli in quello che penso sia il modo migliore.</p>
<p>In fondo sono uno sviluppatore, il drag and drop non mi piace molto… Preferisco i codici!</p>
<p>Ma partire da zero ogni volta può essere pesante, noioso nonché una perdita di tempo. Perciò ho realizzato uno starter theme, cioè un tema base per WordPress comprendente già tutti i layout necessari, alcune librerie, il form di ricerca e altre piccole cose che mi permettono di poter iniziare subito a realizzare la parte divertente del sito.</p>
<p>In questo modo non devo ogni volta dipartire proprio da zero, ho già lo scheletro funzionante pronto per essere utilizzato.</p>
<h2 id="starter-theme-per-wordpress-open-source">Starter Theme per WordPress Open Source</h2>
<p>Dopo aver realizzato Orange Starter Theme per WordPress ed averlo utilizzato con successo in molti siti web, ho deciso di renderlo <a href="https://github.com/albertoreineri/orange-starter-theme" target="_blank" rel="noreferrer noopener">open source</a>, in questo modo potrà essere utilizzato e ampliato da chiunque.</p>
<p>Ogni eventuale bug potrà essermi segnalato tramite <a href="https://github.com/albertoreineri/orange-starter-theme" target="_blank" rel="noreferrer noopener">github</a> o direttamente dal modulo contatti di questo sito, prenderò in carico il problema e lo risolverò nel più breve tempo possibile.</p>
]]></content>
		</item>
		
		<item>
			<title>Come usare GIT</title>
			<link>https://albertoreineri.it/blog/come-usare-git/</link>
			<pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-usare-git/</guid>
			<description>Poco tempo fa ho scritto un articolo elogiando Git, questo software di controllo versione del quale ormai non posso più fare a meno, quindi ho pensato di scrivere una guida per spiegare come usare GIT!
MA COME SI USA CONCRETAMENTE GIT? E’ DIFFICILE DA USARE? Partiamo dal fatto che “Git” può essere tradotto con “idiota“, questo quasi a dirci che è un software a prova di scemo…
Scherzi a parte no, è molto semplice da utilizzare, inoltre può essere un buon punto di inizio per imparare ad utilizzare la CLI, l’interfaccia a riga di comando!</description>
			<content type="html"><![CDATA[<p>Poco tempo fa ho scritto un <a href="/blog/che-cose-git/">articolo</a> elogiando <strong>Git</strong>, questo software di controllo versione del quale ormai <strong>non posso più fare a meno</strong>, quindi ho pensato di scrivere una guida per spiegare come usare GIT!</p>
<h2 id="ma-come-si-usa-concretamente-git-e-difficile-da-usare">MA COME SI USA CONCRETAMENTE GIT? E’ DIFFICILE DA USARE?</h2>
<p>Partiamo dal fatto che “Git” può essere tradotto con “<em>idiota</em>“, questo quasi a dirci che è un software a prova di scemo…</p>
<p>Scherzi a parte no, è <strong>molto semplice</strong> da utilizzare, inoltre può essere un buon <strong>punto di inizio per imparare ad utilizzare la CLI,</strong> l’interfaccia a riga di comando!</p>
<h2 id="installazione">INSTALLAZIONE</h2>
<p>Per <strong>scaricare</strong> Git è sufficiente andare su questo sito: <a href="https://git-scm.com/">https://git-scm.com/</a></p>
<p>Una volta aperto il link cliccate su “Download”, selezionate il vostro sistema operativo ed effettuate l’installazione.</p>
<p>Se utilizzate Windows vi consiglio di installare anche Git Bash, una CLI molto carina che utilizzo anche per molto altro.</p>
<h2 id="utilizzo">UTILIZZO</h2>
<p>Una volta installato git potete aprire Git Bash e spostarvi nella cartella di un vostro progetto (tramite il comando <em>cd</em>. Es: <em>cd C:/Users/alby/progetti/app</em>)</p>
<p>Qui inserite il comando</p>
<pre tabindex="0"><code>git init
</code></pre><p>e git sarà presente nel vostro progetto con una cartella nascosta chiamata .git. Non aprite mai questa cartella, lasciatela semplicemente lì dove si trova, non vi farà del male.</p>
<p>Ora potete digitare, sempre su Git Bash, il seguente comando:</p>
<pre tabindex="0"><code>git add .
</code></pre><p>Questo <strong>caricherà</strong> tutti i file del progetto nella staging area, in attesa di essere approvati.</p>
<p>Dopodiché basterà scrivere</p>
<pre tabindex="0"><code>git commit -m “nome del commit”
</code></pre><p>Questo comando <em>committerà</em> i vostri file, creerà cioè una versione del vostro progetto. Fra virgolette potete scrivere ad esempio “Primo commit”, nei successivi andrete ad indicare le modifiche effettuate (Es: Inserito login)</p>
<h2 id="git-hub">GIT HUB</h2>
<p>E’ anche possibile salvare i commit su github, in modo da poterli consultare e scaricare ovunque e permettere ad altri sviluppatori di consultare il nostro codice e migliorarlo!</p>
<p>Per fare questo bisogna avere un account GitHub e creare un nuovo Repository.</p>
<p>Dopo aver creato un nuovo repository GitHub vi indica già i comandi da eseguire per “riempirlo” con il vostro progetto in locale.</p>
<p>Per fare questo dovere inserire:</p>
<pre tabindex="0"><code>git remote add origin https://github.com[link al repository]
</code></pre><pre tabindex="0"><code>git push -u origin master
</code></pre><p>In questo modo avete il vostro progetto anche su GitHub. Per scaricarlo basterà usare il comando</p>
<pre tabindex="0"><code>git pull https://github.com[link al repository]
</code></pre><p>Questi sono i <strong>comandi base</strong>. Una volta creato il commit si possono fare altre modifiche al progetto e ridare i comandi add e commit.</p>
<p>Esistono <strong>molti altri comandi</strong> per utilizzare questo software. <strong>Il modo migliore per impararli tutti è utilizzarli</strong>, quindi inizia a sporcarti le mani e provali! <strong>Non potrai più farne a meno</strong>.</p>
<p>Qua di seguito inserisco una lista dei <strong>comandi più utilizzat</strong>i spiegati rapidamente.</p>
<h2 id="comandi-per-git">COMANDI PER GIT</h2>
<h3 id="git-config">git config</h3>
<p><em>Utilizzo:</em> git config –global user.name “[name]”  </p>
<p><em>Utilizzo:</em> git config –global user.email “[email address]”  </p>
<p>Questo comando imposta rispettivamente il nome dell’autore e l’indirizzo e-mail da utilizzare per i tuoi commit.</p>
<pre tabindex="0"><code>git config –global user.name &#34;alberto&#34;
git config -global user.email &#34;alberto@alberto.it&#34;
</code></pre><h3 id="git-init">git init</h3>
<p><em>Utilizzo:</em> git init [repository name]</p>
<p>Questo comando viene utilizzato per avviare un nuovo repository (progetto).</p>
<pre tabindex="0"><code>git init DEMO
</code></pre><h3 id="git-clone">git clone</h3>
<p><em>Utilizzo:</em> git clone [url]  </p>
<p>Questo comando viene utilizzato per clonare un repository da un URL esistente.</p>
<pre tabindex="0"><code>git clone https://github.com/albertoreineri/Simple-Header-and-Footer.git
</code></pre><h3 id="git-add">git add</h3>
<p><em>Utilizzo:</em> git add [file]  </p>
<p>Questo comando aggiunge un file all’area di gestione temporanea.</p>
<pre tabindex="0"><code>git add file.php
</code></pre><p><em>Utilizzo:</em> git add *  </p>
<p>Questo comando aggiunge uno o più file all’area di gestione temporanea.</p>
<pre tabindex="0"><code>git add *
</code></pre><h3 id="git-commit">git commit</h3>
<p><em>Utilizzo:</em> git commit -m “[ Type in the commit message]”  </p>
<p>Questo comando registra o l’istantanea dei file in modo permanente nella cronologia delle versioni.</p>
<pre tabindex="0"><code>git commit -m &#34;Modificato file.php&#34;
</code></pre><h3 id="git-status">git status</h3>
<p><em>Utilizzo:</em> git status  </p>
<p>Questo comando elenca tutti i file che devono essere committati.</p>
<pre tabindex="0"><code>git status
</code></pre><h3 id="git-rm">git rm</h3>
<p><em>Utilizzo:</em> git rm [file]  </p>
<p>Questo comando cancella il file dalla directory di lavoro e mette in scena l’eliminazione.</p>
<pre tabindex="0"><code>git rm file.php
</code></pre><h3 id="git-log">git log</h3>
<p><em>Utilizzo:</em> git log  </p>
<p>Questo comando viene utilizzato per elencare la cronologia delle versioni per il ramo corrente.</p>
<pre tabindex="0"><code>git log
</code></pre><h3 id="git-branch">git branch</h3>
<p><em>Utilizzo:</em> git branch  </p>
<p>Questo comando elenca tutti i branch locali nel repository corrente.</p>
<pre tabindex="0"><code>git branch
</code></pre><p><em>Utilizzo:</em> git branch [branch name]  </p>
<p>Questo comando crea un nuovo branch.</p>
<pre tabindex="0"><code>git branch nome-del-branch
</code></pre><p><em>Utilizzo:</em> git branch -d [branch name]  </p>
<p>Questo comando elimina il branch.</p>
<pre tabindex="0"><code>git branch -d nome-del-branch
</code></pre><h3 id="git-checkout">git checkout</h3>
<p><em>Utilizzo:</em> git checkout [branch name]  </p>
<p>Questo comando viene utilizzato per passare da un branch all’altro.</p>
<pre tabindex="0"><code>git checkoug nome-del-branch
</code></pre><p><em>Utilizzo:</em> git checkout -b [branch name]  </p>
<p>Questo comando crea un nuovo branch e passa anche a esso.</p>
<pre tabindex="0"><code>git checkout -b nome-del-branch
</code></pre><h3 id="git-merge">git merge</h3>
<p><em>Utilizzo:</em> git merge [branch name]  </p>
<p>Questo comando unisce la cronologia del branch specificato nel branch corrente.</p>
<pre tabindex="0"><code>git merge nome-del-branch
</code></pre><h3 id="git-remote">git remote</h3>
<p><em>Utilizzo:</em> git remote add [variable name] [Remote Server Link]  </p>
<p>Questo comando viene utilizzato per connettere il repository locale al server remoto.</p>
<pre tabindex="0"><code>git remove add origin https://github.com/githubUser/repoName.git
</code></pre><h3 id="git-push">git push</h3>
<p><em>Utilizzo:</em> git push [variable name] master  </p>
<p>Questo comando invia le modifiche da locale al repository remoto.</p>
<pre tabindex="0"><code>git push origin master
</code></pre><p><em>Utilizzo:</em> git push [variable name] [branch]  </p>
<p>Questo comando invia i commit dei branch al repository remoto.</p>
<pre tabindex="0"><code>git push origin nome-del-branch
</code></pre><p><em>Utilizzo:</em> git push –all [variable name]  </p>
<p>Questo comando invia tutti i branch al repository remoto.</p>
<pre tabindex="0"><code>git push -all origin
</code></pre><p><em>Utilizzo:</em> git push [variable name] :[branch name]  </p>
<p>Questo comando elimina un branch sul repository remoto.</p>
<pre tabindex="0"><code>git push -all origin : nome-del-branch
</code></pre><h3 id="git-pull">git pull</h3>
<p><em>Utilizzo:</em> git pull [Repository Link]  </p>
<p>Questo comando recupera e unisce le modifiche sul server remoto alla directory di lavoro.</p>
<pre tabindex="0"><code>git pull https://github.com/GitHubUser/GitHubRepo.git
</code></pre>]]></content>
		</item>
		
		<item>
			<title>Certificato SSL: come reindirizzare http a https</title>
			<link>https://albertoreineri.it/blog/certificato-ssl-come-reindirizzare-http-a-https/</link>
			<pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/certificato-ssl-come-reindirizzare-http-a-https/</guid>
			<description>Vediamo come installare un certificato SSL sul nostro sito e passare da http a https.
Vuoi rimuovere la scritta “non sicuro” che compare vicino all’URL del tuo sito? Allora questo articolo fa al caso tuo!
Non andremo ad approfondire che cos’è l’HTTPS, ma vedremo semplicemente come far funzionare il tuo sito in modo che sia sicuro.
La procedura è molto semplice, ti basterà seguire questi due passaggi:
1. Attivare l’SSL sul tuo spazio web Entra nel pannello di controllo del tuo servizio di Hosting e cerca “Attiva HTTPS“, “Attiva SSL” o qualcosa di simile (varia a seconda del servizio).</description>
			<content type="html"><![CDATA[<p>Vediamo come installare un certificato SSL sul nostro sito e passare da http a https.</p>
<p>Vuoi rimuovere la scritta “<strong>non sicuro</strong>” che compare <strong>vicino all’URL</strong> del tuo sito? Allora questo articolo fa al caso tuo!</p>
<p><strong>Non</strong> andremo ad approfondire che cos’è <strong>l’HTTPS</strong>, ma vedremo semplicemente come far funzionare il tuo sito in modo che sia sicuro.</p>
<p>La procedura è molto semplice, ti basterà seguire questi due passaggi:</p>
<h2 id="1-attivare-lssl-sul-tuo-spazio-web">1. Attivare l’SSL sul tuo spazio web</h2>
<p>Entra nel <strong>pannello di controllo</strong> del tuo servizio di Hosting e cerca “<strong>Attiva HTTPS</strong>“, “<strong>Attiva SSL</strong>” o qualcosa di simile (varia a seconda del servizio).</p>
<p>Una volta trovata la sezione giusta <strong>attiva il servizio</strong>. <strong>Può volerci qualche ora</strong> prima che sia attivo.</p>
<p>Dopo qualche ora prova a collegarti al tuo sito digitando <a href="https://www.nomesito.it">https://www.nomesito.it</a>. Se tutto funziona correttamente vai al passaggio 2.</p>
<p>Se visualizzi degli <strong>errori</strong> probabilmente è perché hai dei link http per fogli di stile, immagini e file js. Prova a <strong>sostituire l’http con https</strong> in tutti i riferimenti a immagini, css e js, dovrebbe sistemarsi tutto.</p>
<p>Se utilizzi <strong><a href="/blog/come-installare-e-personalizzare-un-tema-wordpress-2/">WordPress</a></strong> puoi utilizzare dei <strong>plugin</strong> che si occupano del problema, ad esempio <a href="https://it.wordpress.org/plugins/really-simple-ssl/">Really Simple SSL</a> oppure <a href="https://it.wordpress.org/plugins/wp-force-ssl/">WP Force SSL</a>. Utilizzando questi plugin puoi saltare il punto 2, i plugin si occupano di tutto da soli</p>
<h2 id="2-redirigere-il-traffico-verso-https">2. REDIRIGERE IL TRAFFICO VERSO HTTPS</h2>
<p>Se hai effettuato correttamente il punto uno ora puoi aprire il file <strong>.htaccess</strong> presente nella root del tuo sito (se non c’è crealo) e inserire questo codice:</p>
<pre tabindex="0"><code>RewriteEngine on

RewriteCond %{HTTP:X-Forwarded-Proto} !https

RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]
</code></pre><p>In questo modo tutte le chiamate al server verranno redirette verso <strong>l’https</strong>.</p>
<p>Se questo codice crea un errore circa i reindirizzamenti puoi sostituire </p>
<pre tabindex="0"><code>RewriteCond %{HTTP:X-Forwarded-Proto} !https
</code></pre><p>con</p>
<pre tabindex="0"><code>RewriteCond %{HTTPS}  !=on.
</code></pre><p>Con questi semplici passaggi puoi installare un certificato SSL e redirigere il traffico da http a https, ottenendo un sito web più sicuro.</p>
]]></content>
		</item>
		
		<item>
			<title>Reindirizzare http a https</title>
			<link>https://albertoreineri.it/blog/reindirizzare-http-a-https/</link>
			<pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/reindirizzare-http-a-https/</guid>
			<description>Vediamo come installare un certificato SSL sul nostro sito e passare da http a https.
Vuoi rimuovere la scritta “non sicuro” che compare vicino all’URL del tuo sito? Allora questo articolo fa al caso tuo!
Non andremo ad approfondire che cos’è l’HTTPS, ma vedremo semplicemente come far funzionare il tuo sito in modo che sia sicuro.
La procedura è molto semplice, ti basterà seguire questi due passaggi:
1. Attivare l’SSL sul tuo spazio web Entra nel pannello di controllo del tuo servizio di Hosting e cerca “Attiva HTTPS“, “Attiva SSL” o qualcosa di simile (varia a seconda del servizio).</description>
			<content type="html"><![CDATA[<p>Vediamo come installare un certificato SSL sul nostro sito e passare da http a https.</p>
<p>Vuoi rimuovere la scritta “<strong>non sicuro</strong>” che compare <strong>vicino all’URL</strong> del tuo sito? Allora questo articolo fa al caso tuo!</p>
<p><strong>Non</strong> andremo ad approfondire che cos’è <strong>l’HTTPS</strong>, ma vedremo semplicemente come far funzionare il tuo sito in modo che sia sicuro.</p>
<p>La procedura è molto semplice, ti basterà seguire questi due passaggi:</p>
<h2 id="1-attivare-lssl-sul-tuo-spazio-web">1. Attivare l’SSL sul tuo spazio web</h2>
<p>Entra nel <strong>pannello di controllo</strong> del tuo servizio di Hosting e cerca “<strong>Attiva HTTPS</strong>“, “<strong>Attiva SSL</strong>” o qualcosa di simile (varia a seconda del servizio).</p>
<p>Una volta trovata la sezione giusta <strong>attiva il servizio</strong>. <strong>Può volerci qualche ora</strong> prima che sia attivo.</p>
<p>Dopo qualche ora prova a collegarti al tuo sito digitando <a href="https://www.nomesito.it">https://www.nomesito.it</a>. Se tutto funziona correttamente vai al passaggio 2.</p>
<p>Se visualizzi degli <strong>errori</strong> probabilmente è perché hai dei link http per fogli di stile, immagini e file js. Prova a <strong>sostituire l’http con https</strong> in tutti i riferimenti a immagini, css e js, dovrebbe sistemarsi tutto.</p>
<p>Se utilizzi <strong><a href="/blog/come-installare-e-personalizzare-un-tema-wordpress-2/">WordPress</a></strong> puoi utilizzare dei <strong>plugin</strong> che si occupano del problema, ad esempio <a href="https://it.wordpress.org/plugins/really-simple-ssl/">Really Simple SSL</a> oppure <a href="https://it.wordpress.org/plugins/wp-force-ssl/">WP Force SSL</a>. Utilizzando questi plugin puoi saltare il punto 2, i plugin si occupano di tutto da soli</p>
<h2 id="2-redirigere-il-traffico-verso-https">2. REDIRIGERE IL TRAFFICO VERSO HTTPS</h2>
<p>Se hai effettuato correttamente il punto uno ora puoi aprire il file <strong>.htaccess</strong> presente nella root del tuo sito (se non c’è crealo) e inserire questo codice:</p>
<pre tabindex="0"><code>RewriteEngine on

RewriteCond %{HTTP:X-Forwarded-Proto} !https

RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]
</code></pre><p>In questo modo tutte le chiamate al server verranno redirette verso <strong>l’https</strong>.</p>
<p>Se questo codice crea un errore circa i reindirizzamenti puoi sostituire </p>
<pre tabindex="0"><code>RewriteCond %{HTTP:X-Forwarded-Proto} !https
</code></pre><p>con</p>
<pre tabindex="0"><code>RewriteCond %{HTTPS}  !=on.
</code></pre><p>Con questi semplici passaggi puoi installare un certificato SSL e redirigere il traffico da http a https, ottenendo un sito web più sicuro.</p>
]]></content>
		</item>
		
		<item>
			<title>SASS Tutorial - Che cos’è e perché non potrai più farne a meno</title>
			<link>https://albertoreineri.it/blog/sass-tutorial-che-cos%C3%A8-e-perch%C3%A9-non-potrai-pi%C3%B9-farne-a-meno/</link>
			<pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/sass-tutorial-che-cos%C3%A8-e-perch%C3%A9-non-potrai-pi%C3%B9-farne-a-meno/</guid>
			<description>Se vivi nel mondo dello sviluppo web allora sicuramente avrai già sentito parlare di SASS, il preprocessore di CSS più famoso! Questo è uno strumento fantastico che consente di estendere di molto le possibilità del CSS e creare e gestire i fogli di stile in maniera veloce e ben organizzata.
SASS è un preprocessore CSS, che aggiunge funzionalità speciali come variabili, annidamenti, mixin e molto altro ai normali CSS. L’obiettivo è rendere il processo di creazione del CSS semplice ed efficace, sia da scrivere che da leggere in futuro.</description>
			<content type="html"><![CDATA[<p>Se vivi nel mondo dello <strong>sviluppo web</strong> allora sicuramente avrai già sentito parlare di <strong>SASS</strong>, il preprocessore di CSS più famoso! Questo è uno <strong>strumento fantastico</strong> che consente di <strong>estendere di molto le possibilità del CSS</strong> e creare e gestire i fogli di stile in maniera <strong>veloce</strong> e ben <strong>organizzata</strong>.</p>
<p><strong>SASS</strong> è un <strong>preprocessore CSS</strong>, che aggiunge funzionalità speciali come <strong>variabili</strong>, <strong>annidamenti</strong>, <strong>mixin</strong> e molto altro ai normali CSS. L’obiettivo è rendere il processo di creazione del C<strong>SS semplice ed efficace</strong>, sia da scrivere che da leggere in futuro.</p>
<blockquote>
<p><em>Ma andiamo un po’ più nel dettaglio!</em></p>
</blockquote>
<h2 id="che-cosè-un-preprocessore-css">Che cos’è un preprocessore CSS?</h2>
<p>Un preprocessore CSS è un <strong>linguaggio di scripting</strong> che estende i CSS, consentendo agli sviluppatori di scrivere codice in un determinato linguaggio e quindi <strong>compilarlo</strong> in CSS. <a href="https://sass-lang.com/">Sass</a> è forse il preprocessore più popolare in circolazione in questo momento, ma altri esempi ben noti includono <a href="http://lesscss.org/">Less</a> e <a href="http://stylus-lang.com/">Stylus</a>.</p>
<p><strong>Prima di proseguire, è necessaria una rapida premessa:</strong> <em>la maggior parte dei web designer direbbe che se sei nuovo nel mondo del CSS, è meglio evitare Sass (o eventuali preprocessori, estensioni o framework) mentre sei ancora in fase di apprendimento. Sebbene questi tool offrono molti vantaggi in termini di velocità ed efficienza, è importante che conoscere a fondo le basi del CSS prima di affacciarsi ai preprocessori. Assicurati quindi di apprendere i concetti chiave prima di iniziare ad esplorare i vari tool a disposizione. Questo vale per ogni tecnologia ed ogni framework, prima è sempre buona norma imparare a dovere il linguaggio base e poi i vari strumenti su esso costruiti!</em></p>
<blockquote>
<p><em>Finito il predicozzo torniamo a Sass!</em></p>
</blockquote>
<h2 id="che-cosè-sass">Che cos’è Sass?</h2>
<p><strong>Sass</strong> (che sta per “Syntactically awesome style sheets”) è un’<strong>estensione del CSS</strong> che consente di usare cose come variabili, regole nidificate, importazioni in linea e altro. Aiuta anche a mantenere il <strong>codice organizzato</strong> e consente di <strong>creare fogli di stile molto più velocemente.</strong></p>
<p><strong>Sass è compatibile con tutte le versioni di CSS</strong>. L’unico requisito per usarlo è avere installato Ruby. Gli sviluppatori che lo utilizzano sono inoltre invitati a seguire le <a href="https://sass-lang.com/community-guidelines">Linee guida della community di Sass</a>, è sempre un bene darci un’occhiata.</p>
<h2 id="come-usare-sass">Come usare Sass?</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/cM6UQxF9PSA" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>Nella sezione seguente, vedremo alcuni suggerimenti di base per l’utilizzo di Sass, usando esempi tratti dal sito Web ufficiale di Sass. Dai un’occhiata alla <a href="https://sass-lang.com/documentation">documentazione ufficiale</a> per ulteriori riferimenti ed esempi.</p>
<h3 id="sintassi">Sintassi</h3>
<p>Sass include <strong>due opzioni di sintassi</strong>:</p>
<ul>
<li><strong>SCSS</strong> (Sassy CSS): utilizza l’estensione del file .scss ed è pienamente conforme alla sintassi CSS. (la mia preferita!)</li>
<li><strong>SASS</strong>: utilizza l’indentazione al posto delle parentesi ed ha estensione .sass; non è completamente conforme alla sintassi CSS, ma è più veloce da scrivere. (Per gli amanti di Python)</li>
</ul>
<p>I file possono comunque essere convertiti da una sintassi all’altra utilizzando il comando <strong>sass-convert</strong>.</p>
<h3 id="variabili">Variabili</h3>
<p>Proprio come altri linguaggi di programmazione, <strong>Sass consente l’uso di variabili</strong> che possono memorizzare informazioni che è possibile utilizzare in tutto il foglio di stile.</p>
<p>Ad esempio, <strong>è possibile memorizzare un valore di colore in una variabile</strong> nella parte superiore del file e quindi utilizzare questa variabile quando si imposta il colore dei propri elementi. Ciò consente di <strong>cambiare rapidamente i colori senza dover modificare ciascuna riga separatamente</strong>.</p>
<p><em>Per esempio:</em></p>
<pre tabindex="0"><code>$font-stack:    Helvetica, sans-serif;
$primary-color: #333;

body {
  font: 100% $font-stack;
  color: $primary-color;
}
</code></pre><p><strong>Questo codice genererà il seguente CSS:</strong></p>
<pre tabindex="0"><code>body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}
</code></pre><h3 id="annidamento">Annidamento</h3>
<p><em>L’annidamento è un’arma a doppio taglio.</em> Sebbene fornisca un metodo eccellente per ridurre la quantità di codice da scrivere, può anche portare a CSS troppo “incasinati” se non eseguito con cura.</p>
<p>L’idea è di annidare i selettori CSS in modo tale da <strong>imitare la gerarchia HTML.</strong></p>
<p>Ecco un <strong>esempio</strong> di menù di navigazione che utilizza l’annidamento:</p>
<pre tabindex="0"><code>nav {
  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  li { display: inline-block; }

  a {
    display: block;
    padding: 6px 12px;
    text-decoration: none;
  }
}
</code></pre><p><strong>L’output CSS sarà il seguente:</strong></p>
<pre tabindex="0"><code>nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

nav li {
  display: inline-block;
}

nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}
</code></pre><h3 id="parzializzazione">Parzializzazione</h3>
<p>I <strong>parziali</strong> sono <strong>file Sass più piccoli</strong> che possono essere importati (vedi la sezione successiva) in altri file Sass. Sono come <strong>frammenti di codice</strong>. Con questi frammenti il CSS può essere <strong>modulare</strong> e più <strong>facile da mantenere</strong>. Un parziale è designato come tale nominandolo con un carattere di underscore iniziale: <strong>_partial.scss</strong>.</p>
<h3 id="importazione">Importazione</h3>
<p>Utilizzatato con i parziali (vedere la sezione precedente), il comando @import consente di <strong>importare i file parziali nel file corrente</strong>, per <strong>creare un singolo file CSS.</strong> In questo modo in fase di sviluppo è possibile <strong>suddividere il codice per sezioni</strong>, mentre in fase di caricamento del sito ci sarà solamente <strong>un file .css</strong> da caricare, <strong>riducendo la richiesta al server</strong>.</p>
<p><em>Ecco un esempio:</em></p>
<p><strong>_reset.scss</strong></p>
<pre tabindex="0"><code>html,
body,
ul,
ol {
   margin: 0;
  padding: 0;
}
</code></pre><p><strong>basefile.scss</strong></p>
<pre tabindex="0"><code>@import &#39;reset&#39;;

body {
  font: 100% Helvetica, sans-serif;
  background-color: #efefef;
}
</code></pre><p><strong>Output CSS:</strong></p>
<pre tabindex="0"><code>html, body, ul, ol {
  margin: 0;
  padding: 0;
}

body {
  font: 100% Helvetica, sans-serif;
  background-color: #efefef;
}
</code></pre><p><strong>Importante</strong>: quando si importano i parziali, non è necessario includere l’estensione del file o l’underscore.</p>
<h3 id="mixins">Mixins</h3>
<p>Uno dei vantaggi dell’utilizzo dei preprocessori è la capacità di <strong>prendere codice complesso e complicato e semplificarlo</strong>. È qui che i mixin ci vengono in aiuto!</p>
<p>Ad esempio, se è necessario includere i <strong>vendor prefixes</strong>, è possibile utilizzare un mixin. Dai un’occhiata a questo esempio per border-radius:</p>
<pre tabindex="0"><code>@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

.box { @include border-radius(10px); }
</code></pre><p>Da notare: il comando @mixin è in alto. È stato dato il nome “border-radius” e la variabile “$radius” come parametro. Questa variabile viene utilizzata per impostare il valore del raggio per ciascun elemento.</p>
<p>Successivamente, viene chiamato il comando @include, insieme al nome del mixin (“border-radius”) e un parametro (10px). Pertanto .box {@include border-radius (10px); }.</p>
<p><strong>Viene prodotto il seguente CSS:</strong></p>
<pre tabindex="0"><code>.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}
</code></pre><h3 id="extend">Extend</h3>
<p>Il comando @extend è stato definito una delle <strong>funzionalità più potenti</strong> di Sass. Dopo averlo visto in azione, è chiaro il perché.</p>
<p>L’idea è che con questa direttiva non dovrai includere più nomi di classe nei tuoi elementi HTML e puoi <strong>mantenere il tuo codice DRY</strong> (Don’t repeat yourself). I selettori possono ereditare gli stili di altri selettori e quindi essere facilmente estesi quando necessario.</p>
<h3 id="operatori">Operatori</h3>
<p>La possibilità di e<strong>seguire calcoli nel CSS</strong> consente consente di ampliare le possibilità, come convertire i valori dei pixel in percentuali. Si può avere accesso a funzioni matematiche standard come <strong>addizione, sottrazione, moltiplicazione e divisione</strong>. Naturalmente, queste funzioni possono essere combinate per creare calcoli complessi.</p>
<p>Inoltre, Sass include alcune funzioni integrate per aiutare a manipolare i numeri. Funzioni come <strong>percentage()</strong>, <strong>floor()</strong> e <strong>round()</strong> per citarne alcuni.</p>
<p>Se ancora non conoscevi questo strumento inizia subito ad utilizzarlo nel progetto in corso, sicuramente non te ne pentirai!</p>
<p>Se invece lo conoscevi già spero di averti magari rivelato qualche caratteristica ulteriore di questo fantastico tool!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Sito WordPress lento? Ecco come aumentare le performance!</title>
			<link>https://albertoreineri.it/blog/sito-wordpress-lento-ecco-come-aumentare-le-performance/</link>
			<pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/sito-wordpress-lento-ecco-come-aumentare-le-performance/</guid>
			<description>Hai un sito WordPress lento? Si blocca spesso e ti viene il nervoso solamente a guardarlo? Vediamo come migliorarlo!
WordPress è la piattaforma più utilizzata al mondo per la creazione di siti web, ma spesso capita che venga utilizzata in maniera non ottimale.
Questo può causare gravi rallentamenti nel sito.
WordPress, sebbene sia fantastico, porta con sè un core già pesantuccio di suo, e se si installano temi e plugin a gogo diventerà presto lentissimo, andando a danneggiare non solo l’esperienza utente ma anche l’indicizzazione SEO.</description>
			<content type="html"><![CDATA[<p>Hai un sito WordPress lento? Si blocca spesso e ti viene il nervoso solamente a guardarlo? Vediamo come migliorarlo!</p>
<p>WordPress è <strong>la piattaforma più utilizzata al mondo</strong> per la creazione di siti web, ma spesso capita che venga <strong>utilizzata in maniera non ottimale</strong>.</p>
<p>Questo può causare <strong>gravi rallentamenti</strong> nel sito.</p>
<p>WordPress, sebbene sia fantastico, porta con sè un core già <em>pesantuccio</em> di suo, e se si installano temi e plugin <em>a gogo</em> diventerà presto <strong>lentissimo</strong>, andando a <strong>danneggiare non solo l’esperienza utente ma anche l’indicizzazione SEO.</strong></p>
<h2 id="cosa-rallenta-il-tuo-sito-wordpress">Cosa rallenta il tuo sito WordPress?</h2>
<p>I motivi per cui il tuo sito WordPress è lento possono essere <strong>molteplici</strong>, ecco qua elencate le cause principali:</p>
<ul>
<li><strong>Web hosting</strong>: se il server di web hosting non è configurato correttamente oppure è di scarsa qualità, sicuramente il sito ne risentirà. Si può avere un sito sviluppato a regola d’arte, ma se il server su cui gira non è ottimizzato i risultati saranno scadenti.</li>
<li><strong>Configurazione di WordPress</strong>: se il tuo sito non offre la memorizzazione della cache, può sovraccaricare il server causando rallentamenti o arresti del sito</li>
<li><strong>Dimensioni immagini</strong>: una delle maggiori cause dei rallentamenti sono le immagini enormi. Tante immagini grandi sulla stessa pagina rallenteranno moltissimo i tempi di caricamento.</li>
<li><strong>Plugin di scarsa qualità</strong>: se si utilizzano plugin con errori, codici errati o inutili, sicuramente si otterranno rallentamenti se non addirittura problemi di sicurezza.</li>
<li><strong>Script esterni</strong>: tutti i vari script esterni al sito, come gli annunci, i font, i sistemi di tracciamento etc. vanno a rallentare il sito.</li>
</ul>
<p>Ma andiamo un po’ più nel dettaglio</p>
<h2 id="avere-un-buon-hosting-fa-la-differenza">Avere un buon hosting fa la differenza</h2>
<p>L’hosting sono <strong>le fondamenta su cui si costruisce il proprio sito</strong>, se le fondamenta non sono di qualità non importa quando possa essere perfetto ciò che ci si costruisce sopra, sarà sicuramente destinato a <strong>crollare</strong>.</p>
<p>Avere un buon servizio di hosting, con <strong>funzionalità al passo con i tempi</strong> e assistenza 24/7 consente di dormire sonni tranquilli, avere tutto sotto controllo e essere <strong>sicuri</strong> che il sito <em>girerà</em> in maniera corretta sempre.</p>
<p>Come già accennato in precedenza, si può avere un sito sviluppato a regola d’arte, completamente ottimizzato, con immagini delle dimensioni giuste, script caricati nella maniera corretta, tutto perfetto insomma. <strong>Ma se l’hosting non è buono questo sito <em>farà schifo</em> lo stesso.</strong></p>
<p>Mi è già capitato di realizzare un tema ad hoc partendo da zero, impegare molte ore per ottimizzare ogni singola richiesta dal server in modo da sovraccaricarlo il meno possibile, e poi ottenere risultati pessimi nei test di performance. Questo è molto frustrante e <strong>dannoso</strong> per il sito web.</p>
<p>Occorre affidarsi a professionisti veri in grado di <strong>scegliere il miglior servizio in base alle esigenze.</strong></p>
<p>Non esiste l’hosting perfetto sempre, bisogna <strong>valutare le necessità</strong> e scegliere di conseguenza.</p>
<h2 id="configurazione-di-wordpress">Configurazione di WordPress</h2>
<h3 id="cache">Cache</h3>
<p>È possibile velocizzare un sito WordPress lento in maniera semplice e veloce installando un plugin per la <strong>gestione della cache.</strong></p>
<p>Ne esistono molti anche gratuiti, ma occorre saperli <strong>configurare correttamente.</strong></p>
<p>Si possono ottenere già buoni risultati utilizzando le configurazioni di default del plugin, ma andando a <strong>settare ogni singolo parametro</strong> in funzione del sito le <strong>performance aumenteranno notevolmente.</strong></p>
<h3 id="aggiornamenti">Aggiornamenti</h3>
<p>Un’altra best practice è quella di mantenere sempre aggiornato il sito. Non effettuare gli aggiornamenti è rischioso anche dal punto di vista della sicurezza, quindi <strong>assicurati sempre che il tuo sito sia aggiornato all’ultima versione, così come i vari plugin.</strong></p>
<h2 id="ottimizzare-le-immagini">Ottimizzare le immagini</h2>
<p>Avere tante immagini è una delle prime cause di un sito WordPress lento.</p>
<p>La soluzione non è però rimuoverle tutte e avere pagine con solo testo. Fortunatamente oggi esistono molti tool in grado di <strong>ottimizzare le immagini</strong> per il web.</p>
<p>Il software migliore per ottimizzare un’immagine per il web è <strong><a href="https://www.adobe.com/it/products/photoshop.html">Photoshop</a></strong>, ma è possibile anche farlo gratuitamente con tool online come <strong><a href="https://pixlr.com/e/">Pixlr</a></strong>.</p>
<p>Le immagini devono essere salvate delle <strong>dimensioni corrette</strong>, è inutile avere un’immagine 5000×5000, superare i 1920 px di larghezza è quasi sempre inutile, quindi assicurati di caricare le immagini nel formato corretto e <strong>meno pesante possibile.</strong></p>
<h3 id="i-formati">I formati</h3>
<p>Utilizza solamente due tipi di formati: <strong>JPG e PNG.</strong></p>
<p>Il <strong>PNG</strong> dovrebbe essere utilizzato solamente quando l’immagine ha delle <strong>trasparenze</strong>, per esempio un logo.</p>
<p>Per tutte le <strong>foto</strong> consiglio di utilizzare il <strong>JPG</strong> perché è più leggero.</p>
<h2 id="attenzione-ai-plugin">Attenzione ai plugin</h2>
<p>I plugin sono molto utili per un sito in WordPress, ma <strong>non bisogna mai installarli con troppa leggerezza.</strong></p>
<p>Prima di installare un nuovo plugin occorre sempre controllare il log degli <strong>aggiornamenti</strong>, vedere se è ancora <strong>mantenuto</strong> dagli sviluppatori e dare un’occhiata alle <strong>recensioni</strong>.</p>
<p>Inoltre è importante <strong>aggiornarli</strong> sempre all’ultima versione.</p>
<p>Avere troppi plugin o plugin sviluppati male causa <strong>enormi problemi</strong> ai siti in WordPress, sia per le <strong>performance</strong> che per la <strong>sicurezza</strong>.</p>
<h2 id="script-esterni">Script esterni</h2>
<p>Molte volte è fondamentale inserire script esterni, quali le inserzioni di google ads. Queste però hanno un <strong>impatto negativo sulle performance.</strong> Occorre tenerne conto e <strong>se proprio non se ne può fare a meno andare ad ottimizzare da altre parti.</strong></p>
<h2 id="conclusione">Conclusione</h2>
<p><strong>Avere un sito in WordPress prestante e performante si può, basta svilupparlo come si deve.</strong></p>
<p>La soluzione migliore è sempre quella di <strong>utilizzare un tema realizzato in maniera professionale da zero</strong>, costruito sulle necessità del sito.</p>
<p>I <strong>temi generici</strong>, gratis o a pagamenti, sono creati per essere utilizzati da svariate tipologie di siti web e per questo hanno moltissime <strong>funzionalità che spesso si rivelano inutili</strong> e rallentano il sito.</p>
<p>Lo stesso vale per i <strong>plugin</strong>. Dove è possibile è sempre meglio utilizzare un <strong>plugin sviluppato da zero</strong> apposta per la funzionalità che deve compiere.</p>
<p>La soluzione migliore per avere un sito in WordPress performante è quindi quella di <strong>appoggiarsi ad un esperto in WordPress</strong> in grado di capire le esigenze del sito e <strong>realizzare la soluzione migliore</strong>, questo garantisce <strong>preformance elevate e anche un maggior livello disicurezza.</strong></p>
]]></content>
		</item>
		
		<item>
			<title>Come scegliere la tecnologia giusta per il proprio sito web?</title>
			<link>https://albertoreineri.it/blog/come-scegliere-la-tecnologia-giusta-per-il-proprio-sito-web/</link>
			<pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-scegliere-la-tecnologia-giusta-per-il-proprio-sito-web/</guid>
			<description>Scegliere la giusta tecnologia per il proprio sito web è un passo molto importante.
Oggi essere online è fondamentale!
Un sito web permette di essere trovati facilmente da tutti in tutto il mondo, crea l’immagine aziendale, permette di comunicare velocemente con i propri clienti e molto altro… Insomma, porta sicuramente vantaggi alle aziende di ogni tipo, grandi o piccole che siano.
Ma i siti web non sono tutti uguali!
Ci sono varie tipologie di siti (vetrina, blog, e-commerce etc.</description>
			<content type="html"><![CDATA[<p>Scegliere la giusta tecnologia per il proprio sito web è un passo molto importante.</p>
<p><strong>Oggi essere online è fondamentale</strong>!</p>
<p>Un <strong>sito web</strong> permette di essere <strong>trovati facilmente</strong> da tutti in tutto il mondo, crea <strong>l’immagine aziendale</strong>, permette di <strong>comunicare</strong> velocemente con i propri clienti e molto altro… Insomma, porta sicuramente <strong>vantaggi</strong> alle aziende <strong>di ogni tipo</strong>, grandi o piccole che siano.</p>
<p><strong><em>Ma i siti web non sono tutti uguali!</em></strong></p>
<p>Ci sono varie <strong>tipologie di siti</strong> (vetrina, blog, e-commerce etc.) ma soprattutto esistono <strong>molte tecnologie con le quali realizzarli.</strong></p>
<p><strong>Ai non addetti ai lavori</strong> spesso non interessa sapere come è stato creato il proprio sito, l’importante è che funzioni! <strong>Ma in realtà saperne un po’ di più può fare una grande differenza.</strong></p>
<p><em>Se si fa costruire una casa ci si accerta sempre che vengano utilizzati i materiali migliori!</em></p>
<p>Così dovrebbe essere anche per i siti web. <strong>È bene affidarsi a degli esperti</strong> in materia, web developer o web Agency, ma <strong>è meglio non fidarsi ad occhi chiusi</strong> e insistere per sapere come verrà realizzato il progetto.</p>
<p>Per esempio si parla moltissimo di <strong>WordPress</strong>, una piattaforma fantastica (questo sito è realizzato in WordPress) se utilizzata bene, ma non è l’unica né sempre la migliore.</p>
<h2 id="wordpress-si-ma-come-viene-usato">WordPress si, ma come viene usato?</h2>
<p>WordPress è la <strong>piattaforma più diffusa al mondo</strong> per lo sviluppo di siti web. Consente di ottenere risultati molto buoni con dispendio di tempo molto basso, quindi anche con <strong>un costo minore</strong> ad altre soluzioni.</p>
<p><strong><em>Però c’è modo e modo di usarlo.</em></strong></p>
<p>WordPress è talmente diffuso che <strong>esistono migliaia di temi gratis</strong> e a pagamento per creare un sito internet, e molte volte gli sviluppatori ne approfittano.</p>
<p>Vendere a 2.000 € un sito in WordPress “<em>sviluppato</em>” acquistando un tema da 50 € e configurandolo leggermente è al limite della truffa… Eppure succede, e spesso.</p>
<p>Per questo <strong>è meglio indagare un pochino</strong> su ciò che si sta facendo costruire, chiedere, <em>rompere le scatole</em> per sapere come verrà realizzato il prodotto finale.</p>
<p>Io personalmente quando scelgo di utilizzare WordPress <strong>sviluppo il tema e i plugin dedicati al progetto completamente da zero</strong>. Questo permette di avere <strong>un sito unico, performante e sicuro</strong>, senza andare ad incidere molto sul costo finale. Uno sviluppatore esperto, con le opportune basi, può creare un tema WordPress completo da zero in qualche settimana, non più.</p>
<p>Oltre a questo sito che stai leggendo, posso farti l’esempio di <a href="http://bikeitalia.it/">Bikeitalia.it</a>, un sito veramente enorme, con picchi di <strong>utenti che superano i 4000 nello stesso istante.</strong> Bene, quel sito è basato su <strong>WordPress</strong>, ma il tema l’ho costruito <strong>partendo da zero.</strong></p>
<p><strong>Perciò WordPress non è affatto un male, a patto che venga utilizzato nel modo corretto.</strong> Questo permetterà di avere brutte sorprese, come cali di performance o peggio buchi di sicurezza.</p>
<h2 id="javascript">Javascript</h2>
<p>Oggi esistono anche moltissimi <strong>framework Javascript</strong> che permettono di creare siti web moderni, <strong>leggeri e velocissimi!</strong></p>
<p>Si possono usare React, Angular o Vue, oppure <strong>Gatsby</strong>, un framework basato su React che consente la creazione di siti web meravigliosi in poco tempo. In questo caso però <strong>la gestione dei contenuti sarà completamente diversa, spesso più complicata.</strong></p>
<p>Se però si vuole <strong>puntare tutto sulle performance</strong> allora questa è sicuramente la scelta migliore.</p>
<h2 id="cms-proprietari">CMS Proprietari</h2>
<p>Una terza via è quella dei CMS proprietari. Moltissime web Agency e sviluppatori <strong>hanno i propri sistemi di creazione di siti web.</strong></p>
<p>Queste possono essere <strong>buone</strong> soluzioni o <strong>pessime</strong>, a seconda degli sviluppatori. In ogni caso <strong>essendo sviluppate da zero solitamente permettono un livello di configurazione massimo.</strong></p>
<p>Si può fare tutto ciò che si vuole, senza dover sottostare alle leggi dei CMS e dei Framework.</p>
<p>Occorre però <strong>controllare che questi framework siano al passo con i tempi</strong>, non fermi a 20 anni fa.</p>
<p>Ecco <strong>alcuni consigli</strong> per capire se sono all’altezza dei giorni nostri:</p>
<p>URL SEO Friendly</p>
<p>Se <strong>l’URL della pagina finisce con “.php”, “.asp”, “.html”</strong> o qualcosa del genere significa che non c’è un vero e proprio sistema di routing nel sito, e questo non permette di ottenere buoni URL, apprezzati maggiormente da google.</p>
<p><strong>Esempio di URL buono</strong>: “http://www.nomesito.it/contatti/”</p>
<p><strong>Esempio di URL non buono:</strong> “http://www.nomesito.it/contatti.asp”</p>
<p>Indici negli URL</p>
<p>Se nell’URL vedi codici e simboli matematici, <strong>la sicurezza del sito può essere a rischio</strong>. Molti sistemi “<em>passano</em>” gli indici del database nell’URL, ma questo può essere <strong>usato dagli hacker per fare un attacco direttamente sul db.</strong> Se quindi vedi un url tipo “http://www.nomesito.it/articolo.php?id=45”, allora il sistema <strong>non è molto sicuro.</strong></p>
<h2 id="errori-404">Errori 404</h2>
<p>Un’altra caratteristica dei sistemi sviluppati da zero è che spesso non hanno una <strong>gestione per gli errori,</strong> per esempio il classico 404 Page Not Found. Per scoprirlo è semplice, basta andare su un sito e inserire del testo a caso dopo il dominio, per esempio “http://nomesito.it/ciaociao”. Se c’è una pagina 404 inserita nel sito bene, se si veder l’errore del server, su una pagina bianca e brutta, allora non è il massimo.</p>
<p>Tutte queste piccole cose possono <strong>far fallire i tuoi sforzi per creare un sito web funzionante</strong>, incidendo sull’<strong>indicizzazione di Google</strong>, sulle <strong>performance</strong> e sulla <strong>sicurezza</strong>.</p>
<h2 id="orange-cms">Orange CMS</h2>
<p>Un esempio di CMS proprietario è <strong><a href="/orange">Orange CMS</a></strong>, la mia soluzione sviluppata completamente da zero.</p>
<p>Se vuoi <strong><a href="/orange">puoi darci un’occhiata</a></strong>, entrare nel backend e <strong>creare e visualizzare articoli e pagine</strong>. L’ho già utilizzato per molti siti e i risultati sono stati sempre molto buoni, superiori a WordPress come <strong>performance</strong>, ma tutto dipende dalle funzionalità che si vogliono avere.</p>
<p>Spero che questo articolo ti sia stato d’aiuto per <strong>capire come approcciarti alla creazione del tuo nuovo sito</strong>. Ricorda che la scelta della tecnologia è fondamentale e <strong>ce la si porterà dietro per molto tempo</strong>, quindi occorre farla con metodo e professionalità.</p>
]]></content>
		</item>
		
		<item>
			<title>CMS, Framework o Core Language?</title>
			<link>https://albertoreineri.it/blog/cms-framework-o-core-language/</link>
			<pubDate>Wed, 09 Oct 2019 21:26:11 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/cms-framework-o-core-language/</guid>
			<description>CMS, Framework, Core Language… Al giorno d’oggi quando ci si approccia ad un nuovo progetto abbiamo la possibilità di utilizzare degli strumenti molto avanzati che ci permettono di velocizzare e facilitare il lavoro.
I CMS hanno sempre più successo, pensa che si dice che la metà dei siti mondiali sono creati con WordPress (ma è un dato che cambia spesso…). Anche i framework oggi vanno alla grande e sono sempre più avanzati e sofisticati.</description>
			<content type="html"><![CDATA[<p>CMS, Framework, Core Language… Al giorno d’oggi quando ci si approccia ad un nuovo progetto abbiamo la possibilità di utilizzare degli <strong>strumenti molto avanzati</strong> che ci permettono di <strong>velocizzare e facilitare il lavoro</strong>.</p>
<p>I <strong>CMS</strong> hanno sempre più successo, pensa che si dice che la metà dei siti mondiali sono creati con WordPress (ma è un dato che cambia spesso…). Anche i <strong>framework</strong> oggi vanno alla grande e sono sempre più avanzati e sofisticati.</p>
<p>E il buon vecchio <strong>codice scritto a mano</strong>? Esiste ancora?</p>
<p>Ma andiamo con ordine. Proverò ad analizzare una per una queste tre opzioni evidenziando pregi e diffetti, e infine vi dirò la mia a riguardo.</p>
<h2 id="1-cms">1. CMS</h2>
<p>I <strong>Content Management System</strong> (<strong>CMS</strong>) consentono di gestire i contenuti di un sito<strong>senza possedere conoscenze di programmazione</strong>. In pratica offrono un’interfaccia tramite la quale scrivere articoli e pagine quasi come se si stesse scrivendo su Word. Il CMS si occuperà di tradurre questa pagina in linguaggio <strong>HTML</strong> in modo che possa essere visibile da un browser.</p>
<p>I CMS di oggi, in particolare <strong><a href="https://it.wordpress.org/">WordPress</a></strong>, possono <strong>velocizzare moltissimo</strong> la creazione di un sito web. Esistono addirittura <strong>plugin</strong> per creare la grafica del sito <strong>senza dover mai scrivere nemmen una riga di HTML</strong>.</p>
<p>Sono la soluzione perfetta per <strong>creare blog</strong> (il motivo per cui sono stati cerati), ma possono essere utilizzati anche per siti vetrina, landing page e progetti a <strong>basso budget</strong>.</p>
<p>Possono contare su un <strong>numero enorme di plugin</strong>, che semplificano la vita agli sviluppatori fornendo dei servizi già confezionati, solamente da configurare.</p>
<p>Di contro, si potrano dietro un sacco di <strong>dipendenze non sempre utili.<strong>Specialmente nell’utilizzo di</strong> plugin occorre stare molto attenti</strong> oppure si rischia di rendere la pagina molto pesante e <strong>rallentare</strong> notevolmente le prestazioni del sito.</p>
<p><em>Personalmente non sono un grandissimo fan dei CMS, ma riconosco che se utilizzati per il motivo per il quale sono stati creati allora sono fantastici. Per <strong>un blog <strong>a mio avviso</strong> non c’è soluzione migliore</strong>. <a href="/blog/creare-un-tema-wordpress-da-zero-parte-1/">Creare un tema da zero</a> non è molto difficile e in breve tempo si può costruire una piattaforma aggiornabile molto velocemente.</em></p>
<h2 id="2-framework">2. FRAMEWORK</h2>
<p>I Framework sono molto diversi dai CMS e non vanno mai accostati. <strong>Se un CMS ci consegna la pappa pronta, un framework si limita ad apparecchiarci tavola.</strong></p>
<p>I Framework<strong>offrono una serie di librerie</strong> che permettono di velocizzare lo sviluppo di un progetto, ma <strong>non sostituiscono il lavoro del programmatore</strong>. Per poter utilizzare un framework sono <strong>richieste conoscenze approfondite</strong> del linguaggio con cui il framework è scritto.</p>
<p>Questa è un’ottima soluzione per <strong>progetti medio/grandi</strong>. Tutti i framework offrono un <strong>ambiente di lavoro ben organizzat</strong>o, riducendo la possibilità di scrivere brutto codice e aumentando la velocità con cui il codice è scritto.</p>
<p>Inoltre <strong>gestiscono molte questioni legate alla sicurezza</strong>, togliendole dal pensiero dello sviluppatore, che potrà impegnarsi solemente nello sviluppo del progetto.</p>
<p>Personalmente mi piace molto <strong>Laravel</strong>. Veloce, sicuro e ordinato. Poi è scritto in PHP, che è il linguaggio che uso maggiormente al momento.</p>
<p>Nel prossimo futuro però ho intenzione di studiarmi approfonditamente <strong>Django</strong>, che sembra andare alla grande ed essere molto più veloce di Laravel, ma vedremo cosa mi riserverà il futuro…</p>
<h2 id="3-linguaggio-puro">3. LINGUAGGIO PURO</h2>
<p>Una terza via per realizzare i propri progetti online è quella di <strong>fare tutto da zero.</strong></p>
<p>Certo <strong>può sembrare stupido</strong> partire da zero quando esistono già gli strumenti sopra elencati, <strong>ma può avere i suoi vantaggi.</strong></p>
<p>Se uno sviluppatore conosce <strong>molto bene</strong> un linguaggio, può <strong>costruirsi un suo framework e un suo CMS personale</strong>. Non si tratta quindi di “<em>reinventare la ruota</em>” ogni volta, ma di farlo una volta sola e riutilizzarla in seguito. Cerco questo <strong>ha sicuramente degli svantaggi, in termini di sicurezza e si scalabilità, ma ha anche molti vantaggi, primo su tutti la velocità.</strong></p>
<p>Il core PHP, se ben scritto, è molto più veloce di Laravel.</p>
<p>Certo in questo modo <strong>occorrerà gestire tutti i problemi da soli,</strong> senza pensare che ci pensi un programma già fatto, ma uno sviluppatore è pur sempre uno sviluppatore, e questo è il suo mestiere.</p>
<p>Tempi e budget sono sempre un problema, per questo il linguaggio puro è spesso bistrattato a favore di CMS o framework, ma laddove è possibile può essere anche questa una soluzione.</p>
<h2 id="la-mia-opinione">LA MIA OPINIONE</h2>
<p>Fra CMS, Framework e Core language io utilizzo tutti e tre i metodi. Negli anni ho creato un mio framework e un mio CMS personale, che mi permettono di <strong>gestire i progetti al 100%</strong>, <strong>potendo personalizzare ogni minima parte di back-end, front-end e UX in maniera molto veloce.</strong> Certo però <strong>ci è voluto del te</strong>mpo per realizzarli e ce ne vuole di tanto in tanto per <strong>aggiornarli</strong> e restare al passo con i tempi, ma in questo modo sono in grado di gestire tutto quello che faccio, <strong>sono il vero “padrone” del mio progetto.</strong></p>
<p>A volte però è più semplice utilizzare un CMS o un framework, <strong>dipende sempre dal tipo di progetto che vogliarmo realizzare.</strong></p>
<p>In termini di <strong>velocità</strong>, se si scive buon codice, nulla batte il <strong>linguaggio core</strong>. In temini di <strong>scalabilità</strong>, se molte persone lavorano ad uno stesso progetto, se è necessario avere un alto livello di sicurezza e se si devono gestire relazioni di database complicate, allora una giusta soluzione può essere l’utilizzo di un <strong>framework</strong>.</p>
<p>Infine per un <strong>blog</strong> o per semplici siti con basso budget può essere utilizzato un <strong>CMS</strong>, che sarà però sicuramente più lento delle soluzioni precedenti, ma che si occuperà lui di molte problematiche togliendo un peso allo sviluppatore.</p>
<p>Questo è quello che ho notato utilizzando questi strumenti. Voi cosa ne pensate? Siete super fan di WordPress e quindi snobbate alla grande le altre opzioni o scrivete ancora codice?</p>
<p>Come scegliete fra CMS, Framework e core language?</p>
<p>Fatemelo sapere nei commenti</p>
<p>Buon codice a tutti</p>
]]></content>
		</item>
		
		<item>
			<title>Gulp.js in un tema WordPress</title>
			<link>https://albertoreineri.it/blog/gulp.js-in-un-tema-wordpress/</link>
			<pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/gulp.js-in-un-tema-wordpress/</guid>
			<description>Da qualche tempo sto lavorando su progetti abbastanza grandi e non è sempre facile riuscire a gestire il tutto senza perdersi nei migliaia di file e cartelle contenuti nel progetto.
L’organizzazione del codice è una parte fondamentale per lo sviluppo di software, che sia web, desktop o mobile.
Fortunatamente oggi possiamo utilizzare degli strumenti in grado di aiutarci nel processo di sviluppo e gestione del progetto.
Uno di questi è Gulp.</description>
			<content type="html"><![CDATA[<p>Da qualche tempo sto lavorando su <strong>progetti abbastanza grandi</strong> e non è sempre facile riuscire a gestire il tutto senza perdersi nei <strong>migliaia di file e cartelle</strong> contenuti nel progetto.</p>
<p><strong>L’organizzazione del codice</strong> è una parte fondamentale per lo sviluppo di software, che sia web, desktop o mobile.</p>
<p>Fortunatamente oggi possiamo utilizzare degli strumenti in grado di <strong>aiutarci nel processo di sviluppo</strong> e gestione del progetto.</p>
<p>Uno di questi è <strong>Gulp.js!</strong></p>
<h2 id="cosè-gulpjs">Cos’è Gulp.js</h2>
<p>Gulp è un <strong>task runner</strong>, cioè un programma che permette di <strong>automatizzare una serie di operazioni</strong> ripetitive e costanti, come minificare codice CSS e JS, effettuare refresh ad ogni salvataggio, sincronizzare pagine web, ottimizzare le immagini e molto altro.</p>
<p><em><strong>Per semplificare</strong></em> una volta impostato correttamente Gulp all’interno del mio progetto, ogni volta che salvo un file in automatico Gulp fa un check sull’operazione appena effettuata (il salvataggio) ed agisce di conseguenza, in questo caso fa un refresh del browser.</p>
<p>Se invece modifico un file CSS, al salvataggio Gulp minimizzerà il file e farà il refresh del browser!</p>
<p>Prova a pensare in un progetto che richiede mesi di sviluppo, poter evitare di <em>refresshare</em> il browser ogni volta, compilare i file SASS, ottimizzare le immagini etc. permette agli sviluppatori di <strong>risparmiare moltissimo tempo</strong>, o perlomeno concentrarsi su altro piuttosto che su azioni banali e ripetitive!</p>
<h2 id="gulp-e-wordpress">Gulp e WordPress</h2>
<p>Il bello di Gulp è che può essere utilizzato in <strong>qualsiasi tipo di progetto</strong>, anche durante lo sviluppo di un <strong>tema</strong> o <strong>plugin</strong> per <strong>WordPress</strong>, andando a <strong>velocizzare</strong> molto i tempi di programmazione!</p>
<p>Se vuoi installare ed <strong>iniziare</strong> ad utilizzare Gulp ti consiglio questo articolo: <a href="https://css-tricks.com/gulp-for-beginners/">https://css-tricks.com/gulp-for-beginners/</a> . Io ho iniziato da qui!</p>
<h2 id="il-mio-gulp-per-wordpress">Il mio Gulp per WordPress!</h2>
<p>Se vuoi una <strong>base di partenza</strong> per configurare <strong>Gulp</strong> nel tuo progetto puoi guardare sul <a href="https://github.com/albertoreineri/">mio profilo github</a>, ho inserito <a href="https://github.com/albertoreineri/gulp-for-wordpress">il mio file</a> di <strong>configurazione base per Gulp in WordPress.</strong></p>
<p>Nel mio ultimo progetto tramite <strong>Gulp</strong> ho effettuato queste <strong>automazioni</strong>:</p>
<ul>
<li>Effettuare un <strong>refresh</strong> ad ogni modifica di qualsiasi file</li>
<li>Ottimizzare le <strong>immagini</strong></li>
<li>Unire tutti i file <strong>SCSS</strong> in uno solo, compilarlo e minificarlo</li>
<li>Unire tutti i file <strong>JS</strong> in uno solo e minificarlo</li>
</ul>
<p>Per poter utilizzare <strong>Gulp</strong> occorre sdoppiare la cartella con le risorse del sito. Una sarà la cartella di sviluppo, solidamente chiamata “<strong>src</strong>“, l’altra sarà quella che verrà pubblicata, chiamata “<strong>assets</strong>“</p>
<p>Su github puoi trovare il mio file di configurazione per gestire i task <strong>Gulp all’interno di un tema WordPress.</strong></p>
<p>Per <strong>iniziare</strong> ad utilizzarlo devi solamente copiare il mio gulpfile.js all’interno del tuo tema e dare questo comando dalla CLI:</p>
<pre tabindex="0"><code>npm install --save-dev gulp gulp-imagemin gulp-uglify gulp-sass browser-sync del gulp-concat gulp-clean
</code></pre><p>Ora non ti resta che <strong>modificare la riga 3</strong> del file inserendo il path del tuo progetto WordPress.</p>
<p>Spero di essere riuscito ad invogliarti a <strong>utilizzare questo strumento.</strong> Sebbene sia un po’ complicato da configurare, sono sicuro che una volta che l’avrai capito a fondo <strong>non potrai più farne a meno!</strong></p>
<p>Fammi sapere cosa ne pensi nei <strong>commenti</strong> e <strong>buon codice!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>Come scegliere un Framework</title>
			<link>https://albertoreineri.it/blog/come-scegliere-un-framework/</link>
			<pubDate>Sat, 14 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-scegliere-un-framework/</guid>
			<description>Oggi lo sviluppo “from scratch” è sempre meno utilizzato.
Budget più bassi e tempi di lavoro più stretti hanno costretto la maggior parte degli sviluppatori a partire da una base già disponibile per iniziare a creare i loro progetti.
Io personalmente amo ancora sviluppare from scratch, ma vivendo nel mondo di oggi e non potendo passare le notti a scriver codice ho dovuto adattarmi al mondo attuale e iniziare ad utilizzare anch’io alcuni framework.</description>
			<content type="html"><![CDATA[<p>Oggi lo sviluppo “<em>from scratch</em>” è sempre meno utilizzato.</p>
<p><strong>Budget più bassi e tempi di lavoro più stretti</strong> hanno costretto la maggior parte degli sviluppatori a <strong>partire da una base già disponibile</strong> per iniziare a creare i loro progetti.</p>
<p>Io personalmente amo ancora sviluppare <em>from scratch</em>, ma vivendo nel mondo di oggi e non potendo passare le notti a scriver codice ho dovuto adattarmi al mondo attuale e iniziare ad utilizzare anch’io alcuni framework.</p>
<p>Per alcuni potrebbero essere consigli banali, ma molte volte quando ci si trova davanti alla scelta fra <strong><a href="https://angular.io/">angular</a></strong>, <a href="https://vuejs.org/"><strong>vue</strong></a> o <a href="https://it.reactjs.org/"><strong>react</strong></a> oppure <a href="https://laravel.com/"><strong>laravel</strong></a> o <a href="https://codeigniter.com/"><strong>codeigniter</strong></a> etc. la decisione può essere ardua.</p>
<h2 id="premessa">Premessa</h2>
<p>Prima di iniziare a sviluppare i vari punti dell’articolo vi ricordo una massima generale: <strong>non si può utilizzare bene un framework senza conoscere il linguaggio in cui è scritto</strong>.</p>
<p>Non potrò usare bene bootstrap se non conosco il CSS, nè laravel se non conosco il php nè react senza javascript. In questo mestiere <strong>avere solide basi</strong> fa veramente la differenza fra il copiare codice da stackoverflow e scriverlo sapendo esattamente cosa si sta facendo, il perché e le ripercussioni generali sul progetto.</p>
<h2 id="a-cosa-serve-un-framework">A cosa serve un framework?</h2>
<p>La prima e più ovvia domanda dovrebbe essere: “<strong><em>Cosa dovrebbe fare il framework?</em></strong>“. Purtroppo sovente questa domanda viene ignorata.</p>
<p>L’utilizzo di un <strong>framework creato per soddisfare uno scopo specifico</strong> è più semplice rispetto all’adattarne un altro alle nostre esigenze.
Utilizzare jQuery per manipolare le strutture di dati non è sicuramente la scelta migliore da fare.
Pertanto devi avere ben chiaro in mente l’obiettivo finale per poter effettuare la scelta giusta.</p>
<h2 id="4-caratteristiche-per-scegliere-un-framework">4 caratteristiche per scegliere un framework</h2>
<p>Voglio provare ad indicare <strong>4 caratteristiche importanti</strong> da tenere presente quando ci si appresta alla scelta di un nuovo framework:</p>
<ul>
<li>Tempo</li>
<li>Proprietà e caratteristiche tecniche</li>
<li>Il coinvolgimento della community</li>
<li>Conseguenze della scelta</li>
</ul>
<p>Queste sono <strong>le quattro chiavi</strong> per poter effettuare una buona scelta.</p>
<p>Ovviamente esistono <strong>pregi e difetti</strong> per ogni framework, ma tenendo a mente questi quattro punti si può prendere una decisione corretta.</p>
<h3 id="tempo">Tempo</h3>
<p><em>In un mondo sempre di corsa, il tempo è cruciale.</em></p>
<p>Il <strong>fattore tempo</strong> è molto importante nella scelta di un framework. Perché? Perché senza <strong>tempo per studiarlo, testarlo e svilupparlo</strong> è inutile pensare di poterlo utilizzare.</p>
<p>Spesso abbiamo <strong>poco tempo per consegnare un progetto</strong> e introdurre un nuovo framework causerà quasi sicuramente dei ritardi. Pertanto, in termini di pianificazione anticipata sui tempi, dobbiamo verificare la <strong>quantità di codice</strong> che questo framework ci farà scrivere. Non solo il <strong>tempo effettivo</strong> che impiegheremo per scriverlo, ma anche <strong>quanto sarà complesso</strong> il codice che tu e il tuo team dovrete scrivere in quanto causerà anche una perdita non minima di tempo.</p>
<p>Il livello di complessità influisce anche su quanto sarà <strong>gestibile</strong>.
Quindi <strong>più scrivi codice, più diventa difficile supportarlo</strong> in seguito.</p>
<p>Ho trovato online questa simpatica regola di base della programmazione:</p>
<p><em>e = mc² (</em> <em>errors</em> <em>= more code ^ 2)</em></p>
<h3 id="proprietà-e-caratteristiche-tecniche">Proprietà e caratteristiche tecniche</h3>
<p>La scelta di un framework può essere influenzata da <strong>aspetti tecnici</strong>, dalle parole della <strong>community</strong> e da ciò che è possibile trovare sulla <strong>documentazione</strong> del framework.</p>
<p>Non lasciarti ingannare da quel che leggi nei forum. Il modo migliore per sapere se ciò di cui si parla è reale è semplice: <strong>testare</strong>.</p>
<p>Tuttavia, come sottolineato in precedenza, a causa del <strong>tempo limitato</strong>, testare un framework potrebbe essere un lusso che non possiamo permetterci, quindi cerchiamo di <strong>estapolare la caratteristica tecnica più importante</strong> dalle informazioni disponibili.</p>
<p>Il framework è adatto alla struttura del progetto che abbiamo o che vorremmo implementare? <strong>L’uso di un framework progettato per un compito specifico è più semplice dell’adattamento di uno ai nostri bisogni.</strong></p>
<p>Sarà meglio in termini di <strong>performance</strong>? Inutile orientarsi verso un framework lento sai da sviluppare che poi in esecuzione.</p>
<p>Se stiamo scegliendo un framework front-end, è importante verificare la <strong>compatibilità</strong> tra browser.</p>
<p>Infine come hi detto già nella premessa di quest’articolo devi <strong>conoscere le basi</strong>: per essere in grado di scegliere correttamente una struttura devi conoscere le basi e i requisiti per comprenderla appieno.
Quando scegli un framework ovviamente devi <strong>sapere di cosa stai parlando</strong>. Con questo intendo che devi sapere qual è lo scopo di un framework. Se non disponi delle conoscenze di base, sarà inutile apprendere un framework poiché non sarai in grado di capirlo completamente.</p>
<p><strong><em>Se non sei preparato, impara prima le basi.</em></strong></p>
<h3 id="il-coinvolgimento-della-comunità">Il coinvolgimento della comunità</h3>
<p>Cosa rende degno di considerazione un framework? <strong>Le persone che lo usano</strong>. Ok, ma come possiamo <strong>capire se un framework ha una community attiva?</strong></p>
<p>Esistono <strong>diversi fattori</strong> che possono farci comprendere il coinvolgimento della community per una determinata tecnologia:</p>
<ul>
<li>Quante persone ne parlano sul web?</li>
<li>Quante persone continuano a usarlo?</li>
<li>Con quale frequenza lo sviluppatore risponde alle segnalazioni di problemi?</li>
<li>Quante richieste pull?</li>
</ul>
<p>Queste sono solo alcune delle domande che possono darti alcune informazioni sul coinvolgimento della comunità.</p>
<h3 id="quali-sono-i-vantaggi-di-un-framework-affollato">Quali sono i vantaggi di un framework “affollato”?</h3>
<p>Una comunità attiva aumenta considerevolmente la <strong>documentazione</strong> su una determinata tecnologia, <strong>riducendo così il tempo</strong> necessario per la ricerca e l’apprendimento.</p>
<p>Inoltre, se l’azienda in cui lavori sta crescendo, sarà molto più facile <strong>trovare collaboratori</strong> che abbiano familiarità con il framework data la sua popolarità.</p>
<p><strong>Non sempre però una community attiva è abbastanza</strong> per dirigere la nostra scelta. Dopo aver appurato l’esistenza di una buona community occorre controllare <strong>quante di queste persone</strong> (meglio se grandi aziende) <strong>utilizzato effettivamente questa tecnologia in ambiente di produzione!</strong></p>
<p>Scoprire chi utilizza una determinata tecnologia è tutt’altro che facile, ma spesso i creatori stessi <strong>menzionano le aziende</strong> che utilizzano il framework e, nel caso, controllano come implementano questa tecnologia e per quale scopo.</p>
<p>Di solito i team di sviluppo di queste tecnologie rilasciano una <strong>tabella di marcia sui loro piani futuri</strong>, quindi controlla cosa <strong>hanno in mente</strong>.</p>
<h3 id="conseguenze-della-scelta">Conseguenze della scelta</h3>
<p>Prima di finalizzare la scelta, dovremmo prenderci un momento per pensare alle <strong>possibili conseguenze</strong> di ciò che la scelta del nuovo framework potrebbe comportare nell’ambiente di sviluppo.</p>
<p>Ricorda che <strong>se lavori in gruppo,</strong> per altri potrebbe essere più difficile imparare un nuovo framework.</p>
<p><strong>Quanto pensi che potrebbero impiegare per familiarizzarsi con esso</strong> e quanto tempo pensi che possano dedicare all’apprendimento? Dovrebbero sapere qualcos’altro prima di studiare?</p>
<p><strong>La scelta deve essere ponderata e discussa</strong> più volte per vedere soprattutto cosa pensa <strong>la squadra</strong> al riguardo.</p>
<h2 id="conclusioni">Conclusioni</h2>
<p>Non esiste una regola aurea che garantisce al cento per cento la scelta giusta. Solo la pratica e il tempo potrà farcelo capire.</p>
<p>In questo articolo spero di essere riuscito a darti spunti dai quali partire per affrontare la tua scelta, <strong>ma ricorda</strong>:</p>
<p><em>Non si tratta di trovare il framework migliore, si tratta di trovare il framework <strong>giusto</strong>.</em></p>
]]></content>
		</item>
		
		<item>
			<title>Configurare il PC per Sviluppo Web con Software Free</title>
			<link>https://albertoreineri.it/blog/configurare-il-pc-per-sviluppo-web-con-software-free/</link>
			<pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/configurare-il-pc-per-sviluppo-web-con-software-free/</guid>
			<description>Vediamo quali software free possiamo utilizzare per lo sviluppo web.
Ti stai appassionando al mondo della programmazione e vuoi iniziare a sviluppare qualche sito web o una piccola web app? Complimenti! Benvenuto nel fantastico mondo del Web Development!
Per cominciare dovrai installare i programmi necessari per scrivere i tuoi primi codici e riuscire a “far girare” ciò che hai scritto. In questo articolo vedremo rapidamente di quali software avremo bisogno.</description>
			<content type="html"><![CDATA[<p>Vediamo quali software free possiamo utilizzare per lo sviluppo web.</p>
<p>Ti stai appassionando al mondo della programmazione e vuoi iniziare a <strong>sviluppare qualche sito web o una piccola web app</strong>? Complimenti! Benvenuto nel fantastico mondo del <strong>Web Development</strong>!</p>
<p>Per cominciare dovrai installare i <strong>programmi necessari</strong> per scrivere i tuoi primi codici e riuscire a “far girare” ciò che hai scritto. In questo articolo vedremo rapidamente di quali software avremo bisogno.</p>
<p>Lasciamo da parte l’eterna discussione su quale sistema operativo sia migliore per una determinata cosa, sulle mode che portano a scegliere un pc rispetto ad un altro e cose di questo genere. Tutti i software presenti in questo articolo sono disponibili sia per <strong>Windows</strong> che per <strong>Mac</strong> che per <strong>Linux</strong>.</p>
<p>Vediamo allora <strong>cosa ci serve</strong> per poter sviluppare siti web e web app</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/243UeRVMtFI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="1-browser">1. BROWSER</h2>
<p>Se abbiamo intenzione di fare un po’ di sviluppo web, il <strong>software fondamentale</strong> che dobbiamo avere è un browser. Tutti i sistemi operativi posseggono un browser pre-installato, ma il mio consiglio è quello di utilizzare <a href="https://www.google.com/intl/it/chrome/"><strong>Google Chrome</strong></a>. Questo browser è molto rapido ed offre una serie di <strong>strumenti per sviluppatori</strong> molto utile.</p>
<p>Non mi dilungo su questo punto perché probablimente stai già utilizzando Chrome oppure sai perfettamente cos’è, quindi andiamo oltre e vediamo altri software free per sviluppo web.</p>
<h2 id="2-editor-di-testo">2. EDITOR DI TESTO</h2>
<p>Per poter fare sviluppo web è necessario <strong>scrivere del codice</strong>, e per scrivere il codice occorre avere un <strong>editor di testo</strong>. E’ possibile scrivere codice anche con il blocco note, ma non è certo una soluzione ottimale.</p>
<p>Il mio consiglio è di utilizzare <strong><a href="https://code.visualstudio.com/">Visual Studio Code</a></strong>, un software gratuito della Microsoft veramente fantastico!</p>
<p>Ricco di funzionalità ed estensioni, permette di gestire molto bene i progetti, anche grazie al <strong>terminale</strong> interno all’interfaccia. </p>
<p>Questo è sicuramente il <strong>programma esseziale</strong> per qualsiasi programmatore</p>
<h2 id="3-server-locale">3. SERVER LOCALE</h2>
<p>Per poter “<strong><em>far girare</em></strong>” i nostri progetti sul nostro pc, è nevessario installare un server locale per far sì che funzionino.</p>
<p>Io utilizzo da anni <a href="https://www.apachefriends.org/it/index.html"><strong>XAMPP</strong></a>, un software anch’esso gratuito che contiene in sè anche <strong>MySQL</strong>. Software utilissimo e semplice da utilizzare, permette in pochi minuti di configurare un server locale e iniziare il proprio progetto in <strong>PHP</strong>.</p>
<p>Fondamentale per la creazione di siti in <strong>WordPress</strong>, per progetti in framework PHP come <strong>Laravel</strong> o <strong>CodeIgniter</strong> oppure anche per un lavori in <strong>Core PHP</strong>.</p>
<h2 id="4-ftp-client">4. FTP CLIENT</h2>
<p>Una volta terminato il nostro sito dobbiamo <strong>caricarlo online</strong>! </p>
<p>Per fare questo è possibile utilizzare un <strong>Client FTP</strong> che ci permette di <strong>connetterci all’hosting</strong> e caricare i file del sito.</p>
<p>Il software più utilizzato per questo compito è sicuramente <a href="https://filezilla-project.org/"><strong>FileZilla</strong></a>. Gratis, semplice ed intuitivo, è la scelta giusta per “tirare su” il tuo sito in maniera semplice, rapida e veloce.</p>
<h2 id="5-grafica">5. GRAFICA</h2>
<p>Infine non dimentichiamo che ogni progetto ha in sè anche una parte grafica! </p>
<p>Per <strong>sviluppare i layout</strong> dei vostri progetti vi consiglio l’utilizzo di <a href="https://www.figma.com/"><strong>Figma</strong></a>. Uso da un po’ di tempo questo software e sono veramente soddisfatto, in più è <strong>completamente gratuito</strong>! Basterà inscriversi con l’account google e voilà! Potete iniziare a creare fantastici layout web ma non solo!</p>
<p>Tutti questi software sono <strong>free</strong> e <strong>cross platform</strong>, il prossimo purtroppo no.</p>
<p>Sto parlando di <a href="https://www.adobe.com/it/products/photoshop.html?gclid=CjwKCAjwtajrBRBVEiwA8w2Q8PvEfIWtLKBGk-wtMLSQEQ1slHQCulhlLxYEG-ScQVPToYcZ2qNQQRoCVa0QAvD_BwE&amp;sdid=8DN85NTV&amp;mv=search&amp;ef_id=CjwKCAjwtajrBRBVEiwA8w2Q8PvEfIWtLKBGk-wtMLSQEQ1slHQCulhlLxYEG-ScQVPToYcZ2qNQQRoCVa0QAvD_BwE:G:s&amp;s_kwcid=AL!3085!3!340641313438!e!!g!!photoshop"><strong>Photoshop</strong></a>, un favoloso software di Adobe che permette di fare tutto ciò che desideriamo con foto e immagini. Sebbene molte di queste cose si possano fare anche con Figma, <strong>non riesco ancora a staccarmi totalmente da questo software</strong>, che rimane l’unico della mia configurazione <strong>a pagamento</strong>…</p>
<p>Se volete provare una valida alternativa esiste <a href="https://www.gimp.org/"><strong>Gimp</strong></a>, che a quanto dicono dovrebbe essere molto potente. Purtroppo avendo iniziato con Photoshop e conoscendolo ormai discretamente bene non mi va di ricominciare da zero ad imparare un nuovo programma… Lascio a voi giudicare!</p>
<p>Questo è <strong>tutto ciò che vi serve</strong>! Ora potete inizare a sbizzarrirvi fra <a href="https://open.spotify.com/show/546eUw3PsRI1HUGbBUeghC"><strong>codice e design</strong></a> e creare i vostri primi progetti!</p>
<p>Grazie per aver letto questo articolo</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Che cos&#39;è GIT?</title>
			<link>https://albertoreineri.it/blog/che-cos%C3%A8-git/</link>
			<pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/che-cos%C3%A8-git/</guid>
			<description>Git è un fantastico software di controllo versione creato da un programmatore niente male: Linus Torvalds.
CHI È LINUS TORVALDS? Per i pochi che non sanno chi sia questa persona (mi auguro che siano veramente molto pochi…) è il creatore di Linux. Se pensiamo che più della metà del web e la maggioranza degli smartphone funzionano grazie a codice scritto da lui, dobbiamo tutti essergli grati per il suo genio e la sua generosità.</description>
			<content type="html"><![CDATA[<p><strong>Git</strong> è un fantastico software di controllo versione creato da un programmatore niente male: <strong>Linus Torvalds.</strong></p>
<h2 id="chi-è-linus-torvalds">CHI È LINUS TORVALDS?</h2>
<p>Per i pochi che non sanno chi sia questa persona (mi auguro che siano veramente molto pochi…) è il creatore di <strong>Linux</strong>. Se pensiamo che più della metà del <strong>web</strong> e la maggioranza degli <strong>smartphone</strong> funzionano grazie a codice scritto da lui, dobbiamo tutti <strong>essergli grati</strong> per il suo genio e la sua generosità.</p>
<h2 id="ma-torniamo-a-git">MA TORNIAMO A GIT!</h2>
<p>In rete si trovano migliaia di articoli su questo software, ma capire veramente cosa fa per un “<strong>newbie</strong>” non è così semplice.</p>
<p>Proverò a farlo in maniera facile e veloce.</p>
<h2 id="cosè-git">COS’È GIT?</h2>
<p>Git è un software che permette di <strong>tenere traccia</strong> delle modifiche effettuate su un progetto.</p>
<p>La funzione più semplice è quella che permette di <strong>tornare indietro</strong> a una versione precedente del progetto che stiamo realizzando.</p>
<p>Mettiamo caso che stiamo implementando una funzionalità, magari scriviamo un paio d’ore di codice ma ci accorgiamo di aver preso una strada sbagliata. A questo punto, senza un software di controllo versione, dovremmo fare <strong>ctrl+z</strong> all’infinito per cercare il punto esatto a cui vogliamo tornare. E se per caso la cache del nostro IDE si è impallata per qualche motivo e ci troviamo bloccati in un punto nel quale non possiamo andare nè avanti nè indietro?</p>
<p>Anche se fossimo programmatori previdenti e avessimo creato una cartella di backup del software dovremmo comunque nagivare nel file manager, trovare la cartella, rinominarla, spostare e cancellare file etc…</p>
<p><strong>Con Git basta inserire un comando</strong> e il nostro progetto tornerà magicamente come era prima! Fantastico!</p>
<p>Inoltre è possibile tenere aperte <strong>diverse strade di sviluppo</strong>, magari testare una funzionalità da una base e un’altra dalla stessa base per poi decidere qual è la migliore, tutto questo senza creare migliaia di cartelle e sottocartelle che finiranno sicuramente per rendere il tutto molto confusionario.</p>
<p>Con Git è inoltre possibile <strong>caricare il nostro progetto online</strong>, su <strong>GitHub</strong>, una meravigliosa piattaforma di condivisione di codice.</p>
<p>In questo modo possiamo scaricarci il nostro codice da qualsiasi computer in qualsiasi parte del mondo.</p>
<h2 id="git-per-piccoli-progetti">GIT PER PICCOLI PROGETTI</h2>
<p>Certo Git è stato sviluppato per progetti molto grandi, ma è un software talmente<strong>veloce e semplice</strong> (git in USA significa <em>idiota</em>…) che può anche essere utilizzato per piccole cose, per tenere traccia del nostro lavoro, effettuare piccole modifiche oppure fare dei test. Inoltre la possibilità di “spedire” tutto online è molto utile nel caso dovessimo accedere al codice da una nuova postazione!</p>
<h2 id="la-riga-di-comando">LA RIGA DI COMANDO</h2>
<p>Git è un software che funziona tramite <strong>CLI</strong>, la riga di comando.</p>
<p>Se non hai dimestichezza con questo strumento <strong>è l’ora di iniziare</strong> ad impratichirsi. <strong>Non lasciarti spaventare</strong> dall’assenza di icone, grafiche e mouse, in realtà è molto più veloce delle interfacce a cui siamo stati abituati negli utlimi anni!</p>
<p>E poi sei un programmatore no? Il mouse è più che altro un abbellimento per la scrivania, <strong>il lavoro si fa tutto con dieci dita sulla tastiera</strong>!!!</p>
<p>Esiste anche una versione Desktop del software ma quella classica funziona talmente bene che non mi è mai venuto in mente di testarla.</p>
<p>Se lavori in <strong>Windows</strong> (come me!!!) allora puoi scaricare anche <strong>Git Bash</strong>, una riga di comando molto bella creata per facilitare le operazioni di Git.</p>
<p>Prossimamente <a href="/blog/come-usare-git/">scriverò una breve guida dei comandi basilari di Git</a>, così potrai iniziare ad utilizzarlo.</p>
<p>Sono sicuro che non riuscirai più a farne a meno!</p>
<p><em>Buon codice! Ciau!!!</em></p>
]]></content>
		</item>
		
	</channel>
</rss>
