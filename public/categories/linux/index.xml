<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Linux on Alberto Reineri</title>
		<link>https://albertoreineri.it/categories/linux/</link>
		<description>Recent content in Linux on Alberto Reineri</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>it</language>
		<lastBuildDate>Mon, 27 Jun 2022 00:00:00 +0000</lastBuildDate>
		<atom:link href="https://albertoreineri.it/categories/linux/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Nano Editor, Guida per principianti</title>
			<link>https://albertoreineri.it/blog/nano-editor-guida-per-principianti/</link>
			<pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/nano-editor-guida-per-principianti/</guid>
			<description>Gli utenti Linux hanno molte opzioni tra cui scegliere quando si tratta di editor di testo. Da base ad avanzato, esistono un sacco di editor di testo, ma alcuni come Vim ed Emacs possono risultare molto complicati per gli utenti meno avanzati.
In questo casi ci viene in aiuto Nano, forse il miglior editor di testo per principianti.
Nano: Nano è un editor di testo semplice e leggero sviluppato appositamente per sistemi UNIX e ambienti desktop che utilizzano un&amp;rsquo;interfaccia a riga di comando.</description>
			<content type="html"><![CDATA[<p>Gli utenti <a href="/argomento/linux/">Linux</a> hanno molte opzioni tra cui scegliere quando si tratta di editor di testo. Da base ad avanzato, esistono un sacco di editor di testo, ma alcuni come Vim ed Emacs possono risultare molto complicati per gli utenti meno avanzati.</p>
<p>In questo casi ci viene in aiuto Nano, forse il miglior editor di testo per principianti.</p>
<h2 id="nano">Nano:</h2>
<p>Nano è un editor di testo semplice e leggero sviluppato appositamente per sistemi UNIX e ambienti desktop che utilizzano un&rsquo;interfaccia a riga di comando. Nano è concesso in licenza sotto la GNU General Public License ed emula l&rsquo;editor di testo Pico.</p>
<h2 id="come-installare-nano">Come installare Nano:</h2>
<p>Sto usando Ubuntu per questo tutorial e il processo di installazione sarà lo stesso su altre distribuzioni Linux.</p>
<p>Prima di procedere con il processo di installazione, sarebbe una buona idea verificare se l&rsquo;editor di testo Nano è già installato o meno sul tuo sistema. Alcune distribuzioni Linux vengono fornite con l&rsquo;editor Nano preinstallato.</p>
<p>Per controllare, esegui il seguente comando in Terminale.</p>
<pre tabindex="0"><code>$ nano --version
</code></pre><p>Se ottieni un output con l&rsquo;attuale versione di nano, puoi saltare l&rsquo;installazione poiché l&rsquo;editor di testo Nano è già installato sul tuo sistema.</p>
<p>L&rsquo;installazione di Nano Text Editor è semplice, basta eseguire il seguente comando da Terminale e attendere il completamento dell&rsquo;installazione.</p>
<pre tabindex="0"><code>$ sudo apt-get install nano
</code></pre><p>Gli utenti CentOS/Red Hat Enterprise Linux (RHEL) possono utilizzare il comando seguente per installare l&rsquo;editor Nano.</p>
<pre tabindex="0"><code>$ yum installa nano
</code></pre><p>Ora che l&rsquo;editor nano è stato installato correttamente sul tuo sistema e pronto per l&rsquo;uso, possiamo iniziare con una guida per principianti all&rsquo;uso dell&rsquo;editor di testo Nano.</p>
<h2 id="guida-alluso-delleditor-di-testo-nano">Guida all&rsquo;uso dell&rsquo;editor di testo Nano</h2>
<p>Vediamo ora come utilizzare l&rsquo;editor di testo Nano.</p>
<h3 id="come-aprirechiudere-il-nano-text-editor">Come aprire/chiudere il Nano Text Editor</h3>
<p>Il comando per aprire l&rsquo;editor di testo Nano è il seguente.</p>
<pre tabindex="0"><code>$ nano nomefile 
</code></pre><p>Puoi aprire vari tipi di file nell&rsquo;editor di testo Nano, inclusi .txt, .php, .html e molti altri. Devi solo digitare il nome del file seguito da un&rsquo;estensione per aprire il file particolare nell&rsquo;editor Nano. Ad esempio, supponiamo di dover aprire il file denominato il_mio_file.txt, il comando sarà il seguente.</p>
<pre tabindex="0"><code>$ nano il_mio_file.txt
</code></pre><p>Devi assicurarti di essere nella directory in cui è stato salvato il file. Se il file non è presente nella directory, l&rsquo;editor di testo Nano creerà un nuovo file nella directory attuale.</p>
<p>Una volta aperto il file noterai che l&rsquo;interfaccia nano presenta il nome del file nella parte superiore, mentre nella parte inferiore noterai principalmente scorciatoie come taglia, sostituisci, vai alla riga e giustifica. Qui ˄ significa il tasto <strong>CTRL</strong> sulla tastiera.</p>
<p>Ad esempio, per <strong>scrivere</strong> o salvare le modifiche, devi premere i pulsanti CTRL + O sulla tastiera.</p>
<p>Se stai aprendo un file di configurazione, assicurati di utilizzare l&rsquo; opzione <strong>–w</strong> , questo comanderà a Nano editor di aprire il file di configurazione in un formato standard. Se non si utilizza questa opzione, l&rsquo;editor Nano avvolgerà il testo del file per adattarlo alla finestra, che alla fine sarà difficile da leggere.</p>
<h2 id="come-cercare--sostituire-il-testo">Come cercare / sostituire il testo</h2>
<p><strong>CTRL + W</strong> è la scorciatoia per cercare la parola nell&rsquo;editor. Ora devi inserire il testo che vuoi cercare e quindi premere il tasto Invio. Per continuare a cercare lo stesso testo, usa il tasto <strong>ALT + W.</strong></p>
<p>Per sostituire il testo, devi usare <strong>CTRL + R</strong>, l&rsquo;editor ti porterà alla prima istanza del testo che desideri sostituire; per sostituire tutto il testo, devi premere <strong>A</strong> . Ma se vuoi sostituire un solo testo, devi premere <strong>Y</strong>.</p>
<h2 id="come-copiare-e-incollare-il-testo">Come copiare e incollare il testo</h2>
<p>L&rsquo;operazione di copia incolla non è così semplice come altri editor di testo nell&rsquo;editor Nano. Se desideri tagliare e incollare una riga particolare, devi prima portare il cursore all&rsquo;inizio di quella riga.</p>
<p>Ora devi premere <strong>CTRL + K</strong> per tagliare la linea, quindi spostare il cursore nel punto in cui vuoi incollarlo, ora infine, premere <strong>CTRL + U</strong> per incollare la linea.</p>
<p>Per copiare e incollare una particolare stringa o parola, devi selezionare quella parola o stringa premendo <strong>CTRL + 6</strong> o <strong>ALT + A</strong> , assicurati che il cursore sia all&rsquo;inizio della parola.</p>
<p>Ora puoi usare <strong>CTRL + K</strong> e <strong>CTRL + U</strong> per tagliare e incollare la parola o la stringa.</p>
<p>Ecco come puoi iniziare a utilizzare l&rsquo;editor di testo Nano. Modificare un file di testo utilizzando la riga di comando non è facile, ma l&rsquo;editor di testo Nano lo rende più semplice. È affidabile e uno degli strumenti più facili da usare.</p>
<p>Dagli utenti inesperti ai professionisti, tutti trovano l&rsquo;editor di testo Nano un utile strumento da riga di comando. Spero che questa guida ti abbia sicuramente aiutato a iniziare con l&rsquo;editor Nano.</p>
<p>Di seguito ti lascio una serie di comandi spesso utilizzati:</p>
<h2 id="scoriatoie-utili-per-nano">Scoriatoie utili per nano:</h2>
<table>
<thead>
<tr>
<th>Command</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td>CTRL + A</td>
<td>Vai all&rsquo;inizio della riga</td>
</tr>
<tr>
<td>CTRL + E</td>
<td>Vai alla fine della riga</td>
</tr>
<tr>
<td>CTRL + Y</td>
<td>Scorri in basso nella pagina</td>
</tr>
<tr>
<td>CTRL + V</td>
<td>Scorri in alto nella pagina</td>
</tr>
<tr>
<td>CTRL + _</td>
<td>Scorri fino alla riga speficina</td>
</tr>
<tr>
<td>CTRL + C</td>
<td>Scopri dov&rsquo;è il cursore</td>
</tr>
<tr>
<td>CTRL + V</td>
<td>Scorri verso l&rsquo;alto</td>
</tr>
<tr>
<td>CTRL + W</td>
<td>Cerca un testo</td>
</tr>
<tr>
<td>CTRL + D</td>
<td>Cancella il carattere sotto al cursore</td>
</tr>
<tr>
<td>CTRL + K</td>
<td>Cancella l&rsquo;intera riga</td>
</tr>
<tr>
<td>CTRL + \</td>
<td>Sostituisci una stringa</td>
</tr>
<tr>
<td>CTRL + O</td>
<td>Salva il contenuto senza uscire</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
		</item>
		
		<item>
			<title>Come installare una LAMP stack (Linux, Apache, MySQL, PHP) su Ubuntu</title>
			<link>https://albertoreineri.it/blog/come-installare-una-lamp-stack-linux-apache-mysql-php-su-ubuntu/</link>
			<pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-installare-una-lamp-stack-linux-apache-mysql-php-su-ubuntu/</guid>
			<description>Introduzione Uno stack &amp;ldquo;LAMP&amp;rdquo; è un gruppo di software open source che viene generalmente installato insieme per consentire a un server di ospitare siti Web dinamici e app Web. Questo termine è in realtà un acronimo che rappresenta il sistema operativo Linux, con il web server Apache**.** I dati del sito vengono archiviati in un database MySQL e il contenuto dinamico viene elaborato da PHP.
In questa guida, installeremo uno stack LAMP su un server Ubuntu.</description>
			<content type="html"><![CDATA[<h2 id="introduzione">Introduzione</h2>
<p>Uno stack &ldquo;LAMP&rdquo; è un gruppo di software open source che viene generalmente installato insieme per consentire a un server di ospitare siti Web dinamici e app Web. Questo termine è in realtà un acronimo che rappresenta il sistema operativo <strong>L</strong>inux, con il web server <strong>A</strong>pache**.** I dati del sito vengono archiviati in un database <strong>M</strong>ySQL e il contenuto dinamico viene elaborato da <strong>P</strong>HP.</p>
<p>In questa guida, installeremo uno stack LAMP su un server Ubuntu.</p>
<h2 id="prerequisiti">Prerequisiti</h2>
<p>Questo tutorial è creato su Ubuntu, ma funziona su tutte le distro basate su Debian, come Pop!_OS, Elementary OS, Linux Mint etc.</p>
<h2 id="passaggio-1-installazione-di-apache">Passaggio 1: installazione di Apache</h2>
<p>Il server Web Apache è un popolare server Web open source che può essere utilizzato insieme a <a href="/blog/le-basi-di-php/">PHP</a> per ospitare siti Web dinamici. È ben documentato ed è stato ampiamente utilizzato per gran parte della storia del web.</p>
<p>Innanzitutto, assicurati che la tua <code>apt</code> cache sia aggiornata con:</p>
<pre tabindex="0"><code>sudo apt update
</code></pre><p>Se è la prima volta che lo utilizzi <code>sudo</code> in questa sessione, ti verrà chiesto di fornire la password dell&rsquo;utente per convalidare le tue autorizzazioni.</p>
<p>Una volta aggiornata la cache, puoi installare Apache lanciando:</p>
<pre tabindex="0"><code>sudo apt install apache2
</code></pre><p>Dopo aver inserito questo comando, <code>apt</code> ti dirà quali pacchetti intende installare e quanto spazio su disco occuperà. Premi S (o Y se hai configurati il sistema in lingua inglese) e poi premi <code>ENTER</code> per confermare e l&rsquo;installazione procederà.</p>
<hr>
<p>N.B.: in questa guida utilizzerò &lsquo;<em>Y</em>&rsquo; per procedere con l&rsquo;installazione, perché ho l&rsquo;abitudine di installare sempre Linux in inglese&hellip; Se usi l&rsquo;italiano ricordati di premere &lsquo;<em>S</em>&rsquo;</p>
<hr>
<p>E voilà! Apache è bello che installato!</p>
<p>Puoi fare subito un controllo a campione per verificare che tutto sia andato come previsto visitando l&rsquo;indirizzo IP pubblico del tuo server nel tuo browser web. Se sei il locale ti basterà aprire il browser e scrivere nella barra degli indirizzi:</p>
<pre tabindex="0"><code>http://localhost
</code></pre><p>Se invece stai configurando un web server remoto, allora dovrai inserire il tuo indirizzo IP</p>
<pre tabindex="0"><code>http://your_server_ip
</code></pre><p>Dovresti ora vedere nel browser la pagina Web predefinita di Apache, che è disponibile a scopo informativo e di test. Dovrebbe assomigliare a qualcosa di simile a questo:</p>
<p><img src="images/small_apache_default_1804-728x1024.png" alt=""></p>
<p>Se vedi questa pagina, allora il tuo server web è ora installato correttamente e accessibile attraverso il tuo firewall.</p>
<h3 id="come-trovare-lindirizzo-ip-pubblico-del-tuo-server">Come trovare l&rsquo;indirizzo IP pubblico del tuo server</h3>
<p>Se stai configurando un web server remoto e non sai qual è l&rsquo;indirizzo IP pubblico del tuo server, ci sono diversi modi per trovarlo. Di solito è l&rsquo;indirizzo che usi per connetterti al tuo server tramite SSH.</p>
<p>Esistono diversi modi per farlo dalla riga di comando. Innanzitutto, puoi utilizzare gli strumenti <em>iproute2</em> per ottenere il tuo indirizzo IP digitando questo:</p>
<pre tabindex="0"><code>ip addr show eth0 | grep inet | awk &#39;{ print $2; }&#39; | sed &#39;s/\/.*$//&#39;
</code></pre><p>Questo ti restituirà due o tre righe. Sono tutti indirizzi corretti, ma il tuo computer potrebbe essere in grado di utilizzarne solo uno, quindi sentiti libero di provarli.</p>
<p>Un metodo alternativo consiste nell&rsquo;utilizzare l&rsquo;utility <code>curl</code> per contattare una parte esterna per dirti come <em>vede</em> il tuo server. Questo viene fatto chiedendo a un server specifico qual è il tuo indirizzo IP:</p>
<pre tabindex="0"><code>sudo apt install curl
curl http://icanhazip.com
</code></pre><p>Indipendentemente dal metodo utilizzato per ottenere il tuo indirizzo IP, digitalo nella barra degli indirizzi del tuo browser web per visualizzare la pagina Apache predefinita.</p>
<h2 id="passaggio-2-installazione-di-mysql">Passaggio 2: installazione di MySQL</h2>
<p>Ora che hai il tuo server web attivo e funzionante, è il momento di installare MySQL. MySQL è un sistema di gestione di database. Fondamentalmente, organizzerà e fornirà l&rsquo;accesso ai database in cui il tuo sito può archiviare informazioni.</p>
<p>Ancora una volta, utilizziamo <code>apt</code> per acquisire e installare questo software:</p>
<pre tabindex="0"><code>sudo apt install mysql-server
</code></pre><p><strong>Nota</strong> : in questo caso, non è necessario eseguire <code>sudo apt update</code> prima del comando. Questo perché di recente l&rsquo;hai eseguito nei comandi sopra per installare Apache. L&rsquo;indice del pacchetto sul tuo computer dovrebbe essere già aggiornato.</p>
<p>Anche questo comando ti mostrerà un elenco dei pacchetti che verranno installati, insieme alla quantità di spazio su disco che occuperanno. Entra <code>Y</code> (o <em>S</em>) per continuare.</p>
<p>Al termine dell&rsquo;installazione, esegui un semplice script di sicurezza preinstallato con MySQL che rimuoverà alcune pericolose impostazioni predefinite e bloccherà l&rsquo;accesso al tuo sistema di database (Se sei in locale non è necessario). Avvia lo script interattivo eseguendo:</p>
<pre tabindex="0"><code>sudo mysql_secure_installation
</code></pre><p>Questo ti chiederà se vuoi configurare il <code>VALIDATE PASSWORD PLUGIN</code>.</p>
<p><strong>Nota:</strong> l&rsquo;abilitazione di questa funzione è una sorta di chiamata di giudizio. Se abilitato, le password che non corrispondono ai criteri specificati verranno rifiutate da MySQL con un errore. Ciò causerà problemi se si utilizza una password debole insieme al software che configura automaticamente le credenziali utente di MySQL, come i pacchetti Ubuntu per phpMyAdmin. È sicuro lasciare la convalida disabilitata, ma dovresti sempre usare password complesse e univoche per le credenziali del database.</p>
<p>Rispondi <code>Y</code> per sì o per qualsiasi altra cosa per continuare senza abilitare.</p>
<pre tabindex="0"><code>VALIDATE PASSWORD PLUGIN can be used to test passwords
and improve security. It checks the strength of password
and allows the users to set only those passwords which are
secure enough. Would you like to setup VALIDATE PASSWORD plugin?

Press y|Y for Yes, any other key for No:
</code></pre><p>Se rispondi &ldquo;sì&rdquo;, ti verrà chiesto di selezionare un livello di convalida della password. Tieni presente che se inserisci <code>2</code>, il livello più forte, riceverai errori quando tenti di impostare una password che non contenga numeri, lettere maiuscole e minuscole e caratteri speciali o che sia basata su parole comuni del dizionario.</p>
<pre tabindex="0"><code>There are three levels of password validation policy:

LOW    Length &gt;= 8
MEDIUM Length &gt;= 8, numeric, mixed case, and special characters
STRONG Length &gt;= 8, numeric, mixed case, special characters and dictionary                  file

Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 1
</code></pre><p>Indipendentemente dal fatto che tu abbia scelto di impostare <code>VALIDATE PASSWORD PLUGIN</code>, il tuo server ti chiederà successivamente di selezionare e confermare una password per l&rsquo; utente <strong>root</strong> MySQL. Questo non deve essere confuso con il <strong>root di sistema</strong>. L&rsquo; utente <strong>root del database</strong> è un utente amministrativo con privilegi completi sul sistema del database. Anche se il metodo di autenticazione predefinito per l&rsquo;utente root MySQL dispensa l&rsquo;uso di una password, <strong>anche quando ne è impostata una</strong> , dovresti definire qui una password complessa come misura di sicurezza aggiuntiva. Ne parleremo tra un momento.</p>
<p>Se hai abilitato la convalida della password, ti verrà mostrata la sicurezza della password per la password di root che hai appena inserito e il tuo server ti chiederà se vuoi cambiare quella password. Se sei soddisfatto della tua password attuale, digita <code>N</code>:</p>
<pre tabindex="0"><code>Using existing password for root.

Estimated strength of the password: 100
Change the password for root ? ((Press y|Y for Yes, any other key for No) : n
</code></pre><p>Per il resto delle domande, premere <code>Y</code> e premere <code>ENTER</code> ad ogni prompt. Ciò rimuoverà alcuni utenti anonimi e il database di test, disabiliterà gli accessi root remoti e caricherà queste nuove regole in modo che MySQL rispetti immediatamente le modifiche apportate.</p>
<p>Al termine, verifica se riesci ad accedere alla console MySQL digitando:</p>
<pre tabindex="0"><code>sudo mysql
</code></pre><p>Questo si collegherà al server MySQL come utente <strong>root</strong> del database amministrativo, che viene dedotto dall&rsquo;uso di <code>sudo</code> quando si esegue questo comando. Dovresti vedere un output come questo:</p>
<pre tabindex="0"><code>OutputWelcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 5
Server version: 5.7.34-0ubuntu0.18.04.1 (Ubuntu)

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

mysql&gt;
</code></pre><p>Per uscire dalla console MySQL, digita:</p>
<pre tabindex="0"><code>exit
</code></pre><p>Tieni presente che non è necessario fornire una password per connettersi come utente <strong>root</strong> , anche se ne è stata definita una durante l&rsquo;esecuzione dello  <code>mysql_secure_installation</code>. Questo perché il metodo di autenticazione predefinito per l&rsquo;utente MySQL amministrativo è <code>unix_socket</code> invece di <code>password</code>. Anche se all&rsquo;inizio potrebbe sembrare un problema di sicurezza, rende il server del database più sicuro perché gli unici utenti autorizzati ad accedere come utente <strong>root</strong> MySQL sono gli utenti del sistema con privilegi sudo che si connettono dalla console o tramite un&rsquo;applicazione in esecuzione con gli stessi privilegi. In termini pratici, ciò significa che non sarai in grado di utilizzare l&rsquo;utente <strong>root</strong> del database amministrativo per connetterti dalla tua applicazione PHP. L&rsquo;account MySQL funge da salvaguardia, nel caso in cui il metodo di autenticazione predefinito venga modificato da <code>unix_socket</code> a <code>password</code>.</p>
<p>Per una maggiore sicurezza, è meglio disporre di account utente dedicati con privilegi meno estesi impostati per ogni database, soprattutto se prevedi di avere più database ospitati sul tuo server, ma su questo creerò altre guide più dettagliate in futuro.</p>
<p>Il tuo server MySQL è ora installato e protetto. Vediamo ora come installare PHP, il componente finale nello stack LAMP.</p>
<h2 id="passaggio-3-installazione-di-php">Passaggio 3: installazione di PHP</h2>
<p>PHP è il componente della configurazione che elaborerà il codice per visualizzare il contenuto dinamico. Può eseguire script, connettersi ai tuoi database MySQL per ottenere informazioni e consegnare il contenuto elaborato al tuo server web in modo che possa mostrare i risultati ai tuoi visitatori.</p>
<p>Ancora una volta, sfrutta il sistema apt per installare PHP. Oltre al pacchetto php, dovrai anche integrare libapache2-mod-php in Apache e il pacchetto php-mysql per consentire a PHP di connettersi ai database MySQL. Esegui il comando seguente per installare tutti e tre i pacchetti e le relative dipendenze:</p>
<pre tabindex="0"><code>sudo apt install php libapache2-mod-php php-mysql
</code></pre><p>Questo dovrebbe installare PHP senza problemi. Lo testeremo tra un momento.</p>
<h3 id="modifica-dellindice-della-directory-di-apache-opzionale">Modifica dell&rsquo;indice della directory di Apache (opzionale)</h3>
<p>In alcuni casi, vorrai modificare il modo in cui Apache serve i file quando viene richiesta una directory. Di default, se un utente richiede una directory dal server, Apache cercherà prima un file chiamato <code>index.html</code>. Ma noi vogliamo dire al server web di preferire i file PHP rispetto ad altri, per fare in modo che Apache cerchi <code>index.php</code> come primoo file. In caso contrario, un <code>index.html</code> inserito nella radice del documento dell&rsquo;applicazione avrà sempre la precedenza su un <code>index.php</code>.</p>
<p>Per apportare questa modifica, apri il file di configurazione <code>dir.conf</code> in un editor di testo a tua scelta. Qui useremo <code>nano</code>:</p>
<pre tabindex="0"><code>sudo nano /etc/apache2/mods-enabled/dir.conf
</code></pre><p>Dovresti vedere una cosa del genere:</p>
<pre tabindex="0"><code>&lt;IfModule mod_dir.c&gt;
    DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
&lt;/IfModule&gt;
</code></pre><p>Sposta il file di indice PHP (evidenziato sopra) nella prima posizione dopo la <code>DirectoryIndex</code>, in questo modo:</p>
<pre tabindex="0"><code>&lt;IfModule mod_dir.c&gt;
    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
&lt;/IfModule&gt;
</code></pre><p>Al termine, salva e chiudi il file premendo <code>CTRL+X</code>. Conferma il salvataggio digitando <code>Y</code> e quindi premi <code>ENTER</code> per verificare la posizione di salvataggio del file.</p>
<p>Successivamente, riavvia il server Web Apache in modo che le modifiche vengano riconosciute. Puoi farlo con il seguente comando:</p>
<pre tabindex="0"><code>sudo systemctl restart apache2
</code></pre><p>Puoi anche controllare lo stato del <code>apache2</code>servizio utilizzando <code>systemctl</code>:</p>
<pre tabindex="0"><code>sudo systemctl status apache2
</code></pre><pre tabindex="0"><code>Sample Output● apache2.service - The Apache HTTP Server
   Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)
  Drop-In: /lib/systemd/system/apache2.service.d
           └─apache2-systemd.conf
   Active: active (running) since Thu 2021-07-15 09:22:59 UTC; 1h 3min ago
 Main PID: 3719 (apache2)
    Tasks: 55 (limit: 2361)
   CGroup: /system.slice/apache2.service
           ├─3719 /usr/sbin/apache2 -k start
           ├─3721 /usr/sbin/apache2 -k start
           └─3722 /usr/sbin/apache2 -k start

Jul 15 09:22:59 ubuntu1804 systemd[1]: Starting The Apache HTTP Server...
Jul 15 09:22:59 ubuntu1804 apachectl[3694]: AH00558: apache2: Could not reliably determine the server&#39;s fully qualified domain name, using 127.0.1.1. Set the &#39;ServerName&#39; di
Jul 15 09:22:59 ubuntu1804 systemd[1]: Started The Apache HTTP Server.
</code></pre><p>Premi <code>Q</code> per uscire da questo stato.</p>
<h2 id="passaggio-4-configurazione-di-un-host-virtuale-consigliato">Passaggio 4: configurazione di un host virtuale (consigliato)</h2>
<p>Quando si utilizza il server Web Apache, è possibile utilizzare <em>host virtuali</em> per incapsulare i dettagli di configurazione e ospitare più di un dominio da un singolo server. Imposteremo ora un dominio di esempio chiamato <strong><strong>il_mio_dominio</strong></strong>, potrai sostituirlo con il nome del dominio che desideri utilizzare.</p>
<p>Apache su ha un blocco server abilitato per impostazione predefinita che è configurato per servire i documenti dalla cartella <code>/var/www/html</code>. Sebbene funzioni bene per un singolo sito, può diventare ingombrante se ospiti più siti. Invece di modificare <code>/var/www/html</code>, creiamo una struttura di directory all&rsquo;interno <code>/var/www</code> per <strong>il sito il_mio_dominio</strong>, lasciando <code>/var/www/html</code> come directory predefinita da servire se una richiesta del client non corrisponde a nessun altro sito.</p>
<p>Crea la directory per <strong><strong>il_mio_dominio</strong></strong> come segue:</p>
<pre tabindex="0"><code>sudo mkdir /var/www/il_mio_dominio
</code></pre><p>Quindi, assegna la proprietà della directory con la variabile di ambiente <code>$USER</code>, che fa riferimento all&rsquo;utente registrato corrente:</p>
<pre tabindex="0"><code>sudo chown -R $USER:$USER /var/www/il_mio_dominio
</code></pre><p>I permessi della tua directory principale web dovrebbero essere corretti se non hai modificato il suo valore umask, ma puoi comunque digitare:</p>
<pre tabindex="0"><code>sudo chmod -R 755 /var/www/il_mio_dominio
</code></pre><p>Ora crea una pagina di esempio <code>index.html</code> utilizzando <code>nano</code> o il tuo editor preferito:</p>
<pre tabindex="0"><code>nano /var/www/il_mio_dominio/index.html
</code></pre><p>All&rsquo;interno, aggiungi il seguente codice HTML di esempio:</p>
<pre tabindex="0"><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Il Mio Dominio&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Il mio dominio FUNZIONA!!!&lt;/h1&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Salva e chiudi il file quando hai finito.</p>
<p>Affinché Apache possa servire questo contenuto, è necessario creare un file host virtuale con le direttive corrette. Invece di modificare il file di configurazione predefinito che si trova <code>/etc/apache2/sites-available/000-default.conf</code> direttamente in, creiamone uno nuovo in :<code>/etc/apache2/sites-available/il_mio_dominio.conf</code></p>
<pre tabindex="0"><code>sudo nano /etc/apache2/sites-available/il_mio_dominio.conf
</code></pre><p>Incolla il seguente blocco di configurazione, che è simile a quello predefinito, ma aggiornato per la nostra nuova directory e nome di dominio:/etc/apache2/sites-available/il_mio_dominio.conf</p>
<pre tabindex="0"><code>&lt;VirtualHost *:80&gt;
    ServerAdmin webmaster@localhost
    ServerName il_mio_dominio
    ServerAlias www.il_mio_dominio
    DocumentRoot /var/www/il_mio_dominio
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
&lt;/VirtualHost&gt;
</code></pre><p>Nota che abbiamo aggiornato il <code>DocumentRoot</code> alla nostra nuova directory e <code>ServerAdmin</code> a un&rsquo;e-mail a cui l&rsquo; amministratore del sito <strong><strong>il_mio_dominio</strong></strong> può accedere. Abbiamo anche aggiunto due direttive: <code>ServerName</code>, che stabilisce il dominio di base che dovrebbe corrispondere a questa definizione di host virtuale e <code>ServerAlias</code>, che definisce altri nomi che dovrebbero corrispondere come se fossero il nome di base.</p>
<p>Salva e chiudi il file quando hai finito.</p>
<p>Abilitiamo ora il file con lo strumento <code>a2ensite</code>:</p>
<pre tabindex="0"><code>sudo a2ensite il_mio_dominio.conf
</code></pre><p>Disabilita infine il sito predefinito definito in <code>000-default.conf</code>:</p>
<pre tabindex="0"><code>sudo a2dissite 000-default.conf
</code></pre><p>Quindi, testiamo gli errori di configurazione:</p>
<pre tabindex="0"><code>sudo apache2ctl configtest
</code></pre><p>Dovresti vedere il seguente output:</p>
<pre tabindex="0"><code>OutputSyntax OK
</code></pre><p>Riavvia Apache per implementare le modifiche:</p>
<pre tabindex="0"><code>sudo systemctl restart apache2
</code></pre><p>Apache dovrebbe ora servire il tuo nome di dominio. Puoi testarlo navigando su <code>http://il_mio_dominio</code>, dovresti vedere la pagina HTML creata poco fa funzionare correttamente.</p>
<p>Con ciò, il tuo host virtuale è completamente configurato. Prima di apportare ulteriori modifiche o distribuire un&rsquo;applicazione, tuttavia, sarebbe utile testare in modo proattivo la configurazione PHP nel caso in cui ci siano problemi che dovrebbero essere risolti.</p>
<h2 id="passaggio-5-testare-lelaborazione-php-sul-server-web">Passaggio 5: testare l&rsquo;elaborazione PHP sul server Web</h2>
<p>Per verificare che il tuo sistema sia configurato correttamente per PHP, crea uno script PHP chiamato <code>info.php</code>. Affinché Apache possa trovare questo file e servirlo correttamente, deve essere salvato nella directory principale del Web.</p>
<p>Crea il file nella radice web che hai creato nel passaggio precedente eseguendo:</p>
<pre tabindex="0"><code>sudo nano /var/www/il_mio_dominio/info.php
</code></pre><p>Questo aprirà un file vuoto. Aggiungi il seguente testo, che è un codice PHP valido, all&rsquo;interno del file:</p>
<pre tabindex="0"><code>&lt;?php
phpinfo();
</code></pre><p>Al termine, salva e chiudi il file.</p>
<p>Ora puoi verificare se il tuo server web è in grado di visualizzare correttamente il contenuto generato da questo script PHP. Per provarlo, visita questa pagina nel tuo browser web. Avrai bisogno di nuovo dell&rsquo;indirizzo IP pubblico o del nome di dominio del tuo server.</p>
<p>L&rsquo;indirizzo che vorrai visitare è:</p>
<pre tabindex="0"><code>http://il_mio_dominio/info.php
</code></pre><p>La pagina a cui vieni dovrebbe assomigliare a questa:</p>
<p><img src="images/small_php_info_1804-796x1024.png" alt=""></p>
<p>Questa pagina fornisce alcune informazioni di base sul tuo server dal punto di vista di PHP. È utile per il debug e per garantire che le impostazioni vengano applicate correttamente.</p>
<p>Se riesci a vedere questa pagina nel tuo browser, il tuo PHP funziona come previsto.</p>
<p>Probabilmente vorrai rimuovere questo file dopo questo test perché potrebbe effettivamente fornire informazioni sul tuo server a utenti non autorizzati. Per fare ciò, esegui il seguente comando:</p>
<pre tabindex="0"><code>sudo rm /var/www/il_mio_dominio/info.php
</code></pre><p>Puoi sempre ricreare questa pagina se hai bisogno di accedere nuovamente alle informazioni in un secondo momento.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Ora che hai installato uno stack LAMP, hai molte scelte su cosa fare dopo. Hai installato una piattaforma che ti consentirà di installare la maggior parte dei tipi di siti Web e software Web sul tuo server.</p>
<p>Non ti resta che iniziare a installare o sviluppare i tuoi siti in PHP sul tuo nuovo LAMP stack!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Perché dovremmo tutti passare a Linux, e perché non lo facciamo</title>
			<link>https://albertoreineri.it/blog/perch%C3%A9-dovremmo-tutti-passare-a-linux-e-perch%C3%A9-non-lo-facciamo/</link>
			<pubDate>Wed, 28 Jul 2021 20:30:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/perch%C3%A9-dovremmo-tutti-passare-a-linux-e-perch%C3%A9-non-lo-facciamo/</guid>
			<description>Linux non è solamente uno strumento, un qualcosa che ci permette di fare qualcosa. Dietro al mondo del pinguino c’è tutta una filosofia, una storia di libertà e democrazia assoluta, la voglia di comunione e condivisione, di essere indipendenti e capire cosa c’è dietro ciò che facciamo.
Il mondo dei computer è relativamente giovane. Negli ultimi decenni si è sviluppato in maniera esponenziale, diventando un fenomeno di massa senza avere il tempo di essere regolato correttamente dalla società.</description>
			<content type="html"><![CDATA[<p>Linux non è solamente uno <strong>strumento</strong>, un qualcosa che ci permette di fare qualcosa. Dietro al mondo del pinguino c’è tutta una <strong>filosofia</strong>, una storia di libertà e democrazia assoluta, la voglia di comunione e condivisione, di essere indipendenti e capire cosa c’è dietro ciò che facciamo.</p>
<p>Il mondo dei computer è relativamente giovane. Negli ultimi decenni si è sviluppato in maniera esponenziale, diventando un fenomeno di massa senza avere il tempo di essere regolato correttamente dalla società. Vedere aziende che incassano più di interi stati è una cosa pazzesca. <strong>Oggi le aziende tech detengono un potere enorme</strong>, quasi spaventoso.</p>
<p>Tutte le aziende tech guadagnano <strong>due</strong> volte: la prima quandono vendono il loro prodotto, la seconda quando rimangono in contatto con i prodotti venduti, o meglio con i loro clienti e <strong>seguirne le mosse</strong>, il modo di comportarsi, la vita. Oggi la maggior parte dei software hanno sistemi di tracciamento, spesso mascherati da sistemi di sicurezza. Già perché se bisogna proteggere l’utente, impedirgli di fare cose pericolose, bisogna sapere cosa sta facendo. Recentemente Chrome propone un sistema di sicurezza avanzata che tiene d’occhio ogni azione che l’utente sta facendo per proteggerlo. Controlla i file scaricati, i siti visualizzati e tutta l’attività online. Il fine è certamente nobile, però a che prezzo?</p>
<p>Tutto questo per <strong>l’utente medio</strong> può sembrare un gran vantaggio. Non deve preoccuparsi di niente, può cliccare su tutte le pubblicità per aumentare il suo conto corrente oppure le dimensioni del suo pene senza paura di beccarsi virus (in realtà se li becca lo stesso…). E tutto GRATIS!</p>
<p>Bè, in realtà tutto questo ha un prezzo <strong>elevatissimo</strong>. Provate a pensare a quando eravate bambini, quando ancora non sapevate cosa era sicuro e cosa no. Come avete imparato a crescere? Avete i genitori e i nonni che ancora oggi vi seguono, restano alle vostre spalle ad ogni vostra mossa dicendovi cosa è giusto e sbagliato oppure avete imparato a capire come comportarvi nel mondo e ora siete indipendenti? Spero che la risposta corretta sia la seconda.</p>
<p>Nel mondo reale avere qualcuno che ci spia continuamente è fastidioso, addirittura <strong>spaventoso</strong>, è una grandissima violazione dei diritti umani. Invece <strong>nel mondo online no</strong>, non ci facciamo caso, quasi non ce ne accorgiamo. Forse è perché non vediamo fisicamente qualcuno che ci controlla, anche se non è così difficile farlo, smanettando un po’ con le impostazioni e i termini di servizio si scoprono cose non proprio piacevoli.</p>
<p>Basterebbe quindi imparare ad <strong>utilizzare internet nel modo corretto</strong>, e una volta imparato abbandonare la <em>babysitter</em> di turno e procedere da soli.</p>
<h2 id="ma-perché-quasi-nessuno-lo-fa">Ma perché quasi nessuno lo fa?</h2>
<p>Perché <strong>siamo</strong> **rimasti bambini **nel mondo online, ci facciamo portare per mano ad ogni passo.</p>
<p>Partiamo dal fatto che è un mondo <strong>complicato</strong>. Forse a noi del settore può sembrare banale muoverci nel nostro mondo, ma per la maggior parte delle persone che utilizzano Chrome e MS Word fare qualcosa fuori dai loro schemi di base richiede uno sforzo enorme. Quindi ben vengano gli antivirus che mi bloccano se faccio stupidaggini, che mi riempiono la memoria di file inutili e mi distraggono con continui popup di offerte.</p>
<p>Se nel mondo reale è brutto farsi accompagnare mano nella mano ogni volta che si attraversa la strada, nel mondo online questo è <strong>comodo</strong>. A tutti piace essere <strong>coccolati</strong>, lasciare il lavoro pesante agli altri e crogiolarci nella tranquillità. Ma il prezzo da pagare per essere bambini potrà diventare altissimo, soprattutto nel lungo periodo.</p>
<p>Lasciare in mano ad aziende private il potere di decidere della nostra vita è spaventoso. Si è già visto come i social influenzino le elezioni, ma questo accadeva già con i giornali o con le prediche dei sacerdoti, è sempre capitato. Lasciare però un potere del genere nelle mani di pochi imprenditori liberi di muoversi a prescindere dal volere comune non è il massimo.</p>
<h2 id="veniamo-al-tecnico">Veniamo al tecnico</h2>
<p>Con Linux intendo tutta la community dell’open source, il mondo del FOSS (Free and Open Source Software). Certo ci sono software linux closed source, a pagamento, e bisogna ricordare che Free significa “libero”, non necessariamente Gratis. Inoltre Linux è solo il kernel, bisogna parlare di gnu-linux etc etc etc… Ok abbiamo capito però cosa voglio dire.</p>
<p>Linux è un altro mondo. Certo è ostico, chiuso, pieno di persone saccenti e talvolta scortesi, pronte ad insultarti se fai la domanda sbagliata, ma è <strong>libero</strong>.</p>
<p>Torniamo all’esempio del bambino. Per imparare bene è meglio un insegnante accondiscendente, che piuttosto che arrabbiarsi con te fa le cose al posto tuo oppure uno militaresco, deciso, pronto a urlarti in faccia pur di farti imparare? Non dico che sia sempre così, quando ero insegnante non sono mai stato di questo tipo, però possiamo pensare all’utente linux che ti risponde malamente come al professore bastardo che ti insulta, ma non per divertimento bensì per farti capire e migliorare.</p>
<p>In nostro mondo gira attorno ai computer, orami è così. È spaventoso per che una minuscola percentuale conosce veramente <strong>come questi computer funzionino</strong>. Le scuole pensano che sia sufficiente insegnare ad utilizzare Ms Word e voilà, in realtà sarebbe essenziale avere una nozione di base disponibile per tutti, almeno sul funzionamento di internet.</p>
<p>Se pensiamo ai motori delle auto non tutti sappiamo come funzionano nel dettaglio, ma sappiamo tutti che ruolo ha la benzina, come ricaricare una batteria, cambiare l’acqua e le candele. In realtà anche queste cose ormai non sono più di comune conoscenza, ma sembra che il mondo vada verso questa via, quella di chiamare qualcuno per ogni piccolo problemino, spesso utilizzando proprio la rete tramite un’app. Ma stiamo già sforando dall’argomento…</p>
<h2 id="perché-dovremmo-tutti-usare-linux">Perché dovremmo tutti usare linux</h2>
<p>Questo “<em>tutti</em>” non è inteso in senso globale, logicamente non si può pretendere che mia nonna utilizzi linux, anche se sarebbe figo, ma tutti noi leggermente più tecnici dovremmo iniziare ad utilizzarlo, vediamo perché:</p>
<h3 id="è-libero">È libero</h3>
<p>Ogni distro è nata con lo scopo di dare qualcosa agli utenti, non ai programmatori. Lo scopo di lucro quasi mai è al centro del mondo linux. Fare le cose per soldi o per passione è molto diverso.</p>
<h3 id="è-aperto">È aperto</h3>
<p>Linux è sinonimo di open source. Avere il codice aperto è garanzia di sicurezza e serietà, il fatto che chiunque possa dare un’occhiata “<em>sotto al cofano</em>” e controllare che tutto sia fatto come si deve è un grande vantaggio, sia in termini di sicurezza che di trasparenza. Se utilizzo un servizio con codice open source so esattamente cosa viene fatto dei miei dati, come vengono gestiti, come si comporta l’app a tutti i livelli. Inoltre se qualcuno nota una falla nel codice può segnalarlo agli sviluppatori in modo che questi possano intervenire. Non a caso Microsoft ultimamente si sta pian piano aprendo all’open source. Certo lo fa con uno scopo diverso rispetto al mondo linux, però questo approccio ha moltissimi vantaggi.</p>
<h3 id="è-democratico">È democratico</h3>
<p>Linux è per tutti. Esistono centinaia di distro, ognuna studiata per una tipologia specifica di utente, esistono migliaia di app disponibili per milioni di operazioni, c’è un mondo intero di sviluppatori che lavora con forte passione per rendere il mondo linux sempre migliore. Certo alcuni software proprietari molto utilizzati non sono disponibili per Linux, e questo impedisce a molti di entrare a farne parte. In primis MS Office e la suite di Adobe. Esisono però soluzioni alternative, il grosso problema è che le persone imparano ad utilizzare prima i software di MS e Adobe e poi si aspettano che le alternative Linux funzionino allo stesso identico modo. Non è così, sono mondi e visioni diverse. Se Gimp sembra complicato è perché si è imparato su Photoshop. Di recente ho parlato con un grafico che ha imparato tutto su Gimp e trova Photoshop incomprensibile…</p>
<h3 id="è-gratis">È Gratis</h3>
<p>Spesso la gente arriva a linux proprio per questo motivo, ma io ho voluto lasciarlo in fondo. Questo perché è un grande motivo, ma ce ne sono di ben più importanti. Non sempre poi deve essere gratis. Io sono molto affezionato ad Elementary OS, che ha adottato il “<em>Pay what you want</em>” come filosofia di fondo. In questo modo offre i suoi prodotti a chiunque al prezzo che decide l’utente.</p>
<p>È possibile scaricare la distro gratis, provarla e se si ritiene che funzioni bene si può effettuare un pagamento. Così è anche per le app, si possono scaricare e pagare quanto si vuole. È un sistema che personalmente mi piace moltissimo e credo sia pienamente in linea con la filosofia dell’open source. Se è un momentaccio posso comunque utiizzare tutto gratuitamente, però se me la sto passando bene posso essere riconoscente al team di EOS e decidere di pagare quanto posso permettermi. Il risultato è lo stesso, sta all’utente decidere come essere riconoscente per il lavoro del team.</p>
<h2 id="perché-non-passiamo-tutti-a-linux">Perché non passiamo tutti a Linux</h2>
<p>Lentamente, con calma e senza far troppo rumore il mondo Linux si sta diffondendo. Grazie ai social, a Youtube e ai vari forum sempre più persone si stanno avvicinando al sistema del pinguino, e la cosa mi fa molto piacere.</p>
<p>Rimangono però dei problemi di fondo ancora grandi da superare.</p>
<h3 id="personalizzazioni">Personalizzazioni</h3>
<p>Se il bello di linux è che posso personalizzarmelo come mi pare e piace, per alcuni questo può essere uno svantaggio. Gli utenti abituati ad accendere il computer e lavorare senza starci troppo dietro si trovano spiazzati dal dover fare qualcosa in più per mantenere la loro macchina.</p>
<h3 id="batteria">Batteria</h3>
<p>Linux è ancora esoso di risorse rispetto ai suoi competitor… Se un notebook con windows può arrivare a 12 ore di batteria, linux farà sempre peggio, almeno per il momento. Si sta lavorando anche su questo punto, però al momento è ancora in perdita. Per chi come me fa della durata della batteria un parametro fondamentale nella scelta di un laptop allora questo è un tasto dolente.</p>
<h3 id="hardware-decente">Hardware decente</h3>
<p>Trovare un laptop in grado di utilizzare al meglio linux non è facile. I problemi di driver non sono più altissimi, ma ci sono ancora. Bisogna controllare che tutti i componenti siano compatibili con linux. Esistono già alcune case che offrono laptop con ubuntu preinstallato, in questo caso sia la batteria che i componenti interni andranno sicuramente bene, ma sono ancora molto poche. Ne approfitto però per segnalare Slimbook, un’interessante azienda spagnola che sembra stia facendo un gran bel lavoro.</p>
<h3 id="stabiità">Stabiità</h3>
<p>Qua tutto dipende dalle conoscenze che uno ha. Se l’utente sa cosa sta facendo allora ci sono distro che in quanto a stabilità battono alla grande Windows e Mac OS. Purtroppo però se l’utente fa qualche cavolata, allora può incriccare tutto il sistema. Essendo un software libero il sistema raramente blocca l’utente quando sta facendo qualcosa di stupido, lo lascia agire serenamente. Capita quindi facilemnte di copiare comandi di terminale presi da forum online senza sapere bene cosa si sta facendo e finire con il bestemmiare come matti e dover ripartire da zero. Il consiglio è questo: se si è alle prime armi è meglio utilizzare una macchina virtuale per provare comandi da terminale. Sul sistema primario meglio fare solo cose sicure.</p>
<h3 id="apple">Apple</h3>
<p>Infine secondo me il problema più grosso l’ha creato Apple quando ha lanciano i processori M1. Potersi portare a casa un Macbook Air con poco più di mille euro è una tentazione troppo forte. Con una cifra a parer mio corretta si può avere un gran computer con batteria esagerata, prestazioni fantastiche, fanless (a chi piace), schermo e toucpad meravigliosi e un software elegante e funzionale. È difficile resistere a tutto questo. Considerando anche l’effetto “Figo” che fa avere hardware Apple, è difficile pensare a linux come competitor, solo uno sviluppatore o uno smanettone può prenderlo in considerazione.</p>
<h2 id="cosa-si-può-fare">Cosa si può fare</h2>
<p>Tanto, ma tanto è già stato fatto. Apprezzo moltissimo gli influencer che sponsorizzano Linux, come il nostro Riccardo Palombo, oppure Nick di The Linux Experiment, questo porta a conoscenza di grandi quantità di persone il sistema del pinguino e pian piano può aumentare il numero utenti.</p>
<p>Pensare che negli ultimi 10 anni gli utenti di linux sono triplicati è una gran bella cosa, anche se siamo ancora sotto al 3%… (Alla buona abbiamo 80% Windows e 15% Mac OS…), ma bisogna che crescano ancora per poter avere sempre più interesse da parte degli sviluppatori.</p>
<p>I grandi sviluppatori guardano al mercato, e oggi sviluppare un’app per linux è poco conveniente… Inoltre tutta questa libertà del mondo FOSS ha fatto sì che ci sia una gran dispersione, non solo di distro, ma anche di ambienti di sviluppo, con integralisti da ogni parte…</p>
<h3 id="pensiamo-anche-a-questo">Pensiamo anche a questo:</h3>
<p><strong>Apple</strong>: comprando hardware Apple si può usufruire di un prodotto premium sotto ogni punto di vista, curato, bello e funzionante. Però ci si imprigiona nel loro mondo. Se ho un Mac prima o poi dovrò prendere un iPhone per potermi integrare al meglio nell’ecosistema, poi un iPad, un Apple Watch, le AirPods e così via. Entro in un mondo dal quale è difficile uscire. Certo è tutto bello, però se arriva un periodo come gli anni fra il 2016 e il 2018, dove i macbook erano carissimi e con hardware di basso livello, non posso fare altro che mettermi il cuore in pace, dare il mio denaro alla apple e pagare molto un qualcosa che non va poi così bene… Ora con l’Apple Silicon si sono ripresi (alla grande), ma se entro nel club faticherò ad uscirne, ne sarò quasi imprigionato.</p>
<p><strong>Microsoft</strong>: I prodotti Microsoft sono più democratici, più alla base di tutti, però hanno standard di sicurezza molto bassi. Già il sistema contiene pubblicità spammose appena installato, non è possibile che la prima cosa da fare appena acquisto un pc sia iniziare a pulirlo… Microsoft è stata furbissima ad accaparrarsi il mondo business con i software Office, così è entrata nel privato e nel pubblico e ora è difficile uscirne. Lo standard dei software di ufficio è suo e nessuno glielo può togliere ormai (anche se Google ci sta pian piano riuscendo). Ma è un sistema disordinato e <em>brutto</em>, pieno di falle. La cosa migliore però è che permette di giocare praticamente a tutto.</p>
<p><strong>Google</strong>: a livello di privacy google può essere considerata scherzosamente “<em>Il male assoluto</em>“. Google è come la vicina impicciona che passa tutto il giorno alla finestra per controllare cosa stai facendo. Anche qua vale lo stesso discorso di Apple, se si entra nel loro sistema si finisce in trappola, costretti ad utilizzarlo senza poterne fare a meno. Per esempio google offriva la possibilità di caricare foto su Google Photos gratuitamente, ma da qualche mese questa funzionalità è diventata a pagamento. Per carità, ci sta, è un gran bel servizio, però ha spiazzato molti utenti. Non succederà mai, ma pensate se un giorno gmail diventasse a pagamento! Metà mondo andrebbe nel panico…</p>
<h2 id="conclusione">Conclusione</h2>
<p>Utilizzando software di queste aziende non siamo proprietari di ciò che facciamo. Pensate anche ai Kindle, se compro un libro non ne divento proprietario come accade con un libro cartaceo, ma ho il diritto di leggerlo sul dispositivo Kindle. Se amazon chiudesse (improbabile), perderei l’accesso e non potrei farci nulla. A livello legale si acqusita qualcosa che però poi non diventa nostro</p>
<p>Con Linux invece si è proprietari di ciò che si fa al 100%. Perciò molti servizi cloud sono self hosted, così ognuno ha il controllo totale dei propri dati e delle proprie azioni.</p>
<p>Il mio consiglio è quello di non diventarci pazzi, non occorre per forza farsi un server NextCloud privato e abbandonare i servizi dei big, ma almeno cominciare a pensarci un po’ e provare ad essere leggermente più indipendenti.</p>
<p>Se più persone iniziassero ad usare Linux allora le aziende sarebbero più interessate a portare i loro software su questa piattaforma, permettendo agli utenti un’alternativa fra la costosa Apple e la pessima Microsoft.</p>
<p>Io lavoro con Linux da un anno ormai e sono veramente poche le volte che ho rimpianto questa scelta.</p>
]]></content>
		</item>
		
		<item>
			<title>Sviluppo web su Linux</title>
			<link>https://albertoreineri.it/blog/sviluppo-web-su-linux/</link>
			<pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/sviluppo-web-su-linux/</guid>
			<description>Sviluppo software e siti web da più di dieci anni ormai (con una pausa di riflessione in mezzo), ed ho avuto modo di utilizzare sia Windows che Mac che Linux.
Come sistema primario ho quasi sempre utilizzato Windows e MAC, ma durante l’ultimo periodo nel quale ho lavorato a stretto contatto con sistemisti e fatto molto più sviluppo backend che frontend, ho sentito la necessità di passare a qualcosa di più performante per queste attività.</description>
			<content type="html"><![CDATA[<p>Sviluppo software e siti web <strong>da più di dieci anni</strong> ormai (con una pausa di riflessione in mezzo), ed ho avuto modo di utilizzare sia <a href="/blog/miglior-pc-per-sviluppatori-la-mia-esperienza/"><strong>Windows</strong> che <strong>Mac</strong></a> che <strong>Linux</strong>.</p>
<p>Come sistema primario ho quasi sempre utilizzato <strong>Windows</strong> e <strong>MAC</strong>, ma durante l’ultimo periodo nel quale ho lavorato a stretto contatto con <strong>sistemisti</strong> e fatto molto più <strong>sviluppo backend</strong> che frontend, ho sentito la necessità di passare a qualcosa di più <strong>performante</strong> per queste attività.</p>
<h2 id="gli-inizi">Gli inizi</h2>
<p>Ho iniziato la mia carriera come <strong>sviluppatore .net.</strong> Utilizzavo un pc con il meraviglioso <strong>Windows XP</strong>.</p>
<p><strong>Meraviglioso</strong> lo era veramente. <strong>Stabile</strong>, veloce, in grado di fare veramente di tutto.</p>
<p>All’epoca utilizzato Visual Studio e sviluppavo <strong>Gestionali e CRM</strong> per piattaforma <strong>Windows</strong>, quindi ero obbligato a rimanere in ambiente <strong>Microsoft</strong>.</p>
<p>Poi ho iniziato a sviluppare qualche <strong>sito web</strong>, sempre per la stessa azienda. Essendo pratici di .net iniziammo a sviluppare con <strong>ASP</strong>, un linguaggio molto simile al visual basic.</p>
<p>Ricordo che all’epoca <strong>non mi veniva nemmeno in mente l’idea di cambiare sistema operativo</strong>. Linux era ancora alquanto ostico, Mac era carissimo e nessuno dei due permetteva di sviluppare per software per Windows, quindi la questione finiva lì.</p>
<h2 id="il-mio-primo-mac">Il mio primo MAC</h2>
<p>Con i primi soldi risparmiati però decisi di acquistare il mio primo mac: un <strong>macbook white.</strong></p>
<p>Rimasi <strong>affascinato</strong> dall’ambiente apple.</p>
<p>Feci l’acquisto più che altro per utilizzarlo per <strong>registrare musica</strong>, non avevo assolutamente in mente di usarlo per sviluppare.</p>
<p>Ci provai anche all’inizio, ma tutto ciò che ero abituato ad utilizzare non esisteva per MAC. Visaul Studio non era disponibile per MAC e i nostri siti giravano su server Windows, quindi niente da fare.</p>
<p>Mi accontentavo del fantastico <strong>reparto artistico</strong> della mela morsicata. Qua non c’era paragone, i software di disegno, video e musica erano decisamente di un altro livello.</p>
<h2 id="un-periodo-di-pausa">Un periodo di pausa</h2>
<p><strong>Poi ho smesso di programmare per qualche anno.</strong> Ho fatto tutt’altro, mi sono laureato in una materia umanistica ed ho completamente staccato dai computer.</p>
<p>Continuavo ad utilizzare il <strong>MAC come laptop personal</strong>e, ma lo utilizzavo solamente per <strong>università</strong> e <strong>tempo libero,</strong> e qui ho iniziato a <strong>sentire la mancanza di Windows.</strong></p>
<p>La suite di <strong>Office</strong>, la possibilità di trovare migliaia di software per qualsiasi tipo di problema, i <strong>giochi</strong> e molto altro mancavano sul MAC…</p>
<p>Così quando alla fine il Macbook White è morto di vecchiaia (7 anni di buon servizio), <strong>ho acquistato un laptop Windows.</strong></p>
<h2 id="ritorno-a-windows">Ritorno a Windows</h2>
<p>Quando ho comprato il mio attuale laptop <strong>stavo ancora studiando</strong> e non avevo ancora ripreso la carriera da sviluppatore, ma <strong>avevo voglia di tornare a programmare,</strong> a scrivere un po’ di codice, a sviluppare qualcosa da zero.</p>
<p>Così sono andato all’unieuro ed ho acquistato <strong>il laptop con il miglior rapporto qualità prezzo.</strong></p>
<h2 id="riprendere-a-sviluppare">Riprendere a sviluppare</h2>
<p><strong>Un anno dopo ho ricominciato a sviluppare seriamente,</strong> e mi sono trovato benissimo in <strong>Windows</strong>, daltronde era lì che avevo iniziato e mi sentivo a casa.</p>
<p>Grazie a <strong>XAMPP</strong> ho potuto crearmi una mia lamp stack in 5 minuti e iniziare a pacioccare con <strong>WordPress</strong>, <strong>Laravel</strong> e a creare i miei progetti nel modo che preferisco: il <strong>core php</strong>.</p>
<p>Man mano che mi rimettevo al passo con i tempi e imparavo ad utilizzare i nuovi strumenti, mi rendevo sempre più conto che <strong>Windows non era più la scelta ideale per me.</strong></p>
<p>Ormai non creavo più software gestionali, ma applicativi web, e <strong>il web gira su linux.</strong></p>
<p>Ho iniziato ad utilizzare <strong>node js</strong> e svariati tool <strong>javascript</strong> che funzionano da riga di comando, e pian piano ho iniziato a scoprire quanto sia <strong>limitante la PowerShell…</strong></p>
<p>Poi ho ampliato le mie skills da backend developer e qua ho dovuto fare il salto verso un <strong>terminale più performante</strong>, e qua ho scoperto Linux.</p>
<p>Ho iniziato con l’utilizzare <strong>WSL</strong>, ma era tutto un po’ troppo <em><strong>pasticciato</strong></em> per i miei gusti, quindi sono passato a Linux vero e proprio.</p>
<h2 id="larrivo-a-linux">L’arrivo a Linux</h2>
<p><strong>Non è stato un colpo di fulminie.</strong></p>
<p>Ho iniziato a installare ubuntu come macchina virtuale con <strong>Virtualbox</strong> per provare a <strong>smanettare</strong> un pochino con il pinguino.</p>
<p>Il <strong>primo impatto</strong>, forse dovuto anche da tutta una vita passata su altri sistemi, è stato <strong>abbastanza tragico</strong>…</p>
<p>Ogni cosa che volevo fare dovevo <strong>configurarla</strong>, c’era ben poco che funzionava da subito, e per un po’ ho abbandonato l’idea di linux.</p>
<p>Poi un poco per volta mi ci sono <strong>riavvicinato</strong>, cercando di <strong>adattare il mio modo di pensare a questo sistema</strong>, e tutto è cambiato.</p>
<p>Il trucco sta nello <strong>smettere di volere che Linux assomiglia Windows o a Mac Os,</strong> ma cercare di capire ciò che realmente è, allora si possono apprezzare le sue infinite qualità.</p>
<p>Installare librerie, gestire componenti, utilizzare software da riga di comando, <strong>è tutto molto più <em>easy</em> su linux</strong>, tutto funziona al primo colpo.</p>
<p>Configurare correttamente Vagrant su Windows ha richiesto molto più tempo che su Ubuntu, e così molto altro.</p>
<p>Il più delle volte basta <strong>lanciare un comando da terminale e <em>voilà</em>, tutto funziona alla perfezione</strong>.</p>
<p>Come sviluppatore da ora in avanti penso che <strong>utilizzerò solamente più distro linux</strong>, lasciandomi una partizione con Windows nel caso dovessi fare lavori particolari con Photoshop (per il momento sostituito felicemente con pixlr) o con altro software disponibile solo per Windows.</p>
<p>Oltre all’essere migliore dal punto di vista di uno sviluppatore c’è anche tutta la questione dell’<strong>open source</strong> dietro, del più grande progetto comunitario della storia, della <strong>contrapposizione alle multinazionali,</strong> della <strong>lotta all’obsolescenza programmata dei laptop</strong>, e motlo altro, ma non è questo il momento di trattare questi temi.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Da sviluppatore suggerirei a chiunque di <strong>passare a Linux</strong> (tranne a chi sviluppa per iOs o specificatamente per Windows). Certo <strong>l’inizio non è facile,</strong> occorre smanettarci un po’, sbatterci la testa qualche volta, ma una volta entrati nel giusto <em>mood</em> <strong>tutto scorre semplicemente e velocemente.</strong></p>
<p>Per il momento mi sto trovando molto bene con <strong><a href="https://www.ubuntu-it.org/">Ubuntu</a></strong>, perché mi piace <strong>Gnome</strong>. Ho provato altre distro ma alla fine non c’è molta differenza, tutto può essere installato su ogni distro, perciò sono andato per Ubuntu per la sua <strong>stabilità</strong>.</p>
<p>Lo sto utilizzando come <strong>sistema primario da un paio di mesi</strong> e penso che rimarrà tale per molto tempo. Così potrò <strong>finalmente sentirmi libero dal marketing pressante di Apple,</strong> che se devo essere sincero è una tentazione continua, ma finirebbe per farmi diventare schiavo della mela… Si sa che se compri un Mac poi vuoi un iPhone, poi un iPad e un Apple Watch e alla fine usi sempre le solite 3 app…</p>
<p>Anche i <strong>Laptop Windows</strong> ormai diventano sempre più <strong>belli</strong> e tentatori, con hardware che sembra invecchiare sempre più velocemente. Certo se metti un i7 in un ultrabook senza sistema di raffreddamento o fondi il pc o lo castri e lo fai diventare un i3, alla fine è tutto marketing…</p>
<p>Con <strong>Linux</strong> invece puoi prendere un <strong>i5</strong> di qualsiasi generazione, buttarci sopra un <strong>SSD</strong> e <strong>8Gb</strong> di RAM e vai tranquillo per anni, senza problemi di cali di prestazioni e altro.</p>
<p>Certo c’è il problema dell’<strong>autonomia della batteria</strong>, che su linux non è così ben ottimizzata… Ma alla fine uso <strong>Linux per lavoro</strong>, collegato alla corrente, quando voglio chillare sul divano posso utilizzare Windows e godermi qualche ora in più lontano dai cavi.</p>
]]></content>
		</item>
		
	</channel>
</rss>
