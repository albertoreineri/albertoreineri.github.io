<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Blog on Alberto Reineri</title>
		<link>https://albertoreineri.it/blog/</link>
		<description>Recent content in Blog on Alberto Reineri</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>it</language>
		<lastBuildDate>Sat, 20 Jan 2024 05:00:00 +0000</lastBuildDate>
		<atom:link href="https://albertoreineri.it/blog/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Nuovo Sito Sperimentale</title>
			<link>https://albertoreineri.it/blog/nuovo-sito-sperimentale/</link>
			<pubDate>Sat, 20 Jan 2024 05:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/nuovo-sito-sperimentale/</guid>
			<description>Vi presento il mio nuovo Sito Web!!!
Lo so, potrebbe sembrare poco convenzionale. Non c&amp;rsquo;è l&amp;rsquo;effetto WOW che ci si aspetterebbe, almeno non sotto forma di animazioni sgargianti o stravaganti. È un sito semplice, basato principalmente sul testo. Potrebbe sembrare che non segua del tutto le regole di Google, ma in realtà c&amp;rsquo;è di più di quanto si possa vedere a prima vista.
Perché un Sito così poco SEO friendly Ho deciso di fare un cambio radicale!</description>
			<content type="html"><![CDATA[<p>Vi presento il mio nuovo Sito Web!!!</p>
<p>Lo so, potrebbe sembrare poco convenzionale. <strong>Non c&rsquo;è l&rsquo;effetto WOW</strong> che ci si aspetterebbe, almeno non sotto forma di animazioni sgargianti o stravaganti. È un sito semplice, basato principalmente sul testo. Potrebbe sembrare che <strong>non segua del tutto le regole di Google</strong>, ma in realtà c&rsquo;è di più di quanto si possa vedere a prima vista.</p>
<h2 id="perché-un-sito-così-poco-seo-friendly">Perché un Sito così poco SEO friendly</h2>
<p>Ho deciso di fare un cambio radicale! In origine, questo sito era la <strong>vetrina della mia attività da Web Developer Freelance</strong>. In passato, aveva colori vivaci, animazioni ed effetti per dimostrare le mie competenze e attirare nuovi clienti.</p>
<p>Al momento fortunatamente non ho più bisogno di <em>mettermi in mostra</em> così tanto. Questo per varie ragioni:</p>
<h3 id="non-ho-necessità-economiche-di-trovare-nuovi-clienti">Non ho necessità economiche di trovare nuovi clienti</h3>
<p>Al momento mi trovo in una situazione di equilibrio piuttosto stabile (<em>per quanto può essere stabile una partita IVA&hellip;</em>).
Ho delle collaborazioni a lungo termine soddisfacenti e riempio le mie giornate con la programmazione.
Accetto sempre volentieri nuovi clienti e nuovi progetti su cui lavorare, anche se recentemente mi è capitato di dover rinunciare e orientare possibili clienti verso altre realtà! Esserndo un Libero Professionista singolo non ho la struttura per ampliarmi all&rsquo;infinito, e sinceramente non voglio crearla al momento. Per ora mi accontento di rimanere da solo.
Questo comporta però che debba rinunciare a qualche lavoro. Le giornate hanno un numero limitato di ore e anche la mia testa ha un numero limitato di progetti che è in grado di gestire, quindi per ora posso dire di essere saturo.</p>
<p>Forse fra qualche anno mi aprirò a nuove possibilità, oppure salderò ancora di più le collaborazioni attuali e chiuderò con il freelancing&hellip; Chi lo sa&hellip; Staremo a vedere come evolvono le cose! È inutile guardare troppo in là, il mondo è in continuo cambiamento e bisogna essere sempre pronti a cambiare!</p>
<h3 id="voglio-un-sito-che-mi-rappresenti">Voglio un sito che mi rappresenti</h3>
<p>Il mio sito deve essere prima di tutto <strong>mio</strong>! Può sembrare scontato, ma oggi per <em>attrarre</em> il pubblico devi apparire figo, moderno, vivace, gioioso e chi più ne ha più ne metta!
In passato l&rsquo;ho fatto perché era necessario, ma in realtà io non sono così&hellip;
Sono una persona piuttosto seria, calma e pacata. Amo il silenzio e la quiete, non amo le cose troppo sgargianti&hellip;</p>
<p>Non mi definirei inquadrato, ho sempre portato i capelli lunghi, vesto sportivo e sono abbastanza liberale, ma tendo a prendere le cose sul serio, forse fin troppo.</p>
<h3 id="vetrina">Vetrina</h3>
<p>Questo sito quindi non è più la mia vetrina, o per meglio dire il suo essere vetrina non è più un fattore centrale.
Per ora sono ancora attive le pagine promozionali <a href="/servizi">Servizi</a> e <a href="/portfolio">Portfolio</a>, ma non escludo la possibilità di eliminarle in futuro e mantenere solamente il blog.
Inoltre ho in mente di creare anche una sezione Extra, dove inserire ciò che faccio al di fuori del mondo web.</p>
<p>### SEO
In realtà però la SEO è presente eccome in questo sito. I test di LightHouse sono super positivi e mi aspetto che l&rsquo;indicizzazione migliori. È vero che non ci sono immagini, ma i contenuti sono già molto letti e ora i tempi di caricamento sono molto migliorati. Solo il tempo mi dirà se tutto questo può funzionare.</p>
<h3 id="uscire-dai-social">Uscire dai Social</h3>
<p>Come obiettivo a lungo termine vorrei utilizzare questo sito come mia unica presenza online.
Da tempo mi sono stufato dei social network. Stanno diventando sempre più invasivi e ogni volta che penso a cosa portano della mia vita sono più le cose che mi tolgono rispetto a ciò che mi danno, perciò vorrei uscirne del tutto a breve.
Sono costretto a mantenerli attivi perché mi capita di usarli per lavoro, ma spero di poterli chiudere a breve e essere presente online solo attraverso questo sito.
Se succederà creerò anche una sezione &ldquo;Extra&rdquo; dove raccogliere qualche mia curiosità al di fuori della programmazione.</p>
<h2 id="come-funziona-questo-sito">Come funziona questo Sito</h2>
<p>Inizio col dire che questo sito è sviluppato con Hugo, un framework open source per la creazione di siti statici. Questo mi permette di poterlo gestire completamente tramite GitHub. Ho quindi rinunciato al mio dominio personale e sto utilizzando <a href="https://albertoreineri.github.io/">albertoreineri.github.io</a>. L&rsquo;unica cosa a cui ho dovuto rinunciare è la mail associata al mio dominio personale, perciò uso gmail. Questo negli anni non è mai stato un problema per i miei clienti e mi solleva dalla gestione di dominio, dns e server per questo sito. Un bel lavoro in meno per me!</p>
<p>Ma come funziona questo sito così particolare? Bé in realtà no è difficile&hellip;
La cosa principale è che la navbar è spostata in basso, non in alto come in tutti i siti. Questo per rendere il sito più comodo nell&rsquo;utilizzo, più in stile app. Se lo apri da mobile puoi utilizzare la navbar semplicemente col pollice senza stirarlo fino al top dello schermo, ma cliccando comodamente in basso.</p>
<p>Questo sito è orientato a una piacevole esperienza della lettura. Per questo esiste solo la modalità scura. Leggere testo bianco su sfondo scuro è più rilassante per gli occhi e <em>stressa</em> meno la mente.
Inoltre la struttura presenta il solo testo senza sidebar o altro. Talvolta è presente l&rsquo;indice dei contenuti sulla destra, sempre per migliorare la lettura del contenuto.
Infine allo scroll la navbar sparisce del tutto e il testo diventa l&rsquo;unica cosa presente in pagina, per garantire l&rsquo;esperienza di lettura migliore possibile.</p>
<p>Scrollando verso l&rsquo;alto o raggiungendo il fondo della pagina la navbar tornerà visibile e si potrà cambiare pagina.</p>
<p>Come features aggiuntive c&rsquo;è la possibiltà di effettuare la ricerca nei contenuti del sito e il multilingua, che è ancora in fase di sviluppo ma sarà online a breve.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Questo è il mio nuovo sito. Non so quanto durerà! Come sviluppatore web, sono sempre alla ricerca di nuove sfide, e il modo migliore per capire una tecnologia è provarla direttamente. Potrebbe essere completamente diverso fra due mesi, o potrei rimanere fedele a questo approccio per anni.</p>
<p>In ogni caso vi terrò informati in questo blog!</p>
<p>A presto!</p>
<p><em>Alberto</em></p>
]]></content>
		</item>
		
		<item>
			<title>Le basi Di GIT: Impara il versioning!</title>
			<link>https://albertoreineri.it/blog/le-basi-di-git-impara-il-versioning/</link>
			<pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-basi-di-git-impara-il-versioning/</guid>
			<description>Nel vasto panorama dello sviluppo software, la gestione efficace del codice svolge un ruolo cruciale nel determinare il successo di un progetto. In questo contesto, Git si erge come uno strumento indispensabile, fornendo un sistema di controllo versione potente ed efficiente. La sua adozione non solo semplifica la collaborazione tra sviluppatori, ma offre anche un metodo robusto per tracciare le modifiche nel tempo, gestire branch distinti e risolvere conflitti in modo ordinato.</description>
			<content type="html"><![CDATA[<p>Nel vasto panorama dello sviluppo software, la gestione efficace del codice svolge un ruolo cruciale nel determinare il successo di un progetto. In questo contesto, Git si erge come uno strumento indispensabile, fornendo un sistema di controllo versione potente ed efficiente. La sua adozione non solo semplifica la collaborazione tra sviluppatori, ma offre anche un metodo robusto per tracciare le modifiche nel tempo, gestire branch distinti e risolvere conflitti in modo ordinato.</p>
<p>Questa guida pratica vuole di condurti attraverso i fondamenti della gestione del codice con Git, offrendo una panoramica chiara e dettagliata delle procedure fondamentali. Dall&rsquo;installazione iniziale fino alla collaborazione avanzata su piattaforme come GitHub, esploreremo passo dopo passo come sfruttare appieno le potenzialità di Git per migliorare il tuo flusso di lavoro dello sviluppo.
Che tu sia un principiante che inizia il suo viaggio nello sviluppo software o un professionista esperto che desidera perfezionare le proprie competenze, questa guida ti accompagnerà nella tua esperienza con Git, aprendoti le porte a un mondo di gestione del codice più organizzato e collaborativo.</p>
<h2 id="1-installazione-di-git">1. Installazione di Git:</h2>
<p>Il primo passo fondamentale per intraprendere il tuo viaggio nella gestione del codice con Git è l&rsquo;installazione dello strumento sul tuo sistema. Git è una risorsa versatile e può essere installato su diverse piattaforme, tra cui Windows, macOS e Linux. Segui attentamente i passaggi corrispondenti al tuo sistema operativo per garantire una corretta installazione.</p>
<h3 id="windows">Windows:</h3>
<ul>
<li>Visita il sito ufficiale di Git (<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>) e scarica l&rsquo;installer.</li>
<li>Esegui l&rsquo;installer scaricato, seguendo le istruzioni di installazione.</li>
<li>Durante l&rsquo;installazione, assicurati di selezionare l&rsquo;opzione per &ldquo;Usare Git e strumenti da riga di comando&rdquo; per abilitare l&rsquo;utilizzo di Git da linea di comando.</li>
</ul>
<h3 id="macos">macOS:</h3>
<ul>
<li>Se stai utilizzando macOS, è consigliabile utilizzare Homebrew per l&rsquo;installazione. Apri il terminale e esegui il comando:
<pre tabindex="0"><code>brew install git
</code></pre></li>
<li>Attendere il completamento dell&rsquo;installazione.</li>
</ul>
<h3 id="linux-ubuntu">Linux (Ubuntu):</h3>
<ul>
<li>Su sistemi basati su Ubuntu, esegui i seguenti comandi nel terminale:
<pre tabindex="0"><code>sudo apt update
sudo apt install git
</code></pre></li>
<li>Conferma l&rsquo;installazione quando richiesto.</li>
</ul>
<p>Verifica l&rsquo;installazione eseguendo il comando <code>git --version</code> nel terminale. Se Git è stato installato correttamente, verrà visualizzata la versione attuale.</p>
<p>Con Git installato sul tuo sistema, hai aperto la porta per sfruttare appieno le sue funzionalità di gestione del codice. Nelle sezioni successive, esploreremo come inizializzare un repository e cominciare a tracciare le modifiche al tuo codice con precisione.</p>
<h2 id="2-creazione-di-un-repository">2. Creazione di un Repository:</h2>
<p>Ora che hai Git installato sul tuo sistema, il passo successivo è inizializzare un repository Git all&rsquo;interno della directory del tuo progetto. Un repository è essenzialmente un contenitore che terrà traccia delle modifiche al tuo codice nel tempo. Segui attentamente questi passaggi per creare il tuo repository:</p>
<ol>
<li>
<p><strong>Apertura del Terminale o della Console:</strong> Apri il terminale se sei su macOS o Linux, o la console se sei su Windows.</p>
</li>
<li>
<p><strong>Spostamento nella Directory del Progetto:</strong> Utilizza il comando <code>cd</code> per spostarti nella directory del tuo progetto. Ad esempio:
cd percorso/verso/il/tuo/progetto</p>
</li>
<li>
<p><strong>Inizializzazione del Repository:</strong> Esegui il comando <code>git init</code> per inizializzare un nuovo repository Git nella directory del progetto.</p>
</li>
</ol>
<pre tabindex="0"><code>git init
</code></pre><ol start="4">
<li><strong>Verifica dello Stato del Repository:</strong> Puoi utilizzare il comando <code>git status</code> per verificare lo stato del tuo repository, visualizzando i file che sono stati modificati o aggiunti e quelli pronti per il commit.</li>
</ol>
<p>Adesso hai creato con successo il tuo primo repository Git. Da questo momento in poi, Git inizierà a tenere traccia delle modifiche ai tuoi file. Nel prossimo passo, esploreremo come aggiungere i file al repository e registrare le modifiche tramite i commit.</p>
<h2 id="3-aggiunta-di-file-al-repository">3. Aggiunta di File al Repository:</h2>
<p>Ora che il tuo repository Git è stato inizializzato, è il momento di iniziare a monitorare e registrare le modifiche ai tuoi file. Utilizzeremo il comando <code>git add</code> per preparare i file e il comando <code>git commit</code> per confermare le modifiche. Ecco come procedere:</p>
<h3 id="aggiunta-di-file-al-repository">Aggiunta di File al Repository:</h3>
<p>Utilizza il comando <code>git add &lt;nome file&gt;</code> per aggiungere un singolo file al cosiddetto &ldquo;staging area&rdquo;, il luogo dove Git prepara i file per il successivo commit.</p>
<pre><code> git add nomefile.txt
</code></pre>
<p>Se desideri aggiungere tutti i file modificati o nuovi, puoi utilizzare il comando:</p>
<pre><code> git add .
</code></pre>
<p>Assicurati di sostituire <code>&lt;nome file&gt;</code> con il nome effettivo del tuo file.</p>
<h3 id="verifica-dello-stato-del-repository">Verifica dello Stato del Repository:</h3>
<p>Puoi sempre verificare lo stato attuale del repository con il comando <code>git status</code>. Questo ti mostrerà i file che sono stati aggiunti al &ldquo;staging area&rdquo; e quelli che sono ancora in attesa di essere aggiunti.</p>
<pre tabindex="0"><code>git status
</code></pre><h3 id="conferma-delle-modifiche-con-un-commit">Conferma delle Modifiche con un Commit:</h3>
<p>Una volta che hai aggiunto i file desiderati, è ora di effettuare un commit per registrare le modifiche nel repository. Utilizza il comando <code>git commit</code> seguito da un messaggio descrittivo:</p>
<pre><code>  git commit -m &quot;Descrizione delle modifiche&quot;
</code></pre>
<p>Il messaggio del commit dovrebbe essere chiaro e descrittivo, in modo che tu possa capire facilmente le modifiche apportate in futuro.</p>
<p>Ora hai ufficialmente registrato le tue prime modifiche nel repository Git. Nel prossimo passo, esploreremo ulteriormente i concetti di branch, permettendoti di lavorare su diverse linee di sviluppo in modo organizzato.</p>
<h2 id="4-commit-delle-modifiche">4. Commit delle Modifiche:</h2>
<p>Dopo aver aggiunto i file desiderati al tuo repository tramite la &ldquo;staging area&rdquo;, è giunto il momento di effettuare un commit. I commit in Git sono come istantanee del tuo progetto in un determinato momento, e ogni commit ha un messaggio descrittivo associato che indica le modifiche apportate. Ecco come eseguire un commit:</p>
<h3 id="esecuzione-del-commit">Esecuzione del Commit:</h3>
<p>Utilizza il comando <code>git commit -m &quot;Messaggio del commit&quot;</code> per registrare ufficialmente le modifiche nel repository.</p>
<pre><code> git commit -m &quot;Implementato il sistema di autenticazione&quot;
</code></pre>
<p>Il messaggio del commit dovrebbe essere chiaro e informativo, spiegando brevemente le modifiche apportate in questo specifico commit.</p>
<h3 id="visualizzazione-della-cronologia-dei-commit">Visualizzazione della Cronologia dei Commit:</h3>
<p>Puoi visualizzare la cronologia dei commit con il comando <code>git log</code>. Questo mostrerà una lista di tutti i commit nel repository, con informazioni dettagliate su chi ha effettuato il commit, quando è stato eseguito e il messaggio associato.</p>
<h3 id="ritorno-a-versioni-precedenti-opzionale">Ritorno a Versioni Precedenti (opzionale):</h3>
<p>Se desideri tornare a una versione precedente del tuo progetto, puoi farlo utilizzando il comando <code>git checkout &lt;ID commit&gt;</code> o <code>git checkout &lt;nome branch&gt;</code>. Questo ti permette di esplorare il tuo progetto in uno stato specifico.</p>
<h3 id="visualizzazione-delle-differenze-opzionale">Visualizzazione delle Differenze (opzionale):</h3>
<p>Puoi visualizzare le differenze tra le versioni con il comando <code>git diff</code>. Questo comando ti mostrerà le modifiche apportate tra la tua copia di lavoro attuale e l&rsquo;ultima versione registrata nel repository.</p>
<p>Effettuare commit regolari e descrittivi è una pratica cruciale per tenere traccia delle modifiche nel tempo e facilitare la collaborazione con altri sviluppatori. Nella prossima sezione, esploreremo l&rsquo;utilizzo di branch, che consente di lavorare su diverse linee di sviluppo in modo separato.</p>
<h2 id="5-creazione-di-branch">5. Creazione di Branch:</h2>
<p>L&rsquo;utilizzo di branch in Git consente di sviluppare diverse linee di codice in modo separato, permettendo un lavoro parallelo su diverse funzionalità o correzioni senza influenzare il branch principale. Vediamo come creare e gestire i branch in Git:</p>
<h3 id="creazione-di-un-nuovo-branch">Creazione di un Nuovo Branch:</h3>
<p>Utilizza il comando <code>git branch &lt;nome branch&gt;</code> per creare un nuovo branch. Ad esempio:</p>
<pre><code> git branch feature-autenticazione
</code></pre>
<p>Questo crea un nuovo branch chiamato &ldquo;feature-autenticazione&rdquo;, ma attualmente rimani nel tuo branch corrente.</p>
<h3 id="cambio-tra-i-branch">Cambio tra i Branch:</h3>
<p>Per spostarti da un branch all&rsquo;altro, utilizza il comando <code>git checkout &lt;nome branch&gt;</code>:
<code>bash git checkout feature-autenticazione </code>
Oltre a <code>git checkout</code>, puoi anche utilizzare il comando più recente <code>git switch</code>:
<code>bash git switch feature-autenticazione </code></p>
<h3 id="creazione-e-cambio-branch-in-un-unico-passaggio">Creazione e Cambio Branch in un Unico Passaggio:</h3>
<p>Puoi creare e cambiare immediatamente al nuovo branch con il comando:
<code>bash git checkout -b feature-autenticazione </code>
oppure con:
<code>bash git switch -c feature-autenticazione </code></p>
<h3 id="visualizzazione-di-tutti-i-branch">Visualizzazione di Tutti i Branch:</h3>
<p>Puoi visualizzare tutti i branch presenti nel tuo repository utilizzando il comando:
<code>bash git branch </code>
Il branch corrente sarà evidenziato con un asterisco.</p>
<h3 id="merge-di-branch">Merge di Branch:</h3>
<p>Una volta completato il lavoro su un branch, è possibile unire le modifiche al branch principale (solitamente &ldquo;master&rdquo;) utilizzando il comando <code>git merge</code>. Ad esempio:
<code>bash git checkout master git merge feature-autenticazione </code>
o, in un unico passaggio:
<code>bash git switch master git merge feature-autenticazione </code></p>
<p>Utilizzare i branch in modo efficace consente di organizzare e gestire le modifiche al codice in modo pulito e strutturato. Nella prossima sezione, approfondiremo il processo di unione di branch e la gestione dei conflitti che possono sorgere durante questa operazione.</p>
<h2 id="6-unione-di-branch">6. Unione di Branch:</h2>
<p>L&rsquo;unione di branch in Git è un passo cruciale per combinare le modifiche effettuate su branch separati, consentendo di consolidare il lavoro svolto in diverse direzioni. Ecco come gestire l&rsquo;unione di branch:</p>
<h3 id="spostamento-al-branch-di-destinazione">Spostamento al Branch di Destinazione:</h3>
<p>Prima di unire i branch, assicurati di trovarti nel branch di destinazione. Per esempio, se desideri unire il branch &ldquo;feature-autenticazione&rdquo; al branch &ldquo;master&rdquo;, esegui:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git checkout master
</span></span></code></pre></div><p>Se stai usando il comando <code>git switch</code>, puoi usare:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git switch master
</span></span></code></pre></div><h3 id="unione-di-branch">Unione di Branch:</h3>
<p>Utilizza il comando <code>git merge</code> per unire il branch di destinazione con il branch di partenza. Ad esempio:
<code>bash git merge feature-autenticazione </code>
Git cercherà di unire automaticamente le modifiche, ma potrebbero sorgere conflitti che richiederanno una risoluzione manuale.</p>
<h3 id="risoluzione-dei-conflitti">Risoluzione dei Conflitti:</h3>
<p>Se si verificano conflitti durante l&rsquo;unione di branch, Git lo segnalerà. Utilizza il comando <code>git status</code> per identificare i file in conflitto.
Modifica manualmente i file in conflitto risolvendo le differenze, quindi esegui:
<code>bash git add &lt;file in conflitto&gt; git merge --continue </code>
Continua il processo fino a quando tutti i conflitti sono risolti.</p>
<h3 id="annullamento-dellunione-opzionale">Annullamento dell&rsquo;Unione (opzionale):</h3>
<p>Se desideri annullare l&rsquo;unione e riprovare, puoi utilizzare il comando:
<code>bash git merge --abort </code>
oppure, se stai utilizzando Git versione 2.27 o successiva:
<code>bash git restore --source=HEAD --staged --worktree -- &lt;file in conflitto&gt; </code></p>
<h3 id="verifica-del-risultato">Verifica del Risultato:</h3>
<p>Dopo unire i branch, esegui il comando <code>git log</code> per verificare che le modifiche siano state consolidate correttamente.</p>
<p>Unire i branch è un aspetto fondamentale dello sviluppo collaborativo, consentendo a diversi membri del team di lavorare su funzionalità separate senza influenzare direttamente il branch principale. La gestione efficace degli eventuali conflitti durante l&rsquo;unione è essenziale per mantenere l&rsquo;integrità del codice. Nella prossima sezione, esploreremo ulteriormente la gestione del versionamento, consentendoti di esplorare diverse versioni del tuo progetto nel tempo.</p>
<h2 id="7-gestione-del-versionamento">7. Gestione del Versionamento:</h2>
<p>La gestione del versionamento in Git consente di esplorare diverse versioni del tuo progetto nel tempo, offrendo un modo potente per tornare indietro e ispezionare lo stato del codice in qualsiasi momento. Vediamo come sfruttare questa funzionalità:</p>
<h3 id="visualizzazione-della-cronologia-dei-commit-1">Visualizzazione della Cronologia dei Commit:</h3>
<p>Utilizza il comando <code>git log</code> per visualizzare la cronologia dei commit nel tuo repository.
<code>bash git log </code>
Questo elencherà tutti i commit con i relativi dettagli, inclusi ID, autore, data e messaggio del commit.</p>
<h3 id="tornare-a-versioni-precedenti">Tornare a Versioni Precedenti:</h3>
<p>Puoi tornare a una versione precedente del tuo progetto utilizzando il comando <code>git checkout</code> seguito dall&rsquo;ID del commit o del branch desiderato.
<code>bash git checkout &lt;ID commit&gt; </code>
Ad esempio, per tornare al branch principale (solitamente &ldquo;master&rdquo;):
<code>bash git checkout master </code></p>
<h3 id="creazione-di-un-nuovo-branch-da-un-commit-specifico-opzionale">Creazione di un Nuovo Branch da un Commit Specifico (opzionale):</h3>
<p>Se desideri creare un nuovo branch basato su una versione specifica, puoi utilizzare il comando:
<code>bash git checkout -b nuovo-branch &lt;ID commit&gt; </code></p>
<h3 id="annullamento-delle-modifiche-locali">Annullamento delle Modifiche Locali:</h3>
<p>Se hai apportato modifiche nel tuo codice ma desideri scartarle e tornare all&rsquo;ultimo commit, puoi utilizzare il comando:
<code>bash git checkout -- . </code></p>
<h3 id="ripristino-di-file-da-un-commit-specifico-opzionale">Ripristino di File da un Commit Specifico (opzionale):</h3>
<p>Se desideri ripristinare uno o più file da un commit specifico, puoi utilizzare il comando:
<code>bash git checkout &lt;ID commit&gt; -- &lt;nome file&gt; </code></p>
<h3 id="utilizzo-di-git-diff">Utilizzo di <code>git diff</code>:</h3>
<p>Il comando <code>git diff</code> ti consente di confrontare le differenze tra il tuo stato di lavoro attuale e un commit specifico o un branch.
<code>bash git diff &lt;ID commit&gt; </code></p>
<h3 id="ritorno-al-branch-corrente">Ritorno al Branch Corrente:</h3>
<p>Dopo aver esplorato una versione specifica, assicurati di tornare al branch corrente utilizzando <code>git checkout</code> o <code>git switch</code>.
<code>bash git checkout nome-branch </code></p>
<p>Grazie a questi comandi, hai ora la flessibilità di esplorare il tuo progetto attraverso diverse fasi di sviluppo. La gestione del versionamento ti consente di mantenere un controllo preciso sullo stato del tuo codice nel tempo, un aspetto essenziale per lo sviluppo software efficace. Nella prossima sezione, esploreremo come collaborare con altri sviluppatori su GitHub.</p>
<h2 id="8-collaborazione-su-github">8. Collaborazione su GitHub:</h2>
<p>GitHub è una piattaforma di hosting basata su Git che facilita la collaborazione e la condivisione del codice tra sviluppatori. Impareremo come caricare il tuo repository su GitHub, collaborare con altri sviluppatori e gestire il flusso di lavoro con le pull request:</p>
<h3 id="creazione-di-un-account-su-github-se-non-hai-già-uno">Creazione di un Account su GitHub (se non hai già uno):</h3>
<p>Visita <a href="https://github.com/">GitHub</a> e crea un account se non ne hai già uno.</p>
<h3 id="creazione-di-un-nuovo-repository-su-github">Creazione di un Nuovo Repository su GitHub:</h3>
<p>Dalla tua dashboard su GitHub, fai clic su &ldquo;New&rdquo; per creare un nuovo repository.
Assegna un nome al repository, aggiungi una descrizione opzionale e inizializza con un README se desideri.
Fai clic su &ldquo;Create repository&rdquo;.</p>
<h3 id="collegamento-del-repository-locale-a-github">Collegamento del Repository Locale a GitHub:</h3>
<p>Utilizza i comandi seguenti per collegare il tuo repository locale a quello su GitHub:
<code>bash git remote add origin &lt;URL del tuo repository su GitHub&gt; git branch -M main git push -u origin main </code>
Questo aggiunge un collegamento remoto chiamato &ldquo;origin&rdquo; e carica il tuo branch principale su GitHub.</p>
<h3 id="aggiornamento-del-repository-locale-da-github">Aggiornamento del Repository Locale da GitHub:</h3>
<p>Puoi scaricare le ultime modifiche dal repository su GitHub utilizzando il comando:
<code>bash git pull origin main </code></p>
<h3 id="creazione-di-una-pull-request">Creazione di una Pull Request:</h3>
<p>Quando desideri contribuire al progetto di qualcun altro, crea una &ldquo;pull request&rdquo; (PR).
Fai clic su &ldquo;Pull requests&rdquo; nella scheda del repository su GitHub e quindi su &ldquo;New pull request&rdquo;.
Seleziona il branch del tuo fork e il branch di destinazione, quindi fai clic su &ldquo;Create pull request&rdquo;.</p>
<h3 id="revisione-delle-pull-request">Revisione delle Pull Request:</h3>
<p>Se sei il proprietario del repository, puoi revisionare le PR ricevute e, se necessario, approvarle.
Puoi commentare direttamente sul codice, evidenziare linee specifiche e avviare discussioni.</p>
<h3 id="fusione-della-pull-request">Fusione della Pull Request:</h3>
<p>Dopo la revisione, fai clic su &ldquo;Merge pull request&rdquo; per integrare le modifiche nel branch di destinazione.
Puoi scegliere di eliminare il branch dopo la fusione.</p>
<h3 id="sincronizzazione-del-repository-locale">Sincronizzazione del Repository Locale:</h3>
<p>Dopo la fusione, puoi sincronizzare il tuo repository locale con le modifiche utilizzando:
<code>bash git pull origin main </code></p>
<p>Questo processo di collaborazione su GitHub è essenziale per lavorare in team, consentendo una gestione trasparente delle modifiche e facilitando la revisione del codice. Nella prossima sezione, esploreremo come gestire eventuali conflitti che possono sorgere durante le fusioni di branch o le pull request.</p>
<h2 id="9-risoluzione-di-conflitti">9. Risoluzione di Conflitti:</h2>
<p>Durante la collaborazione su un progetto Git con altri sviluppatori, è possibile che si verifichino conflitti quando si tenta di unire branch o fusionare pull request. I conflitti si verificano quando le modifiche apportate in una branch interferiscono con le modifiche apportate in un&rsquo;altra, richiedendo una risoluzione manuale. Ecco come gestire i conflitti:</p>
<h3 id="rilevamento-di-conflitti">Rilevamento di Conflitti:</h3>
<p>Durante un&rsquo;operazione di unione di branch o di una pull request, Git può segnalare che ci sono conflitti.
Puoi rilevare i conflitti anche utilizzando il comando <code>git status</code>, che mostrerà i file in conflitto.</p>
<h3 id="risoluzione-manuale-dei-conflitti">Risoluzione Manuale dei Conflitti:</h3>
<p>Apri i file in conflitto con un editor di testo e cerca le sezioni contrassegnate da Git come &ldquo;&laquo;&laquo;&laquo;&lt;&rdquo;, &ldquo;=======&rdquo; e &ldquo;&raquo;&raquo;&raquo;&gt;&rdquo;. Queste sezioni rappresentano le modifiche conflittuali.
Modifica manualmente il codice per risolvere le differenze in conflitto, mantenendo solo le parti necessarie.
Rimuovi anche i marcatori di conflitto.</p>
<h3 id="aggiunta-e-commit-delle-modifiche">Aggiunta e Commit delle Modifiche:</h3>
<p>Dopo aver risolto i conflitti, utilizza il comando <code>git add &lt;nome file&gt;</code> per segnare i file come risolti.
Successivamente, esegui un commit per confermare la risoluzione dei conflitti:
<code>bash git commit -m &quot;Risoluzione dei conflitti&quot; </code></p>
<h3 id="fusione-del-branch-o-pull-request">Fusione del Branch o Pull Request:</h3>
<p>Prosegui con l&rsquo;operazione di fusione del branch o di accettazione della pull request.
Se stai risolvendo i conflitti in una pull request su GitHub, la PR verrà aggiornata automaticamente dopo che hai effettuato il commit di risoluzione dei conflitti.</p>
<h3 id="continuazione-delloperazione-originale">Continuazione dell&rsquo;Operazione Originale:</h3>
<p>Dopo aver risolto i conflitti, puoi continuare con l&rsquo;operazione originale, come la fusione del branch o l&rsquo;accettazione della pull request.</p>
<p>La risoluzione dei conflitti è un aspetto comune quando si lavora in un ambiente collaborativo. È essenziale affrontare i conflitti in modo tempestivo per mantenere l&rsquo;integrità del codice e garantire una collaborazione senza problemi. Con questi passaggi, sarai in grado di gestire i conflitti e proseguire con il tuo flusso di lavoro. Nella sezione successiva, esploreremo alcune best practice per garantire una gestione del codice fluida e senza intoppi.</p>
<h2 id="10-best-practice-per-una-gestione-del-codice-efficace">10. Best Practice per una Gestione del Codice Efficace:</h2>
<p>Una gestione del codice efficace è essenziale per lo sviluppo software di successo. Seguire alcune best practice ti aiuterà a mantenere un flusso di lavoro organizzato, migliorare la collaborazione e ridurre potenziali problemi. Ecco alcune raccomandazioni:</p>
<ul>
<li>
<p><strong>Messaggi di Commit Significativi:</strong> Scrivi messaggi di commit chiari e descrittivi. I messaggi informativi aiutano te e gli altri sviluppatori a comprendere le modifiche apportate in un determinato commit.</p>
</li>
<li>
<p><strong>Commit Frequenti e Atomici:</strong> Effettua commit frequenti e atomici. Un commit dovrebbe rappresentare una singola unità logica di lavoro. Questo semplifica la revisione del codice e la gestione dei conflitti.</p>
</li>
<li>
<p><strong>Branch Descrittivi:</strong> Usa nomi di branch descrittivi e significativi. Questo facilita la comprensione del lavoro svolto su ciascun branch e semplifica la gestione dei branch stessi.</p>
</li>
<li>
<p><strong>Aggiornamento Regolare del Repository:</strong> Mantieni il tuo repository locale aggiornato con i cambiamenti dal repository remoto. Utilizza <code>git pull</code> regolarmente per ottenere le ultime modifiche.</p>
</li>
<li>
<p><strong>Evita il Codice &ldquo;Spaghetti&rdquo;:</strong> Scrivi codice pulito e ben strutturato. Utilizza pratiche di codifica consistenti e seguine le linee guida del progetto.</p>
</li>
<li>
<p><strong>Utilizzo di .gitignore:</strong> Utilizza un file <code>.gitignore</code> per escludere file temporanei, file di build e altri elementi non desiderati dal controllo versione.</p>
</li>
<li>
<p><strong>Test Unitari e Test di Integrazione:</strong> Implementa test unitari e di integrazione per garantire la stabilità del codice. Esegui test regolarmente durante lo sviluppo.</p>
</li>
<li>
<p><strong>Documentazione Adeguata:</strong> Documenta il tuo codice in modo chiaro e completo. Questo aiuta sia te che gli altri sviluppatori a comprendere il funzionamento del codice.</p>
</li>
<li>
<p><strong>Code Reviews:</strong> Partecipa alle revisioni del codice. Le revisioni sono un&rsquo;opportunità per migliorare la qualità del codice, condividere conoscenze e garantire la coerenza nel progetto.</p>
</li>
<li>
<p><strong>Backup Regolari:</strong> Esegui backup regolari del tuo repository, soprattutto prima di operazioni delicate come la fusione di branch complessi o la modifica di parti cruciali del codice.</p>
</li>
</ul>
<p>Seguendo queste best practice, sarai in grado di mantenere un ambiente di sviluppo sano e collaborativo. Una gestione del codice ben organizzata è fondamentale per la crescita e il successo a lungo termine di qualsiasi progetto software.</p>
<h2 id="conclusione">Conclusione:</h2>
<p>Navigare nel complesso mondo dello sviluppo web e della gestione del codice richiede competenze solide e una comprensione approfondita degli strumenti a disposizione. In questa guida, abbiamo esplorato i fondamenti della gestione del codice con Git, fornendo una panoramica dettagliata dei concetti chiave e delle pratiche consigliate.</p>
<p>Dall&rsquo;installazione di Git e la creazione di repository, alla gestione di branch, conflitti e pull request, hai acquisito una solida base per gestire progetti software in modo efficace. Abbiamo anche esaminato l&rsquo;importante aspetto della collaborazione su GitHub, consentendoti di lavorare con altri sviluppatori in un ambiente distribuito.</p>
<p>Per migliorare ulteriormente il tuo flusso di lavoro, abbiamo esplorato best practice come l&rsquo;uso di messaggi di commit significativi, la scrittura di codice pulito, l&rsquo;implementazione di test e l&rsquo;automazione dei processi con Git Hooks. Infine, hai imparato come gestire efficientemente le dipendenze attraverso l&rsquo;uso di Git Submodules.</p>
<p>Ricorda che lo sviluppo software è un percorso continuo di apprendimento. Mantieni aggiornate le tue competenze, esplora nuove tecnologie e partecipa attivamente alla community dello sviluppo web. Con una solida comprensione di Git e delle pratiche consigliate, sei pronto per affrontare sfide più complesse nel tuo viaggio di sviluppo web. Buona codifica!</p>
]]></content>
		</item>
		
		<item>
			<title>Sono ufficialmente WordPress Developer</title>
			<link>https://albertoreineri.it/blog/sono-ufficialmente-wordpress-developer/</link>
			<pubDate>Wed, 10 Jan 2024 05:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/sono-ufficialmente-wordpress-developer/</guid>
			<description>Oggi è stato approvato il mio plugin, che è stato pubblicato nella repository ufficiale di WordPress! Ora sono ufficialmente parte della community come WordPress Developer. Che emozione! 😊 😊 😊
Il plugin in realtà è molto semplice, ma è stato il mio primo approccio alla community di WP e ho voluto partire dal basso per entrare nel team in modo discreto.
Scrivo codice per WordPress da oltre cinque anni, è una bella fetta del mio lavoro, ma ottenere l&amp;rsquo;approvazione dal team ufficiale è tutt&amp;rsquo;altro che semplice.</description>
			<content type="html"><![CDATA[<p><strong>Oggi è stato approvato il mio plugin</strong>, che è stato pubblicato nella <a href="https://wordpress.org/plugins/simple-header-and-footer/" target="_blank" title="Repository WP"><strong>repository ufficiale di WordPress</strong></a>!
Ora sono ufficialmente parte della community come <a href="https://profiles.wordpress.org/albertoreineri/" target="_blank" title="WP Developer"><strong>WordPress Developer</strong></a>.
Che emozione! 😊 😊 😊</p>
<p>Il plugin in realtà è <strong>molto semplice</strong>, ma è stato il mio primo approccio alla community di WP e ho voluto partire dal basso per entrare nel team in modo discreto.</p>
<p>Scrivo codice per WordPress da oltre cinque anni, è una bella fetta del mio lavoro, ma ottenere <strong>l&rsquo;approvazione dal team ufficiale</strong> è tutt&rsquo;altro che semplice. Le regole sono ferree e il codice ha bisogno di una struttura complessa per essere approvato, il che rende la creazione di software una sfida complessa. Anche se il mio plugin sembra svolgere un compito semplice, dietro le quinte c&rsquo;è un impegno considerevole per rispettare gli standard elevati richiesti.
Durante questo percorso ho acquisito nuovi approcci nella progettazione del software e ho imparato ad utilizzare il sistema di controllo versione SVN per la gestione del codice e degli aggiornamenti del mio plugin. Come sempre <em>fare è il miglior modo per imparare!</em></p>
<p>Tutto questo monetariamente non ha valore, il plugin è <strong>free &amp; open source</strong>, quindi è disponibile gratuitamente per chiunque nel mondo e il mio compenso sta nell&rsquo;orgoglio di avere creato qualcosa che potrà essere utile ad altri, oltre all&rsquo;essere riconosciuto ufficialmente come WP Developer dal team ufficiale.</p>
<p>Ricevere riconoscimenti è sempre un&rsquo;esperienza gratificante, ancor di più quando questi provengono da una community così vasta e diversificata come quella di WordPress, che gestisce una delle piattaforme software più utilizzate al mondo.</p>
<p>Per chiunque fosse interessato questo è il link al plugin: <a href="https://wordpress.org/plugins/simple-header-and-footer/">https://wordpress.org/plugins/simple-header-and-footer/</a>. Ricordo ancora una volta che si tratta di un progetto Free &amp; Oper Source quindi chiunque può partecipare e migliorarlo.</p>
<p>Termino qua questo post autoreferenziale, ma talvolta essere fieri di se stessi è salutare e necessario per mantenere alto l&rsquo;entusiasmo! Inoltre potrò tornare a questa pagina fra qualche anno e ricordare così questo evento per me significativo.</p>
<p>A presto!</p>
<p><em>Alberto</em></p>
]]></content>
		</item>
		
		<item>
			<title>Le 9 migliori estensioni di Visual Studio Code</title>
			<link>https://albertoreineri.it/blog/le-9-migliori-estensioni-di-visual-studio-code/</link>
			<pubDate>Sun, 29 Oct 2023 09:12:22 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/le-9-migliori-estensioni-di-visual-studio-code/</guid>
			<description>Visual Studio Code (VS Code) è diventato uno degli editor di codice più popolari tra gli sviluppatori grazie alla sua flessibilità e alla vasta gamma di estensioni disponibili. Le estensioni di VS Code offrono funzionalità aggiuntive che possono migliorare significativamente il flusso di lavoro di uno sviluppatore. In questo articolo, esploreremo le 10 migliori estensioni di Visual Studio Code che ti aiuteranno a potenziare il tuo ambiente di sviluppo e renderanno la tua esperienza di programmazione ancora più efficiente e produttiva.</description>
			<content type="html"><![CDATA[<p>Visual Studio Code (VS Code) è diventato uno degli editor di codice più popolari tra gli sviluppatori grazie alla sua flessibilità e alla vasta gamma di estensioni disponibili. Le estensioni di VS Code offrono funzionalità aggiuntive che possono migliorare significativamente il flusso di lavoro di uno sviluppatore. In questo articolo, esploreremo le 10 migliori estensioni di Visual Studio Code che ti aiuteranno a potenziare il tuo ambiente di sviluppo e renderanno la tua esperienza di programmazione ancora più efficiente e produttiva.</p>
<h2 id="eslint">ESLint</h2>
<p>ESLint è un alleato fondamentale per ogni sviluppatore che cerca di scrivere codice JavaScript pulito e senza errori. Questa potente estensione per Visual Studio Code integra perfettamente ESLint nel tuo ambiente di sviluppo, offrendoti suggerimenti e avvertimenti in tempo reale mentre scrivi il tuo codice. Con ESLint, puoi mantenere uno standard di codifica uniforme, individuare e correggere errori comuni, migliorare la qualità del tuo software e risparmiare tempo prezioso nella fase di debug. Non compromettere la qualità del tuo codice JavaScript: installa ESLint for Visual Studio Code oggi e semplifica il processo di scrittura del codice pulito e senza errori.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">Link »</a></p>
<h2 id="bracket-pair-colorizer">Bracket Pair Colorizer</h2>
<p>Il codice ben strutturato è la chiave per una programmazione efficiente, e l&rsquo;estensione “Bracket Pair Colorizer” per Visual Studio Code è il tuo compagno ideale per mantenere il tuo codice organizzato e facilmente leggibile. Questa estensione attribuisce colori distinti e intuitivi alle coppie di parentesi, parentesi graffe e parentesi quadre nel tuo codice, rendendo semplice la visualizzazione delle relazioni tra parentesi aperte e chiuse. Non perderai mai più il filo della tua struttura di codice, eliminando errori di parentesizzazione e semplificando il debug. Con “Bracket Pair Colorizer”, puoi concentrarti sulla scrittura del codice senza preoccuparti di errori di formattazione o parentesizzazione. Rendi la tua esperienza di sviluppo più efficiente e visivamente chiara: installa Bracket Pair Colorizer oggi e porta un tocco di colore all&rsquo;organizzazione del tuo codice.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2">Link »</a></p>
<h2 id="prettier">Prettier</h2>
<p>La coerenza nella formattazione del codice è fondamentale per una collaborazione efficace e per mantenere il tuo progetto organizzato. L&rsquo;estensione “Prettier” per Visual Studio Code è uno strumento indispensabile per garantire che il tuo codice JavaScript, TypeScript, HTML, CSS e molte altre lingue sia sempre formattato in modo impeccabile. Prettier si integra perfettamente nel tuo flusso di lavoro, applicando automaticamente le regole di formattazione predefinite o personalizzate al tuo codice con un semplice clic o al salvataggio del file. Con Prettier, dimenticati delle lunghe discussioni sulla formattazione del codice in team di sviluppo e concentrati sulla scrittura di codice di alta qualità. Installa Prettier – Code Formatter oggi e scopri come rendere la formattazione del codice un processo senza sforzo e uniforme in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode">Link »</a></p>
<h2 id="gitlens">GitLens</h2>
<p>Se sei un appassionato di Git e desideri massimizzare la tua produttività nello sviluppo software, l&rsquo;estensione “GitLens” per Visual Studio Code è uno strumento che non puoi permetterti di non avere. GitLens porta la potenza e la trasparenza di Git direttamente nel tuo ambiente di sviluppo. Questa estensione mette in evidenza chiaramente le informazioni chiave su ogni riga di codice: chi ha apportato le modifiche, quando sono state apportate e persino il perché delle modifiche con annotazioni Git Blame e commit.</p>
<p>Con GitLens, puoi esplorare la cronologia del tuo progetto con facilità, confrontare rami, recuperare facilmente le versioni precedenti e molto altro. La tua comprensione del flusso di lavoro Git diventerà più profonda, il che si tradurrà in una maggiore efficienza nello sviluppo e una migliore collaborazione nel team. Se vuoi portare la gestione del tuo codice al livello successivo, non cercare oltre: installa GitLens oggi e scopri come questa estensione può rendere il controllo di versione con Git più potente e accessibile che mai direttamente in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens">Link »</a></p>
<h2 id="live-server">Live Server</h2>
<p>“Live Server” è l&rsquo;alleato perfetto per ogni sviluppatore web che cerca di semplificare e migliorare il processo di sviluppo front-end. Questa estensione per Visual Studio Code ti offre la capacità di avviare un server web locale direttamente dalla tua area di lavoro, trasformando il tuo ambiente di sviluppo in un&rsquo;esperienza dinamica e interattiva.</p>
<p>Con “Live Server,” puoi visualizzare istantaneamente le modifiche apportate al tuo codice HTML, CSS o JavaScript nel browser senza la necessità di ricaricare manualmente la pagina. Questo significa che puoi concentrarti sulla scrittura del codice e vedere immediatamente come le tue modifiche influenzano la tua pagina web.</p>
<p>Inoltre, “Live Server” offre funzionalità aggiuntive come il supporto per l&rsquo;autoaggiornamento della pagina, la possibilità di visualizzare il tuo sito web su dispositivi mobili e la gestione intelligente delle porte. Questo rende l&rsquo;estensione un compagno ideale per lo sviluppo web responsivo e il debug.</p>
<p>Se vuoi rendere il tuo flusso di lavoro di sviluppo web più fluido, installa “Live Server” oggi e scopri come questa estensione semplifica il tuo processo di sviluppo, risparmiando tempo prezioso e migliorando la tua efficienza nello sviluppo front-end.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer">Link »</a></p>
<h2 id="material-icon-theme">Material Icon Theme</h2>
<p>Dai un tocco di stile e organizzazione visiva al tuo ambiente di sviluppo con l&rsquo;estensione “Material Icon Theme” per Visual Studio Code. Questa estensione trasforma le iconografie standard dei file e delle cartelle in icone vivaci e ben progettate basate sul popolare design “Material Design” di Google.</p>
<p>Con “Material Icon Theme,” puoi immediatamente identificare il tipo di file o cartella che stai cercando grazie a un set completo di icone chiaramente riconoscibili. Sia che tu stia lavorando su file JavaScript, HTML, CSS, immagini o documentazione, questa estensione offre un&rsquo;esperienza visiva migliorata che ti aiuta a trovare rapidamente ciò di cui hai bisogno nel tuo progetto.</p>
<p>Inoltre, “Material Icon Theme” è altamente personalizzabile, consentendoti di scegliere tra diverse varianti di icone e regolare le impostazioni per adattarle al tuo stile personale. È un modo semplice ma potente per migliorare l&rsquo;aspetto del tuo ambiente di sviluppo e renderlo più intuitivo e accattivante.</p>
<p>Se desideri una visione fresca e moderna del tuo spazio di lavoro in Visual Studio Code, installa “Material Icon Theme” oggi e scopri come questa estensione può rendere il tuo ambiente di sviluppo più esteticamente piacevole e funzionale.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme">Link »</a></p>
<h2 id="debugger-for-chrome">Debugger for Chrome</h2>
<p>Porta il debugging del tuo codice JavaScript e TypeScript a un nuovo livello di precisione e controllo con l&rsquo;estensione “Debugger for Chrome” per Visual Studio Code. Questa potente estensione ti permette di connettere il tuo ambiente di sviluppo direttamente al browser Google Chrome, aprendo le porte per il debugging interattivo di applicazioni web front-end.</p>
<p>Con “Debugger for Chrome,” puoi impostare punti di interruzione, eseguire il codice passo dopo passo, esaminare variabili e risolvere errori direttamente dal tuo editor. Questo livello di integrazione tra il tuo ambiente di sviluppo e il browser ti consente di identificare e risolvere i problemi più rapidamente, accelerando il processo di sviluppo.</p>
<p>L&rsquo;estensione supporta funzionalità avanzate come il mapping sorgente, che ti consente di debuggare il codice TypeScript o JavaScript originale anche se viene eseguito in un ambiente diverso da quello di sviluppo. Inoltre, puoi connettere istanze multiple di Chrome contemporaneamente e passare tra di esse senza soluzione di continuità.</p>
<p>Se sei un web developer alla ricerca di un potente strumento per il debugging delle tue applicazioni web, non cercare oltre: installa “Debugger for Chrome” oggi e scopri come questa estensione può migliorare la tua efficienza nello sviluppo front-end, riducendo il tempo trascorso nella ricerca e risoluzione degli errori.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome">Link »</a></p>
<h2 id="auto-rename-tag">Auto Rename Tag</h2>
<p>Semplifica il tuo flusso di lavoro di sviluppo web con l&rsquo;estensione “Auto Rename Tag” per Visual Studio Code. Questo strumento intuitivo e potente ti offre la capacità di rinominare automaticamente le etichette HTML e XML mentre lavori sul tuo codice, evitando così errori di tag errati o inconsistenze.</p>
<p>Con “Auto Rename Tag,” quando rinomini un tag di apertura o chiusura in un documento HTML o XML, l&rsquo;estensione si attiva automaticamente e aggiorna in modo coerente l&rsquo;altro tag corrispondente. Questo processo avviene in tempo reale, risparmiandoti il tempo e la fatica necessari per modificare manualmente entrambi i tag. Inoltre, l&rsquo;estensione funziona con una vasta gamma di lingue e framework web, rendendola un compagno ideale per sviluppatori web di tutti i tipi.</p>
<p>Inoltre, “Auto Rename Tag” è altamente personalizzabile, consentendoti di adattare le impostazioni secondo le tue preferenze e abitudini di sviluppo. È un modo semplice per migliorare la coerenza e la precisione del tuo codice HTML e XML, riducendo al minimo gli errori di sintassi e semplificando la manutenzione del tuo progetto.</p>
<p>Se desideri semplificare la tua scrittura di codice HTML e XML e mantenere un flusso di lavoro fluido e senza errori, installa “Auto Rename Tag” oggi e scopri come questa estensione può rendere il tuo sviluppo web più efficiente e accurato in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag">Link »</a></p>
<h2 id="code-spell-checker">Code Spell Checker</h2>
<p>La precisione nel codice è fondamentale, e “Code Spell Checker” per Visual Studio Code è il tuo compagno ideale per garantire che il tuo codice sorgente sia privo di errori di ortografia e grammatica. Questa estensione mette a disposizione un controllo ortografico integrato direttamente nel tuo ambiente di sviluppo, consentendoti di individuare e correggere gli errori di scrittura mentre scrivi il codice.</p>
<p>Con “Code Spell Checker,” le parole scritte in modo errato o non riconosciute vengono evidenziate per l&rsquo;attenzione immediata, e puoi correggerle facilmente con suggerimenti di correzione. Questa estensione supporta una vasta gamma di lingue e dialetti, rendendola adatta per sviluppatori in tutto il mondo.</p>
<p>Inoltre, “Code Spell Checker” è altamente personalizzabile, consentendoti di aggiungere parole personalizzate al dizionario o di escludere specifiche directory o file dal controllo ortografico. Puoi anche scegliere tra diverse lingue e configurare le preferenze di correzione ortografica in base alle tue esigenze.</p>
<p>Se desideri migliorare la qualità del tuo codice e comunicare in modo più chiaro ed efficace, installa “Code Spell Checker” oggi e scopri come questa estensione può contribuire a una scrittura di codice più precisa e priva di errori in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker">Link »</a></p>
<h2 id="conclusione">Conclusione:</h2>
<p>Le estensioni di Visual Studio Code possono davvero trasformare il modo in cui sviluppi il tuo progetto, rendendo l&rsquo;esperienza di programmazione più intuitiva, produttiva e senza intoppi. Le 10 estensioni descritte in questo articolo sono solo alcune delle molte disponibili, ma rappresentano un punto di partenza eccellente per potenziare il tuo ambiente di sviluppo. Scegli quelle che meglio si adattano alle tue esigenze e inizia a sfruttare appieno il potenziale di Visual Studio Code per ottimizzare il tuo flusso di lavoro e raggiungere risultati straordinari nello sviluppo del software.</p>
]]></content>
		</item>
		
		<item>
			<title>Chiamata AJAX e PHP</title>
			<link>https://albertoreineri.it/blog/chiamata-ajax-e-php/</link>
			<pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/chiamata-ajax-e-php/</guid>
			<description>Vorresti eseguire del codice php senza fare refresh della pagina? Con AJAX puoi farlo!
Una chiamata AJAX è una richiesta asincrona che viene inviata da un browser web a un server web, utilizzando il linguaggio JavaScript. Il server web può rispondere alla chiamata AJAX con dei dati in formato JSON, XML o HTML, che possono essere poi elaborati dal browser web per aggiornare dinamicamente una parte della pagina web, senza dover ricaricare tutta la pagina.</description>
			<content type="html"><![CDATA[<p>Vorresti eseguire del codice php senza fare refresh della pagina? Con AJAX puoi farlo!</p>
<p>Una chiamata AJAX è una richiesta asincrona che viene inviata da un browser web a un server web, utilizzando il linguaggio JavaScript. Il server web può rispondere alla chiamata AJAX con dei dati in formato JSON, XML o HTML, che possono essere poi elaborati dal browser web per aggiornare dinamicamente una parte della pagina web, senza dover ricaricare tutta la pagina.</p>
<p>Ho realizzato un video tutorial effettuando <a href="/blog/inviare-mail-in-php/">l&rsquo;invio mail di cui ho parlato nella precedente guida</a> tramite AJAX:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/tm2IFW1WFes" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>Codice Sorgente: <a href="https://github.com/albertoreineri/Send-Mail-With-AJAX-in-PHP">https://github.com/albertoreineri/Send-Mail-With-AJAX-in-PHP</a></p>
]]></content>
		</item>
		
		<item>
			<title>Inviare Mail in PHP</title>
			<link>https://albertoreineri.it/blog/inviare-mail-in-php/</link>
			<pubDate>Tue, 18 Apr 2023 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/inviare-mail-in-php/</guid>
			<description>In un&amp;rsquo;epoca di framework spesso ci scordiamo che si può anche utilizzare il linguaggio base, puro e semplice.
Oggi vediamo come inviare una mail utilizzando semplicemente il core PHP.
Creeremo un esempio di reale utilizzo in modo da rendere più chiara l&amp;rsquo;operazione, quindi realizzeremo un Modulo di Contatto utilizzando Bootstrap e poi invieremo una mail al submit del form.
Codice Sorgente: https://github.com/albertoreineri/PHP-Send-Mail
Buon Codice!!!</description>
			<content type="html"><![CDATA[<p>In un&rsquo;epoca di framework spesso ci scordiamo che si può anche utilizzare il linguaggio base, puro e semplice.</p>
<p>Oggi vediamo come inviare una mail utilizzando semplicemente il core PHP.</p>
<p>Creeremo un esempio di reale utilizzo in modo da rendere più chiara l&rsquo;operazione, quindi realizzeremo un Modulo di Contatto utilizzando Bootstrap e poi invieremo una mail al submit del form.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/Dp51P_L5juY" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>Codice Sorgente: <a href="https://github.com/albertoreineri/PHP-Send-Mail">https://github.com/albertoreineri/PHP-Send-Mail</a></p>
<p>Buon Codice!!!</p>
]]></content>
		</item>
		
		<item>
			<title>Qualche cambiamento</title>
			<link>https://albertoreineri.it/blog/qualche-cambiamento/</link>
			<pubDate>Sun, 11 Sep 2022 19:43:13 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/qualche-cambiamento/</guid>
			<description>Questo sito ne ha passate di tutti i colori! È sempre stato il mio banco di prova per testare nuove funzionalità, imparare a gestire un server web da riga di comando e infine pubblicizzare i mie servizi.
Ora è il momento di cambiare ancora!
Professionalmente non ho più bisogno di pubblicizzarmi granché. Lavoro come freelance e ho stabilito una serie di collaborazioni sufficienti per riempirmi le giornate (talvolta anche troppo 😅😅).</description>
			<content type="html"><![CDATA[<p>Questo sito ne ha passate di tutti i colori! È sempre stato il mio banco di prova per testare nuove funzionalità, imparare a gestire un server web da riga di comando e infine pubblicizzare i mie servizi.</p>
<p>Ora è il momento di cambiare ancora!</p>
<p>Professionalmente non ho più bisogno di pubblicizzarmi granché. Lavoro come freelance e ho stabilito una serie di collaborazioni sufficienti per riempirmi le giornate (talvolta anche troppo 😅😅).</p>
<p>Quindi è giunta l&rsquo;ora di associare il mio nome non solamente alla mia attività di Web Developer.</p>
<p>Nel mondo di oggi viviamo di etichette, specialmente online! Le persone vengono identificate in base a ciò che fanno! C&rsquo;è quello che viaggia, quello che parla di tecnologia, quello che vive in camper etc…</p>
<p>Personalmente lo trovo molto riduttivo! La vita non si può rinchiudere dentro una singola etichetta, almeno non la mia!</p>
<p>Se mi guardo indietro sono stato meccanico di bici, agente immobiliare, programmatore, insegnante e libero professionista. Questo per quanto riguarda il lavoro. Poi ho suonato in diverse band, amo andare in bici, ho due moto e un camper e così via…. La mia vita non può essere rinchiusa in un singolo argomento, e non voglio farlo.</p>
<p>Per un momento ho pensato di chiudere questo sito, chiudere tutto, dedicarmi al mio lavoro e alle mie passioni nella mia vita privata, senza pubblicare nulla.</p>
<p>Però mi piace scrivere! E non ho molte occasioni per farlo, a parte la scrittura del codice…</p>
<p>Quindi ho deciso di trasformare questo sito web da sito vetrina a sito personale, un blog vecchia maniera, forse obsoleto nell&rsquo;era social, ma più intimo e personale.</p>
<p>Nel tempo ho realizzato una serie di guide sullo sviluppo web per aiutare giovani aspiranti Web Developer, e alcune sono state lette da migliaia di persone portandomi in prima pagina su google. Tutto questo rimarrà e continuerà, però non sarà l&rsquo;unico tipo di contenuto presente su questo sito.</p>
<p>Ci sarà tutto ciò che voglio che ci sia! Si, può sembrare egoistico, però sito mio argomenti miei!</p>
<p>Diventerà quindi il mio giardino digitale, dove potrò fermarmi talvolta e scrivere con calma di ciò che mi va, di ciò che mi piace, senza per forza dover parlare di programmazione.</p>
<p>Vi presento quindi il mio nuovo sito! È molto semplice, niente effetti wow!</p>
<p>Per lavoro passo intere giornate a sviluppare effetti e animazioni, ma per questo sito ho voluto pensare al mondo analogico! È un foglio di carta con del testo sopra, nien&rsquo;altro.</p>
<p>Se vuoi seguire i miei articoli puoi iscriverti alla <a href="/iscriviti-alla-newsletter/">Newsletter</a>! L&rsquo;ho aperta qualche tempo fa ed è stata apprezzata dagli utenti.</p>
<p>Buona lettura!</p>
]]></content>
		</item>
		
		<item>
			<title>8 consigli sulla produttività per sviluppatori e programmatori</title>
			<link>https://albertoreineri.it/blog/8-consigli-sulla-produttivit%C3%A0-per-sviluppatori-e-programmatori/</link>
			<pubDate>Fri, 22 Jul 2022 07:42:48 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/8-consigli-sulla-produttivit%C3%A0-per-sviluppatori-e-programmatori/</guid>
			<description>Non è facile mantenere la produttività da sviluppatori. È un lavoro mentalmente stressante che può esaurire rapidamente la mente e richiede molta attenzione. Capire come puoi concentrarti sul tuo lavoro, prendere scorciatoie usando l&amp;rsquo;automazione e gestire le distrazioni può aiutarti molto a ottenere il massimo dal tuo orario di lavoro. In questa raccolta, puoi trovare i migliori suggerimenti sulla produttività per sviluppatori e programmatori, dalla ricerca dei migliori strumenti per sviluppatori alle pause regolari fino all&amp;rsquo;eliminazione delle distrazioni durante il lavoro.</description>
			<content type="html"><![CDATA[<p>Non è facile mantenere la produttività da sviluppatori. È un lavoro mentalmente stressante che può esaurire rapidamente la mente e richiede molta attenzione. Capire come puoi concentrarti sul tuo lavoro, prendere scorciatoie usando l&rsquo;automazione e gestire le distrazioni può aiutarti molto a ottenere il massimo dal tuo orario di lavoro. In questa raccolta, puoi trovare i migliori suggerimenti sulla produttività per sviluppatori e programmatori, dalla ricerca dei migliori strumenti per sviluppatori alle pause regolari fino all&rsquo;eliminazione delle distrazioni durante il lavoro.</p>
<h3 id="1-trova-il-miglior-editor-di-codice">1. TROVA IL MIGLIOR EDITOR DI CODICE</h3>
<p>La produttività degli sviluppatori inizia con un buon editor di codice. Sebbene ci siano molte ottime opzioni sul mercato, è difficile dire quale sia la migliore: tutto dipende dai tuoi obiettivi e dalle tue esigenze. Vale la pena provare <a href="/blog/5-migliori-editor-di-testo-per-sviluppatori">diversi editor di testo</a> per vedere quale si adatta meglio al tuo flusso di lavoro. Ecco alcune cose importanti da tenere in considerazione:</p>
<ul>
<li>Quale/i linguaggio/i di programmazione stai utilizzando. Hai bisogno di un editor di codice che offra l&rsquo;evidenziazione della sintassi per i linguaggi di cui hai bisogno (almeno come plug-in). Alcuni editor di codice sono inoltre dotati di evidenziatori di sintassi per tecnologie popolari come React, non solo per linguaggi di programmazione.</li>
<li>Se l&rsquo;editor di codice scelto ha un tema adeguato e un ecosistema di plug-in che fornisce le funzionalità di cui hai bisogno (ad esempio, un tema ad alto contrasto se hai problemi di vista).</li>
<li>Se affidi il tuo lavoro a una piattaforma di condivisione del codice, come GitHub o Bitbucket, potresti trovare utile la funzionalità <a href="/blog/come-usare-git/">Git integrata</a>. Ad esempio, Visual Studio Code ti consente di eseguire il commit direttamente del tuo lavoro su GitHub senza uscire dall&rsquo;editor.</li>
<li>Se desideri utilizzare i tuoi frammenti di codice e/o le scorciatoie da tastiera, è anche una buona idea scegliere un editor di codice che ti consenta di aggiungerli o importarli.</li>
</ul>
<h3 id="2-inizia-ogni-giorno-con-il-compito-più-difficile">2. INIZIA OGNI GIORNO CON IL COMPITO PIÙ DIFFICILE</h3>
<p>È facile perdersi nelle attività quotidiane e anche la procrastinazione è un&rsquo;abitudine comune degli sviluppatori, soprattutto se <a href="/10-consigli-per-freelance-e-liberi-professionisti/">lavori come libero professionista</a>e devi gestire le tue scadenze. Pertanto, capita spesso di lavorare tutto il giorno e alla fine della giornata ti rendi conto di aver fatto a malapena qualcosa. Puoi evitarlo se, invece del multitasking, crei una gerarchia di attività quotidiane e inizi con l&rsquo;attività più difficile ogni giorno.</p>
<p>Sebbene il multitasking sia stato visto come una cosa positiva per molti anni, si è scoperto che non è adatto alla maggior parte delle persone. <a href="https://www.forbes.com/sites/lisaquast/2017/02/06/want-to-be-more-productive-stop-multi-tasking">La ricerca ha dimostrato</a> che solo il 2% della popolazione è bravo nel multitasking, mentre il resto può subire una perdita di produttività fino al 40%. Quindi, se sei nel 2% continua con il multitasking, altrimenti dai la priorità alle tue attività e concentrati solo su una cosa alla volta.</p>
<h3 id="3-fai-delle-pause-regolarmente">3. FAI DELLE PAUSE REGOLARMENTE</h3>
<p>Gli esseri umani non possono concentrarsi sulla stessa cosa per un tempo illimitato e questo è particolarmente vero per il duro lavoro mentale della programmazione. Puoi trovare diversi studi sul limite di tempo in cui le persone possono concentrarsi su un&rsquo;attività senza che la loro mente si allontani da qualcos&rsquo;altro. Ad esempio, <a href="http://naturalhealthcare.ca/glossaries.phtml?term=sustained+attention#.XgqCCPx7nIU">questo studio</a> afferma che l&rsquo;attenzione prolungata è possibile per circa 45 minuti, mentre <a href="https://www.theatlantic.com/business/archive/2014/09/science-tells-you-how-many-minutes-should-you-take-a-break-for-work-17/380369/">un altro</a> menziona 52 minuti consecutivi seguiti da una pausa di 17 minuti.</p>
<p>Poi, abbiamo la famosa <a href="https://en.wikipedia.org/wiki/Pomodoro_Technique">Tecnica del Pomodoro</a> che utilizza un timer da cucina a forma di pomodoro per misurare il tempo. Funziona con intervalli di tempo di 25 minuti con pause brevi di 5 minuti e pause lunghe di 10 minuti. La tecnica Pomodoro è diventata così popolare tra la comunità degli sviluppatori che ci sono persino <a href="https://tomato-timer.com/">app Pomodoro</a> che puoi usare mentre lavori.</p>
<p>Tutto sommato, non esiste una regola d&rsquo;oro qui e ognuno ha un limite di tempo diverso, quindi dovrai sperimentare un po&rsquo; per scoprire cosa funziona meglio per te. Inoltre, non vale la pena seguire una regola molto rigida: se sei già nel flusso, non interrompere il tuo lavoro solo perché è arrivato il momento della pausa.</p>
<p>Tuttavia, c&rsquo;è una cosa importante da ricordare. La pausa deve essere una vera pausa quando ti alzi dalla scrivania. Controllare e-mail, notifiche Slack, social media, blog o semplicemente fissare qualsiasi tipo di schermo non conta come una pausa per il tuo cervello: ogni singola ricerca sull&rsquo;argomento lo afferma come un dato di fatto.</p>
<h3 id="4-pianifica-le-tue-attività-in-anticipo">4. PIANIFICA LE TUE ATTIVITÀ IN ANTICIPO</h3>
<p>La pianificazione delle attività in anticipo può anche aumentare notevolmente la produttività. Puoi creare elenchi di attività e controllare le attività completate utilizzando <a href="https://www.developerdrive.com/creating-a-simple-to-do-application-part-1/">To Do app</a> come <a href="https://www.wunderlist.com/">Wunderlist</a> e <a href="https://todoist.com/">Todoist</a> o impostare flussi di lavoro con un&rsquo;app come <a href="https://trello.com/">Trello</a> . Al giorno d&rsquo;oggi, ci sono anche molte fantastiche opzioni che ti consentono di integrare diversi strumenti di produttività, come <a href="https://zapier.com/">Zapier</a> e <a href="https://ifttt.com/">IFTTT</a> (If This Then That).</p>
<p>Con la pianificazione delle attività, dovrai anche condurre alcuni esperimenti e pensare al tipo di strumenti di cui avrai veramente bisogno. Puoi sicuramente utilizzare più di un&rsquo;app per gestire le attività, tuttavia può diventare dispersivo utilizzare troppi strumenti contemporaneamente. In alcuni casi, un&rsquo;eccessiva complessità può persino portare a una perdita di produttività.</p>
<h3 id="5-tieni-traccia-delle-tue-ore-di-lavoro">5. TIENI TRACCIA DELLE TUE ORE DI LAVORO</h3>
<p>Sebbene non a tutti piaccia tenere traccia delle proprie ore di lavoro, utilizzare un&rsquo;app di monitoraggio del tempo può aiutare molto in caso di problemi con la gestione del tempo. Il monitoraggio del tempo può aumentare la tua produttività principalmente perché puoi vedere come hai trascorso le ore durante il giorno in modo da poter escludere possibili distrazioni. I cronometri possono anche essere una manna dal cielo se sei un libero professionista, poiché ti aiutano a fatturare i tuoi clienti su base oraria.</p>
<h3 id="6-automatizza-le-attività-ripetitive">6. AUTOMATIZZA LE ATTIVITÀ RIPETITIVE</h3>
<p>L&rsquo;automazione delle attività ripetitive è un must in questi giorni come sviluppatore. Non è una coincidenza che DevOps (l&rsquo;intersezione di sviluppo e operazioni) sia di gran moda di recente. Non avrai bisogno di molta automazione nella fase di sviluppo, tuttavia, rendere il tuo codice di sviluppo pronto per la produzione comporta molte attività ripetitive.</p>
<p>Ad esempio, come sviluppatore frontend, puoi utilizzare un task runner per eseguire automaticamente attività di routine sul tuo codice, come minimizzazione, ottimizzazione delle immagini e altro. Abbiamo un articolo recente sui <a href="/blog/6-migliori-tool-per-sviluppo-frontend">migliori strumenti di compilazione per sviluppatori frontend</a> , ma ci sono anche molte ottime opzioni per la programmazione backend che vale la pena dare un&rsquo;occhiata.</p>
<h3 id="7-utilizzare-la-riga-di-comando">7. UTILIZZARE LA RIGA DI COMANDO</h3>
<p>Oltre ad automatizzare le attività, è anche una buona idea prendere l&rsquo;abitudine di utilizzare la riga di comando nel flusso di lavoro quotidiano. Innanzitutto, puoi velocizzare notevolmente il tuo flusso di lavoro se utilizzi una CLI (Command Line Interface) invece di una GUI (Graphical User Interface). Ad esempio, ecco un tutorial su come <a href="/blog/usare-la-riga-di-comando-con-wordpress-grazie-a-wp-cli">configurare la CLI di WordPress</a> per accelerare lo sviluppo e la manutenzione di WordPress. In secondo luogo, l&rsquo;uso sicuro dei comandi CLI è un&rsquo;abilità di programmazione importante che puoi utilizzare in molte altre aree del tuo lavoro.</p>
<h3 id="8-elimina-le-distrazioni">8. ELIMINA LE DISTRAZIONI</h3>
<p>Le distrazioni sono il più grande nemico della produttività, quindi è necessario trovare un modo per eliminarle il più possibile. Sfortunatamente, hanno una natura subdola, quindi non è affatto facile catturarli. Ciò è dovuto principalmente al fatto che molte volte non sembrano prima una distrazione.</p>
<p>Ad esempio, controllare la posta elettronica ogni ora, guardare un nuovo tutorial video su YouTube o chattare con i colleghi su Slack possono essere visti come attività legate al lavoro, ma se ci dedichi troppo tempo, potresti scoprire che non hai ottenuto così tanto entro la fine della giornata.</p>
<p>Quindi, devi stare molto attento alle distrazioni e prendere precauzioni ovunque puoi. Ad esempio, puoi decidere di controllare le tue e-mail solo due volte al giorno, disattivare le notifiche Slack mentre lavori o bloccare i siti Web che distraggono frequentemente durante il lavoro.</p>
<h3 id="conclusione">CONCLUSIONE</h3>
<p>Se segui questsi suggerimenti sulla produttività o almeno alcuni di essi, puoi utilizzare il tuo orario di lavoro in modo più efficiente e allo stesso tempo migliorare il tuo flusso di lavoro e di sviluppo. Sebbene prendere una nuova abitudine all&rsquo;inizio possa essere difficile, diventa rapidamente una seconda natura.</p>
<p>Ricorda che la sperimentazione è l&rsquo;elemento chiave della produttività. Se provi una tecnica o uno strumento che non funziona per te, abbandonalo e passa a quello successivo, finché non trovi quello che si adatta meglio al tuo flusso di lavoro e alla tua personalità.</p>
<p>E, se hai bisogno di altri suggerimenti unici per sviluppatori e programmatori, non perdere il nostro articolo su <a href="/blog/come-scegliere-quale-linguaggio-di-programmazione-imparare">come scegliere quale linguaggio di programmazione imparare</a> .</p>
<p>{{- /* This comment removes trailing newlines. */ -}}</p>
]]></content>
		</item>
		
		<item>
			<title>5 migliori editor di testo per sviluppatori</title>
			<link>https://albertoreineri.it/blog/5-migliori-editor-di-testo-per-sviluppatori/</link>
			<pubDate>Mon, 18 Jul 2022 12:37:13 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/5-migliori-editor-di-testo-per-sviluppatori/</guid>
			<description>Gli editor di testo sono probabilmente gli strumenti più importanti degli sviluppatori web. Trovarne uno che si adatti meglio al tuo flusso di lavoro e ai tuoi obiettivi e che abbia tutte le funzionalità di cui hai bisogno può farti risparmiare molto tempo e migliorare notevolmente la qualità del tuo codice.
In questo articolo, ti mostrerò i cinque migliori editor di codice multipiattaforma per sviluppatori web. Tutti funzionano sui tre principali sistemi operativi, Windows, Linux e OS X.</description>
			<content type="html"><![CDATA[<p>Gli editor di testo sono probabilmente gli strumenti più importanti degli sviluppatori web. Trovarne uno che si adatti meglio al tuo flusso di lavoro e ai tuoi obiettivi e che abbia tutte le funzionalità di cui hai bisogno può farti risparmiare molto tempo e migliorare notevolmente la qualità del tuo codice.</p>
<p>In questo articolo, ti mostrerò i cinque migliori editor di codice multipiattaforma per sviluppatori web. Tutti funzionano sui tre principali sistemi operativi, Windows, Linux e OS X. Le funzionalità di cui avrai bisogno dipendono principalmente dal tuo stile di lavoro, dalle attuali conoscenze di coding e dal tipo di lavoro che devi effettuare. Puoi avere un solo editor di riferimento che usi per tutto, ma molti sviluppatori utilizzano editor di codice diversi per eseguire attività diverse.</p>
<p>Ora, vediamo i cinque migliori editor di codice multipiattaforma per sviluppatori web.</p>
<h3 id="1-atom1-figure-classwp-block-image-size-full">1. <a href="https://atom.io/">ATOM</a> <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="420" src="/wp-content/uploads/2022/06/atom.jpeg" alt="" class="wp-image-524" srcset="/wp-content/uploads/2022/06/atom.jpeg 800w, /wp-content/uploads/2022/06/atom-768x403.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Atom è un editor di codice gratuito e open source creato da GitHub. All&rsquo;inizio era l&rsquo;editor di testo interno di GitHub, ma pochi anni dopo (nel 2014) hanno deciso di rilasciarlo al pubblico. Poiché Atom offre agli sviluppatori molte funzionalità avanzate, è diventato rapidamente uno degli editor di codice più popolari.</p>
<p>La sua interfaccia utente è eccezionalmente ben progettata, poiché puoi dividere l&rsquo;interfaccia in diversi riquadri per confrontare facilmente file diversi. Ha molte funzionalità importanti che possono migliorare notevolmente il flusso di lavoro di sviluppo, come un gestore di pacchetti integrato, una funzionalità di completamento automatico intelligente, la navigazione nel file system, una funzione di sostituzione di facile utilizzo e altro ancora.</p>
<p>Atom include anche migliaia di <a href="https://atom.io/packages">pacchetti</a> e <a href="https://atom.io/themes">temi</a> open source , molti dei quali sono creati da sviluppatori di terze parti. Ad esempio, <a href="https://teletype.atom.io/">Teletype</a>, il suo ultimo pacchetto creato dal core team, rende possibile la collaborazione in tempo reale per gli sviluppatori che necessitano di uno strumento affidabile per la programmazione in coppia o il social coding.</p>
<p><strong>Pro:</strong></p>
<ul>
<li>diverse opzioni di personalizzazione</li>
<li>un gestore di pacchetti integrato</li>
<li>pacchetti facili da installare</li>
<li>Git integrazione</li>
<li>open source e gratuito</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>l&rsquo;avvio a volte richiede molto tempo</li>
<li>problemi di prestazioni occasionali (potrebbero rallentare il sistema)</li>
</ul>
<h3 id="2-codice-di-visual-studio5-figure-classwp-block-image-size-full">2. <a href="https://code.visualstudio.com/">CODICE DI VISUAL STUDIO</a> <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="395" src="/wp-content/uploads/2022/06/visual-studio-code.jpeg" alt="" class="wp-image-525" srcset="/wp-content/uploads/2022/06/visual-studio-code.jpeg 800w, /wp-content/uploads/2022/06/visual-studio-code-768x379.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Visual Studio Code è l&rsquo;editor di codice sorgente multipiattaforma di Microsoft che funziona su tutti i principali sistemi operativi. È interessante notare che Visual Studio Code è stato creato sulla base dei componenti open source di Atom, tuttavia Microsoft ha rimosso alcune funzionalità e ne ha aggiunte alcune di nuove. È anche più veloce di Atom, sia all&rsquo;avvio che durante l&rsquo;esecuzione. Visual Studio Code è completamente personalizzabile; puoi trovare molti temi e plugin diversi nel <a href="https://marketplace.visualstudio.com/vscode">market ufficiale</a>. Puoi installarli facilmente dall&rsquo;editor e iniziare a usarli immediatamente.</p>
<p>Visual Studio Code ha molte fantastiche funzionalità che possono migliorare notevolmente il flusso di lavoro di sviluppo. Probabilmente la più notevole è la  funzione di completamento automatico di <em>IntelliSense</em> che fornisce un elenco di suggerimenti intelligenti durante la scrittura del codice. Visual Studio Code ha anche un ottimo debugger integrato che consente di eseguire il debug direttamente dall&rsquo;editor. Inoltre, supporta Git per impostazione predefinita; ha una visuale Git separata in cui puoi eseguire diversi comandi Git.</p>
<p><strong>Pro:</strong></p>
<ul>
<li>market facile da usare e piacevole ecosistema di estensione</li>
<li>integrazione Git integrata</li>
<li>Funzione di completamento automatico di IntelliSense</li>
<li>debugger integrato</li>
<li>altamente personalizzabile</li>
<li>gratuito e open source</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>branding un po&rsquo; confuso (non ha nulla a che fare con Visual Studio)</li>
</ul>
<h3 id="3-brackets7-figure-classwp-block-image-size-full">3. <a href="http://brackets.io/">BRACKETS</a> <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="468" src="/wp-content/uploads/2022/06/brackets.jpeg" alt="" class="wp-image-526" srcset="/wp-content/uploads/2022/06/brackets.jpeg 800w, /wp-content/uploads/2022/06/brackets-768x449.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Brackets è stato creato appositamente per i web designer e gli sviluppatori front-end da Adobe Systems. Può essere l&rsquo;editor di codice sorgente ideale per te se svolgi principalmente lavori di front-end (HTML, CSS, JavaScript). Una delle sue caratteristiche più straordinarie è che ti consente di stabilire una connessione in tempo reale con Google Chrome. Ciò significa che puoi vedere immediatamente le modifiche che stai apportando nel browser.</p>
<p>Sebbene sia possibile dividere l&rsquo;editor in riquadri verticali o orizzontali per eseguire la codifica affiancata, Brackets introduce anche la pratica funzione <em>di modifica in-line</em> . Ad esempio, se selezioni un ID CSS specifico con il cursore, puoi aprire l&rsquo;editor inline premendo le combinazioni di tasti Ctrl + E (su Windows) o Cmd + E (su Mac). Quindi, Brackets ti mostrerà tutti i selettori appartenenti a quell&rsquo;ID all&rsquo;interno di una finestra in linea. Brackets supporta anche Sass e LESS, il che significa che puoi usarli insieme alle funzionalità di modifica in linea e anteprima dal vivo.</p>
<p><strong>Professionisti:</strong></p>
<ul>
<li>supporto del preprocessore</li>
<li>strumenti visivi per lo sviluppo front-end</li>
<li>leggero (solo 40 MB)</li>
<li>si sincronizza con il browser (tramite la funzione Anteprima dal vivo)</li>
<li>open source e gratuito</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>gestione confusa delle estensioni (ad es. nessuna opzione di filtro nel registro)</li>
<li>meno estensioni e temi rispetto ad altri editor di codice</li>
<li>non adatto per lavorare in linguaggi di backend (es. PHP, Python, Ruby o WordPress)</li>
</ul>
<h3 id="4sublime-text8-figure-classwp-block-image-size-full">4.<a href="https://www.sublimetext.com/">SUBLIME TEXT</a> <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="455" src="/wp-content/uploads/2022/06/sublime-text.jpeg" alt="" class="wp-image-527" srcset="/wp-content/uploads/2022/06/sublime-text.jpeg 800w, /wp-content/uploads/2022/06/sublime-text-768x437.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Sublime Text è già alla sua terza versione principale (Sublime Text 3) ed è un editor di testo piuttosto popolare all&rsquo;interno della comunità degli sviluppatori web. Devo aggiungere che non è gratuito, tuttavia viene fornito con una prova gratuita. Per un uso continuato, è necessario acquistare una licenza per $ 80. Tuttavia, Sublime Text non ti blocca se non lo fai, solo occasionalmente mostra un avviso pop-up che ti chiede di acquistare la licenza.</p>
<p>Una delle funzionalità più interessanti di Sublime Text è il comando <strong>Goto Anything</strong> che puoi attivare premendo la scorciatoia da tastiera <kbd>Ctrl</kbd>+ . <kbd>P</kbd>. Quindi, puoi aprire rapidamente file o passare a determinate parole, linee o simboli. Sublime Text ti fornisce anche una sofisticata tavolozza dei comandi attraverso la quale puoi accedere facilmente a diverse funzionalità come controllare le associazioni dei tasti o passare a un&rsquo;altra tavolozza di colori.</p>
<p>Inoltre, consente selezioni multiple e modifiche suddivise, e ha anche un enorme <a href="https://packagecontrol.io/">ecosistema di pacchetti</a>. I pacchetti possono essere installati con il gestore di pacchetti di Sublime Text tramite la tavolozza dei comandi.</p>
<p><strong>Pro:</strong></p>
<ul>
<li>Funzioni Vai a Qualsiasi cosa e Selezione multipla</li>
<li>modalità senza distrazioni</li>
<li>cambio di progetto istantaneo</li>
<li>ecosistema di pacchetti avanzati</li>
<li>grandi prestazioni su qualsiasi piattaforma (supera tutti gli altri editor di codice sorgente)</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>non gratis</li>
<li>non è facile integrarlo con Git</li>
</ul>
<h3 id="5-light-table10--figure-classwp-block-image-size-full">5. <a href="http://lighttable.com/">LIGHT TABLE</a>  <figure class="wp-block-image size-full"></h3>
<p><img loading="lazy" decoding="async" width="800" height="447" src="/wp-content/uploads/2022/06/light-table.jpeg" alt="" class="wp-image-528" srcset="/wp-content/uploads/2022/06/light-table.jpeg 800w, /wp-content/uploads/2022/06/light-table-768x429.jpeg 768w" sizes="(max-width: 800px) 100vw, 800px" /> </figure></p>
<p>Light Table è iniziata come <a href="https://www.kickstarter.com/projects/ibdknox/light-table">campagna Kickstarter</a>  nel 2012 ed è riuscita a raccogliere più di $ 300.000. Funziona su tutti i principali sistemi operativi, inclusi Windows, Linux e Mac OS X, tuttavia il processo di installazione attualmente richiede <a href="https://github.com/LightTable/LightTable/blob/master/README.md#downloads">alcuni passaggi aggiuntivi</a> per gli utenti di OS X. Light Table ha un&rsquo;interfaccia utente elegante e snella che elimina tutto il disordine, ma fornisce comunque una tavolozza dei comandi e un cercatore sfocato. È scritto in ClojureScript e attualmente supporta HTML, CSS, JavaScript, Python, Clojure e ClojureScript.</p>
<p>Con Light Table, puoi facilmente eseguire una valutazione in linea all&rsquo;interno del tuo codice, il che significa che non devi utilizzare la console quando desideri visualizzare i risultati. La funzione <strong>watches</strong> ti consente di tenere traccia di qualsiasi valore importante all&rsquo;interno del tuo codice. Inoltre, Light Table consente anche di incorporare tutto ciò di cui il tuo progetto ha bisogno, come grafici, giochi e visualizzazioni. Light Table ha un plugin manager integrato (disponibile dal menu <em>Visualizza &gt; Plugin Manager</em> ), con anche una buona selezione di plugin.</p>
<p><strong>Pro:</strong></p>
<ul>
<li>valutazione in linea e <em>watches</em></li>
<li>Incorpora qualsiasi funzione</li>
<li>potente gestore di plugin</li>
<li>altamente personalizzabile</li>
<li>interfaccia veloce e ordinata</li>
<li>gratuito e open source</li>
</ul>
<p><strong>Contro:</strong></p>
<ul>
<li>attualmente nessun supporto PHP predefinito, quindi lo sviluppo di WordPress richiede alcuni passaggi aggiuntivi (puoi usare questo <a href="https://github.com/thierrymarianne/LightTable-PHP">plugin PHP</a> , per esempio)</li>
</ul>
<h3 id="prossimi-passi">PROSSIMI PASSI</h3>
<p>Oltre a scegliere l&rsquo;editor di codice più adatto alle tue esigenze, potresti voler cercare anche altri strumenti di sviluppo web. In tal caso, dai un&rsquo;occhiata al nostro articolo sui  <a href="http://www.developerdrive.com/2018/01/9-best-free-cloud-ides/">migliori IDE cloud</a> o dai un&rsquo;occhiata alla nostra  <a href="http://www.developerdrive.com/2015/02/essential-tools-for-modern-web-development/">raccolta di strumenti essenziali</a>  che consigliamo per lo sviluppo web moderno.</p>
]]></content>
		</item>
		
		<item>
			<title>Miglior portatile per programmare</title>
			<link>https://albertoreineri.it/blog/miglior-portatile-per-programmare/</link>
			<pubDate>Mon, 11 Jul 2022 19:50:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/miglior-portatile-per-programmare/</guid>
			<description>Una delle domande che mi fate più spesso è proprio questa: Ma qual è il miglior portatile per programmare?
Ebbene la capisco perché non è una scelta facile! Il mercato ci offre un mare di possibilità differenti fra loro, inoltre spesso si tratta di una spesa corposa quindi vogliamo scegliere un prodotto che possa durarci un bel po&amp;rsquo; di anni.
In questo articolo provo ad esporvi il mio punto di vista e darvi una risposta alla fatidica domanda:</description>
			<content type="html"><![CDATA[<p>Una delle domande che mi fate più spesso è proprio questa: Ma qual è il miglior portatile per programmare?</p>
<p>Ebbene la capisco perché non è una scelta facile! Il mercato ci offre un mare di possibilità differenti fra loro, inoltre spesso si tratta di una spesa corposa quindi vogliamo scegliere un prodotto che possa durarci un bel po&rsquo; di anni.</p>
<p>In questo articolo provo ad esporvi il mio punto di vista e darvi una risposta alla fatidica domanda:</p>
<p class="has-text-align-center has-medium-font-size">
  <em><strong>Qual è il miglior notebook per sviluppatori???</strong></em>
</p>
<h2 id="budget">Budget</h2>
<p>La primissima cosa da valutare nella scelta è il budget disponibile. Qua possiamo iniziare a fare due macro distinzioni: sopra i <strong>1.000</strong> euro oppure sotto.</p>
<p>Se stai pensando di spendere meno di mille euro allora la scelta obbligata è andare su un pc Windows.</p>
<p>Il mio consiglio è di scegliere almeno un pc con processore core i5 e 8 Gb di RAM (non ho esperienza diretta sugli AMD Ryzen ma ne parlano molto bene).</p>
<p>Puoi trovare qualcosa di decente che può fare bene il suo lavoro senza grosse pretese. Per fare Sviluppo Web base, semplici siti in WordPress o Core PHP, facendoli girare su XAMPP o LocalWP, queste specifiche dovrebbero andare abbastanza bene.</p>
<p>Se però puoi avvicinarti alla soglia dei 1.000 euro allora sappi che puoi anche accaparrarti il nuovo Macbook Air con M1 a circa 900 euro, se trovi l&rsquo;offerta giusta!</p>
<p>E qua si apre l&rsquo;altro grande discorso:</p>
<h2 id="windows-oppure-mac">Windows oppure Mac???</h2>
<p><a href="/blog/windows-vs-mac-per-sviluppo-web-la-mia-esperienza/">L&rsquo;eterna faida</a> senza fine dei due sistemi operativi! Quale sarà migliore??? La risposta è che <strong>DIPENDE</strong>…</p>
<p>Certo questo complica le cose, ma la vita non è mai solo bianca o nera, le cose sono sempre più complicate di così…</p>
<h2 id="windows">Windows</h2>
<p>Con Windows si hanno, a parer mio, un sacco di vantaggi e pochi svantaggi (Spoiler alert!!! Io uso Mac).</p>
<p>Personalmente ho lavorato per moltissimi anni su Windows, e mi sono sempre trovato bene. I dispositivi hanno prezzi accettabili, si possono installare migliaia e migliaia di programmi e ci si può anche giocare!</p>
<p>Se dovessi scegliere di avere una sola macchina, allora credo prorpio che andrei su un laptop da gaming di alta gamma. È vero che la batteria non è granché su quei dispositivi, però hanno tutto ciò che conta realmente: processore, ram, SSD e scheda video belli grossi e performanti. Farei un dual boot con Ubuntu e voilà, avrei tutto. Lavoro, giochi, cazzeggio…. Potrei fare praticamente tutto ciò che mi serve.</p>
<p>L&rsquo;unica cosa infattibile è realizzare app per iOS, ma personalmente non me ne occupo.</p>
<p>Insomma, Windows è il giusto compromesso fra tutto. Per programmare fa un po&rsquo; schifo ma posso installarci su una distro linux e così si risolve tutto!</p>
<p>Ah, se programmi con linguaggi e framwork semplici, allora non preoccuparti, puoi fare tutto su Windows. Se però inizi ad affacciarti a framework più complessi (Symfony per esempio) o vuoi imparare un po&rsquo; di web server, allora ti consiglio di buttarti sul mondo linux e entrare anche tu nel mondo del pinguino, ma attento, una volta entrati diventa quasi una droga dalla quale è difficile uscire ???.</p>
<h2 id="mac">Mac</h2>
<p>Come già detto precedentemente, io ho scelto di usare Mac. Ma perché visto che Windows tutto sommato non è così male?</p>
<p>Bè, perché credo che Mac sia meglio! Soprattutto dal punto di vista della produttività.</p>
<p>Se mi occupassi solamente di programmazione e scrivessi codice fulltime, allora andrei sicuramente su Linux (Pop!_OS mi sta piacendo molto di recente), ma sto tirando su la mia attività e devo fare un po&rsquo; di tutto, dalla gestione dei clienti, alla contabilità, a qualche lavoretto di design. Inoltre ho una grande passione per la musica e la scrittura, e molti software che utilizzo non ci sono per Linux e alcuni nemmeno per Windows (Logic Pro)…</p>
<p>Inoltre se i pc windows puntano tutto sulla potenza dei componenti, Mac ha un approccio diverso, mira all&rsquo;esperienza generale nell&rsquo;uso del laptop. Il mio Macbook Pro è bello! Basta prenderlo in mano per essere felici di iniziare a lavorare, il che non è poco.</p>
<p class="has-text-align-center">
  <strong><em>Ma non finisce qui!</em></strong>
</p>
<p>È silenzioso, il trackpad è una figata (non ha proprio paragoni con i concorrenti), lo schermo è meraviglioso, la tastiera va alla grande ed è veramente fluido e scattante. Ah, quasi dimenticavo, non si riavvia quando vuole lui per installarmi aggiornamenti di cui non sapevo niente, anche su questo Mac è tutta un&rsquo;altra cosa.</p>
<p>Alcuni potrebbero ribattere che esistono Notebook Windows con schermi altrettanto belli, batterie capienti, tastiere fantastiche e grandi velocità, il che è vero! Ma il trackpad secondo me è assolutamente imbattibile e mi rende veramente molto produttivo, inoltre questi concorrenti Windows arrivano ad avere gli stessi prezzi del Mac, quindi alla fine io prenderei sempre un Mac. Una Toyota top di gamma può arrivare a costare come una Porche, ma fra le due sceglierei sempre la Porche! Siamo umani e il cuore vuole la sua parte!</p>
<h2 id="conclusione">Conclusione</h2>
<p>Quindi??? Facciamola breve:</p>
<ul>
<li>Budget 600-900 euro: Laptop Windows</li>
<li>Budget 900-1.200: Macbook M1</li>
<li>Budget Superiore ai 1.500: Macbook Pro o Laptop Windows Top di gamma</li>
</ul>
<p>Voilà, più sintetico di così si muore!</p>
<p>Un&rsquo;altra piccola cosa, su Windows è difficile scegliere a causa dell&rsquo;enorme quantità di marchi. Come qualità costruttiva mi sentirei di consigliare Lenovo o Dell, sicuramente i migliori. Sento parlare bene anche di alcuni modelli HP ultimamente ma non ci ho mai messo le mani… Se invece cercate qualcosa del tipo “<em>poca spesa tanta resa</em>” allora potete andare su ASUS, ma non dovrete fare troppo caso alla qualità costruttiva.</p>
<p>Bene, spero che questo articolo possa esserti di aiuto! Se vuoi qualche consiglio in più scrivimi pure nei commenti, cercherò di risponderti il più presto possibile.</p>
]]></content>
		</item>
		
		<item>
			<title>I migliori temi per Visual Studio Code</title>
			<link>https://albertoreineri.it/blog/i-migliori-temi-per-visual-studio-code/</link>
			<pubDate>Mon, 04 Jul 2022 21:26:57 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/i-migliori-temi-per-visual-studio-code/</guid>
			<description>Lavorare in un ambiente piacevole è fondamentale per la produttività. Visual Studio code ultimamente sta guadagnando sempre più popolarità, e se mi segui saprai già che è il mio editor preferito! Vediamo oggi quali sono i miei temi preferiti per Visual Studio Code, sia chiari che scuri!
Nel 2019 Visual Studio Code (VSCode) è stato l&amp;rsquo;editor di testo più utilizzato dagli sviluppatori secondo, con il 50% degli 87.317 intervistati che lo utilizzano.</description>
			<content type="html"><![CDATA[<p>Lavorare in un ambiente piacevole è fondamentale per la produttività. Visual Studio code ultimamente sta guadagnando sempre più popolarità, e se mi segui saprai già che è il mio editor preferito! Vediamo oggi quali sono i miei temi <a href="/blog/software-per-sviluppo-web/">preferiti</a> per Visual Studio Code, sia chiari che scuri!</p>
<p>Nel 2019 <a href="https://code.visualstudio.com/">Visual Studio Code</a> (VSCode) è stato l&rsquo;editor di testo più utilizzato dagli sviluppatori secondo, con il 50% degli 87.317 intervistati che lo utilizzano. Questo è stato un grande passo avanti dopo essere stato classificato al 13° posto tra gli strumenti di sviluppo popolari su Stackoverflow.</p>
<p>VSCode dispone di un velocissimo editor di codice sorgente, ideale per l&rsquo;uso quotidiano. Con il supporto per centinaia di linguaggi di programmazione diversi, tra cui C++, Java, Javascript, JSON, Julia, PHP etc. migliora la tua produttività con la corrispondenza delle parentesi, la selezione dei riquadri, l&rsquo;evidenziazione della sintassi, l&rsquo;indentazione automatica e altro ancora.</p>
<p>Tuttavia, con oltre 5.000 temi tra cui scegliere, può essere scoraggiante trovare il migliore per te. Se stai cercando i migliori temi VSCode da provare, ecco a te i miei preferiti!</p>
<h2 id="anc-0.wp-block-heading"><strong>Come installare temi in Visual Studio Code</strong></h2>
<p>Puoi installare temi in Visual Studio Code in due modi principali. Puoi visitare il Marketplace e selezionare il tema che desideri scaricare, oppure puoi cercare in VSCode IDE.</p>
<h3 id="metodo-1-marketplace">Metodo 1: <strong>Marketplace</strong></h3>
<p>1: Visita il <a href="https://marketplace.visualstudio.com/vscode" target="_blank" rel="noreferrer noopener">Marketplace</a> e seleziona il tema che desideri scaricare. In VSCode, fai clic su File&gt;Preferenze&gt;Tema colore per aprire il selettore Tema colore sul tuo PC Windows. Se sei su macOS, fai clic su Code&gt;Preferenze&gt;Tema colore</p>
<p>Puoi anche aprire il selettore usando la scorciatoia da tastiera “Ctrl+K Ctrl+T”.</p>
<p>2: Usa i tasti cursore per scorrere e visualizzare in anteprima i colori del tema</p>
<p>3: Seleziona il tema che desideri e premi “Invio” sulla tastiera<figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/1-how-to-install-vscode-themes-from-marketplace.png" alt="" class="wp-image-1588" /> </figure></p>
<h3 id="metodo-2-ricerca-in-vscode">Metodo 2: ricerca in VSCode</h3>
<p>In alternativa, puoi installare un tema cercandolo dentro VSCode. Dall&rsquo;icona <a href="https://www.tabnine.com/blog/top-42-free-vscode-extensions/" target="_blank" rel="noreferrer noopener">Estensioni</a> sul lato sinistro di VSCode, cerca il tema richiesto e fai clic su Installa.<figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/2-how-to-install-vscode-themes-in-ide-1024x576.jfif" alt="" class="wp-image-1590" /> </figure></p>
<h2 id="anc-1.wp-block-heading"><strong>I migliori temi scuri per VSCode</strong></h2>
<p>Se non vuoi farti male agli occhi usando un tema chiaro tutto il giorno, un tema scuro è sicuramente consigliato per la tua vista. Sebbene VSCode abbia un tema Dark+ predefinito, potrebbe non essere il tuo preferito… Magari desideri un mix di colori e sfumature diversi. </p>
<p>Ecco i migliori temi oscuri per VSCode:</p>
<h3 id="one-dark-profigure-classwp-block-image"><strong>One Dark Pro</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/3-one-dark-pro-1024x861.png" alt="" class="wp-image-1591" /> </figure></p>
<p>One Dark Pro è il tema VSCode più popolare e ampiamente scaricato con quasi 4 milioni di installazioni. Si basa sul tema One Dark di Atom ed è adatto per gli sviluppatori che amano i temi in modalità oscura. Ha combinazioni ben miscelate e colori di evidenziazione della sintassi molto <em>cool</em> che lo rendono visivamente accattivante. </p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme">Scarica One Dark pro</a></p>
<h3 id="dracula-officialfigure-classwp-block-image"><strong>Dracula Official</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/4-dracula-official-screenshot-989x1024.png" alt="" class="wp-image-1592" /> </figure></p>
<p>Creato da Zeno Rocha, Dracula Official è un tema scuro per VSCode e altre oltre 181 app. Ha download in tutto il mondo con oltre 2 milioni di utenti e ha ricevuto una valutazione media di 4,9 da 81 revisori. Vanta fantastiche combinazioni di colori e contrasti per migliorare la tua produttività.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula">Scarica Dracula ufficiale</a></p>
<h3 id="darculafigure-classwp-block-image"><strong>Darcula</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/5-darcula-screenshot-1024x760.png" alt="" class="wp-image-1594" /> </figure></p>
<p>Se hai utilizzato gli IDE Jetbrains e Android Studio, ti sei sicuramente imbattuto nel tema Darcula. Sebbene sia facile confondere Dracula Official con il Darcula, quest&rsquo;ultimo offre una combinazione di colori accuratamente scuri per oltre 195+ app, editor di codice ed emulatori di terminale, incluso VSCode. </p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=rokoroku.vscode-theme-darcula">Scarica il tema Darcula</a></p>
<p>### <strong>Synthwave &lsquo;84</strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/6-synthwave-theme-1024x672.jpg" alt="" class="wp-image-1595" /> </figure></p>
<p>Il tema Synthwave &lsquo;84 è un semplice tema CSS che celebra l&rsquo;estetica degli anni &lsquo;80 nello sviluppo web moderno. È influenzato dalla musica e dalle copertine dei moderni marchi Synthwave come Timecop 1893, The Midnight e FM-84. Ti consente di sperimentare l&rsquo;effetto bagliore dei sogni al neon degli anni &lsquo;80 con colori ben miscelati, rendendolo uno dei temi più eleganti e di classe.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode">Scarica Synthwave &lsquo;84</a></p>
<h3 id="tema-atom-one-darkfigure-classwp-block-image"><strong>Tema Atom One Dark</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/7-atom-one-dark-preview-1024x617.png" alt="" class="wp-image-1596" /> </figure></p>
<p>Creato da Mahmoud Ali, è stato l&rsquo;ispirazione per il tema One Dark e si basa sul tema dell&rsquo;Atom IDE. A differenza di altri temi dark, ha solo una variante: oscuro. È un&rsquo;opzione eccellente se ti manca Atom ma non vuoi tornarci. Vanta quasi 2 milioni di installazioni in tutto il mondo con una valutazione di 5/5.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=akamud.vscode-theme-onedark">Scarica Atom One Dark</a></p>
<p>### <strong><strong>Night Owl</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/8-nightowl-first-screen.jpg" alt="" class="wp-image-1597" /> </figure></p>
<p>Sei un nottambulo a cui piace programmare di notte quando il resto del mondo dorme? Lo sono anche io! Il tema Night Owl può fare per te. Presenta un tema chiaro e uno scuro, che aiuta le persone daltoniche e garantisce una facile visualizzazione alla luce del giorno.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl">Scarica Night Owl</a></p>
<h2 id="anc-2.wp-block-heading"><strong>I migliori temi chiari per VSCode</strong></h2>
<p>I temi chiari sono consigliati per la codifica della luce diurna. Poiché i programmatori trascorrono la maggior parte del lavoro di giorno, spesso si può avere bisogno di un tema luminoso elegante che aiuti a programmare con facilità. Personalmente li utilizzo quando lavoro all&rsquo;aperto sotto al sole.</p>
<p>Ecco i migliori temi di luce per VSCode:</p>
<p>### <strong><strong>Quie t Light</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/9-quiet-light.png" alt="" class="wp-image-1598" /> </figure></p>
<p>Creato inizialmente per l&rsquo;editor di testo Espresso su Mac, Quiet Light è un porting ufficiale del tema Quiet Light. Sebbene VSCode venga fornito con un tema Quiet Light predefinito, questo ha più modifiche per soddisfare i tuoi gusti e le tue preferenze. Supporta diversi linguaggi, inclusi JavaScript, PHP, HTML, CSS, Python e altri.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=onecrayon.theme-quietlight-vsc">Scarica Quiet Light</a></p>
<p>### <strong><strong>Bracket Lights Pro</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/10-brackets-light-pro-1024x597.png" alt="" class="wp-image-1599" /> </figure></p>
<p>Bracket Lights Pro è un tema accattivante grazie alla sua bellissima tavolozza di colori. Incanala il tema chiaro dell&rsquo;editor di codice Brackets di Adobe su VSCode. Sebbene Adobe abbia terminato il suo supporto per Brackets il 1° settembre 2021, ti piacerà usare Bracket Lights Pro per il suo aspetto pulito.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=fehey.brackets-light-pro">Scarica Bracket Lights Pro</a></p>
<p>### <strong><strong>Bluloco Light</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/11-blulocojs-1024x926.png" alt="" class="wp-image-1600" /> </figure></p>
<p>Se desideri un tema con raffinatezza e un&rsquo;ampia gamma di colori nella tavolozza, non sbaglierai con Bluloco Light. Biforcato inizialmente da One Light Theme, presenta un uso più ampio della coerenza del colore e degli ambiti della sintassi per quanto riguarda leggibilità, contrasto ed estetica.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=uloco.theme-bluloco-light">Scarica Bluloco Light</a></p>
<p>### ## <strong>I migliori temi per VSCode</strong> {#anc-3.wp-block-heading}</p>
<p>VSCode è senza dubbio uno dei migliori editor di codice, con una vasta gamma di estensioni supportate dalla comunità. Disponibile su macOS, Windows e Linux, puoi soddisfare quasi tutte le tue esigenze di programmazione indipendentemente dal sistema operativo. </p>
<p>Ecco i migliori temi per VSCode:</p>
<p>### <strong><strong>Tokyo Night</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_night-1024x713.png" alt="Notte di Tokio" class="wp-image-1605" /> <figcaption>Tokyo Night</figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_night_storm-1-1024x713.png" alt="Tempesta notturna di Tokyo" class="wp-image-1602" /><figcaption>Tokyo Night Storm</figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_day-1024x712.png" alt="Giornata di Tokyo" class="wp-image-1603" /><figcaption>Tokyo Day</figcaption></figure></p>
<p>Questo tema è pulito, fresco e rilassante con colori calmi. Celebra le luci del centro di Tokyo di notte ed è disponibile sia in versione chiara che scura. La sua perfetta miscela e combinazione di colori aiutano a meditare mentre scrivi codici.</p>
<p>[Scarica <a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night">Tokyo Night</a>]<a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night">12</a></p>
<p>### <strong><strong>GitHub Theme</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/13-github-132220037-3cd3e777-55a6-445f-9a2e-da6020ebd78d-1024x640.png" alt="" class="wp-image-1604" /> <figcaption>Temi GitHub</figcaption></figure></p>
<p>Il tema GitHub porta l&rsquo;esperienza GitHub in VSCode. È simile ai temi ufficiali di GitHub.com ed è popolare tra gli sviluppatori che preferiscono i temi classici. È disponibile sia in chiaro che in scuro</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme">Scarica GitHub Theme</a></p>
<h3 id="winter-is-comingfigure-classwp-block-image"><strong><strong>Winter is Coming</strong></strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-html-1024x605.png" alt="" class="wp-image-1608" /> <figcaption><strong><strong>Dark Blue HTML</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-js-1024x605.png" alt="" class="wp-image-1609" /><figcaption><strong><strong>Dark Blue JavaScript</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-ts-1024x605.png" alt="" class="wp-image-1610" /><figcaption><strong><strong>Dark Blue TypeScript</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-winteriscoming-1024x605.png" alt="JavaScript leggero" class="wp-image-1606" /><figcaption><strong><strong>Light JavaScript</strong></strong></figcaption></figure></p>
<p>Se sei un grande fan di Game of Thrones, avrai sicuramente sentito questa frase diverse volte! È stato creato da John Papa ed è disponibile in diverse versioni, tra cui blu scuro, nero scuro e chiaro. Racchiude un equilibrio nelle sue combinazioni di colori, rendendolo perfetto per la codifica durante il giorno e la notte.</p>
<p>[Scarica <a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.winteriscoming">Winter is Coming</a>]<a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.winteriscoming">14</a></p>
<h3 id="firefox-themefigure-classwp-block-image"><strong><strong>Firefox Theme</strong></strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/15-theme-preview-1-1024x576.gif" alt="Tema Firefox" class="wp-image-1612" /> </figure></p>
<p>Il tema Firefox è basato sugli strumenti per sviluppatori di Mozilla Firefox. Il suo perfetto equilibrio di colori freddi gli conferisce un aspetto elegante con icone illuminate al neon. Per passare facilmente da una scheda all&rsquo;altra, fornisce una sottolineatura evidenziata sulle schede aperte per garantire una transizione rapida. È disponibile nelle versioni scura e chiara.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=Heron.firefox-devtools-theme">Scarica il tema Firefox</a></p>
<h3 id="nu-discofigure-classwp-block-image"><strong>Nu Disco</strong><figure class="wp-block-image"></h3>
<p><a href="https://www.tabnine.com/blog/wp-content/uploads/2021/11/17-discojs.png"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/17-discojs-1024x733.png" alt="Nu Disco" class="wp-image-1615" /></a><figcaption>Nu Disco</figcaption></figure></p>
<p>Nu Disco è stato creato da Danny Banks ed è alimentato da Style Dictionary. I suoi colori di sintassi sono posizionati magnificamente con colori contrastanti per semplificare la tua esperienza di codifica. Disponibile nelle versioni scura e chiara, è perfettamente progettato per essere facile da usare in ambienti luminosi e scarsamente illuminati.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dbanksdesign.nu-disco">Scarica il tema Nu Disco</a></p>
<h2 id="anc-4.wp-block-heading"><strong>Incartare</strong></h2>
<p>VSCode è un ottimo editor di codice che supporta centinaia di linguaggi e funzionalità avanzate, tra cui l&rsquo;evidenziazione della sintassi, l&rsquo;indentazione automatica e gli snippet. È adatto per lo sviluppo Web moderno e dispone di un debugger interattivo per visualizzare gli stack di chiamate ed eseguire variabili.</p>
<p>Provare uno dei temi di Visual Studio Code che ho suggerito qua sopra può aiutarti molto durante le tue sessioni di coding. Sebbene i temi sopra riportati rendano il tuo IDE colorato e aiutino i tuoi occhi a pungere meno, non ti renderanno certo un programmatore migliore… Ma lavorare in un ambiente piacevole è sicuramente più motivante!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>6 migliori tool per sviluppo Frontend</title>
			<link>https://albertoreineri.it/blog/6-migliori-tool-per-sviluppo-frontend/</link>
			<pubDate>Tue, 28 Jun 2022 12:03:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/6-migliori-tool-per-sviluppo-frontend/</guid>
			<description>Il codice utilizzato nella produzione è diverso dal codice di sviluppo. In produzione, è necessario creare pacchetti che funzionino velocemente, gestire le dipendenze, automatizzare le attività, caricare moduli esterni e altro ancora. Gli strumenti che consentono di trasformare il codice di sviluppo in codice di produzione sono chiamati tool di compilazione. Gli sviluppatori frontend lavorano principalmente con i seguenti tipi di strumenti di compilazione:
package managers, task runners, module loaders, module bundlers, etc… In questo articolo potrai trovare raccolto i migliori strumenti di build che puoi utilizzare nello sviluppo frontend.</description>
			<content type="html"><![CDATA[<p>Il codice utilizzato nella produzione è diverso dal codice di sviluppo. In produzione, è necessario creare pacchetti che funzionino velocemente, gestire le dipendenze, automatizzare le attività, caricare moduli esterni e altro ancora. Gli strumenti che consentono di trasformare il codice di sviluppo in codice di produzione sono chiamati tool di compilazione. Gli sviluppatori frontend lavorano principalmente con i seguenti tipi di strumenti di compilazione:</p>
<ul>
<li>package managers,</li>
<li>task runners,</li>
<li>module loaders,</li>
<li>module bundlers,</li>
<li>etc…</li>
</ul>
<p>In questo articolo potrai trovare raccolto i migliori strumenti di build che puoi utilizzare nello sviluppo frontend. Nota che tutti questi strumenti vengono eseguiti da riga di comando, quindi non sono dotati di un&rsquo;interfaccia utente grafica.</p>
<h2 id="1-npm-package-manager">1. NPM (PACKAGE MANAGER)</h2>
<p>L&rsquo;acronimo <a href="https://github.com/npm/cli">npm</a> sta per Node Package Maid che è il gestore di pacchetti predefinito di Node.js. Quando <a href="https://nodejs.org/en/download/">installi Node.js</a> sul tuo sistema, anche npm viene installato automaticamente e puoi accedervi dall&rsquo;interfaccia da riga di comando. Con npm puoi installare qualsiasi pacchetto Node.js con un solo comando.</p>
<p>Puoi trovare tutti i pacchetti Node.js esistenti nel registro npm a cui puoi accedere tramite la barra di ricerca nella parte superiore della home page di npm. Devi solo digitare il nome del pacchetto che stai cercando (ad esempio <em>‘postcss&rsquo;</em> ) nella barra di ricerca e verrai indirizzato alla pagina del pacchetto che include tutto ciò che devi sapere sul pacchetto, il suo processo di installazione e tutto delle sue dipendenze.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Facile processo di installazione.</li>
<li>Software multipiattaforma (Windows, Linux, macOS, SmarOS e altro).</li>
<li>Centinaia di migliaia di pacchetti.</li>
<li>Gestione efficiente delle dipendenze tramite il file <em>package.json</em>.</li>
<li>Molteplici opzioni di configurazione (tramite riga di comando).</li>
<li>Ampia documentazione e utile community.</li>
</ul>
<h2 id="2-yarn-package-manager">2. YARN (PACKAGE MANAGER)</h2>
<p><a href="https://yarnpkg.com/lang/en/">Yarn</a> è un gestore di pacchetti frontend che può essere utilizzato come alternativa a npm. Poiché Yarn stesso è un pacchetto Node.js, devi installare Node.js prima di poter utilizzare Yarn sul tuo sistema. Quindi, devi solo seguire la <a href="https://yarnpkg.com/en/docs/install">guida all&rsquo;installazione</a> per utilizzarla per gestire le dipendenze del frontend.</p>
<p>Sebbene npm sia un ottimo strumento, scoprirai che la creazione di pacchetti con esso a volte richiede molto tempo. Questo non è necessariamente un problema se non hai molte dipendenze da installare o non usi regolarmente un gestore di pacchetti. Tuttavia, se lavori su un progetto pesante, può essere una buona idea utilizzare Yarn permette tempi di costruzione ultraveloci.</p>
<p>Yarn velocizza il processo di compilazione memorizzando nella cache ogni pacchetto in modo da non dover scaricare le dipendenze più volte. Esegue anche operazioni parallele per ridurre ulteriormente i tempi di costruzione.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Strumento multipiattaforma (Windows, Linux, macOS) con guide di installazione separate per ciascuna piattaforma.</li>
<li>Compatibile con tutti i pacchetti Node.js.</li>
<li>Tempi di <em>build</em> rapidi.</li>
<li>Modalità offline.</li>
</ul>
<h2 id="3-grunt-task-runner">3. GRUNT (TASK RUNNER)</h2>
<p><a href="https://gruntjs.com/">Grunt</a> è un task runner frontend che ti consente di automatizzare attività ripetitive come minimizzazione, linting, test e altro. I task runner sono diversi dai gestori di pacchetti, poiché non puoi usarli per gestire le dipendenze. Ne hai bisogno solo se desideri eseguire le stesse attività durante ogni processo di compilazione.</p>
<p>Poiché Grunt è un pacchetto Node.js, puoi installarlo con npm, Yarn o un altro gestore di pacchetti Node.js. Grunt mantiene le dipendenze personalizzate necessarie per eseguire le attività predefinite nel file <em>package.json</em> . Puoi definire le tue attività nel Gruntfile (<a href="https://gruntjs.com/sample-gruntfile">vedi un esempio</a>) che viene eseguito durante ogni processo di compilazione ed esegue automaticamente ogni attività che include.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Strumento da riga di comando multipiattaforma che funziona su qualsiasi sistema operativo.</li>
<li>Processo di configurazione semplice.</li>
<li>Enorme ecosistema con centinaia di plugin per aggiungere strumenti frontend (come Sass, Jade, JSHint, Handlebars, RequireJS e altri) che completano le attività preconfigurate.</li>
<li>Attività asincrone se necessario.</li>
<li>Ampia documentazione.</li>
<li>Ampiamente adottato.</li>
</ul>
<h3 id="4-gulp-task-runner">4. GULP (TASK RUNNER)</h3>
<p><a href="https://gulpjs.com/">Gulp</a> è un altro task runner automatizzato e anche il più forte concorrente di Grunt. Simile a Grunt, puoi utilizzare Gulp per automatizzare attività front-end ricorrenti come la preelaborazione CSS, l&rsquo;ottimizzazione delle immagini e molti altri. È anche un pacchetto Node.js che puoi installare con i gestori di pacchetti npm e Yarn. Puoi definire le tue attività in <a href="https://gulpjs.com/docs/en/getting-started/javascript-and-gulpfiles">Gulpfile</a> e configurare le tue dipendenze relative alle tue attività nel file <em>package.json</em> .</p>
<p>La più grande differenza rispetto a Grunt è che Gulp utilizza una tecnica di automazione più efficiente che consente tempi di costruzione più rapidi. Mentre Grunt utilizza i file temporanei per elaborare le attività, Gulp esegue operazioni in memoria senza scrivere in file temporanei. Queste operazioni in memoria sono chiamate <a href="https://nodejs.org/api/stream.html#stream_stream">node streams</a> e possono farti risparmiare molto tempo, soprattutto se desideri elaborare più attività in ogni build.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Task runner multipiattaforma che può essere installato come un normale pacchetto Node.js.</li>
<li>Utilizza i flussi Node per velocizzare le operazioni.</li>
<li>Enorme ecosistema con migliaia di plugin.</li>
<li>Base di codice di qualità utilizzando le best practice di Node.js.</li>
<li>Documentazione facile da seguire.</li>
<li>Superficie API minima per una semplice adozione.</li>
</ul>
<h2 id="5-browserify-module-loaderbundler">5. BROWSERIFY (MODULE LOADER/BUNDLER)</h2>
<p><a href="http://browserify.org/">Browserify</a> è un caricatore di moduli Node.js che ti consente di raggruppare le tue dipendenze front-end e caricarle come un unico file JavaScript nel browser dell&rsquo;utente. I gestori di pacchetti come npm e Yarn caricano i moduli sul lato server utilizzando la funzione <em><a href="https://nodejs.org/api/modules.html#modules_require_id">require()</a></em> di Node.js progettata per caricare i moduli. Browserify porta il metodo <em>require()</em> sul lato client, il che può comportare un enorme aumento delle prestazioni.</p>
<p>Con Browserify, il browser del tuo utente deve caricare un solo file JavaScript statico che contiene tutte le dipendenze su cui si basa il tuo progetto. Puoi aggiungere il tuo JavaScript in bundle come tag script alla tua pagina e sei a posto. Tuttavia, tieni presente che poiché Browserify è un modulo Node.js e un&rsquo;implementazione dell&rsquo;API CommonJS (simile a npm), puoi utilizzarlo solo per caricare moduli Node.js ma non altri tipi di file JavaScript (o altri).</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Raggruppa tutte le dipendenze di Node.js in un unico file.</li>
<li>Velocizza le applicazioni modulari che si basano su più moduli Node.js.</li>
<li>Consente requisiti esterni (è possibile richiedere moduli da altri tag script ).</li>
<li>Consente di dividere i pacchetti, se necessario.</li>
<li>Esclude, ignora e trasforma le funzionalità.</li>
<li>Documentazione dettagliata e utile <a href="https://github.com/browserify/browserify-handbook">manuale di Browserify</a> .</li>
</ul>
<h2 id="6-webpack-module-loaderbundler">6. WEBPACK (MODULE LOADER/BUNDLER)</h2>
<p><a href="https://webpack.js.org/">Webpack</a> è un bundler di moduli avanzato che ti consente di raggruppare tutte le tue dipendenze e caricarle come risorse statiche nel browser dell&rsquo;utente. Mentre Browserify raggruppa solo i moduli Node.js, Webpack può gestire qualsiasi tipo di file front-end come file <em>.html</em> , <em>.css, .js, .scss</em> , immagini e altre risorse.</p>
<p>Oltre ai moduli CommonJS utilizzati nell&rsquo;ecosistema Node.js, Webpack può anche raggruppare moduli <a href="https://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMAScript</a> e <a href="https://github.com/amdjs/amdjs-api/wiki/AMD">AMD</a> nativi (altre specifiche del modulo JavaScript). Webpack analizza il tuo progetto e crea un grafico delle dipendenze. Quindi, in base al grafico delle dipendenze, raggruppa i tuoi file e moduli in uno o più file statici che puoi aggiungere alla tua pagina HTML.</p>
<p>Poiché Webpack stesso è anche un modulo Node.js, puoi installarlo con npm o con il gestore di pacchetti Yarn.</p>
<p>Per impostazione predefinita, la configurazione dei progetti Webpack richiede molto tempo a causa delle molteplici opzioni che consentono di perfezionare il progetto. Tuttavia, dal Webpack 4, include un&rsquo;opzione di configurazione zero che automatizza il processo di compilazione e richiede solo la definizione del file di immissione.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Molteplici opzioni di configurazione.</li>
<li>Codice suddiviso in blocchi più piccoli che possono essere caricati in modo asincrono.</li>
<li>Supporto per mappe di origine.</li>
<li>Opzione di configurazione zero (dal Webpack 4).</li>
<li>Enorme ecosistema con una ricca interfaccia di plugin.</li>
</ul>
<h2 id="conclusione">CONCLUSIONE</h2>
<p>Gli strumenti di compilazione frontend ti aiutano a trasformare il codice di sviluppo in codice pronto per la produzione che può essere eseguito su qualsiasi dispositivo o piattaforma senza problemi. In questa raccolta, abbiamo esaminato gli strumenti di compilazione più adottati che puoi utilizzare nel tuo progetto Web, inclusi gestori di pacchetti, task runner e caricatori/bundler di moduli.</p>
<p>Oltre alle soluzioni ampiamente adottate, ci sono anche (relativamente) nuovi strumenti sul mercato che stanno guadagnando costantemente terreno, come il gestore di pacchetti <a href="https://pnpm.js.org/">pnpm</a> (un&rsquo;alternativa a npm e Yarn), il bundle di moduli <a href="https://parceljs.org/">Parcel</a> (un&rsquo;alternativa a Webpack) e il bundler di moduli <a href="https://rollupjs.org/blog/en/">Rollup</a> ES (simile a Browserify ma raggruppa i moduli ECMAScript invece di quelli CommonJS). Se sei alla ricerca di nuove soluzioni, vale la pena dare un&rsquo;occhiata anche a questi nuovi strumenti.</p>
<p>L&rsquo;aggiunta di nuovi strumenti al tuo flusso di lavoro può portare il tuo processo di sviluppo a un livello superiore. </p>
<p>Come sempre, <em>Buon Codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Nano Editor, Guida per principianti</title>
			<link>https://albertoreineri.it/blog/nano-editor-guida-per-principianti/</link>
			<pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/nano-editor-guida-per-principianti/</guid>
			<description>Gli utenti Linux hanno molte opzioni tra cui scegliere quando si tratta di editor di testo. Da base ad avanzato, esistono un sacco di editor di testo, ma alcuni come Vim ed Emacs possono risultare molto complicati per gli utenti meno avanzati.
In questo casi ci viene in aiuto Nano, forse il miglior editor di testo per principianti.
Nano: Nano è un editor di testo semplice e leggero sviluppato appositamente per sistemi UNIX e ambienti desktop che utilizzano un&amp;rsquo;interfaccia a riga di comando.</description>
			<content type="html"><![CDATA[<p>Gli utenti <a href="/argomento/linux/">Linux</a> hanno molte opzioni tra cui scegliere quando si tratta di editor di testo. Da base ad avanzato, esistono un sacco di editor di testo, ma alcuni come Vim ed Emacs possono risultare molto complicati per gli utenti meno avanzati.</p>
<p>In questo casi ci viene in aiuto Nano, forse il miglior editor di testo per principianti.</p>
<h2 id="nano">Nano:</h2>
<p>Nano è un editor di testo semplice e leggero sviluppato appositamente per sistemi UNIX e ambienti desktop che utilizzano un&rsquo;interfaccia a riga di comando. Nano è concesso in licenza sotto la GNU General Public License ed emula l&rsquo;editor di testo Pico.</p>
<h2 id="come-installare-nano">Come installare Nano:</h2>
<p>Sto usando Ubuntu per questo tutorial e il processo di installazione sarà lo stesso su altre distribuzioni Linux.</p>
<p>Prima di procedere con il processo di installazione, sarebbe una buona idea verificare se l&rsquo;editor di testo Nano è già installato o meno sul tuo sistema. Alcune distribuzioni Linux vengono fornite con l&rsquo;editor Nano preinstallato.</p>
<p>Per controllare, esegui il seguente comando in Terminale.</p>
<pre tabindex="0"><code>$ nano --version
</code></pre><p>Se ottieni un output con l&rsquo;attuale versione di nano, puoi saltare l&rsquo;installazione poiché l&rsquo;editor di testo Nano è già installato sul tuo sistema.</p>
<p>L&rsquo;installazione di Nano Text Editor è semplice, basta eseguire il seguente comando da Terminale e attendere il completamento dell&rsquo;installazione.</p>
<pre tabindex="0"><code>$ sudo apt-get install nano
</code></pre><p>Gli utenti CentOS/Red Hat Enterprise Linux (RHEL) possono utilizzare il comando seguente per installare l&rsquo;editor Nano.</p>
<pre tabindex="0"><code>$ yum installa nano
</code></pre><p>Ora che l&rsquo;editor nano è stato installato correttamente sul tuo sistema e pronto per l&rsquo;uso, possiamo iniziare con una guida per principianti all&rsquo;uso dell&rsquo;editor di testo Nano.</p>
<h2 id="guida-alluso-delleditor-di-testo-nano">Guida all&rsquo;uso dell&rsquo;editor di testo Nano</h2>
<p>Vediamo ora come utilizzare l&rsquo;editor di testo Nano.</p>
<h3 id="come-aprirechiudere-il-nano-text-editor">Come aprire/chiudere il Nano Text Editor</h3>
<p>Il comando per aprire l&rsquo;editor di testo Nano è il seguente.</p>
<pre tabindex="0"><code>$ nano nomefile 
</code></pre><p>Puoi aprire vari tipi di file nell&rsquo;editor di testo Nano, inclusi .txt, .php, .html e molti altri. Devi solo digitare il nome del file seguito da un&rsquo;estensione per aprire il file particolare nell&rsquo;editor Nano. Ad esempio, supponiamo di dover aprire il file denominato il_mio_file.txt, il comando sarà il seguente.</p>
<pre tabindex="0"><code>$ nano il_mio_file.txt
</code></pre><p>Devi assicurarti di essere nella directory in cui è stato salvato il file. Se il file non è presente nella directory, l&rsquo;editor di testo Nano creerà un nuovo file nella directory attuale.</p>
<p>Una volta aperto il file noterai che l&rsquo;interfaccia nano presenta il nome del file nella parte superiore, mentre nella parte inferiore noterai principalmente scorciatoie come taglia, sostituisci, vai alla riga e giustifica. Qui ˄ significa il tasto <strong>CTRL</strong> sulla tastiera.</p>
<p>Ad esempio, per <strong>scrivere</strong> o salvare le modifiche, devi premere i pulsanti CTRL + O sulla tastiera.</p>
<p>Se stai aprendo un file di configurazione, assicurati di utilizzare l&rsquo; opzione <strong>–w</strong> , questo comanderà a Nano editor di aprire il file di configurazione in un formato standard. Se non si utilizza questa opzione, l&rsquo;editor Nano avvolgerà il testo del file per adattarlo alla finestra, che alla fine sarà difficile da leggere.</p>
<h2 id="come-cercare--sostituire-il-testo">Come cercare / sostituire il testo</h2>
<p><strong>CTRL + W</strong> è la scorciatoia per cercare la parola nell&rsquo;editor. Ora devi inserire il testo che vuoi cercare e quindi premere il tasto Invio. Per continuare a cercare lo stesso testo, usa il tasto <strong>ALT + W.</strong></p>
<p>Per sostituire il testo, devi usare <strong>CTRL + R</strong>, l&rsquo;editor ti porterà alla prima istanza del testo che desideri sostituire; per sostituire tutto il testo, devi premere <strong>A</strong> . Ma se vuoi sostituire un solo testo, devi premere <strong>Y</strong>.</p>
<h2 id="come-copiare-e-incollare-il-testo">Come copiare e incollare il testo</h2>
<p>L&rsquo;operazione di copia incolla non è così semplice come altri editor di testo nell&rsquo;editor Nano. Se desideri tagliare e incollare una riga particolare, devi prima portare il cursore all&rsquo;inizio di quella riga.</p>
<p>Ora devi premere <strong>CTRL + K</strong> per tagliare la linea, quindi spostare il cursore nel punto in cui vuoi incollarlo, ora infine, premere <strong>CTRL + U</strong> per incollare la linea.</p>
<p>Per copiare e incollare una particolare stringa o parola, devi selezionare quella parola o stringa premendo <strong>CTRL + 6</strong> o <strong>ALT + A</strong> , assicurati che il cursore sia all&rsquo;inizio della parola.</p>
<p>Ora puoi usare <strong>CTRL + K</strong> e <strong>CTRL + U</strong> per tagliare e incollare la parola o la stringa.</p>
<p>Ecco come puoi iniziare a utilizzare l&rsquo;editor di testo Nano. Modificare un file di testo utilizzando la riga di comando non è facile, ma l&rsquo;editor di testo Nano lo rende più semplice. È affidabile e uno degli strumenti più facili da usare.</p>
<p>Dagli utenti inesperti ai professionisti, tutti trovano l&rsquo;editor di testo Nano un utile strumento da riga di comando. Spero che questa guida ti abbia sicuramente aiutato a iniziare con l&rsquo;editor Nano.</p>
<p>Di seguito ti lascio una serie di comandi spesso utilizzati:</p>
<h2 id="scoriatoie-utili-per-nano">Scoriatoie utili per nano:</h2>
<table>
<thead>
<tr>
<th>Command</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td>CTRL + A</td>
<td>Vai all&rsquo;inizio della riga</td>
</tr>
<tr>
<td>CTRL + E</td>
<td>Vai alla fine della riga</td>
</tr>
<tr>
<td>CTRL + Y</td>
<td>Scorri in basso nella pagina</td>
</tr>
<tr>
<td>CTRL + V</td>
<td>Scorri in alto nella pagina</td>
</tr>
<tr>
<td>CTRL + _</td>
<td>Scorri fino alla riga speficina</td>
</tr>
<tr>
<td>CTRL + C</td>
<td>Scopri dov&rsquo;è il cursore</td>
</tr>
<tr>
<td>CTRL + V</td>
<td>Scorri verso l&rsquo;alto</td>
</tr>
<tr>
<td>CTRL + W</td>
<td>Cerca un testo</td>
</tr>
<tr>
<td>CTRL + D</td>
<td>Cancella il carattere sotto al cursore</td>
</tr>
<tr>
<td>CTRL + K</td>
<td>Cancella l&rsquo;intera riga</td>
</tr>
<tr>
<td>CTRL + \</td>
<td>Sostituisci una stringa</td>
</tr>
<tr>
<td>CTRL + O</td>
<td>Salva il contenuto senza uscire</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
		</item>
		
		<item>
			<title>Usare la riga di comando con WordPress grazie a WP-CLI</title>
			<link>https://albertoreineri.it/blog/usare-la-riga-di-comando-con-wordpress-grazie-a-wp-cli/</link>
			<pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/usare-la-riga-di-comando-con-wordpress-grazie-a-wp-cli/</guid>
			<description>Se sei uno sviluppatore WordPress, probabilmente hai installato il CMS, l&amp;rsquo;hai aggiornato e hai attivato temi e plugin centinaia di volte. E sebbene queste attività di routine di sviluppo e manutenzione siano abbastanza facili da eseguire con l&amp;rsquo;interfaccia utente grafica di WordPress, eseguirle più e più volte non è molto efficiente.
La buona notizia è che puoi velocizzare facilmente ed efficacemente lo sviluppo e la manutenzione di WordPress con l&amp;rsquo;interfaccia a riga di comando di WordPress (WP-CLI) .</description>
			<content type="html"><![CDATA[<p>Se sei uno sviluppatore WordPress, probabilmente hai installato il CMS, l&rsquo;hai aggiornato e hai attivato temi e plugin centinaia di volte. E sebbene queste attività di routine di sviluppo e manutenzione siano abbastanza facili da eseguire con l&rsquo;interfaccia utente grafica di WordPress, eseguirle più e più volte non è molto efficiente.</p>
<p>La buona notizia è che puoi velocizzare facilmente ed efficacemente lo sviluppo e la manutenzione di <a href="http://wp-cli.org/">WordPress con l&rsquo;interfaccia a riga di comando di WordPress (WP-CLI)</a> . In questo post esploreremo i diversi modi in cui puoi utilizzare WP-CLI e vedremo alcuni utili comandi WP-CLI per aiutarti a iniziare con un passo nella giusta direzione.</p>
<h2 id="unintroduzione-a-wp-cli">UN&rsquo;INTRODUZIONE A WP-CLI</h2>
<p>Se sei nello sviluppo web da un po&rsquo; di tempo, probabilmente hai familiarità con l&rsquo;interfaccia da riga di comando. WP-CLI è l&rsquo;interfaccia della riga di comando di WordPress. E per quelli di voi che non si sono dilettati molto nella programmazione, WP-CLI è uno strumento che consente di gestire le installazioni di WordPress senza utilizzare un browser web.</p>
<p>WP-CLI ti consente di fare qualsiasi cosa, dall&rsquo;installazione del CMS WordPress su un sito Web nuovo di zecca all&rsquo;esecuzione di operazioni a livello di sito su un sito Web WordPress esistente. E la parte migliore è che l&rsquo;insieme di passaggi che devi seguire per completare tali attività sarà, nella maggior parte dei casi, ridotto a una singola riga di codice .</p>
<p>Ora che abbiamo visto a grandi linee cos&rsquo;è WP-CLI e come può aiutarti ad accelerare lo sviluppo del tuo prossimo progetto, diamo un&rsquo;occhiata a come puoi iniziare con questo potente strumento.</p>
<h2 id="installazione-di-wp-cli-sul-tuo-ambiente-di-hosting">INSTALLAZIONE DI WP-CLI SUL TUO AMBIENTE DI HOSTING</h2>
<p>La prima cosa che devi fare per iniziare con WP-CLI è assicurarti che il tuo ambiente di hosting soddisfi i requisiti minimi:</p>
<ul>
<li>
<p>Ambiente UNIX.</p>
</li>
<li>
<p>PHP 5.3.29 (o successivo).</p>
</li>
<li>
<p>WordPress 3.7 (o successivo).</p>
</li>
<li>
<p>Secure Shell (SSH) abilitato sul tuo server web.</p>
</li>
</ul>
<p>Dopo aver verificato quegli elementi essenziali, vai avanti e scarica il file <em>wp-cli.phar</em> usando il seguente comando:</p>
<pre tabindex="0"><code>$ curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
</code></pre><p>E voilà! WP-CLI dovrebbe ora essere installato nel tuo ambiente di hosting. Se desideri assicurarti che funzioni correttamente, esegui semplicemente il seguente comando:</p>
<pre tabindex="0"><code>$ php wp-cli.phar -info
</code></pre><p>Se tutto va bene, dovresti vedere qualcosa di simile sulla riga di comando che specifica quale versione di WP-CLI è in esecuzione nel tuo ambiente di hosting:</p>
<pre tabindex="0"><code>PHP binary: /usr/bin/php5
PHP version: 5.5.9-1ubuntu4.14
php.ini used: /etc/php5/cli/php.ini
WP-CLI root dir: /home/wp-cli/.wp-cli
WP-CLI packages dir: /home/wp-cli/.wp-cli/packages/
WP-CLI global config: /home/wp-cli/.wp-cli/config.yml
WP-CLI project config:
WP-CLI version: 1.3.0
</code></pre><p>Tuttavia, se scopri che WP-CLI non è stato installato correttamente sul tuo sistema, ti consiglio di controllare alcuni metodi di <a href="https://make.wordpress.org/cli/handbook/installing/#alternative-installation-methods">installazione alternativi</a> per ulteriori informazioni su come configurarlo.</p>
<p>Infine, creeremo un file eseguibile per WP-CLI e lo sposteremo nella sua directory in modo da poterlo eseguire da qualsiasi luogo:</p>
<pre tabindex="0"><code>$ chmod +x wp-cli.phar
$ sudo mv wp-cli.phar /usr/local/bin/wp
</code></pre><p>Per semplicità, abbiamo chiamato la directory <em>wp</em> . Ora, ogni volta che devi usare WP-CLI, tutto ciò che devi fare è eseguire il comando <em>wp</em> dalla riga di comando.</p>
<h2 id="sviluppo-wordpress-e-manutenzione-del-sito-con-wp-cli">SVILUPPO WORDPRESS E MANUTENZIONE DEL SITO CON WP-CLI</h2>
<p>Ora che WP-CLI è installato e pronto per l&rsquo;uso, esaminiamo alcune delle cose più utili che puoi fare per accelerare le attività di routine di sviluppo e manutenzione di WordPress.</p>
<h3 id="installazione-di-wordpress">INSTALLAZIONE DI WORDPRESS</h3>
<p>Entra nella directory in cui desideri installare il CMS WordPress ed esegui la seguente riga di codice:</p>
<pre tabindex="0"><code>$ wp core download
</code></pre><p>Dovrai creare un file <em>wp-config.php</em> per proseguire con la tua installazione. Ecco come puoi farlo:</p>
<pre tabindex="0"><code>$ wp core config --dbname=databasename --dbuser=databaseuser --dbpass=databasepassword --dbhost=localhost --dbprefix=prfx_
</code></pre><p><em>(Ho utilizzato del testo di esempio per il nome del database e le credenziali dell&rsquo;utente del database. Assicurati di sostituirli con le informazioni del tuo database prima di eseguire il codice.)</em></p>
<p>Infine, puoi iniziare l&rsquo;installazione vera e propria eseguendo il comando di <em>installazione principale</em> indicato di seguito. Ricorda di sostituire i parametri di esempio con le informazioni del tuo sito prima di eseguire il codice.</p>
<pre tabindex="0"><code>$ wp core install –-url=yoursite.com -–title=&#34;Your WordPress Site&#39;s Title&#34; –-admin_user=admin_username –-admin_password=admin_password –-admin_email=admin@yoursite.com
</code></pre><h3 id="aggiornamento-di-wordpress">AGGIORNAMENTO DI WORDPRESS</h3>
<p>Prima o poi verrà lanciata una nuova versione di WordPress e dovrai aggiornare la tua installazione all&rsquo;ultima versione. Se non sei sicuro di quale versione di WordPress è attualmente in esecuzione sul tuo sito, esegui semplicemente il seguente comando:</p>
<pre tabindex="0"><code>$ wp core version
</code></pre><p>Se ritieni che il tuo sito abbia effettivamente bisogno di essere aggiornato, è meglio eseguire un backup completo del suo database prima di procedere. Ecco come puoi farlo con WP-CLI:</p>
<pre tabindex="0"><code>$ wp db export my-db-backup.sql
</code></pre><p>L&rsquo;esecuzione di questo comando creerà un backup completo del database del tuo sito e lo salverà nella directory principale in un file chiamato <em>my-db-backup.sql</em> .</p>
<p>Infine, puoi aggiornare i file core del tuo sito e il relativo database eseguendo le seguenti righe di codice:</p>
<pre tabindex="0"><code>$ wp core update
$ wp core update –db
</code></pre><p>Per quelli di voi che gestiscono più siti o reti multisito, eseguire il seguente script per aggiornare tutti i siti in una volta sola:</p>
<pre tabindex="0"><code>$ declare -a sites_to_update=(&#39;/var/www/wordpress_site_1&#39; &#39;/var/www/wordpress_site_2&#39; &#39;/var/www/wordpress_site_n&#39;)
for site in &#34;${sites_to_update[@]}&#34;;
do
wp --path=$site core update
done
</code></pre><p><em>(Ricordati di sostituire il testo di esempio con i nomi delle directory principali dei tuoi siti Web WordPress.)</em></p>
<h3 id="gestione-di-temi-e-plugin">GESTIONE DI TEMI E PLUGIN</h3>
<p>Una delle cose migliori di WP-CLI è che collega il tuo server web alle directory ufficiali di WordPress <a href="https://wordpress.org/themes/">Theme</a> e <a href="https://wordpress.org/plugins/">Plugin</a>. Ciò significa che puoi gestire le installazioni di temi e plug-in utilizzando solo la riga di comando.</p>
<p><strong>Comandi del tema WordPress:</strong></p>
<ul>
<li>
<p><strong>Per installare un tema:</strong> <strong>wp theme install theme_name</strong></p>
</li>
<li>
<p><strong>Per attivare un tema installato:</strong> <strong>wp theme activate theme_name</strong></p>
</li>
<li>
<p><strong>Per aggiornare un tema installato:</strong> <strong>wp theme update theme_name</strong></p>
</li>
<li>
<p><strong>Per aggiornare tutti i temi installati:</strong> <strong>wp theme update –all</strong></p>
</li>
</ul>
<p><strong>Comandi del plugin di WordPress:</strong></p>
<ul>
<li>
<p><strong>Per installare un plugin:</strong> <strong>wp plugin install plugin_name</strong></p>
</li>
<li>
<p><strong>Per attivare un plugin installato:</strong> <strong>wp plugin activate plugin_name</strong></p>
</li>
<li>
<p><strong>Per aggiornare un plugin installato:</strong> <strong>wp plugin update plugin_name</strong></p>
</li>
<li>
<p><strong>Per aggiornare tutti i plugin installati:</strong> <strong>wp plugin update –all</strong></p>
</li>
</ul>
<p><em>(Ricordati di sostituire il testo di esempio con il nome del tema o del plugin con cui desideri interagire.)</em></p>
<h3 id="creazione-di-custom-post-personalizzati">CREAZIONE DI CUSTOM POST PERSONALIZZATI</h3>
<p>WP-CLI elimina il lavoro pesante dalla creazione di custom post type in WordPress e lo riduce a una semplice riga di codice. Invece di scaricare un plug-in per aiutarti a portare a termine il lavoro, perché non provare la seguente riga di codice:</p>
<pre tabindex="0"><code>$ wp scaffold post-type cpt_slug --label=CPT_Label --theme=theme_name
</code></pre><p>Tutto quello che devi fare è sostituire il testo di esempio con lo slug, l&rsquo;etichetta e il nome del tema del tuo custom post type e voilà!</p>
<h3 id="creazione-di-temi-child">CREAZIONE DI TEMI CHILD</h3>
<p>Se ti è già capitato di creare un tema child, avrai dovuto accedere al pannello di controllo e creareti cartella e file relativi dentro al sito. WP-CLI ti consente di creare un tema child con una singola riga di codice:</p>
<pre tabindex="0"><code>$ wp scaffold child-theme name-of-child-theme --parent_theme=name_of_parent_theme --theme_name=&#39;My Child Theme&#39; --author=&#39;Your Name&#39; --author_uri=http://www.yoursite.com --theme_uri=http://www.themesite.com --activate
</code></pre><p><em>(Come sempre, ricorda di sostituire il testo di esempio con il tema child e le informazioni sul tema genitore.)</em></p>
<h2 id="conclusione">CONCLUSIONE</h2>
<p>Con WP-CLI puoi ottenere di più facendo di meno. Se desideri aumentare la tua produttività accelerando le operazioni di routine di sviluppo e manutenzione di WordPress, allora vale sicuramente la pena provare WP-CLI.</p>
<p>Ti ho mostrato come installare lo strumento nel tuo ambiente di hosting e abbiamo visto alcuni scenari in cui WP-CLI batte la GUI di WordPress in termini di efficienza. Ora non ti resta che provarlo!</p>
<p>Ah, sembra scontato, ma NON FARE MAI TEST IN AMBIENTE DI PRODUZIONE, usa lo STAGING o falli in LOCALE.</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Come installare una LAMP stack (Linux, Apache, MySQL, PHP) su Ubuntu</title>
			<link>https://albertoreineri.it/blog/come-installare-una-lamp-stack-linux-apache-mysql-php-su-ubuntu/</link>
			<pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-installare-una-lamp-stack-linux-apache-mysql-php-su-ubuntu/</guid>
			<description>Introduzione Uno stack &amp;ldquo;LAMP&amp;rdquo; è un gruppo di software open source che viene generalmente installato insieme per consentire a un server di ospitare siti Web dinamici e app Web. Questo termine è in realtà un acronimo che rappresenta il sistema operativo Linux, con il web server Apache**.** I dati del sito vengono archiviati in un database MySQL e il contenuto dinamico viene elaborato da PHP.
In questa guida, installeremo uno stack LAMP su un server Ubuntu.</description>
			<content type="html"><![CDATA[<h2 id="introduzione">Introduzione</h2>
<p>Uno stack &ldquo;LAMP&rdquo; è un gruppo di software open source che viene generalmente installato insieme per consentire a un server di ospitare siti Web dinamici e app Web. Questo termine è in realtà un acronimo che rappresenta il sistema operativo <strong>L</strong>inux, con il web server <strong>A</strong>pache**.** I dati del sito vengono archiviati in un database <strong>M</strong>ySQL e il contenuto dinamico viene elaborato da <strong>P</strong>HP.</p>
<p>In questa guida, installeremo uno stack LAMP su un server Ubuntu.</p>
<h2 id="prerequisiti">Prerequisiti</h2>
<p>Questo tutorial è creato su Ubuntu, ma funziona su tutte le distro basate su Debian, come Pop!_OS, Elementary OS, Linux Mint etc.</p>
<h2 id="passaggio-1-installazione-di-apache">Passaggio 1: installazione di Apache</h2>
<p>Il server Web Apache è un popolare server Web open source che può essere utilizzato insieme a <a href="/blog/le-basi-di-php/">PHP</a> per ospitare siti Web dinamici. È ben documentato ed è stato ampiamente utilizzato per gran parte della storia del web.</p>
<p>Innanzitutto, assicurati che la tua <code>apt</code> cache sia aggiornata con:</p>
<pre tabindex="0"><code>sudo apt update
</code></pre><p>Se è la prima volta che lo utilizzi <code>sudo</code> in questa sessione, ti verrà chiesto di fornire la password dell&rsquo;utente per convalidare le tue autorizzazioni.</p>
<p>Una volta aggiornata la cache, puoi installare Apache lanciando:</p>
<pre tabindex="0"><code>sudo apt install apache2
</code></pre><p>Dopo aver inserito questo comando, <code>apt</code> ti dirà quali pacchetti intende installare e quanto spazio su disco occuperà. Premi S (o Y se hai configurati il sistema in lingua inglese) e poi premi <code>ENTER</code> per confermare e l&rsquo;installazione procederà.</p>
<hr>
<p>N.B.: in questa guida utilizzerò &lsquo;<em>Y</em>&rsquo; per procedere con l&rsquo;installazione, perché ho l&rsquo;abitudine di installare sempre Linux in inglese&hellip; Se usi l&rsquo;italiano ricordati di premere &lsquo;<em>S</em>&rsquo;</p>
<hr>
<p>E voilà! Apache è bello che installato!</p>
<p>Puoi fare subito un controllo a campione per verificare che tutto sia andato come previsto visitando l&rsquo;indirizzo IP pubblico del tuo server nel tuo browser web. Se sei il locale ti basterà aprire il browser e scrivere nella barra degli indirizzi:</p>
<pre tabindex="0"><code>http://localhost
</code></pre><p>Se invece stai configurando un web server remoto, allora dovrai inserire il tuo indirizzo IP</p>
<pre tabindex="0"><code>http://your_server_ip
</code></pre><p>Dovresti ora vedere nel browser la pagina Web predefinita di Apache, che è disponibile a scopo informativo e di test. Dovrebbe assomigliare a qualcosa di simile a questo:</p>
<p><img src="images/small_apache_default_1804-728x1024.png" alt=""></p>
<p>Se vedi questa pagina, allora il tuo server web è ora installato correttamente e accessibile attraverso il tuo firewall.</p>
<h3 id="come-trovare-lindirizzo-ip-pubblico-del-tuo-server">Come trovare l&rsquo;indirizzo IP pubblico del tuo server</h3>
<p>Se stai configurando un web server remoto e non sai qual è l&rsquo;indirizzo IP pubblico del tuo server, ci sono diversi modi per trovarlo. Di solito è l&rsquo;indirizzo che usi per connetterti al tuo server tramite SSH.</p>
<p>Esistono diversi modi per farlo dalla riga di comando. Innanzitutto, puoi utilizzare gli strumenti <em>iproute2</em> per ottenere il tuo indirizzo IP digitando questo:</p>
<pre tabindex="0"><code>ip addr show eth0 | grep inet | awk &#39;{ print $2; }&#39; | sed &#39;s/\/.*$//&#39;
</code></pre><p>Questo ti restituirà due o tre righe. Sono tutti indirizzi corretti, ma il tuo computer potrebbe essere in grado di utilizzarne solo uno, quindi sentiti libero di provarli.</p>
<p>Un metodo alternativo consiste nell&rsquo;utilizzare l&rsquo;utility <code>curl</code> per contattare una parte esterna per dirti come <em>vede</em> il tuo server. Questo viene fatto chiedendo a un server specifico qual è il tuo indirizzo IP:</p>
<pre tabindex="0"><code>sudo apt install curl
curl http://icanhazip.com
</code></pre><p>Indipendentemente dal metodo utilizzato per ottenere il tuo indirizzo IP, digitalo nella barra degli indirizzi del tuo browser web per visualizzare la pagina Apache predefinita.</p>
<h2 id="passaggio-2-installazione-di-mysql">Passaggio 2: installazione di MySQL</h2>
<p>Ora che hai il tuo server web attivo e funzionante, è il momento di installare MySQL. MySQL è un sistema di gestione di database. Fondamentalmente, organizzerà e fornirà l&rsquo;accesso ai database in cui il tuo sito può archiviare informazioni.</p>
<p>Ancora una volta, utilizziamo <code>apt</code> per acquisire e installare questo software:</p>
<pre tabindex="0"><code>sudo apt install mysql-server
</code></pre><p><strong>Nota</strong> : in questo caso, non è necessario eseguire <code>sudo apt update</code> prima del comando. Questo perché di recente l&rsquo;hai eseguito nei comandi sopra per installare Apache. L&rsquo;indice del pacchetto sul tuo computer dovrebbe essere già aggiornato.</p>
<p>Anche questo comando ti mostrerà un elenco dei pacchetti che verranno installati, insieme alla quantità di spazio su disco che occuperanno. Entra <code>Y</code> (o <em>S</em>) per continuare.</p>
<p>Al termine dell&rsquo;installazione, esegui un semplice script di sicurezza preinstallato con MySQL che rimuoverà alcune pericolose impostazioni predefinite e bloccherà l&rsquo;accesso al tuo sistema di database (Se sei in locale non è necessario). Avvia lo script interattivo eseguendo:</p>
<pre tabindex="0"><code>sudo mysql_secure_installation
</code></pre><p>Questo ti chiederà se vuoi configurare il <code>VALIDATE PASSWORD PLUGIN</code>.</p>
<p><strong>Nota:</strong> l&rsquo;abilitazione di questa funzione è una sorta di chiamata di giudizio. Se abilitato, le password che non corrispondono ai criteri specificati verranno rifiutate da MySQL con un errore. Ciò causerà problemi se si utilizza una password debole insieme al software che configura automaticamente le credenziali utente di MySQL, come i pacchetti Ubuntu per phpMyAdmin. È sicuro lasciare la convalida disabilitata, ma dovresti sempre usare password complesse e univoche per le credenziali del database.</p>
<p>Rispondi <code>Y</code> per sì o per qualsiasi altra cosa per continuare senza abilitare.</p>
<pre tabindex="0"><code>VALIDATE PASSWORD PLUGIN can be used to test passwords
and improve security. It checks the strength of password
and allows the users to set only those passwords which are
secure enough. Would you like to setup VALIDATE PASSWORD plugin?

Press y|Y for Yes, any other key for No:
</code></pre><p>Se rispondi &ldquo;sì&rdquo;, ti verrà chiesto di selezionare un livello di convalida della password. Tieni presente che se inserisci <code>2</code>, il livello più forte, riceverai errori quando tenti di impostare una password che non contenga numeri, lettere maiuscole e minuscole e caratteri speciali o che sia basata su parole comuni del dizionario.</p>
<pre tabindex="0"><code>There are three levels of password validation policy:

LOW    Length &gt;= 8
MEDIUM Length &gt;= 8, numeric, mixed case, and special characters
STRONG Length &gt;= 8, numeric, mixed case, special characters and dictionary                  file

Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 1
</code></pre><p>Indipendentemente dal fatto che tu abbia scelto di impostare <code>VALIDATE PASSWORD PLUGIN</code>, il tuo server ti chiederà successivamente di selezionare e confermare una password per l&rsquo; utente <strong>root</strong> MySQL. Questo non deve essere confuso con il <strong>root di sistema</strong>. L&rsquo; utente <strong>root del database</strong> è un utente amministrativo con privilegi completi sul sistema del database. Anche se il metodo di autenticazione predefinito per l&rsquo;utente root MySQL dispensa l&rsquo;uso di una password, <strong>anche quando ne è impostata una</strong> , dovresti definire qui una password complessa come misura di sicurezza aggiuntiva. Ne parleremo tra un momento.</p>
<p>Se hai abilitato la convalida della password, ti verrà mostrata la sicurezza della password per la password di root che hai appena inserito e il tuo server ti chiederà se vuoi cambiare quella password. Se sei soddisfatto della tua password attuale, digita <code>N</code>:</p>
<pre tabindex="0"><code>Using existing password for root.

Estimated strength of the password: 100
Change the password for root ? ((Press y|Y for Yes, any other key for No) : n
</code></pre><p>Per il resto delle domande, premere <code>Y</code> e premere <code>ENTER</code> ad ogni prompt. Ciò rimuoverà alcuni utenti anonimi e il database di test, disabiliterà gli accessi root remoti e caricherà queste nuove regole in modo che MySQL rispetti immediatamente le modifiche apportate.</p>
<p>Al termine, verifica se riesci ad accedere alla console MySQL digitando:</p>
<pre tabindex="0"><code>sudo mysql
</code></pre><p>Questo si collegherà al server MySQL come utente <strong>root</strong> del database amministrativo, che viene dedotto dall&rsquo;uso di <code>sudo</code> quando si esegue questo comando. Dovresti vedere un output come questo:</p>
<pre tabindex="0"><code>OutputWelcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 5
Server version: 5.7.34-0ubuntu0.18.04.1 (Ubuntu)

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

mysql&gt;
</code></pre><p>Per uscire dalla console MySQL, digita:</p>
<pre tabindex="0"><code>exit
</code></pre><p>Tieni presente che non è necessario fornire una password per connettersi come utente <strong>root</strong> , anche se ne è stata definita una durante l&rsquo;esecuzione dello  <code>mysql_secure_installation</code>. Questo perché il metodo di autenticazione predefinito per l&rsquo;utente MySQL amministrativo è <code>unix_socket</code> invece di <code>password</code>. Anche se all&rsquo;inizio potrebbe sembrare un problema di sicurezza, rende il server del database più sicuro perché gli unici utenti autorizzati ad accedere come utente <strong>root</strong> MySQL sono gli utenti del sistema con privilegi sudo che si connettono dalla console o tramite un&rsquo;applicazione in esecuzione con gli stessi privilegi. In termini pratici, ciò significa che non sarai in grado di utilizzare l&rsquo;utente <strong>root</strong> del database amministrativo per connetterti dalla tua applicazione PHP. L&rsquo;account MySQL funge da salvaguardia, nel caso in cui il metodo di autenticazione predefinito venga modificato da <code>unix_socket</code> a <code>password</code>.</p>
<p>Per una maggiore sicurezza, è meglio disporre di account utente dedicati con privilegi meno estesi impostati per ogni database, soprattutto se prevedi di avere più database ospitati sul tuo server, ma su questo creerò altre guide più dettagliate in futuro.</p>
<p>Il tuo server MySQL è ora installato e protetto. Vediamo ora come installare PHP, il componente finale nello stack LAMP.</p>
<h2 id="passaggio-3-installazione-di-php">Passaggio 3: installazione di PHP</h2>
<p>PHP è il componente della configurazione che elaborerà il codice per visualizzare il contenuto dinamico. Può eseguire script, connettersi ai tuoi database MySQL per ottenere informazioni e consegnare il contenuto elaborato al tuo server web in modo che possa mostrare i risultati ai tuoi visitatori.</p>
<p>Ancora una volta, sfrutta il sistema apt per installare PHP. Oltre al pacchetto php, dovrai anche integrare libapache2-mod-php in Apache e il pacchetto php-mysql per consentire a PHP di connettersi ai database MySQL. Esegui il comando seguente per installare tutti e tre i pacchetti e le relative dipendenze:</p>
<pre tabindex="0"><code>sudo apt install php libapache2-mod-php php-mysql
</code></pre><p>Questo dovrebbe installare PHP senza problemi. Lo testeremo tra un momento.</p>
<h3 id="modifica-dellindice-della-directory-di-apache-opzionale">Modifica dell&rsquo;indice della directory di Apache (opzionale)</h3>
<p>In alcuni casi, vorrai modificare il modo in cui Apache serve i file quando viene richiesta una directory. Di default, se un utente richiede una directory dal server, Apache cercherà prima un file chiamato <code>index.html</code>. Ma noi vogliamo dire al server web di preferire i file PHP rispetto ad altri, per fare in modo che Apache cerchi <code>index.php</code> come primoo file. In caso contrario, un <code>index.html</code> inserito nella radice del documento dell&rsquo;applicazione avrà sempre la precedenza su un <code>index.php</code>.</p>
<p>Per apportare questa modifica, apri il file di configurazione <code>dir.conf</code> in un editor di testo a tua scelta. Qui useremo <code>nano</code>:</p>
<pre tabindex="0"><code>sudo nano /etc/apache2/mods-enabled/dir.conf
</code></pre><p>Dovresti vedere una cosa del genere:</p>
<pre tabindex="0"><code>&lt;IfModule mod_dir.c&gt;
    DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
&lt;/IfModule&gt;
</code></pre><p>Sposta il file di indice PHP (evidenziato sopra) nella prima posizione dopo la <code>DirectoryIndex</code>, in questo modo:</p>
<pre tabindex="0"><code>&lt;IfModule mod_dir.c&gt;
    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
&lt;/IfModule&gt;
</code></pre><p>Al termine, salva e chiudi il file premendo <code>CTRL+X</code>. Conferma il salvataggio digitando <code>Y</code> e quindi premi <code>ENTER</code> per verificare la posizione di salvataggio del file.</p>
<p>Successivamente, riavvia il server Web Apache in modo che le modifiche vengano riconosciute. Puoi farlo con il seguente comando:</p>
<pre tabindex="0"><code>sudo systemctl restart apache2
</code></pre><p>Puoi anche controllare lo stato del <code>apache2</code>servizio utilizzando <code>systemctl</code>:</p>
<pre tabindex="0"><code>sudo systemctl status apache2
</code></pre><pre tabindex="0"><code>Sample Output● apache2.service - The Apache HTTP Server
   Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)
  Drop-In: /lib/systemd/system/apache2.service.d
           └─apache2-systemd.conf
   Active: active (running) since Thu 2021-07-15 09:22:59 UTC; 1h 3min ago
 Main PID: 3719 (apache2)
    Tasks: 55 (limit: 2361)
   CGroup: /system.slice/apache2.service
           ├─3719 /usr/sbin/apache2 -k start
           ├─3721 /usr/sbin/apache2 -k start
           └─3722 /usr/sbin/apache2 -k start

Jul 15 09:22:59 ubuntu1804 systemd[1]: Starting The Apache HTTP Server...
Jul 15 09:22:59 ubuntu1804 apachectl[3694]: AH00558: apache2: Could not reliably determine the server&#39;s fully qualified domain name, using 127.0.1.1. Set the &#39;ServerName&#39; di
Jul 15 09:22:59 ubuntu1804 systemd[1]: Started The Apache HTTP Server.
</code></pre><p>Premi <code>Q</code> per uscire da questo stato.</p>
<h2 id="passaggio-4-configurazione-di-un-host-virtuale-consigliato">Passaggio 4: configurazione di un host virtuale (consigliato)</h2>
<p>Quando si utilizza il server Web Apache, è possibile utilizzare <em>host virtuali</em> per incapsulare i dettagli di configurazione e ospitare più di un dominio da un singolo server. Imposteremo ora un dominio di esempio chiamato <strong><strong>il_mio_dominio</strong></strong>, potrai sostituirlo con il nome del dominio che desideri utilizzare.</p>
<p>Apache su ha un blocco server abilitato per impostazione predefinita che è configurato per servire i documenti dalla cartella <code>/var/www/html</code>. Sebbene funzioni bene per un singolo sito, può diventare ingombrante se ospiti più siti. Invece di modificare <code>/var/www/html</code>, creiamo una struttura di directory all&rsquo;interno <code>/var/www</code> per <strong>il sito il_mio_dominio</strong>, lasciando <code>/var/www/html</code> come directory predefinita da servire se una richiesta del client non corrisponde a nessun altro sito.</p>
<p>Crea la directory per <strong><strong>il_mio_dominio</strong></strong> come segue:</p>
<pre tabindex="0"><code>sudo mkdir /var/www/il_mio_dominio
</code></pre><p>Quindi, assegna la proprietà della directory con la variabile di ambiente <code>$USER</code>, che fa riferimento all&rsquo;utente registrato corrente:</p>
<pre tabindex="0"><code>sudo chown -R $USER:$USER /var/www/il_mio_dominio
</code></pre><p>I permessi della tua directory principale web dovrebbero essere corretti se non hai modificato il suo valore umask, ma puoi comunque digitare:</p>
<pre tabindex="0"><code>sudo chmod -R 755 /var/www/il_mio_dominio
</code></pre><p>Ora crea una pagina di esempio <code>index.html</code> utilizzando <code>nano</code> o il tuo editor preferito:</p>
<pre tabindex="0"><code>nano /var/www/il_mio_dominio/index.html
</code></pre><p>All&rsquo;interno, aggiungi il seguente codice HTML di esempio:</p>
<pre tabindex="0"><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Il Mio Dominio&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Il mio dominio FUNZIONA!!!&lt;/h1&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Salva e chiudi il file quando hai finito.</p>
<p>Affinché Apache possa servire questo contenuto, è necessario creare un file host virtuale con le direttive corrette. Invece di modificare il file di configurazione predefinito che si trova <code>/etc/apache2/sites-available/000-default.conf</code> direttamente in, creiamone uno nuovo in :<code>/etc/apache2/sites-available/il_mio_dominio.conf</code></p>
<pre tabindex="0"><code>sudo nano /etc/apache2/sites-available/il_mio_dominio.conf
</code></pre><p>Incolla il seguente blocco di configurazione, che è simile a quello predefinito, ma aggiornato per la nostra nuova directory e nome di dominio:/etc/apache2/sites-available/il_mio_dominio.conf</p>
<pre tabindex="0"><code>&lt;VirtualHost *:80&gt;
    ServerAdmin webmaster@localhost
    ServerName il_mio_dominio
    ServerAlias www.il_mio_dominio
    DocumentRoot /var/www/il_mio_dominio
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
&lt;/VirtualHost&gt;
</code></pre><p>Nota che abbiamo aggiornato il <code>DocumentRoot</code> alla nostra nuova directory e <code>ServerAdmin</code> a un&rsquo;e-mail a cui l&rsquo; amministratore del sito <strong><strong>il_mio_dominio</strong></strong> può accedere. Abbiamo anche aggiunto due direttive: <code>ServerName</code>, che stabilisce il dominio di base che dovrebbe corrispondere a questa definizione di host virtuale e <code>ServerAlias</code>, che definisce altri nomi che dovrebbero corrispondere come se fossero il nome di base.</p>
<p>Salva e chiudi il file quando hai finito.</p>
<p>Abilitiamo ora il file con lo strumento <code>a2ensite</code>:</p>
<pre tabindex="0"><code>sudo a2ensite il_mio_dominio.conf
</code></pre><p>Disabilita infine il sito predefinito definito in <code>000-default.conf</code>:</p>
<pre tabindex="0"><code>sudo a2dissite 000-default.conf
</code></pre><p>Quindi, testiamo gli errori di configurazione:</p>
<pre tabindex="0"><code>sudo apache2ctl configtest
</code></pre><p>Dovresti vedere il seguente output:</p>
<pre tabindex="0"><code>OutputSyntax OK
</code></pre><p>Riavvia Apache per implementare le modifiche:</p>
<pre tabindex="0"><code>sudo systemctl restart apache2
</code></pre><p>Apache dovrebbe ora servire il tuo nome di dominio. Puoi testarlo navigando su <code>http://il_mio_dominio</code>, dovresti vedere la pagina HTML creata poco fa funzionare correttamente.</p>
<p>Con ciò, il tuo host virtuale è completamente configurato. Prima di apportare ulteriori modifiche o distribuire un&rsquo;applicazione, tuttavia, sarebbe utile testare in modo proattivo la configurazione PHP nel caso in cui ci siano problemi che dovrebbero essere risolti.</p>
<h2 id="passaggio-5-testare-lelaborazione-php-sul-server-web">Passaggio 5: testare l&rsquo;elaborazione PHP sul server Web</h2>
<p>Per verificare che il tuo sistema sia configurato correttamente per PHP, crea uno script PHP chiamato <code>info.php</code>. Affinché Apache possa trovare questo file e servirlo correttamente, deve essere salvato nella directory principale del Web.</p>
<p>Crea il file nella radice web che hai creato nel passaggio precedente eseguendo:</p>
<pre tabindex="0"><code>sudo nano /var/www/il_mio_dominio/info.php
</code></pre><p>Questo aprirà un file vuoto. Aggiungi il seguente testo, che è un codice PHP valido, all&rsquo;interno del file:</p>
<pre tabindex="0"><code>&lt;?php
phpinfo();
</code></pre><p>Al termine, salva e chiudi il file.</p>
<p>Ora puoi verificare se il tuo server web è in grado di visualizzare correttamente il contenuto generato da questo script PHP. Per provarlo, visita questa pagina nel tuo browser web. Avrai bisogno di nuovo dell&rsquo;indirizzo IP pubblico o del nome di dominio del tuo server.</p>
<p>L&rsquo;indirizzo che vorrai visitare è:</p>
<pre tabindex="0"><code>http://il_mio_dominio/info.php
</code></pre><p>La pagina a cui vieni dovrebbe assomigliare a questa:</p>
<p><img src="images/small_php_info_1804-796x1024.png" alt=""></p>
<p>Questa pagina fornisce alcune informazioni di base sul tuo server dal punto di vista di PHP. È utile per il debug e per garantire che le impostazioni vengano applicate correttamente.</p>
<p>Se riesci a vedere questa pagina nel tuo browser, il tuo PHP funziona come previsto.</p>
<p>Probabilmente vorrai rimuovere questo file dopo questo test perché potrebbe effettivamente fornire informazioni sul tuo server a utenti non autorizzati. Per fare ciò, esegui il seguente comando:</p>
<pre tabindex="0"><code>sudo rm /var/www/il_mio_dominio/info.php
</code></pre><p>Puoi sempre ricreare questa pagina se hai bisogno di accedere nuovamente alle informazioni in un secondo momento.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Ora che hai installato uno stack LAMP, hai molte scelte su cosa fare dopo. Hai installato una piattaforma che ti consentirà di installare la maggior parte dei tipi di siti Web e software Web sul tuo server.</p>
<p>Non ti resta che iniziare a installare o sviluppare i tuoi siti in PHP sul tuo nuovo LAMP stack!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Usare il browser senza mouse – Hacker Style</title>
			<link>https://albertoreineri.it/blog/usare-il-browser-senza-mouse-hacker-style/</link>
			<pubDate>Mon, 06 Jun 2022 09:34:22 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/usare-il-browser-senza-mouse-hacker-style/</guid>
			<description>Passiamo molto, moltissimo tempo sul browser ormai, e usare il mouse per la navigazione può essere frustranete per noi sviluppatori… Ma è possibile farne a meno e muoversi solamente utilizzando la tastiera, come un vero hacker! Vediamo come si fa.
Vimium Extension Per prima cosa devi scaricare l&amp;rsquo;estensione Vimium. Io uso Google Chrome, ma è presente anche per Firefox e Safari (se usi Brave o Edge non preoccuparti, puoi installare l&amp;rsquo;estensione per Google Chrome, funzionerà perfettamente perché questi browser condividono la stessa base).</description>
			<content type="html"><![CDATA[<p>Passiamo molto, moltissimo tempo sul browser ormai, e usare il mouse per la navigazione può essere frustranete per noi sviluppatori… Ma è possibile farne a meno e muoversi solamente utilizzando la tastiera, come un vero hacker! Vediamo come si fa.</p>
<h2 id="vimium-extension">Vimium Extension</h2>
<p>Per prima cosa devi scaricare l&rsquo;estensione <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noreferrer noopener">Vimium</a>. Io uso Google Chrome, ma è presente anche per <a href="https://addons.mozilla.org/it/firefox/addon/vimium-ff/" target="_blank" rel="noreferrer noopener">Firefox</a> e <a href="https://apps.apple.com/us/app/vimari/id1480933944?mt=12" target="_blank" rel="noreferrer noopener">Safari</a> (se usi Brave o Edge non preoccuparti, puoi installare l&rsquo;estensione per Google Chrome, funzionerà perfettamente perché questi browser condividono la stessa base).</p>
<p>Dopo averla installata potrete iniziare ad utilizzare il vostro browser direttamente dalla tasitera.</p>
<p>La base dei comandi è quella del software Vim, quindi se siete su Linux probabilmente vi troverete già a vostro agio, altrimenti non preoccupatevi, basterà qualche minuti di pratica per abbandonare il mouse per sempre!</p>
<p>Ecco i comandi principali per utilizzarlo:</p>
<h2 id="navigare-nella-pagina-corrente">Navigare nella pagina corrente:</h2>
<pre class="wp-block-code"><code>?       mostra l'elenco dei comandi disponibili (molto utile all'inizio)
h       scroll verso sinistra
j       scroll verso il basso
k       scroll verso l'alto
l       scroll verso destra
gg      scroll in cima alla pagina
G       scroll in fondo alla pagina
d       scroll in basso di metà pagina
u       scroll in alto di metà pagina
f       apri un link nella tab corrente
F       apri link in nuova tab
r       ricarica
gs      visualizza codice sorgente</code></pre>
<h2 id="navigare-in-altre-pagina">Navigare in altre pagina:</h2>
<pre class="wp-block-code"><code>o       Apri URL
O       Apri URL in nuova tab
b       Apri preferiti
B       Apri preferiti in nuova tab</code></pre>
<h2 id="cronologia">Cronologia:</h2>
<pre class="wp-block-code"><code>H       Vai a pagina precedente
L       Vai a pagina successiva</code></pre>
<h2 id="manipolazione-tabs">Manipolazione tabs:</h2>
<pre class="wp-block-code"><code>J, gT      Vai un tab verso sinistra
K, gt      Vai un tab verso destra
g0         Vai alla prima tab
g$         Vai all'ultima tab
t          Crea tab
x          Chiudi tab corrente
X          Riapri tab chiusa
T          Cerca fra le tab</code></pre>
<p>Ecco qua, questi sono solamente i comandi principali, ne esistono altri che puoi leggere qua: <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noreferrer noopener"><a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb">https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb</a></a></p>
<p>E questo è tutto! Non ti resta che provare ad utilizzarli e vedrai che in breve tempo potrai usare il browser totalmente in hacker style ?‍?</p>
<p>Come sempre <em>buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Amo Linux, ma sono ancora su Mac…</title>
			<link>https://albertoreineri.it/blog/amo-linux-ma-sono-ancora-su-mac/</link>
			<pubDate>Mon, 21 Mar 2022 22:19:04 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/amo-linux-ma-sono-ancora-su-mac/</guid>
			<description>Se mi segui da un po&amp;rsquo; di tempo saprai sicuramente quanto ami il mondo Linux! È un ambiente che talvolta mi fa venire il mal di testa, mi fa arrabbiare, mi costringe a bloccarmi sulle cose per capire come funzionano, ma ha anche la bellezza di sentirsi maggiormente padroni dei nostri pc, capire come funzionano sotto la scocca e poterli gestire meglio a nostro piacimento!
Ah, prima che qualcuno inizi ad insultarmi, in questo articolo parlo di Linux Desktop!</description>
			<content type="html"><![CDATA[<p>Se mi segui da un po&rsquo; di tempo saprai sicuramente quanto ami il mondo <a href="/blog/perche-dovremmo-tutti-passare-a-linux-e-perche-non-lo-facciamo/">Linux</a>! È un ambiente che talvolta mi fa venire il mal di testa, mi fa arrabbiare, mi costringe a bloccarmi sulle cose per capire come funzionano, ma ha anche la bellezza di sentirsi maggiormente padroni dei nostri pc, capire come funzionano sotto la scocca e poterli gestire meglio a nostro piacimento!</p>
<p>Ah, prima che qualcuno inizi ad insultarmi, in questo articolo parlo di Linux Desktop! Sui miei server utilizzo solamente linux da anni e gira tutto a meraviglia! (Anche sul server però non è tutto così automatico, bisogna studiare a capirne le basi, però poi una volta montato il tutto funziona alla grande!)</p>
<p>Bene, fatte le dovute spiegazioni entriamo in argomento!</p>
<h2 id="sono-ancora-su-mac-os8230">Sono ancora su Mac Os…</h2>
<p>Se avete guardato i miei ultimi video avrete notato sicuramente che ho filmato tutto quanto su <a href="/blog/nuovo-macbook-pro-2020-per-sviluppo-web/">Mac OS</a>. Ebbene si, dopo aver ripetutamente affermato di amare Linux sono ancora qua che utilizzo il mio MacBook Pro… Che razza di incoerente che sono…..</p>
<p>Non ho paura di ammetterlo, spesso me lo dico da solo, sono un incoerente e la cosa non mi piace affatto… Ma non è così semplice purtroppo.</p>
<p>Ho provato più volte a spostarmi definitivamente su Linux ma ho sempre dovuto fare marcia indietro, e ora credo di aver trovato la causa definitiva, ma da buon narratore te la rivelerò solamente alla fine di questo articolo. (certo se proprio sei impaziente puoi scorrere al volo alla conclusione…)</p>
<h2 id="perché-amo-linux">Perché amo Linux</h2>
<p>Ci sono molti motivi per cui amo il mondo di Linux, ma la cosa che preferisco è che si sgancia da ogni meccanismo di marketing che oggi ci affligge costantemente. Non abbiamo il tempo di acquistare qualcosa che questa è già stata rimpiazzata da un modello più performante. E infine i prodotti hanno una durata prefissata, l&rsquo;obsolescenza programmata ormai è un dato di fatto!</p>
<p>Questo non mi piace per niente…. Non ho voglia di perdere tempo guardando fantastiche presentazioni di prodotti che mi fanno venire voglia di sprecare i miei soldi per acquistare attrezzature spesso superflue…</p>
<p>Inoltre Linux è meritocratico! Più ne sai meno fatichi, tutto qua. Se sei alle prime armi lo odi con tutto il cuore, poi quando inizi a smanettarci a dovere allora non puoi più farne a meno! Sei padrone della tua macchina e puoi usarla esattamente come vuoi tu!</p>
<p>Infine in un mondo in cui la nostra privacy non ha più gran valore, i nostri meta dati sono sotto gli occhi di tutti e la sicurezza informatica sta diventando sempre più importante, l&rsquo;open source può garantire un buon livello di protezione! Non sono un fanatico della privacy, ho anche io un account gmail, però credo che bisogna avere la giusta consapevolezza, cercare di stare in una giusta via di mezzo fra l&rsquo;accedere a qualsivoglia contenuto con i nostri dati personali e il criptare ogni singolo file sul PC… Niente paranoie ma nemmeno troppo lassismo.</p>
<h2 id="perché-non-sono-ancora-passato-definitivamente-a-linux">Perché non sono ancora passato definitivamente a Linux</h2>
<p>Come dicevo all&rsquo;inizio però sono ancora sul Mac, anche se non sono pienamente soddisfatto… E tutto questo a causa dell&rsquo;hardware che ho a disposizione, almeno è quello che sto dicendo a me stesso in questo momento.</p>
<p>Tempo fa ho visto un video molto interessante di uno dei miei creator preferiti: Riccardo Palombo. In un video su YouTube diceva che “Non ci serve nuovo hardware, ma nuovo software”, o qualcosa di molto simile. Che titolo meraviglioso! Però nel mio caso non funziona purtroppo….</p>
<p>Fermi un attimo, Riccardo ha ragione e sono daccordo con lui sulla questione software, però ho notato che, almeno per me, l&rsquo;hardware è anche molto molto importante!</p>
<p>Se sto scrivendo dal mio MacBook Pro non è di certo per Mac Os, né per i software al suo interno. Non mi importa nemmeno più di Photoshop ultimamente, ma è per l&rsquo;hardware!</p>
<p>Tastiera, touchpad, schermo, batteria, microfono, ventole e tempi di ricarica sono buoni sul mio Mac, e sto parlando ancora della versione con Intel. Non c&rsquo;è niente di eccezzionale, ma tutto funziona alla grande, non ho mai avuto crash ed è un computer ben bilanciato e tutto sommato silenzioso (a parte quando lavoro con Docker…)</p>
<p>Oltre al Mac ho un notebook ASUS su cui utilizzo Linux, e sono arrivato alla conclusione che il punto più debole del pc è proprio l&rsquo;hardware… In particolare ho uno schermo penoso, delle ventole rumorosissime e una batteria ridicola…</p>
<p>Certo non è il notebook giusto da utilizzare con Linux, ma quando l&rsquo;ho comprato non pensavo che sarei diventato pinguino dipendente ? ?.</p>
<p>Col Mac invece posso lavorare serenamente senza paura di finire la batteria senza accorgermene, potendo registrare il mio podcast direttamente dal microfono del laptop senza attaccare niente di esterno (anche perché non ha grandi porte ?) e posso arrivare a sera con gli occhi ancora sani e non lacrimanti come quando uso l&rsquo;ASUS….</p>
<p>L&rsquo;unico modo con cui lavoro bene con l&rsquo;ASUS è usandolo come se fosse un pc fisso. Ci attacco tastiera, mouse e schermo esterni, lo chiudo e mi scordo di avere un notebook, allora devo dire che gira molto bene.</p>
<p>Purtroppo però per il mio stile di vita è fondamentale avere un laptop su cui potermi fidare. Spesso mi sposto per qualche giorno in montagna dove non ho grosso spazio disponibile, e per il momento il Mac è veramente comodo!</p>
<p>Vantaggi: con un solo caricatore posso caricare Mac, Smartphone e iPad (con connettore usbc-lightning), posso usare l&rsquo;iPad come secondo schermo senza collegare nessun cavo e posso fare a meno del mouse perché il touchpad è una vera bomba!</p>
<h2 id="conclusione">Conclusione</h2>
<p>E voilà, tutto qua! Perciò ora sono ancora imprigionato nel mondo Apple. Per carità, se mettessi da parte i concetti ideologici allora potrei rimanere così a vita, ma il marketing pompante, l&rsquo;overpricing e il fattore “moda” non mi fanno sentire del tutto a mio agio…</p>
<p>Come posso risolvere? Dovrei provare a mettere le mani su un bel ThinkPad oppure un XPS e vedere come mi trovo, ma al momento non ho il budget disponibile per fare questo test…</p>
<p>C&rsquo;è anche da dire che scegliere un laptop per Linux non è così facile…. Stanno nascendo aziende specializzate in notebook Linux, come la spagnola Slimbook, ma devo studiare meglio i loro prodotti prima di lanciarmi nell&rsquo;acquisto.</p>
<p>Alla fine mi basterebbe un notebook con 4 pezzi di qualità: tastiera, touchpad, batteria e schermo. Purtroppo però capita spesso che i laptop windows pompino molto su processore e ram e meno sull&rsquo;esperienza d&rsquo;uso dell&rsquo;utente, che per noi programmatori è importantissima, almeno per me.</p>
<p>Se devo passare dieci ore al giorno al PC, deve almeno essere carino e piacevole da usare!</p>
<p>Questo è quanto per ora, appena metterò le mani su un ThinkPad vi farò sapere di più!</p>
<p>Keep Coding ?</p>
]]></content>
		</item>
		
		<item>
			<title>Come creare un effetto Overlay in CSS</title>
			<link>https://albertoreineri.it/blog/come-creare-un-effetto-overlay-in-css/</link>
			<pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-creare-un-effetto-overlay-in-css/</guid>
			<description>Personalmente utilizzo moltissimo gli overlay per migliorare la leggibilità del testo sopra un&amp;rsquo;immagine, ma che cos&amp;rsquo;è questo overlay?
In poche parole non è nient&amp;rsquo;altro che un livello intermedio fra l&amp;rsquo;immagine e il testo, un livello che va &amp;lsquo;opacizzare&amp;rsquo; l&amp;rsquo;immagine per rendere più leggibile il testo.
Logicamente con l&amp;rsquo;overlay il testo risulta molto più leggibile, e secondo me l&amp;rsquo;immagnie è anche meno impattante, meno fastidiosa.
Farlo non è affatto difficile.
Come si fa Basterà recarci all&amp;rsquo;interno del contenitore dell&amp;rsquo;immagine, in questo caso nel div con classe sidebar e aggiungere un elemento chiamato &amp;ldquo;overlay&amp;rdquo;</description>
			<content type="html"><![CDATA[<p>Personalmente utilizzo moltissimo gli overlay per migliorare la leggibilità del testo sopra un&rsquo;immagine, <strong>ma che cos&rsquo;è questo overlay?</strong></p>
<p>In poche parole non è nient&rsquo;altro che un <strong>livello intermedio fra l&rsquo;immagine e il testo</strong>, un livello che va &lsquo;opacizzare&rsquo; l&rsquo;immagine per rendere più leggibile il testo.</p>
<p>Logicamente <strong>con l&rsquo;overlay il testo risulta molto più leggibile</strong>, e secondo me l&rsquo;immagnie è anche meno impattante, meno fastidiosa.</p>
<p>Farlo non è affatto difficile.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/KiZMQCs0SSg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="come-si-fa">Come si fa</h2>
<p>Basterà recarci all&rsquo;interno del contenitore dell&rsquo;immagine, in questo caso nel <em>div</em> con classe <em>sidebar</em> e aggiungere un elemento chiamato &ldquo;<em>overlay</em>&rdquo;</p>
<pre tabindex="0"><code> &lt;div class=&#34;sidebar&#34; style=&#34;background:url(&#39;https://images.unsplash.com/photo-1534067783941-51c9c23ecefd?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80&#39;)&#34;&gt;
        &lt;div class=&#34;overlay&#34;&gt;&lt;/div&gt;
        &lt;div class=&#34;sidebar-inner&#34;&gt;
            &lt;div class=&#34;site-header&#34;&gt;
                &lt;h2&gt;Nome Sito Web&lt;/h2&gt;
                &lt;i&gt;Lorem ipsum dolor sit amet&lt;/i&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre><p>Con l&rsquo;html siamo a posto, ora spostiamoci nel nostro file <strong>CSS</strong> e dobbiamo solamente creare questa classe:</p>
<pre tabindex="0"><code>.overlay{
    position: absolute;
    top:0;
    left: 0;
    right: 0;
    bottom:0;
    background-color: rgba(0, 0, 0, 0.4);
    z-index: 2;
    width: 100%;
    height: 100%;
}
</code></pre><p><em><strong>E Voilà! Tutto finito!</strong></em></p>
<p>Ora non resta che personalizzarla a piacere, cambiando il colore e il livello di opacità.</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Video Tutorial e Podcast, sono tornato!</title>
			<link>https://albertoreineri.it/blog/video-tutorial-e-podcast-sono-tornato/</link>
			<pubDate>Tue, 28 Dec 2021 20:32:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/video-tutorial-e-podcast-sono-tornato/</guid>
			<description>Buongiorno a tutti!
Sono ancora qui, non sono sparito del tutto, sono però stato preso da moltissime cose quest&amp;rsquo;anno e ho avuto troppo poco tempo da dedicare a questo progetto, ma eccomi di nuovo qua!
Alberto Reineri è un progetto che mi sta particolarmente a cuore perché mi ha accompagnato nelle fasi iniziali della mia carriera da freelancer e sebbene non abbia mai fatto numeroni enormi mi ha sempre dato grandi soddisfazioni!</description>
			<content type="html"><![CDATA[<p>Buongiorno a tutti!</p>
<p><strong>Sono ancora qui,</strong> non sono sparito del tutto, sono però stato preso da moltissime cose quest&rsquo;anno e ho avuto troppo poco tempo da dedicare a questo progetto, ma eccomi di nuovo qua!</p>
<p><strong>Alberto Reineri</strong> è un progetto che mi sta particolarmente a cuore perché mi ha accompagnato nelle fasi iniziali della mia carriera da <strong>freelancer</strong> e sebbene non abbia mai fatto numeroni enormi mi ha sempre dato grandi soddisfazioni!</p>
<p>Viviamo in un mondo dove bisogna sfondare per fare notizia, ma secondo me avere migliaia di ascolti al podcast è un dato molto positivo, così come sono positive ulitmamente le visualizzazioni dei miei video.</p>
<p>Quest&rsquo;anno <strong>ho fatto un mucchio di cose</strong>: ho ampliato le mie collaborazioni lavorative, ho dedicato molto tempo ad un side project che ha iniziato ad ingranare abbastanza bene e oltre al lavoro ho ristrutturato casa e sono andato a vivere da solo e mi sono comprato un Van per distrarmi ogni tanto dal lavoro!</p>
<blockquote class="wp-block-quote">
  <p>
    Ma andiamo al sodo, qua si parla di programmazione, e che cavolo!
  </p>
</blockquote>
<p>Bene, visto che siamo in periodo di <strong>buoni propositi</strong> ne approfitto per fare pubblicamente i miei, così se non riuscirò a mantenerli avrete diritto di cazziarmi a dovere!</p>
<p>Quest&rsquo;anno vorrei risvegliare un pochino il progetto <strong>Alberto Reineri!</strong> Non è così semplice perché è un progetto che comprende:</p>
<ul>
<li>Blog</li>
<li>YouTube</li>
<li>Podcast</li>
</ul>
<p>Inoltre per **fare un video tutorial **non basta accendere la camera e filmare, bisogna prepararsi prima tutto quanto per evitare di andare fuori tema e fare capire come si deve all&rsquo;utente ciò che si sta facendo, e la cosa richiede veramente molto molto tempo! Ma se tutti i tasselli andranno al posto giusto potrei riucirci, e lo farei molto volentieri!</p>
<p>Ma per far partire un canale di contenuti bisogna appunto avere i contenuti, quindi di cosa parlerò? Non posso parlare per il lungo periodo perché non si sa mai, ma sicuramente <strong>approfondirò</strong> questi <strong>argomenti</strong>:</p>
<ul>
<li>PHP</li>
<li>Framework</li>
<li>WordPress</li>
<li>Server</li>
</ul>
<p>Oltre a questi temi molto tecnici vorrei anche iniziare a <strong>parlare del mondo in cui viviamo noi programmatori</strong>, quello della tecnologia. Facciamo codice ogni giorno, ma lo facciamo su un computer che è connesso a una rete e che ha alle spalle tutto un mondo fantastico, nel bene e nel male, perciò mi piacerebbe parlare anche di:</p>
<ul>
<li>News del mondo Tech</li>
<li>Hardware</li>
<li><strong>LINUX</strong></li>
</ul>
<p>Eh già, ho scritto <strong>linux</strong> tutto maiuscolo perché sto studiamo questo mondo da un paio d&rsquo;anni e ho da poco deciso di abbandonare** Mac Os <strong>e passare completamente al mondo dell&rsquo;open source! (Non ho fatto fuori il mio</strong> Macbook Pro**, non ho ancora provato un laptop con batteria migliore, anche se non fa miracoli…).</p>
<p>Molto bene, i miei buoni propositi li ho fatti, ora vediamo se riuscirò a mantenerli! Ci vedremo presto con un nuovo <a href="https://www.youtube.com/channel/UCIQ-OOUIMnW5M_B3dGF65yg" target="_blank" rel="noreferrer noopener"><strong>Video</strong></a> e un nuovo episodiqo del <a href="https://open.spotify.com/show/546eUw3PsRI1HUGbBUeghC" target="_blank" rel="noreferrer noopener"><strong>Podcast</strong></a>!</p>
<p><em>Buon anno e buon codice!</em></p>
<p>Ciao!</p>
]]></content>
		</item>
		
		<item>
			<title>Produttività – L’importanza di un metodo di lavoro</title>
			<link>https://albertoreineri.it/blog/produttivit%C3%A0-limportanza-di-un-metodo-di-lavoro/</link>
			<pubDate>Sat, 23 Oct 2021 20:22:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/produttivit%C3%A0-limportanza-di-un-metodo-di-lavoro/</guid>
			<description>Oggi esco leggermente dal classico tema sviluppo software puro per parlare qualcosa che riguarda l’intero mondo del lavoro e che purtroppo è spesso sottovalutato, mentre dovrebbe essere la base di tutto: Il metodo di lavoro.
Ogni tipo di attività ha bisogno di un metodo per potersi esprimere nel migliore dei modi, dal classico negozio al dettaglio alle agenzie web.
Sto collaborando con molte attività come consulente esterno e mi sono accorto che pochissime applicano un metodo di lavoro serio e ottimizzato.</description>
			<content type="html"><![CDATA[<p>Oggi esco leggermente dal classico tema sviluppo software puro per parlare qualcosa che riguarda l’intero mondo del lavoro e che purtroppo è spesso sottovalutato, mentre dovrebbe essere la base di tutto: <em><strong>Il metodo di lavoro.</strong></em></p>
<p>Ogni tipo di attività ha bisogno di un metodo <strong>per potersi esprimere nel migliore dei modi</strong>, dal classico negozio al dettaglio alle agenzie web.</p>
<p>Sto collaborando con molte attività come consulente esterno e mi sono accorto che pochissime applicano un metodo di lavoro serio e ottimizzato. Questo causa spesso problemi nella <strong>gestione del flusso di lavoro.</strong></p>
<p>Ogni business ha un focus principale e una serie di attività che ci girano attorno.</p>
<p>Io per esempio realizzo siti web e software personalizzati, ma attorno a questo devo occuparmi anche della gestione di email e telefonate, di immagazzinamento e gestione dei dati dei miei clienti, di fatture e tasse etc…</p>
<p>Spesso noto che molte aziende si concentrano moltissimo sul focus, finendo poi per perdersi nelle attività di corollario, spesso pensate come meno importanti e quindi lasciate a se stesse, senza troppe preoccupazioni.</p>
<p>Questo porta un <strong>gran disordine in azienda</strong> e alla lunga provoca ritardi nelle consegne, attività eseguite in modo errato, difficoltà di gestione nel tempo e molti altri effetti negativi che minano il buon nome aziendale.</p>
<p>Voglio quindi cercare di indicare alcuni buoni consigli che ho riscontrato nella mia attività, sperando che possano essere di aiuto ad altri come lo sono stati per me.</p>
<h2 id="1-avere-un-buon-calendario">1. Avere un buon calendario</h2>
<p><em>Ogni giornata ha un numero limitato di ore, e spesso illimitate attività da svolgere…</em></p>
<p>Gestire in **maniera efficiente il proprio calendario **può fare veramente la differenza.</p>
<p>Non dico di diventare pazzi e segnare ogni singola attività della giornata, ma organizzare tutti gli impegni, appuntamenti e telefonate in un <strong>calendario visivo</strong> può dare grande aiuto nella gestione delle proprie giornate.</p>
<p>In questo modo è più semplice gestire appuntamenti e video call, senza ritardi e senza dover rispondere alle mail alle 11 di sera.. Il calendario è la base di un buon metodo di lavoro.</p>
<h2 id="2-email-non-è-un-task-manager">2. Email non è un task manager</h2>
<p><strong>Tutti siamo sommersi dalle email.</strong> Affidarsi a un buon client di posta è molto importante, ma lo è anche ricordarsi che questo non è un software studiato per gestire i task.</p>
<p>Lasciare al client il compito di segnalarci le prossime attività, magari segnando una mail come non letta finché l’attività non verrà svolta può funzionare per piccoli carichi di lavoro, ma se si gestiscono più indirizzi e più clienti su più progetti allora le cose possono sfuggirci di mano…</p>
<p>Meglio <strong>lasciare al client mail il compito di ricevere e farci leggere le email,</strong> e spostare** le attività da svolgere su un altro software**.</p>
<p>Io mi trovo molto bene con l’integrazione fra <a href="https://mail.google.com/mail/u/0/" target="_blank" rel="noreferrer noopener">Gmail</a>, Google Task e Google Calendar. Sono ben integrati, graficamente carini e allegri e permettono di gestire molto bene il flusso di lavoro. Inoltre sono Free!?</p>
<h2 id="3-email-o-chat">3. Email o chat?</h2>
<p>Molte aziende stanno <strong>abbandonando le email per la gestione dei progetti interni a favore delle chat</strong>, perchè sono più rapide ed immediate.</p>
<p>Questo per mia esperienza funziona molto bene su <strong>gruppi medio piccoli</strong> e <strong>all’interno</strong> dell’azienda.</p>
<p>Pensare di utilizzare chat di gruppo su grandi progetti <strong>senza possibilità di isolare la tipologia degli argomenti</strong> rischia di diventare problematico.</p>
<p>Per quanto mi riguarda dico “Meglio le email”, ma molti parlano bene di servizi come <strong><a href="https://slack.com/intl/it-it/" target="_blank" rel="noreferrer noopener">slack</a></strong>, ma li ho utilizzati ancora troppo poco per poterli giudicare.</p>
<h2 id="4-un-buon-software-gestionale-scalabile">4. Un buon software gestionale scalabile</h2>
<p><em>Questo è il punto più importante di tutti!</em></p>
<p>Da sviluppatore di software sono un amante dell’utilizzo di app per la gestione aziendale, e ne ho realizzata una anche io (progetto abbandonato… si chiamava ORange CRM), ad uso interno ma non solo.</p>
<p><strong>I software ci vengono incontro aiutandoci moltissimo nella gestione delle nostre attività.</strong></p>
<p>Pensare di gestire Fatture in entrata, Fatture in uscita, Anagrafica Clienti, Progetti da realizzare, Task dei vari progetti, Account dei vari progetti etc… solamente con un sistema di <strong>file Word e sottocartelle</strong> è impensabile e <strong>deleterio</strong>…</p>
<p>Un buon software può venirci in aiuto permettendoci di inserire tutti questi dati e di farli comunicare fra loro, in modo da avere le <strong>relazioni</strong> giuste fra i file, <strong>richiamarli</strong> all’istante e creare wordflow e <strong>statistiche</strong> in grado di far creescere al meglio il nostro business.</p>
<p>Sto utilizzando Notion per gestire questo aspetto e mi sto trovando molto bene.</p>
<p>Certo all’inizio sembra di dover dedicare più tempo alla gestione di un’attività che al svolgerla, ma qualndo queste attività crescono esponenzialmente di numero allora gestirle bene diventa fondamentale.</p>
<h2 id="5-dividere-privato-e-business">5. Dividere privato e business</h2>
<p>Spesso accade di <strong>perdersi nel lavoro</strong> e dimenticare di avere anche una vita al di fuori…</p>
<p>Questo diventa **problematico su entrambi i fronti. **La vita sociale rischia di sparire e quella lavorativa di farci esplodere senza le giuste pause.</p>
<p>Saper staccare è molto <strong>importante</strong>, ma non così facile. Spesso mi capita di ricevere chiamate il sabato sera alle 20:00, ma anche la domenica o nei festivi.</p>
<p>La mia reazione standard è quella di ignorarle.</p>
<p><em><strong>C’è un tempo per ogni cosa diceva il buon vecchio Qoelet (la mia tesi in teologia torna a farsi sentire…)</strong></em></p>
<p>Se mi dedico al lavoro dal lunedì al venerdì dalle 8 di mattina alle 6 di sera, al di fuori di questo orario non voglio essere seccato, a meno che non si tratti di un urgenza, di qualcosa di serio.</p>
<h3 id="non-essere-troppo-fiscali">Non essere troppo fiscali</h3>
<p><strong>Non bisogna essere troppo fiscali</strong>, mi è capitato di gestire un sito su un pessimo server che è stato attaccato durante un weekend. In questo caso ho risposo e mi sono anche messo al lavoro per risolvere il problema. Non era un sito vetrina ma una delle più grandi fonti di entrata dell’azienda quindi per loro era molto importante, e infine hanno riconosiuto e premiato il mio lavoro.</p>
<p><strong>Però al di la di casi particolari cerco di essere il più duro possibile su questo.</strong></p>
<p><em><strong>Dopo le 6 mi faccio i fatti miei ??</strong></em></p>
<p>Sul lato pratico questo si traduce in</p>
<ul>
<li>Due numeri di telefono</li>
<li>Due client di posta</li>
<li>Due computer</li>
</ul>
<p>Questo sdoppiamento è avvenuto <strong>gradualmente</strong>. Man mano che mi sono accorto che le mie due vite (personale e lavorativa) si intrecciavano troppo ho deciso prima di suddividere le email, poi i telefoni e infine anche i computer.</p>
<p>In questo modo sul lavoro ho i miei “attrezzi”, e nel tempo libero ne utilizzo altri, senza avere richiami fra uno e l’altro (non leggo le mail aziendali sul mio notebook del tempo libero). Questo ha cambiato notevolmente il mio metodo di lavoro.</p>
<p>** Curiosità: ho parlato molto di notebook apple vs notebook con Widnows, in pratica uso il Mac per lavoro e un Asus Vivobook Pro per giocare e passare il tempo libero.</p>
<h2 id="6-convivere-con-la-complessità">6. Convivere con la complessità</h2>
<p><strong>Tendenzialmente sono un minimalista</strong>. Amo l’ordine e tendo a cercare la perfezione, ma non sempre è possibile.</p>
<p>Impazzire dietro l’idea di “<em><strong>avere solo l’essenziale</strong></em>” può fare più danno che altro nel mondo aziendale.</p>
<p>Pensare al ribasso non può portare molto lontano. Occorre iniziare ad accettare grandi quantità di carichi di lavoro e grandi quantità di dati che potranno essere gestiti nel migliore dei modi possibili, ma mai alla perfezione.</p>
<p>Occorre** rilassarsi dal punto di vista della perfezione e accettare un po’ di caos**, senza lasciarsi andare al disordine però!</p>
<p><em><strong>Bisogna trovare la giusta via di mezzo.</strong></em></p>
<h2 id="7-aperti-ai-cambiamenti">7. Aperti ai cambiamenti</h2>
<p><em>Non bisogna essere troppo chiusi nel proprio ambiente.</em></p>
<p>Io utilizzo tutti i miei sistemi, ma lavorando con aziende diverse devo **adattarmi per forza di cose **di volta in volta ai metodi di questa azienda (per quanto spesso li trovo meno efficienti dei miei… ma sono un integralista della produttività quindi non conta…??)</p>
<p>Non bisogna andare in ansia nell’utilizzo di strategie e tecniche diverse, ma essere aperti ad accoglierle.</p>
<p>Dopo un breve test si può capire se sono migliori delle proprie, e quindi imparare da esse, oppure se al contrario non funzionano si può parlare con i propri collaboratori per cercare strade diverse.</p>
<p><strong>Perché l’importante non è solo il lavoro, ma anche il metodo attraverso il quale lo si svolge!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>Come scegliere quale linguaggio di programmazione imparare</title>
			<link>https://albertoreineri.it/blog/come-scegliere-quale-linguaggio-di-programmazione-imparare/</link>
			<pubDate>Thu, 29 Jul 2021 09:55:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-scegliere-quale-linguaggio-di-programmazione-imparare/</guid>
			<description>Il settore IT cambia in modo incredibilmente veloce. Tecnologie e linguaggi di programmazione che vanno di moda oggi diventeranno obsoleti domani. Le tendenze vanno e vengono e anche il mercato del lavoro è in continua evoluzione. Quindi, come scegliere quale linguaggio di programmazione imparare dopo? Per trovare la risposta giusta, devi prendere in considerazione molte cose, come ad esempio:
tendenze del settore, il mercato del lavoro, il tuo attuale set di abilità, i requisiti del tuo progetto, la disponibilità di risorse per l&amp;rsquo;apprendimento, e molti altri.</description>
			<content type="html"><![CDATA[<p>Il settore IT cambia in modo incredibilmente veloce. Tecnologie e linguaggi di programmazione che vanno di moda oggi diventeranno obsoleti domani. Le tendenze vanno e vengono e anche il mercato del lavoro è in continua evoluzione. Quindi, come scegliere quale linguaggio di programmazione imparare dopo? Per trovare la risposta giusta, devi prendere in considerazione molte cose, come ad esempio:</p>
<ul>
<li>tendenze del settore,</li>
<li>il mercato del lavoro,</li>
<li>il tuo attuale set di abilità,</li>
<li>i requisiti del tuo progetto,</li>
<li>la disponibilità di risorse per l&rsquo;apprendimento,</li>
<li>e molti altri.</li>
</ul>
<p>In questo articolo, vedremo un paio di suggerimenti su come scegliere il prossimo linguaggio di programmazione imparare. Non si tratta di regole rigide, ma di linee guida flessibili che puoi applicare in base alle tue esigenze.</p>
<h2 id="determina-i-tuoi-obiettivi">DETERMINA I TUOI OBIETTIVI</h2>
<p>Prima di fare qualsiasi altra cosa, la cosa più importante che devi fare è determinare i tuoi obiettivi. Pensa al motivo per cui vuoi imparare un nuovo linguaggio di programmazione e quale risultato finale vuoi ottenere. La domanda numero uno che devi porre a te stesso è se vuoi espandere le tue abilità verticalmente o orizzontalmente.</p>
<p>Se vuoi mettere il piede in una nuova area, devi espandere le tue conoscenze <em>orizzontalmente</em> . Un tipico esempio è quando sei uno sviluppatore front-end e vuoi diventare uno sviluppatore full-stack. Oppure, quando hai familiarità con un linguaggio back-end come Java e vuoi impararne un altro come Python. In questo caso, dovrai impostare un percorso di apprendimento che inizia a livello principiante.</p>
<p>Tuttavia, se vuoi acquisire conoscenze specifiche in un&rsquo;area che già conosci, devi pensare in <em>verticale</em> . Questo accade, ad esempio, quando sei uno sviluppatore Python e vuoi imparare, ad esempio, il machine learning. In questo caso, non è necessario iniziare da un livello principiante. Molte volte, non hai nemmeno bisogno di imparare un nuovo linguaggio di programmazione, ma solo nuove metodologie, framework, librerie o altri strumenti basati sulle conoscenze che già possiedi.</p>
<h2 id="valuta-il-tuo-attuale-set-di-abilità">VALUTA IL TUO ATTUALE SET DI ABILITÀ</h2>
<p>Quando hai fissato i tuoi obiettivi, il passo successivo è decidere come raggiungerli al meglio. Poiché esistono molti linguaggi e tecnologie di programmazione, capita spesso di poter raggiungere lo stesso obiettivo di apprendimento attraverso percorsi diversi.</p>
<p>Ad esempio, se vuoi diventare uno sviluppatore full-stack puoi scegliere tra diversi linguaggi di back-end come PHP, Java, Python o NodeJS. Tuttavia, se conosci già un linguaggio basata su C è più facile impararne un altro. Oppure, se sei un esperto di JavaScript front-end, puoi imparare NodeJS molto più velocemente di un linguaggio completamente nuovo come Python o Java.</p>
<p>Il modo migliore per ottenere un quadro realistico delle tue attuali conoscenze è fare un elenco di tutti i linguaggi, i framework, gli strumenti e le tecnologie che conosci. Se vuoi imparare un nuovo linguaggio di programmazione per trovare un lavoro, la tua lista delle competenze può anche servire come base per il tuo curriculum.</p>
<p>Se sai quali sono i tuoi obiettivi e quali conoscenze hai già, puoi passare al passaggio successivo: condurre un&rsquo;approfondita ricerca di mercato.</p>
<h2 id="ricerca-il-mercato">RICERCA IL MERCATO</h2>
<p>Conoscere i propri obiettivi ed essere consapevoli delle proprie capacità attuali è una cosa, ma per quanto riguarda il mercato? Può facilmente succedere che tu abbia impostato gli obiettivi giusti e scelto un linguaggio che sia in linea con le tue abilità, ma magari non c&rsquo;è una reale richiesta per questo…</p>
<p>Per evitare di sprecare il tuo tempo prezioso nell&rsquo;apprendimento di un nuovo linguaggio di programmazione che non interessa a nessuno, devi condurre ricerche di mercato. Ecco le risorse più importanti che vale la pena dare un&rsquo;occhiata.</p>
<h3 id="1-indice-tiobe">1. INDICE TIOBE</h3>
<p>Il <a href="https://www.tiobe.com/tiobe-index/">TIOBE Programming Community Index</a> è spesso utilizzato come standard del settore per determinare la popolarità dei linguaggi di programmazione. Viene pubblicato ogni mese e mostra come diversi linguaggi di programmazione hanno guadagnato o perso trazione rispetto al mese precedente. Pubblicano anche una breve analisi del settore ogni mese che riassume i cambiamenti più importanti che devi conoscere.<figure class="wp-block-image size-full"></p>
<p><img loading="lazy" decoding="async" width="850" height="425" src="/wp-content/uploads/2022/06/tiobe-community-index.jpeg" alt="" class="wp-image-508" srcset="/wp-content/uploads/2022/06/tiobe-community-index.jpeg 850w, /wp-content/uploads/2022/06/tiobe-community-index-768x384.jpeg 768w" sizes="(max-width: 850px) 100vw, 850px" /> </figure></p>
<h3 id="2-github-octoverse">2. GITHUB OCTOVERSE</h3>
<p><a href="https://octoverse.github.com/">GitHub Octoverse</a> è un report annuale che riassume le tendenze più importanti su GitHub. Ti fornisce una miriade di informazioni come:</p>
<ul>
<li>la popolarità dei linguaggi di programmazione,</li>
<li>i linguaggi in rapida crescita,</li>
<li>i migliori progetti open source,</li>
<li>le organizzazioni più attive,</li>
<li>i tag più popolari,</li>
<li>gli argomenti in rapida crescita,</li>
<li>e molti altri…</li>
</ul>
<p>È una risorsa eccellente e vale sicuramente la pena dare un&rsquo;occhiata prima di decidere come andare avanti con l&rsquo;apprendimento. Oltre al rapporto Octoverse pubblicato annualmente, GitHub ha anche una pagina <a href="https://github.com/explore">Explore</a> . Qui, GitHub pubblica quotidianamente i repository, gli argomenti, le app e i framework più di tendenza.</p>
<h3 id="3-stack-overflow-insights">3. STACK OVERFLOW INSIGHTS</h3>
<p>Puoi trovare molte informazioni utili su quale linguaggio di programmazione scegliere anche nel sottodominio <a href="https://insights.stackoverflow.com/">Insights di Stack Overflow . </a><a href="https://insights.stackoverflow.com/survey">Senza dubbio, il materiale più importante qui è il sondaggio annuale per gli sviluppatori</a> di Stack Overflow che contiene tutto ciò che potresti voler sapere sul settore.</p>
<p>Ad esempio, nel 2019, quasi 90.000 sviluppatori hanno partecipato al sondaggio di 20 minuti che copre diversi argomenti, dalle loro tecnologie preferite alle preferenze lavorative. Oltre al sondaggio annuale, puoi trovare analisi approfondite, report in primo piano e set di dati archiviati anche su Stack Overflow Insights.<figure class="wp-block-image size-full"></p>
<p><img loading="lazy" decoding="async" width="850" height="381" src="/wp-content/uploads/2022/06/stack-overflow-insights.jpeg" alt="" class="wp-image-509" srcset="/wp-content/uploads/2022/06/stack-overflow-insights.jpeg 850w, /wp-content/uploads/2022/06/stack-overflow-insights-768x344.jpeg 768w" sizes="(max-width: 850px) 100vw, 850px" /> </figure></p>
<h3 id="4-google-trend">4. GOOGLE TREND</h3>
<p><a href="https://trends.google.com/trends/">Google Trends</a> può aiutarti a scegliere quale linguaggio di programmazione imparare in tre modi diversi:</p>
<ol>
<li>Puoi controllare i dati storici fino al 2004, specificati dalla posizione.</li>
<li>Puoi confrontare la popolarità di due o più linguaggi di programmazione. Ad esempio, puoi eseguire una query C# vs. Java .</li>
<li>Oltre ai linguaggi di programmazione, puoi anche cercare la popolarità di tecnologie correlate come librerie JavaScript, framework o temi WordPress .</li>
</ol>
<p>In effetti, Google Trends è un potente strumento di ricerca che ti consente di eseguire query e confronti completamente unici, quanti ne desideri, e tutto gratuitamente.<figure class="wp-block-image size-full"></p>
<p><img loading="lazy" decoding="async" width="850" height="414" src="/wp-content/uploads/2022/06/google-trends-programming-languages.jpeg" alt="" class="wp-image-510" srcset="/wp-content/uploads/2022/06/google-trends-programming-languages.jpeg 850w, /wp-content/uploads/2022/06/google-trends-programming-languages-768x374.jpeg 768w" sizes="(max-width: 850px) 100vw, 850px" /> </figure></p>
<h3 id="5-piattaforme-di-ricerca-lavoro">5. PIATTAFORME DI RICERCA LAVORO</h3>
<p>Le piattaforme di lavoro non sono utili solo se stai cercando direttamente un lavoro, ma puoi anche utilizzarli per ricercare le tendenze del settore specifiche per il campo a cui ti rivolgi. Ad esempio, se vuoi imparare lo sviluppo di app cloud, puoi dare un&rsquo;occhiata ai lavori correlati per vedere quali linguaggi di programmazione, competenze e strumenti stanno cercando i datori di lavoro.</p>
<p>Oltre a siti di lavoro tradizionali come Subito o Indeed, puoi anche cercare lavori per programmatori nei seguenti luoghi:</p>
<ul>
<li>siti di lavoro remoti come <a href="https://weworkremotely.com/">We Work Remotely</a> ,</li>
<li>reti professionali come <a href="https://www.linkedin.com/">LinkedIn</a> ,</li>
<li>sezioni di lavoro in riviste online per sviluppatori come <a href="https://www.smashingmagazine.com/jobs/">Smashing Jobs</a> ,</li>
<li>newsletter professionali con una sezione di lavoro come <a href="https://javascriptweekly.com/">JavaScript Weekly</a> .</li>
</ul>
<p>Dopo aver ricercato un paio di lavori relativi al campo che vuoi esplorare, avrai una conoscenza aggiornata su ciò che le aziende stanno cercando.</p>
<h2 id="cerca-materiali-didattici">CERCA MATERIALI DIDATTICI</h2>
<p>Ora che conosci i tuoi obiettivi, le tue capacità e hai anche studiato il mercato, c&rsquo;è solo una cosa da fare. Devi verificare la disponibilità e la qualità dei materiali didattici relativi ai linguaggi di programmazione o alle tecnologie che ti interessano. I linguaggi popolari come Java o JavaScript hanno ampie risorse di apprendimento online, mentre le tecnologie o i framework più recenti non sono sempre ben coperti.</p>
<h2 id="quindi-quale-linguaggio-di-programmazione-imparare">QUINDI, QUALE LINGUAGGIO DI PROGRAMMAZIONE IMPARARE?</h2>
<p>Quale linguaggio di programmazione imparare, prima di tutto, dipende dai tuoi obiettivi professionali e dalle attuali competenze. Inoltre, devi anche tenere in considerazione le tendenze del mercato e la disponibilità di risorse di apprendimento.</p>
<p>Tuttavia, se dopo un po&rsquo; si scopre che un certo linguaggio di programmazione non ti piace, è una buona idea considerare di passare a uno diverso. Ciò che funziona per una persona potrebbe essere un incubo per un&rsquo;altra e viceversa, tutto dipende dalle tue esigenze.</p>
<p>Se vuoi dare un&rsquo;occhiata ad altre risorse di apprendimento per sviluppatori, puoi dare un&rsquo;occhiata anche alla sezione <a href="/guide">Guide</a> del blog.</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Perché dovremmo tutti passare a Linux, e perché non lo facciamo</title>
			<link>https://albertoreineri.it/blog/perch%C3%A9-dovremmo-tutti-passare-a-linux-e-perch%C3%A9-non-lo-facciamo/</link>
			<pubDate>Wed, 28 Jul 2021 20:30:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/perch%C3%A9-dovremmo-tutti-passare-a-linux-e-perch%C3%A9-non-lo-facciamo/</guid>
			<description>Linux non è solamente uno strumento, un qualcosa che ci permette di fare qualcosa. Dietro al mondo del pinguino c’è tutta una filosofia, una storia di libertà e democrazia assoluta, la voglia di comunione e condivisione, di essere indipendenti e capire cosa c’è dietro ciò che facciamo.
Il mondo dei computer è relativamente giovane. Negli ultimi decenni si è sviluppato in maniera esponenziale, diventando un fenomeno di massa senza avere il tempo di essere regolato correttamente dalla società.</description>
			<content type="html"><![CDATA[<p>Linux non è solamente uno <strong>strumento</strong>, un qualcosa che ci permette di fare qualcosa. Dietro al mondo del pinguino c’è tutta una <strong>filosofia</strong>, una storia di libertà e democrazia assoluta, la voglia di comunione e condivisione, di essere indipendenti e capire cosa c’è dietro ciò che facciamo.</p>
<p>Il mondo dei computer è relativamente giovane. Negli ultimi decenni si è sviluppato in maniera esponenziale, diventando un fenomeno di massa senza avere il tempo di essere regolato correttamente dalla società. Vedere aziende che incassano più di interi stati è una cosa pazzesca. <strong>Oggi le aziende tech detengono un potere enorme</strong>, quasi spaventoso.</p>
<p>Tutte le aziende tech guadagnano <strong>due</strong> volte: la prima quandono vendono il loro prodotto, la seconda quando rimangono in contatto con i prodotti venduti, o meglio con i loro clienti e <strong>seguirne le mosse</strong>, il modo di comportarsi, la vita. Oggi la maggior parte dei software hanno sistemi di tracciamento, spesso mascherati da sistemi di sicurezza. Già perché se bisogna proteggere l’utente, impedirgli di fare cose pericolose, bisogna sapere cosa sta facendo. Recentemente Chrome propone un sistema di sicurezza avanzata che tiene d’occhio ogni azione che l’utente sta facendo per proteggerlo. Controlla i file scaricati, i siti visualizzati e tutta l’attività online. Il fine è certamente nobile, però a che prezzo?</p>
<p>Tutto questo per <strong>l’utente medio</strong> può sembrare un gran vantaggio. Non deve preoccuparsi di niente, può cliccare su tutte le pubblicità per aumentare il suo conto corrente oppure le dimensioni del suo pene senza paura di beccarsi virus (in realtà se li becca lo stesso…). E tutto GRATIS!</p>
<p>Bè, in realtà tutto questo ha un prezzo <strong>elevatissimo</strong>. Provate a pensare a quando eravate bambini, quando ancora non sapevate cosa era sicuro e cosa no. Come avete imparato a crescere? Avete i genitori e i nonni che ancora oggi vi seguono, restano alle vostre spalle ad ogni vostra mossa dicendovi cosa è giusto e sbagliato oppure avete imparato a capire come comportarvi nel mondo e ora siete indipendenti? Spero che la risposta corretta sia la seconda.</p>
<p>Nel mondo reale avere qualcuno che ci spia continuamente è fastidioso, addirittura <strong>spaventoso</strong>, è una grandissima violazione dei diritti umani. Invece <strong>nel mondo online no</strong>, non ci facciamo caso, quasi non ce ne accorgiamo. Forse è perché non vediamo fisicamente qualcuno che ci controlla, anche se non è così difficile farlo, smanettando un po’ con le impostazioni e i termini di servizio si scoprono cose non proprio piacevoli.</p>
<p>Basterebbe quindi imparare ad <strong>utilizzare internet nel modo corretto</strong>, e una volta imparato abbandonare la <em>babysitter</em> di turno e procedere da soli.</p>
<h2 id="ma-perché-quasi-nessuno-lo-fa">Ma perché quasi nessuno lo fa?</h2>
<p>Perché <strong>siamo</strong> **rimasti bambini **nel mondo online, ci facciamo portare per mano ad ogni passo.</p>
<p>Partiamo dal fatto che è un mondo <strong>complicato</strong>. Forse a noi del settore può sembrare banale muoverci nel nostro mondo, ma per la maggior parte delle persone che utilizzano Chrome e MS Word fare qualcosa fuori dai loro schemi di base richiede uno sforzo enorme. Quindi ben vengano gli antivirus che mi bloccano se faccio stupidaggini, che mi riempiono la memoria di file inutili e mi distraggono con continui popup di offerte.</p>
<p>Se nel mondo reale è brutto farsi accompagnare mano nella mano ogni volta che si attraversa la strada, nel mondo online questo è <strong>comodo</strong>. A tutti piace essere <strong>coccolati</strong>, lasciare il lavoro pesante agli altri e crogiolarci nella tranquillità. Ma il prezzo da pagare per essere bambini potrà diventare altissimo, soprattutto nel lungo periodo.</p>
<p>Lasciare in mano ad aziende private il potere di decidere della nostra vita è spaventoso. Si è già visto come i social influenzino le elezioni, ma questo accadeva già con i giornali o con le prediche dei sacerdoti, è sempre capitato. Lasciare però un potere del genere nelle mani di pochi imprenditori liberi di muoversi a prescindere dal volere comune non è il massimo.</p>
<h2 id="veniamo-al-tecnico">Veniamo al tecnico</h2>
<p>Con Linux intendo tutta la community dell’open source, il mondo del FOSS (Free and Open Source Software). Certo ci sono software linux closed source, a pagamento, e bisogna ricordare che Free significa “libero”, non necessariamente Gratis. Inoltre Linux è solo il kernel, bisogna parlare di gnu-linux etc etc etc… Ok abbiamo capito però cosa voglio dire.</p>
<p>Linux è un altro mondo. Certo è ostico, chiuso, pieno di persone saccenti e talvolta scortesi, pronte ad insultarti se fai la domanda sbagliata, ma è <strong>libero</strong>.</p>
<p>Torniamo all’esempio del bambino. Per imparare bene è meglio un insegnante accondiscendente, che piuttosto che arrabbiarsi con te fa le cose al posto tuo oppure uno militaresco, deciso, pronto a urlarti in faccia pur di farti imparare? Non dico che sia sempre così, quando ero insegnante non sono mai stato di questo tipo, però possiamo pensare all’utente linux che ti risponde malamente come al professore bastardo che ti insulta, ma non per divertimento bensì per farti capire e migliorare.</p>
<p>In nostro mondo gira attorno ai computer, orami è così. È spaventoso per che una minuscola percentuale conosce veramente <strong>come questi computer funzionino</strong>. Le scuole pensano che sia sufficiente insegnare ad utilizzare Ms Word e voilà, in realtà sarebbe essenziale avere una nozione di base disponibile per tutti, almeno sul funzionamento di internet.</p>
<p>Se pensiamo ai motori delle auto non tutti sappiamo come funzionano nel dettaglio, ma sappiamo tutti che ruolo ha la benzina, come ricaricare una batteria, cambiare l’acqua e le candele. In realtà anche queste cose ormai non sono più di comune conoscenza, ma sembra che il mondo vada verso questa via, quella di chiamare qualcuno per ogni piccolo problemino, spesso utilizzando proprio la rete tramite un’app. Ma stiamo già sforando dall’argomento…</p>
<h2 id="perché-dovremmo-tutti-usare-linux">Perché dovremmo tutti usare linux</h2>
<p>Questo “<em>tutti</em>” non è inteso in senso globale, logicamente non si può pretendere che mia nonna utilizzi linux, anche se sarebbe figo, ma tutti noi leggermente più tecnici dovremmo iniziare ad utilizzarlo, vediamo perché:</p>
<h3 id="è-libero">È libero</h3>
<p>Ogni distro è nata con lo scopo di dare qualcosa agli utenti, non ai programmatori. Lo scopo di lucro quasi mai è al centro del mondo linux. Fare le cose per soldi o per passione è molto diverso.</p>
<h3 id="è-aperto">È aperto</h3>
<p>Linux è sinonimo di open source. Avere il codice aperto è garanzia di sicurezza e serietà, il fatto che chiunque possa dare un’occhiata “<em>sotto al cofano</em>” e controllare che tutto sia fatto come si deve è un grande vantaggio, sia in termini di sicurezza che di trasparenza. Se utilizzo un servizio con codice open source so esattamente cosa viene fatto dei miei dati, come vengono gestiti, come si comporta l’app a tutti i livelli. Inoltre se qualcuno nota una falla nel codice può segnalarlo agli sviluppatori in modo che questi possano intervenire. Non a caso Microsoft ultimamente si sta pian piano aprendo all’open source. Certo lo fa con uno scopo diverso rispetto al mondo linux, però questo approccio ha moltissimi vantaggi.</p>
<h3 id="è-democratico">È democratico</h3>
<p>Linux è per tutti. Esistono centinaia di distro, ognuna studiata per una tipologia specifica di utente, esistono migliaia di app disponibili per milioni di operazioni, c’è un mondo intero di sviluppatori che lavora con forte passione per rendere il mondo linux sempre migliore. Certo alcuni software proprietari molto utilizzati non sono disponibili per Linux, e questo impedisce a molti di entrare a farne parte. In primis MS Office e la suite di Adobe. Esisono però soluzioni alternative, il grosso problema è che le persone imparano ad utilizzare prima i software di MS e Adobe e poi si aspettano che le alternative Linux funzionino allo stesso identico modo. Non è così, sono mondi e visioni diverse. Se Gimp sembra complicato è perché si è imparato su Photoshop. Di recente ho parlato con un grafico che ha imparato tutto su Gimp e trova Photoshop incomprensibile…</p>
<h3 id="è-gratis">È Gratis</h3>
<p>Spesso la gente arriva a linux proprio per questo motivo, ma io ho voluto lasciarlo in fondo. Questo perché è un grande motivo, ma ce ne sono di ben più importanti. Non sempre poi deve essere gratis. Io sono molto affezionato ad Elementary OS, che ha adottato il “<em>Pay what you want</em>” come filosofia di fondo. In questo modo offre i suoi prodotti a chiunque al prezzo che decide l’utente.</p>
<p>È possibile scaricare la distro gratis, provarla e se si ritiene che funzioni bene si può effettuare un pagamento. Così è anche per le app, si possono scaricare e pagare quanto si vuole. È un sistema che personalmente mi piace moltissimo e credo sia pienamente in linea con la filosofia dell’open source. Se è un momentaccio posso comunque utiizzare tutto gratuitamente, però se me la sto passando bene posso essere riconoscente al team di EOS e decidere di pagare quanto posso permettermi. Il risultato è lo stesso, sta all’utente decidere come essere riconoscente per il lavoro del team.</p>
<h2 id="perché-non-passiamo-tutti-a-linux">Perché non passiamo tutti a Linux</h2>
<p>Lentamente, con calma e senza far troppo rumore il mondo Linux si sta diffondendo. Grazie ai social, a Youtube e ai vari forum sempre più persone si stanno avvicinando al sistema del pinguino, e la cosa mi fa molto piacere.</p>
<p>Rimangono però dei problemi di fondo ancora grandi da superare.</p>
<h3 id="personalizzazioni">Personalizzazioni</h3>
<p>Se il bello di linux è che posso personalizzarmelo come mi pare e piace, per alcuni questo può essere uno svantaggio. Gli utenti abituati ad accendere il computer e lavorare senza starci troppo dietro si trovano spiazzati dal dover fare qualcosa in più per mantenere la loro macchina.</p>
<h3 id="batteria">Batteria</h3>
<p>Linux è ancora esoso di risorse rispetto ai suoi competitor… Se un notebook con windows può arrivare a 12 ore di batteria, linux farà sempre peggio, almeno per il momento. Si sta lavorando anche su questo punto, però al momento è ancora in perdita. Per chi come me fa della durata della batteria un parametro fondamentale nella scelta di un laptop allora questo è un tasto dolente.</p>
<h3 id="hardware-decente">Hardware decente</h3>
<p>Trovare un laptop in grado di utilizzare al meglio linux non è facile. I problemi di driver non sono più altissimi, ma ci sono ancora. Bisogna controllare che tutti i componenti siano compatibili con linux. Esistono già alcune case che offrono laptop con ubuntu preinstallato, in questo caso sia la batteria che i componenti interni andranno sicuramente bene, ma sono ancora molto poche. Ne approfitto però per segnalare Slimbook, un’interessante azienda spagnola che sembra stia facendo un gran bel lavoro.</p>
<h3 id="stabiità">Stabiità</h3>
<p>Qua tutto dipende dalle conoscenze che uno ha. Se l’utente sa cosa sta facendo allora ci sono distro che in quanto a stabilità battono alla grande Windows e Mac OS. Purtroppo però se l’utente fa qualche cavolata, allora può incriccare tutto il sistema. Essendo un software libero il sistema raramente blocca l’utente quando sta facendo qualcosa di stupido, lo lascia agire serenamente. Capita quindi facilemnte di copiare comandi di terminale presi da forum online senza sapere bene cosa si sta facendo e finire con il bestemmiare come matti e dover ripartire da zero. Il consiglio è questo: se si è alle prime armi è meglio utilizzare una macchina virtuale per provare comandi da terminale. Sul sistema primario meglio fare solo cose sicure.</p>
<h3 id="apple">Apple</h3>
<p>Infine secondo me il problema più grosso l’ha creato Apple quando ha lanciano i processori M1. Potersi portare a casa un Macbook Air con poco più di mille euro è una tentazione troppo forte. Con una cifra a parer mio corretta si può avere un gran computer con batteria esagerata, prestazioni fantastiche, fanless (a chi piace), schermo e toucpad meravigliosi e un software elegante e funzionale. È difficile resistere a tutto questo. Considerando anche l’effetto “Figo” che fa avere hardware Apple, è difficile pensare a linux come competitor, solo uno sviluppatore o uno smanettone può prenderlo in considerazione.</p>
<h2 id="cosa-si-può-fare">Cosa si può fare</h2>
<p>Tanto, ma tanto è già stato fatto. Apprezzo moltissimo gli influencer che sponsorizzano Linux, come il nostro Riccardo Palombo, oppure Nick di The Linux Experiment, questo porta a conoscenza di grandi quantità di persone il sistema del pinguino e pian piano può aumentare il numero utenti.</p>
<p>Pensare che negli ultimi 10 anni gli utenti di linux sono triplicati è una gran bella cosa, anche se siamo ancora sotto al 3%… (Alla buona abbiamo 80% Windows e 15% Mac OS…), ma bisogna che crescano ancora per poter avere sempre più interesse da parte degli sviluppatori.</p>
<p>I grandi sviluppatori guardano al mercato, e oggi sviluppare un’app per linux è poco conveniente… Inoltre tutta questa libertà del mondo FOSS ha fatto sì che ci sia una gran dispersione, non solo di distro, ma anche di ambienti di sviluppo, con integralisti da ogni parte…</p>
<h3 id="pensiamo-anche-a-questo">Pensiamo anche a questo:</h3>
<p><strong>Apple</strong>: comprando hardware Apple si può usufruire di un prodotto premium sotto ogni punto di vista, curato, bello e funzionante. Però ci si imprigiona nel loro mondo. Se ho un Mac prima o poi dovrò prendere un iPhone per potermi integrare al meglio nell’ecosistema, poi un iPad, un Apple Watch, le AirPods e così via. Entro in un mondo dal quale è difficile uscire. Certo è tutto bello, però se arriva un periodo come gli anni fra il 2016 e il 2018, dove i macbook erano carissimi e con hardware di basso livello, non posso fare altro che mettermi il cuore in pace, dare il mio denaro alla apple e pagare molto un qualcosa che non va poi così bene… Ora con l’Apple Silicon si sono ripresi (alla grande), ma se entro nel club faticherò ad uscirne, ne sarò quasi imprigionato.</p>
<p><strong>Microsoft</strong>: I prodotti Microsoft sono più democratici, più alla base di tutti, però hanno standard di sicurezza molto bassi. Già il sistema contiene pubblicità spammose appena installato, non è possibile che la prima cosa da fare appena acquisto un pc sia iniziare a pulirlo… Microsoft è stata furbissima ad accaparrarsi il mondo business con i software Office, così è entrata nel privato e nel pubblico e ora è difficile uscirne. Lo standard dei software di ufficio è suo e nessuno glielo può togliere ormai (anche se Google ci sta pian piano riuscendo). Ma è un sistema disordinato e <em>brutto</em>, pieno di falle. La cosa migliore però è che permette di giocare praticamente a tutto.</p>
<p><strong>Google</strong>: a livello di privacy google può essere considerata scherzosamente “<em>Il male assoluto</em>“. Google è come la vicina impicciona che passa tutto il giorno alla finestra per controllare cosa stai facendo. Anche qua vale lo stesso discorso di Apple, se si entra nel loro sistema si finisce in trappola, costretti ad utilizzarlo senza poterne fare a meno. Per esempio google offriva la possibilità di caricare foto su Google Photos gratuitamente, ma da qualche mese questa funzionalità è diventata a pagamento. Per carità, ci sta, è un gran bel servizio, però ha spiazzato molti utenti. Non succederà mai, ma pensate se un giorno gmail diventasse a pagamento! Metà mondo andrebbe nel panico…</p>
<h2 id="conclusione">Conclusione</h2>
<p>Utilizzando software di queste aziende non siamo proprietari di ciò che facciamo. Pensate anche ai Kindle, se compro un libro non ne divento proprietario come accade con un libro cartaceo, ma ho il diritto di leggerlo sul dispositivo Kindle. Se amazon chiudesse (improbabile), perderei l’accesso e non potrei farci nulla. A livello legale si acqusita qualcosa che però poi non diventa nostro</p>
<p>Con Linux invece si è proprietari di ciò che si fa al 100%. Perciò molti servizi cloud sono self hosted, così ognuno ha il controllo totale dei propri dati e delle proprie azioni.</p>
<p>Il mio consiglio è quello di non diventarci pazzi, non occorre per forza farsi un server NextCloud privato e abbandonare i servizi dei big, ma almeno cominciare a pensarci un po’ e provare ad essere leggermente più indipendenti.</p>
<p>Se più persone iniziassero ad usare Linux allora le aziende sarebbero più interessate a portare i loro software su questa piattaforma, permettendo agli utenti un’alternativa fra la costosa Apple e la pessima Microsoft.</p>
<p>Io lavoro con Linux da un anno ormai e sono veramente poche le volte che ho rimpianto questa scelta.</p>
]]></content>
		</item>
		
		<item>
			<title>Laravel in locale su Local by Flywheel</title>
			<link>https://albertoreineri.it/blog/laravel-in-locale-su-local-by-flywheel/</link>
			<pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/laravel-in-locale-su-local-by-flywheel/</guid>
			<description>Sebbene Local by Flywheel sia stato pensato principalmente per utilizzare WordPress in locale può funzionare molto bene anche con Laravel o progetti in Core PHP e MySQL.
Local è molto semplice da utilizzare, veloce e ben organizzato, perciò è la mia scelta di default fra i server locali.
Vediamo ora come installare Laravel in locale su Local by Flywheel.
Nota: cercherò di aggiornare questo articolo con le ultime versioni di Laravel.</description>
			<content type="html"><![CDATA[<p>Sebbene Local by Flywheel sia stato pensato principalmente per utilizzare WordPress in locale può funzionare molto bene anche con Laravel o progetti in Core PHP e MySQL.</p>
<p>Local è molto semplice da utilizzare, veloce e ben organizzato, perciò è la mia scelta di default fra i server locali.</p>
<p>Vediamo ora come installare Laravel in locale su Local by Flywheel.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/ko7kSkYRmss" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p><em>Nota: cercherò di aggiornare questo articolo con le ultime versioni di Laravel. (ultimo aggiornamento: 18 febbraio 2020)</em></p>
<h2 id="aggiungere-il-sito-in-locale">Aggiungere il sito in locale</h2>
<p>Innanzitutto bisogna aggiunge un sito normalemente su Local:</p>
<ol>
<li>Fare clic sul grande pulsante “+”</li>
<li>Assegnare un nome al sito (diciamo “Laravel”)</li>
<li>Selezionare l’ambiente che desideri (il nginx predefinito funzionerà perfettamente con Laravel)</li>
<li> Inserisci il tuo nome utente e password WP (questi verranno eliminati a breve)</li>
<li>Fare clic su aggiungi sito.</li>
</ol>
<p>Puoi anche aggiungere rapidamente un certificato SSL, se lo desideri. Ti consiglio di farlo, poiché tutti i siti Web e le app saranno protetti quando vengono avviati in produzione, in questo modo avrai un ambiente molto simile a quello online.</p>
<h2 id="installa-laravel-e-un-nuovo-progetto-laravel">Installa Laravel e un nuovo progetto Laravel</h2>
<p>Ora vediamo come installare Laravel in locale su Local by Flywheel.</p>
<p>Questo passaggio richiede che Composer sia installato globalmente sul tuo sistema. Puoi trovare le istruzioni per questo passaggio <a href="https://getcomposer.org/doc/00-intro.md#installation-linux-unix-macos"><strong>qui</strong></a> . </p>
<p>Una volta installato Composer, puoi seguire le istruzioni di installazione per installare anche Laravel a livello globale. Puoi trovare la documentazione <strong><a href="https://laravel.com/docs/5.7/installation">qui</a></strong> , ma il comando di base sarà: </p>
<pre tabindex="0"><code>composer global require laravel/installer
</code></pre><p>Una volta installato Larvel a livello globale, installiamolo nella nostra App in locale su Local:</p>
<ul>
<li>Apri “Site Shell”: fai click con il tasto destro sul sito “Laravel” e clicca su “Open site shell”.</li>
<li>In Site Shell Terminal, passa alla directory “Laravel” che hai appena creato ( <code>cd ../..</code> , dobbiamo andare indietro di due livelli).</li>
<li>Elimina la cartella “app” corrente (nella finestra Finder / Explorer o tramite riga di comando)</li>
<li>Quindi esegui il seguente comando dalla nuova directory del sito:</li>
</ul>
<pre tabindex="0"><code>laravel new app
</code></pre><p>Se questo comando vi dà “<em>zsh: command not found: laravel</em>” allora provate a dare questo da terminare:</p>
<pre tabindex="0"><code>export PATH=&#34;$HOME/.composer/vendor/bin:$PATH&#34;
</code></pre><p>Questo creerà un nuovo progetto Laravel all’interno della directory “app” e includerà la cartella “public”, utilizzata da Local di default.</p>
<p>A questo punto, dovresti essere in grado di fare clic su “Visualizza sito” nell’app locale e dovrebbe mostrarti la pagina di benvenuto di Laravel, su htts: //laravel.local, per esempio. Se ricevi un errore 502, 404 o qualche altro errore, potrebbe essere necessario riavviare il server:</p>
<p><img src="images/Laravel-on-Local_lbxrd9.jpeg" alt=""></p>
<h2 id="collegamento-del-database">Collegamento del database</h2>
<p>Nel tuo <code>.env</code>file, puoi sostituire le seguenti credenziali (supponendo che tu non abbia modificato le impostazioni predefinite Local by Flywheel):</p>
<pre tabindex="0"><code>DB_CONNECTION=mysql
DB_HOST=localhost
DB_PORT=3306
DB_SOCKET=&#34;/Users/yourusername/Library/Application Support/Local/run/lkIEkdiowIEkmd/mysql/mysqld.sock&#34;
DB_DATABASE=local
DB_USERNAME=root
DB_PASSWORD=root
</code></pre><p>Il DB_SOCKET lo trovare nella scheda “Database” di Laravel.</p>
<p>Quanto sopra si collegherà al DB locale. Se apri il tuo database utilizzando Adminer, puoi entrare ed eliminare le tabelle di wordpress, quelle che cominciano con “wp_”. </p>
<p>Infine, puoi controllare il collegamento fra Laravel e il DB con questo:</p>
<pre tabindex="0"><code>php artisan migrate
</code></pre><p>Dopo aver eseguito il comando precedente, è possibile aggiornare Adminer e visualizzare il database con seed predefinito.</p>
<p>E voilà! Questo è tutto. In poco tempo abbiamo creato un’istanza Laravel pronta a funzionare!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Collegare PHP e MySQL con PDO</title>
			<link>https://albertoreineri.it/blog/collegare-php-e-mysql-con-pdo/</link>
			<pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/collegare-php-e-mysql-con-pdo/</guid>
			<description>Collegare un database MySQL ad un progetto PHP è quasi sempre fondamentale, vediamo come farlo utilizzando PDO.
È possibile continuare ad utilizzare MySQLi, ma PDO garantisce livelli di sicurezza maggiori.
La procedura è molto semplice, vediamo come fare:
Per prima cosa definiamo le variabili di connessione al nostro database:
$servername = &amp;#34;localhost&amp;#34;; $username=&amp;#34;root&amp;#34;; $passworddb=&amp;#34;root&amp;#34;; $dbname=&amp;#34;dbname&amp;#34;; Ora non ci resta che effettuare la connessione vera e propria, in questo modo:
try{ $db = new PDO(&amp;#34;mysql:=$servername;dbname=$dbname&amp;#34;, $username, $passworddb); $db-&amp;gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); } catch (PDOException $e){ print &amp;#34;Errore!</description>
			<content type="html"><![CDATA[<p>Collegare un database MySQL ad un progetto <a href="/argomento/php/">PHP</a> è quasi sempre fondamentale, vediamo come farlo utilizzando PDO.</p>
<p>È possibile continuare ad utilizzare MySQLi, ma <a href="https://www.html.it/pag/63991/pdo-vs-mysqli/">PDO</a> garantisce livelli di sicurezza maggiori.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/x_2koTcxdDg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>La procedura è molto semplice, vediamo come fare:</p>
<p>Per prima cosa definiamo le variabili di connessione al nostro database:</p>
<pre tabindex="0"><code>$servername = &#34;localhost&#34;;
$username=&#34;root&#34;;
$passworddb=&#34;root&#34;;
$dbname=&#34;dbname&#34;;
</code></pre><p>Ora non ci resta che effettuare la connessione vera e propria, in questo modo:</p>
<pre tabindex="0"><code>try{
    $db = new PDO(&#34;mysql:=$servername;dbname=$dbname&#34;, $username, $passworddb);
    $db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e){
    print &#34;Errore! &#34;. $e-&gt;getMessage() .&#34; &lt;br/&gt;&#34;;
    die();
}
</code></pre><p>Con questo effettueremo la connessione al nostro DB e genereremo un messaggio in caso di errore, in modo da velocizzare il debug.</p>
<p>Ora non ci resta che testare la connessione. Aprendo il file contenente questo codice dovrete vedere una pagina completamente bianca, se è così allora la connessione funziona, altrimenti dovrete vedere un messaggio di errore.</p>
<p>Per essere ancora più sicuri della connessione proviamo a inserire dei dati nel nostro db e andarli a prendere e stampare sulla pagina PHP.</p>
<p>In questo esempio ho creato una tabella “Users” con all’interno un campo “Nome”. Ora andiamo a stampare tutti i dati all’interno di questa tabella:</p>
<pre tabindex="0"><code>// Seleziono da DB
$query = $db-&gt;prepare(&#34;SELECT * FROM Users&#34;);
$query-&gt;execute();
$query-&gt;setFetchMode(PDO::FETCH_ASSOC);
while($row = $query-&gt;fetch()){
    echo $row[&#39;nome&#39;]. &#34;&lt;br&gt;;
}
</code></pre><p>E Voilà! Se vi appare l’elenco dei nomi che avete inserito nel DB allora la connessione del php con MySQL attraverso PDO è fatta, non resta che svilupparci la web app intorno!</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Strumenti essenziali per lo Sviluppo Web</title>
			<link>https://albertoreineri.it/blog/strumenti-essenziali-per-lo-sviluppo-web/</link>
			<pubDate>Thu, 24 Jun 2021 12:49:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/strumenti-essenziali-per-lo-sviluppo-web/</guid>
			<description>Ogni giorno noi sviluppatori utilizziamo un&amp;rsquo;ampia gamma di strumenti per completare le nostre attività. E poiché tutti differiamo nelle preferenze, così anche gli strumenti che utilizziamo possono essere diversi. Tuttavia, ci sono molti tool tra cui scegliere e provarli uno per uno sarà controproducente, per non dire, difficile. Quindi non sarebbe bello avere qualcosa come un coltello svizzero per gli sviluppatori? Sai, strumenti utili che potresti semplicemente estrarre dalla sezione dei tuoi preferiti?</description>
			<content type="html"><![CDATA[<p>Ogni giorno noi sviluppatori utilizziamo un&rsquo;ampia gamma di strumenti per completare le nostre attività. E poiché tutti differiamo nelle preferenze, così anche gli strumenti che utilizziamo possono essere diversi. Tuttavia, ci sono molti tool tra cui scegliere e provarli uno per uno sarà controproducente, per non dire, difficile. Quindi non sarebbe bello avere qualcosa come un coltello svizzero per gli sviluppatori? Sai, strumenti utili che potresti semplicemente estrarre dalla sezione dei tuoi preferiti? Questo ti evita la fatica di fare molte ricerche su Google che potrebbero portare alla procrastinazione.</p>
<p>Sebbene non esista un elenco definitivo, o addirittura autorevole, ho cercato di raccogliere alcuni strumenti per lo sviluppo web di cui non potrei fare a meno.</p>
<h2 id="applicazioni-generali">APPLICAZIONI GENERALI</h2>
<p>Queste applicazioni non sono necessariamente esclusive dello sviluppo. Diamine, anche uno studente universitario potrà utilizzare questi strumenti alcune volte. Ma sono comunque essenziali. Una volta aggiunti al tuo arsenale, questi strumenti ti aiuteranno nelle tue attività organizzative come prendere appunti, aggiungere segnalibri, archiviare documenti o risorse e strumenti di produttività generali che ti assicurano di portare a termine il lavoro.</p>
<h3 id="evernote">EVERNOTE</h3>
<p>Le attività di freelance come lo sviluppo web dipendono fortemente dalla produttività e dall&rsquo;organizzazione. Come sviluppatore, devi ricordare (o almeno prendere nota di) quasi tutto ciò che riguarda il tuo lavoro, comprese segnalazioni di bug, scadenze e altro. Meno male che c&rsquo;è un&rsquo;applicazione per le note che ti permette di ricordare tutto. Per inciso, il suo slogan ti incoraggia anche a “Ricordare tutto”. Quello strumento è  <a href="https://evernote.com/">Evernote</a> .</p>
<p>Uso Evernote da un po&rsquo; di tempo ormai e ne sto diventando dipendente… In effetti, ho Evernote installato su ogni dispositivo che possiedo. E con Evernote, posso acquisire, caricare e sincronizzare da qualsiasi dispositivo ovunque.</p>
<p>Evernote ha usi diversi come attività, elenchi, pianificazioni, segnalibri e altro. Puoi anche usare Evernote per avere un piccolo database di frammenti di codice che puoi usare quando vuoi. E poiché viene fornito con un web clipper, puoi facilmente ottenere le tue informazioni dal tuo browser alla tua app Evernote.</p>
<h3 id="google-drive">GOOGLE DRIVE</h3>
<p>Ovviamente non poteva mancare <a href="http://drive.google.com/">Google Drive</a>. Questo strumento mi dà la possibilità di condividere i miei documenti (e file) con clienti e colleghi. Di solito utilizzo Drive in modo intercambiabile con Dropbox (ma preferisco Drive perché lo trovo più facile da usare). Google Drive consente inoltre ai miei colleghi di commentare i documenti, così la comunicazione diventa più facile e meglio documentata.</p>
<h2 id="gestione-di-progetto">GESTIONE DI PROGETTO</h2>
<p>Lo sviluppo è un processo multi-thread in cui a volte hai bisogno di altre persone con cui lavorare. Devi anche stabilire buone linee di comunicazione tra te e i tuoi clienti. Gli strumenti di gestione dei progetti ti aiutano a organizzare e monitorare ogni attività, report e bug.</p>
<h3 id="asana">ASANA</h3>
<p>Asana ha tutto ciò che cerchi su uno strumento di gestione dei progetti: fissare scadenze, monitorare le singole attività, commentare e discutere le attività ed etichettare ogni sottoattività.</p>
<p>In verità, Asana rimane in cima alla mia lista di strumenti di gestione dei progetti.</p>
<h3 id="basecamp">BaseCamp</h3>
<p>Tuttavia, se non sei completamente venduto su Asana, c&rsquo;è <a href="http://basecamp.com/">Basecamp</a> , un altro strumento intuitivo di gestione dei progetti che ti consente di creare note e attività. La sua semplicità è spesso il punto di forza di Basecamp in quanto puoi navigare facilmente attraverso il sito Web senza nemmeno sforzarti di imparare (e familiarizzare con) l&rsquo;interfaccia.</p>
<h2 id="editor-di-testo">EDITOR DI TESTO</h2>
<p>Non puoi sviluppare nulla se non hai nulla con cui scrivere il tuo codice. Questo è il motivo per cui dovresti scegliere un editor di testo che ti piace davvero, beh, perché la codifica è il cuore dello sviluppo. Ecco alcune scelte:</p>
<h3 id="sublime">SUBLIME</h3>
<p><a href="http://www.sublimetext.com/">Sublime</a>  è un editor di testo multipiattaforma ed efficiente. Personalmente scelgo Sublime perché ha ottime funzionalità come plug-in e componenti aggiuntivi per attività specifiche della lingua. Ci sono anche molti comandi da tastiera per semplificare la codifica. Ha anche una finestra senza distrazioni che ti consente di concentrarti su ciò che stai sviluppando.</p>
<h3 id="blocco-note-">BLOCCO NOTE ++</h3>
<p>Prima di provare Sublime, ero un grande fan di <a href="http://notepad-plus-plus.org/">Notepad++</a>  e molti di voi potrebbero esserlo, principalmente perché Notepad++ è in circolazione da molto tempo. Quello che mi è piaciuto di Notepad++ è perché è facile da usare e combina la familiarità di base di Notepad.</p>
<p>Ma non lasciarti ingannare dalla sua semplicità. Notepad ++ ha un&rsquo;interfaccia personalizzabile in cui puoi nascondere le barre degli strumenti per creare un&rsquo;interfaccia priva di distrazioni. Ha anche una mappa del documento per salvarti dallo scorrimento scomodo.</p>
<h2 id="strumenti-di-sviluppo-locale">STRUMENTI DI SVILUPPO LOCALE</h2>
<p>Modificare molte cose su un sito Web live è pericoloso, potresti essere in grado di sovrascrivere i file inconsapevolmente e ciò potrebbe causare molti problemi. Ecco perché prima di implementare modifiche importanti sul tuo sito, dovresti testare tutto localmente (ad esempio usando  <em>localhost</em> ). Da qui questi strumenti:</p>
<h3 id="xampp">XAMPP</h3>
<p><a href="https://www.apachefriends.org/index.html">XAMPP</a>  (X-OS, Apache, MySQL, PHP, PERL) è un ambiente di test open source che raggruppa gli strumenti più diffusi per garantire un flusso di lavoro più fluido.</p>
<p>Quello che mi piace di XAMPP è che è disponibile per tutti i sistemi operativi, questo, ovviamente, aiuta quando hai un paio di computer con sistemi operativi diversi perché non devi scaricare (e imparare a usare) un software diverso solo per sviluppare qualcosa.</p>
<h3 id="mamp">MAMP</h3>
<p><a href="http://www.mamp.info/en/">MAMP</a>  (Mac, Apache, MySQL PHP) è un altro ambiente di test per sviluppatori. Tuttavia, questo è esclusivo per gli utenti Mac.</p>
<p>Se non sei un utente Mac (e non hai bisogno di Perl), ti consiglio di usare <a href="http://www.wampserver.com/en/">WAMP</a> .</p>
<h2 id="versioning">Versioning</h2>
<p>Non importa quanto sei uno sviluppatore esperto, ci saranno volte in cui non otterrai ciò che desideri al primo tentativo. Il più delle volte, lo sviluppo è per tentativi ed errori. Più modifiche apporti al tuo codice, più dovresti monitorare le modifiche che apporti. Gli strumenti di controllo della versione ti aiutano a tenere traccia di tutto.</p>
<h3 id="git">Git</h3>
<p><a href="http://git-scm.com/">Git</a>  è uno strumento open source per il controllo della versione e la gestione del codice che ti consente di vedere le modifiche applicate al tuo progetto usando i repository.</p>
<p>In qualità di sviluppatore, puoi aggiungere nuove funzionalità utilizzando la ramificazione e l&rsquo;unione in Git. E lo strumento ti consente di unire solo una volta che il codice è stabilizzato. Apportare modifiche alla tua applicazione è solo più sicuro. Questo è essenziale per i team che tendono a cambiare molte cose nel loro progetto e spesso hanno difficoltà a monitorare tali cambiamenti.</p>
<h3 id="beanstalk">BEANSTALK</h3>
<p><a href="http://beanstalkapp.com/">BeanStalk</a>  è un host per repository di codice e consente a te (e ai tuoi compagni di squadra) di collaborare e salvare i codici in una posizione remota e inviarli al tuo server.</p>
<h2 id="ftp">FTP</h2>
<p>Ovviamente, quando tutto è a posto, devi trasferire i tuoi file sul tuo server. E per questo, hai bisogno di un solido client FTP. Sì, sul tuo CPanel è presente un client di trasferimento file, ma i client FTP possono inviare facilmente e rapidamente più file al server Web utilizzando formati diversi.</p>
<h3 id="filezilla">FILEZILLA</h3>
<p><a href="https://filezilla-project.org/">Filezilla</a>  è un client FTP open source e multipiattaforma popolare per la sua facilità d&rsquo;uso. La maggior parte degli utenti si attiene a FileZilla perché è veloce e gratuito. La cosa fantastica di questo strumento è che è affidabile e ha persino una versione portatile che puoi semplicemente collegare a qualsiasi computer.</p>
<h3 id="cyberduck">CYBERDUCK</h3>
<p>Per gli utenti Mac a cui non piace Filezilla, <a href="https://cyberduck.io/?l=en">Cyberduck</a>  è un&rsquo;altra opzione. Come il suo concorrente più flessibile, Cyberduck è gratuito. Ha anche funzionalità come sguardo rapido, ringhio e modifica remota utilizzando uno degli editor di testo di cui abbiamo discusso nella parte precedente dell&rsquo;articolo.</p>
<h2 id="ide-ambienti-di-sviluppo-integrati">IDE (AMBIENTI DI SVILUPPO INTEGRATI)</h2>
<p>Gli IDE sono strumenti all-in-one che ti consentono di modificare codice, eseguire il debug, trasferimenti di file e altro ancora.</p>
<h3 id="netbeans">NetBeans</h3>
<p><a href="https://netbeans.org/">Netbeans</a>  è un IDE open source e flessibile che ti consente di sviluppare in PHP, Ruby on Rails, JavaScript e altro. Ha una funzione di editing potente e intuitiva, supporta FTP e MySQL. Quello che mi piace di più di Netbeans è il suo navigatore di codici che funziona bene per me.</p>
<h3 id="eclipse">Eclipse</h3>
<p><a href="https://eclipse.org/">Eclipse</a>  è anche un ottimo IDE. La cosa fantastica di Eclipse è che viene fornito con plug-in che ti consentono di fare quasi tutto ciò che vuoi.</p>
<h2 id="frameworks">FRAMEWORKS</h2>
<p>Questi framework sono per lo più front-end, perché non è necessario esercitare così tanto sforzo nella costruzione di un design squallido da zero quando puoi utilizzare framework migliori e più puliti.</p>
<h3 id="bootstrap">BOOTSTRAP</h3>
<p><a href="http://getbootstrap.com/">Bootstrap</a>  è uno dei framework front-end più popolari con cui creare la tua interfaccia utente. Personalmente ho scelto Bootstrap perché era il più facile da usare tra gli altri framework (come Foundation). Bootstrap viene fornito con una vasta gamma di esempi, modelli ed elementi personalizzabili che possono aiutare il tuo design ad avere un aspetto migliore. Inoltre, grazie alla sua popolarità, l&rsquo;utilizzo di Bootstrap ti dà accesso a un buon supporto.</p>
<h3 id="foundation">FOUNDATION</h3>
<p>Come Bootstrap, <a href="http://foundation.zurb.com/">Foundation</a>  ti fornisce anche un buon progetto per gli elementi front-end reattivi di cui hai bisogno. Ha una buona struttura a griglia ed è facile da modellare e personalizzare.</p>
]]></content>
		</item>
		
		<item>
			<title>Semplice sistema di routing in PHP</title>
			<link>https://albertoreineri.it/blog/semplice-sistema-di-routing-in-php/</link>
			<pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/semplice-sistema-di-routing-in-php/</guid>
			<description>Usare un sistema di routing in php può portare grandi vantaggi a un progetto.
Gli URL delle pagine web di un sito sono molto importanti, sia per i motori di ricerca, sia per gli utenti, che sempre di più li usano per navigare velocemente all’interno di un sito.
Se per esempio l’url di una pagina che elenca una serie di articoli è http://www.nomesito.it/2019/05/15 l’utente, se conosce minimamente come funziona un browser ed il web, saprà già che se cancella il “15” dall’URL vedrà l’elenco degli articoli del mese, se cancella “05” vedrà l’elenco degli articoli dell’anno e così via.</description>
			<content type="html"><![CDATA[<p>Usare un sistema di routing in php può portare grandi vantaggi a un progetto.</p>
<p>Gli <strong>URL</strong> delle pagine web di un sito sono <strong>molto importanti</strong>, sia per i motori di ricerca, sia per gli utenti, che sempre di più li usano per navigare velocemente all’interno di un sito.</p>
<p><em>Se per esempio l’url di una pagina che elenca una serie di articoli è <a href="http://www.nomesito.it/2019/05/15">http://www.nomesito.it/2019/05/15</a> l’utente, se conosce minimamente come funziona un browser ed il web, saprà già che se cancella il “15” dall’URL vedrà l’elenco degli articoli del mese, se cancella “05” vedrà l’elenco degli articoli dell’anno e così via.</em></p>
<p>Questo fa parte delle convenzioni che sono venute a crearsi nel corso di questi anni, e che è bene rispettare nella creazione di un sito web.</p>
<p>Una cosa che non mi è mai piaciuta dei primi siti web che realizzavo era vedere il “.php” alla fine dell’URL. Al giorno d’oggi sa veramente di poco professionale.</p>
<p><strong>Ma è possibile creare degli URL custom e SEO friendly senza utilizzare un CMS o un framework?</strong></p>
<p>La risposta è <strong>assolutamente SI!!!</strong></p>
<p>Se sei interessato ad una semplice soluzione per “nascondere” il “.php” alla fine dell’URL leggi questo <a href="/blog/nascondere-lestensione-alla-fine-dellurl/">articolo</a>.</p>
<p>Se vuoi imparare ad utilizzare un semplice sistema di routing in PHP ecco come puoi fare.</p>
<h2 id="creare-un-sistema-di-gestione-del-routing-del-sito">CREARE UN SISTEMA DI GESTIONE DEL ROUTING DEL SITO</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/lFtPh9eoPrc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>Andremo a <strong>dirigere tutto il traffico alla index.php e poi eseguiremo un “routing” alla pagina che vogliamo</strong>.</p>
<h3 id="dirigere-tutto-il-traffico-alla-indexphp">Dirigere tutto il traffico alla index.php</h3>
<p>Aprite il file .htaccess (se non esiste createlo) e inserite il seguente codice:</p>
<pre tabindex="0"><code>RewriteEngine On

RewriteBase /

RewriteCond %{REQUEST_FILENAME} !-d

RewriteCond %{REQUEST_FILENAME} !-f

RewriteRule ^(.+)$ index.php [QSA,L]
</code></pre><p>In questo modo qualsiasi richiesta verrà fatta al server questo aprirà il file “index.php”</p>
<h3 id="creare-un-sistema-di-routing">Creare un sistema di routing</h3>
<p>Nel file index.php inserisci il seguente codice:</p>
<pre tabindex="0"><code>&lt;?php

$request = $_SERVER[&#39;REQUEST_URI&#39;];

switch ($request) {
    case &#39;/&#39; :
        require __DIR__ . &#39;/views/index.php&#39;;
        break;
    case &#39;&#39; :
        require __DIR__ . &#39;/views/index.php&#39;;
        break;
    case &#39;/chi-siamoi&#39; :
        require __DIR__ . &#39;/views/chi-siamo.php&#39;;
        break;
    default:
        require __DIR__ . &#39;/views/404.php&#39;;
        break;
}
</code></pre><p>In questo modo si salverà nella variabile <strong>$request</strong> la richiesta inviata al server (la parte dell’url dopo “www.nomesito.it”).</p>
<p>Dopodiché effettuando una switch si può richiamare la pagina corrispondente alla richiesta nell’URL. </p>
<p>Nei casi in cui la richiesta sia vuota oppure uno “<strong>/</strong>” allora si rimanda alla <strong>homepage</strong>, altrimenti si può rimandare alla pagina corretta.</p>
<p>Nell’esempio ho creato una cartella “<strong>views</strong>” nella root del sito nella quale saranno presenti i file delle singole pagine. In questo modo il codice sarà anche più snello e capibile.</p>
<p>Infine è già presente anche la gestione dell’errore <strong>404</strong>, senza dover inserire altro codice nell’htaccess.</p>
<h3 id="creare-le-views">Creare le views</h3>
<p>A questo punto non ci resta che creare i file per le nostre <strong>views</strong>, cioè le pagine visualizzate dall’utente.</p>
<p>Potete creare semplicemente i seguenti file con il seguente codice in ognuno di essi:</p>
<p><strong>/views/index.php</strong></p>
<pre tabindex="0"><code>&lt;h1&gt;Home Page&lt;/h1&gt;
</code></pre><p><strong>/views/chi-siamo.php</strong></p>
<pre tabindex="0"><code>&lt;h1&gt;Chi siamo&lt;/h1&gt;
</code></pre><p><strong>/views/404.php</strong></p>
<pre tabindex="0"><code>&lt;h1&gt;Errore 404&lt;/h1&gt;
</code></pre><p>E voilà! Avrete un sistema di routing in PHP semplice da gestire ma funzionale.</p>
<p>Questo sistema è alla base di <a href="https://orange.albydev.net/">Orange CMS</a>, il mio CMS realizzato in php. Ampliandolo a dovere è possibile raggiungere risultati molto soddisfacenti.</p>
<p>Spero possa esservi di aiuto.</p>
<p><em>Buon codice!</em></p>
<p>Se l’articolo ti è stato <strong>utile</strong> lasciami un commento oppure condividilo sui social, lo <strong>apprezzerei</strong> molto!</p>
]]></content>
		</item>
		
		<item>
			<title>Semplice Backend Login in Core PHP</title>
			<link>https://albertoreineri.it/blog/semplice-backend-login-in-core-php/</link>
			<pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/semplice-backend-login-in-core-php/</guid>
			<description>Ho effettuato un nuovo commit a questo progetto, aggiornandolo a PDO, inserendo i bindparam per aumentare la sicurezza e variando leggermente l’architettura software. Il codice aggiornato è nella repository github indicata nell’articolo.
È vero, oggi esistono una miriade di CMS e framework in giro già belli che pronti, basta installarli e voilà! Il gioco è fatto!
Tutti hanno un sistema di login per poter accedere ad un’area riservata!
Però io sono sempre stato uno di quelli che non si accontentano della pappa pronta ma vogliono imparare a cucinare.</description>
			<content type="html"><![CDATA[<p><em>Ho effettuato un nuovo commit a questo progetto, aggiornandolo a PDO, inserendo i bindparam per aumentare la sicurezza e variando leggermente l’architettura software. Il codice aggiornato è nella repository github indicata nell’articolo.</em></p>
<p>È vero, oggi esistono una <strong>miriade di CMS e framework</strong> in giro già belli che pronti, basta installarli e voilà! Il gioco è fatto!</p>
<p>Tutti hanno un sistema di login per poter accedere ad un’area riservata!</p>
<p>Però io sono sempre stato uno di quelli che non si accontentano della <em>pappa pronta</em> ma vogliono <em><strong>imparare</strong> a cucinare</em>.</p>
<p>Per questo ho deciso di <strong>creare un CMS tutto mio</strong>, partendo da zero e utilizzando solamente HTML, CSS, JS e PHP.</p>
<p>Una delle prime cose che ho dovuto realizzare con il mio CMS è stato proprio un <strong>sistema di login</strong> per accedere all’area riservata.</p>
<h2 id="sistema-di-login-in-core-php">Sistema di login in core PHP</h2>
<p>Ho deciso ora di rendere <strong>open source</strong> un piccolo sistema di accesso ad un’area riservata.</p>
<p>Puoi trovare il codice sorgente di questo progettino sul <a href="https://github.com/albertoreineri">mio profilo github</a> a questo indirizzo: <a href="https://github.com/albertoreineri/Simple-login-and-registration-in-php">ht</a><a href="https://github.com/albertoreineri/Simple-login-and-registration-in-php">tps://github.com/albertoreineri/Simple-login-and-registration-in-php</a></p>
<p>Tralasciamo sistemi di routing e architettura software e <strong>facciamola semplice,</strong> parliamo solo del login nudo e crudo.</p>
<h3 id="area-riservata">Area riservata</h3>
<p>Innanzitutto ho creato una cartella “<strong>login</strong>“, dentro la quale ci saranno i file dell’area riservata.</p>
<p>Se non ho ancora effettuato l’accesso allora vedrò il <strong>form di login.</strong></p>
<p><img src="images/image.png" alt=""></p>
<p>Nella <strong>index.php</strong> nella cartella login ho quindi inserito il <strong>form</strong> per effettuale l’accesso all’area riservata, con il form che rimanda al file <strong>access.php,</strong> contenente le funzioni di controllo dei dati di accesso.</p>
<pre tabindex="0"><code>      &lt;!-- Login form --&gt;
      &lt;form class=&#34;&#34; action=&#34;access.php&#34; method=&#34;POST&#34;&gt;
        &lt;!-- Action --&gt;
        &lt;input type=&#34;hidden&#34; name=&#34;action&#34; value=&#34;login&#34;&gt;
        &lt;!-- Email or Username --&gt;
        &lt;label for=&#34;email&#34;&gt;Email or Username&lt;/label&gt;
        &lt;input autofocus name=&#34;email&#34; type=&#34;text&#34;&gt;
        &lt;!-- Password --&gt;
        &lt;label for=&#34;password&#34;&gt;Password&lt;/label&gt;
        &lt;input name=&#34;password&#34; id=&#34;password&#34; placeholder=&#34;&#34; type=&#34;password&#34;&gt;
        &lt;!-- Login Button --&gt;
        &lt;button type=&#34;submit&#34;&gt;Login&lt;/button&gt;
      &lt;/form&gt;
      &lt;!-- /Login form --&gt;
</code></pre><p><strong>Access.php</strong> si occupa sia del <strong>login</strong> che della <strong>registrazione</strong> dei nuovi utenti. È un file che continene solo PHP, esegue i controlli e poi rimanda alla pagina corretta, in base al tipo di richiesta.</p>
<p>Se ho inserito i dati corretti allora rimanda nel <strong>backend</strong>.</p>
<p>Invece se ho inserito i dati sbagliati mi rimanda al form di login con messaggio di <strong>errore</strong>.</p>
<p>Se sto <strong>creando un nuovo utente segue la prassi della registrazione</strong>, inviando un’email di conferma con un link cliccando sul quale si confermerà il proprio account.</p>
<p><img src="images/image-1.png" alt=""></p>
<p><strong>access.php</strong></p>
<pre tabindex="0"><code>&lt;?php
//Config File
include(&#34;config.php&#34;);

//Control Action
if ($_POST[&#39;action&#39;] == &#34;login&#34;) {
    /*------------------------------------------------------
                        LOGIN
    -------------------------------------------------------*/
    ///$_Post variables
    $email = $_POST[&#39;email&#39;];
    $password = $_POST[&#39;password&#39;];


    //Query
    $sql = &#34;SELECT * FROM users WHERE email = &#39;&#34; . $email . &#34;&#39; OR username =&#39;&#34; . $email . &#34;&#39;&#34;;
    $result = $conn-&gt;query($sql);
    if ($result-&gt;num_rows &gt; 0) {
        while ($row = $result-&gt;fetch_assoc()) {

            //Password control
            if (!(password_verify($password, $row[&#34;password&#34;]))) {
                header(&#34;location: error.php?error=Wrong Password&#34;);
                die();
            }

            //Start Session
            session_start();

            //Save user id in session
            $_SESSION[&#39;id&#39;] = $row[&#34;id&#34;];

            //Redirect to backend homepage
            header(&#34;location: welcome.php&#34;);
            die();
        }
    } else {
        header(&#34;location: error.php?error=Wrong Email or Username&#34;);
        die();
    }
} elseif ($_POST[&#39;action&#39;] == &#34;register&#34;) {
     /*------------------------------------------------------
                        REGISTER
    -------------------------------------------------------*/
    $email = $_POST[&#39;email&#39;];
    $username = $_POST[&#39;username&#39;];
    $password = $_POST[&#39;password&#39;];

    //Control if the user or email are already in the database
    $sql = &#34;SELECT * FROM users WHERE email = &#39;&#34; . $email . &#34;&#39; OR username = &#39;&#34; . $username . &#34;&#39;&#34;;
    $result = $conn-&gt;query($sql);
    if ($result-&gt;num_rows &gt; 0) {
        while ($row = $result-&gt;fetch_assoc()) {
            header(&#34;location: error.php?error=Email or Username already register!&#34;);
        }
    }


    //Insert new user in DB
    $password = password_hash($password, PASSWORD_DEFAULT);
    $sql = &#34;INSERT INTO users (username,email,password)
    VALUES (
    &#39;&#34; . $username . &#34;&#39;,
    &#39;&#34; . $email . &#34;&#39;,
    &#39;&#34; . $password . &#34;&#39;
    )&#34;;
    if ($conn-&gt;query($sql) === TRUE) {
        header(&#34;location: index.php&#34;);
    } else {
        header(&#34;location: error.php?error=&#34; . $conn-&gt;error);
    }
}
$conn-&gt;close();
</code></pre><h3 id="database">Database</h3>
<p>Il database è un MySQL molto semplice, con una tabella “<strong>users</strong>” contenente i dati dell’utente e la <strong>password criptata.</strong></p>
<p>Per <strong>bloccare gli utenti non loggati</strong> e consentire l’accesso solamente ai loggati è possibile utilizzare le variabili <strong>session</strong>, da includere in ogni file del backend. In questo modo l’accesso viene consentito solamente a chi è passato tramite il form di login. Questo passaggio non è presente su github ma è molto semplice da integrare, forse lo aggiungerò quando avrò tempo!</p>
<p>Spero possa essere stato <strong>utile</strong> e <strong>interessante</strong>.</p>
<p>Se vuoi <strong>utilizzare</strong> questo form o provarelo e <strong>migliorarlo</strong> segui le <strong>istruzioni</strong> nel file readme.txt presente su github.</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Come creare un widget WordPress personalizzato</title>
			<link>https://albertoreineri.it/blog/come-creare-un-widget-wordpress-personalizzato/</link>
			<pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-creare-un-widget-wordpress-personalizzato/</guid>
			<description>Vuoi creare i tuoi widget personalizzati in WordPress? I widget ti consentono di aggiungere elementi non contenuti in una sidebar o in qualsiasi area predisposta per i widget del tuo sito web.
Puoi utilizzare i widget per aggiungere banner, pubblicità, moduli di iscrizione alla newsletter e altri elementi sul tuo sito web.
In questo articolo, ti mostreremo come creare un widget WordPress personalizzato, passo dopo passo.
CHE COS’È UN WIDGET WORDPRESS?</description>
			<content type="html"><![CDATA[<p>Vuoi <strong>creare i tuoi widget</strong> personalizzati in WordPress? I widget ti consentono di aggiungere elementi non contenuti in una sidebar o in qualsiasi area predisposta per i widget del tuo sito web.</p>
<p>Puoi utilizzare i widget per <strong>aggiungere banner, pubblicità, moduli di iscrizione alla newsletter e altri elementi</strong> sul tuo sito web.</p>
<p>In questo articolo, ti mostreremo come creare un widget WordPress personalizzato, passo dopo passo.</p>
<h2 id="che-cosè-un-widget-wordpress">CHE COS’È UN WIDGET WORDPRESS?</h2>
<p>I widget di WordPress contengono <strong>parti di codice che puoi aggiungere alle sidebar del tuo sito Web o alle aree predisposte per accogliere i widget.</strong></p>
<p>Pensali come moduli che puoi usare per aggiungere diversi elementi usando una semplice <strong>interfaccia drag and drop.</strong></p>
<p>Per impostazione predefinita, <strong>WordPress viene fornito con un set standard di widget</strong> che è possibile utilizzare con qualsiasi tema WordPress. Consulta la nostra guida per principianti su <a href="http://specialistawp.local/widget-in-wordpress-come-utilizzarli/">come utilizzare i widget in WordPress</a> .</p>
<p><img src="images/image-1-2-1-1024x484.png" alt=""></p>
<p>WordPress consente inoltre agli sviluppatori di <strong>creare i propri widget personalizzati.</strong></p>
<p>Molti temi e plugin premium di WordPress sono dotati di widget personalizzati che puoi aggiungere alle sidebar.</p>
<p>Ad esempio, puoi aggiungere un modulo di contatto , un modulo di accesso personalizzato o una galleria fotografica a una sidebar senza scrivere alcun codice.</p>
<p>Detto questo, vediamo come creare facilmente i tuoi widget personalizzati in WordPress.</p>
<h2 id="creazione-di-un-widget-personalizzato-in-wordpress">CREAZIONE DI UN WIDGET PERSONALIZZATO IN WORDPRESS</h2>
<p>Se stai imparando a sviluppare in WordPress, avrai bisogno di un <strong>ambiente di sviluppo locale</strong>. Puoi <a href="http://specialistawp.local/installare-wordpress-in-locale/">installare WordPress</a> sul tuo computer (Mac o Windows).</p>
<p>Esistono <strong>diversi modi</strong> per aggiungere il codice del widget personalizzato in WordPress.</p>
<p>Puoi creare un <strong>plug-in</strong> specifico per il sito e incollare qui il codice del tuo widget.</p>
<p>Puoi anche incollare il codice nel <strong>file Functions.php</strong> del tuo tema . Tuttavia, sarà disponibile solo quando quel particolare tema è attivo.</p>
<p>In questo tutorial, creeremo un semplice widget che saluta i visitatori. L’obiettivo è familiarizzare con la classe del widget WordPress.</p>
<p><em><strong>Iniziamo</strong></em>.</p>
<h2 id="creazione-di-un-widget-wordpress-di-base">CREAZIONE DI UN WIDGET WORDPRESS DI BASE</h2>
<p>WordPress viene fornito con una classe Widget WordPress integrata. <strong>Ogni nuovo widget WordPress estende la classe del widget WordPress.</strong></p>
<p>Esistono <strong>18 metodi</strong> menzionati nel manuale dello sviluppatore di WordPress che possono essere utilizzati con la <a href="http://developer.wordpress.org/reference/classes/wp_widget/">classe Widget WP</a> .</p>
<p>Tuttavia, per il bene di questo tutorial, <strong>ci concentreremo sui seguenti metodi.</strong></p>
<ul>
<li>__construct (): questa è la parte in cui creiamo l’ID del widget, il titolo e la descrizione.</li>
<li>widget: Qui è dove definiamo l’output generato dal widget.</li>
<li>modulo: questa parte del codice è dove creiamo il modulo con le opzioni del widget per il backend.</li>
<li>aggiornamento: questa è la parte in cui salviamo le opzioni del widget nel database.</li>
</ul>
<p>Studiamo il seguente codice in cui abbiamo usato questi quattro metodi all’interno della classe <strong>WP_Widget</strong>.</p>
<pre tabindex="0"><code>// Creo il widget
class swp_widget extends WP_Widget {

// Construct
function __construct() {

}

// Widget front-end
public function widget( $args, $instance ) {

}

// Widget Backend
public function form( $instance ) {

}

// Updating widget replacing old instances with new
public function update( $new_instance, $old_instance ) {

}

// Fine Classe swp_widget ends here
}
</code></pre><p>Il pezzo finale del codice è dove registreremo effettivamente il widget e lo cariceremo all’interno di WordPress.</p>
<pre tabindex="0"><code>// Registrazione e caricamento widget
function swp_load_widget()
{
	register_widget(&#39;swp_widget&#39;);
}
add_action(&#39;widgets_init&#39;, &#39;swp_load_widget&#39;);
</code></pre><p>Ora mettiamo tutto insieme per <strong>creare un widget WordPress di base.</strong></p>
<p>Puoi <strong>copiare e incollare il seguente codice</strong> nel tuo plugin personalizzato o nel file Functions.php del tema.</p>
<pre tabindex="0"><code>// Creo il widget
class swp_widget extends WP_Widget
{

	function __construct()
	{
		parent::__construct(

			// Base ID del widget
			&#39;swp_widget&#39;,

			// Nome del Widget
			__(&#39;Specialista WP Widget&#39;, &#39;swp_widget_domain&#39;),

			// Descrizione Widget
			array(&#39;description&#39; =&gt; __(&#39;Widget di esempio di Specialista WP!&#39;, &#39;swp_widget_domain&#39;),)
		);
	}

	// Widget front-end

	public function widget($args, $instance)
	{
		$title = apply_filters(&#39;widget_title&#39;, $instance[&#39;title&#39;]);

		// Gli argomenti before and after widget sono definiti dal tema
		echo $args[&#39;before_widget&#39;];
		if (!empty($title))
			echo $args[&#39;before_title&#39;] . $title . $args[&#39;after_title&#39;];

		// Qua è dove vediamo l&#39;output
		echo __(&#39;Ciao mondo!&#39;, &#39;swp_widget_domain&#39;);
		echo $args[&#39;after_widget&#39;];
	}

	// Widget Backend
	public function form($instance)
	{
		if (isset($instance[&#39;title&#39;])) {
			$title = $instance[&#39;title&#39;];
		} else {
			$title = __(&#39;Titolo&#39;, &#39;swp_widget_domain&#39;);
		}
		// Widget admin form
	?&gt;
		&lt;p&gt;
			&lt;label for=&#34;&lt;?php echo $this-&gt;get_field_id(&#39;title&#39;); ?&gt;&#34;&gt;&lt;?php _e(&#39;Title:&#39;); ?&gt;&lt;/label&gt;
			&lt;input class=&#34;widefat&#34; id=&#34;&lt;?php echo $this-&gt;get_field_id(&#39;title&#39;); ?&gt;&#34; name=&#34;&lt;?php echo $this-&gt;get_field_name(&#39;title&#39;); ?&gt;&#34; type=&#34;text&#34; value=&#34;&lt;?php echo esc_attr($title); ?&gt;&#34; /&gt;
		&lt;/p&gt;
&lt;?php
	}

	// Aggiorniamo il widget sostituendo le vecchie istanze con le nuove
	public function update($new_instance, $old_instance)
	{
		$instance = array();
		$instance[&#39;title&#39;] = (!empty($new_instance[&#39;title&#39;])) ? strip_tags($new_instance[&#39;title&#39;]) : &#39;&#39;;
		return $instance;
	}

	// Fine classe swp_widget
}


// Registrazione e caricamento widget
function swp_load_widget()
{
	register_widget(&#39;swp_widget&#39;);
}
add_action(&#39;widgets_init&#39;, &#39;swp_load_widget&#39;);
</code></pre><p>Dopo aver aggiunto il codice, devi andare alla pagina <strong>Aspetto »Widget</strong> . Noterai il nuovo widget SpecialistaWP nell’elenco dei widget disponibili. Devi trascinare questo widget su una barra laterale.</p>
<p><img src="images/image-2-1-1-1024x678.png" alt=""></p>
<p>Questo widget ha solo un campo modulo da compilare, puoi <strong>aggiungere il tuo testo e fare clic sul pulsante Salva</strong> per memorizzare le modifiche.</p>
<p>Ora puoi <strong>visitare il tuo sito Web per vederlo in azione.</strong></p>
<p><img src="images/image-3-1-2-1024x626.png" alt=""></p>
<p>Ora <strong>studiamo di nuovo il codice.</strong></p>
<p>Innanzitutto <strong>abbiamo registrato “swp_widget” e caricato il nostro widget personalizzato</strong>. Successivamente abbiamo definito cosa fa quel widget e come visualizzare il back-end del widget.</p>
<p>Infine, abbiamo definito come <strong>gestire le modifiche apportate al widget</strong>.</p>
<p>Ora ci sono alcune cose che potresti voler chiedere. Ad esempio, qual è lo scopo <code>swp_text_domain</code>?</p>
<p>WordPress utilizza gettext per gestire la traduzione e la localizzazione. Questo <code>swp_text_domain</code> e dice a gettext di rendere disponibile una stringa per la traduzione.</p>
<p>Se stai creando un widget personalizzato per il tuo tema, puoi sostituirlo <code>swp_text_domain</code> con il <strong>text_domain del tuo tema.</strong></p>
<p>Speriamo che questo articolo ti abbia <strong>aiutato a imparare come creare facilmente un widget WordPress personalizzato</strong>. </p>
<p>Buono sviluppo!</p>
]]></content>
		</item>
		
		<item>
			<title>Functions.php – Cos’è e come modificarlo</title>
			<link>https://albertoreineri.it/blog/functions.php-cos%C3%A8-e-come-modificarlo/</link>
			<pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/functions.php-cos%C3%A8-e-come-modificarlo/</guid>
			<description>In WordPress, Functions.php è uno dei file più importanti presenti all’interno di un tema.
Racchiude tutte le funzioni necessarie al funzionamento del tema. Funziona come un plugin per il tuo sito WordPress che viene attivato automaticamente con il tuo tema attuale. Il file functions.php utilizza il codice PHP per aggiungere funzionalità o modificare funzionalità predefinite su un sito WordPress.
Ad esempio, un tema WordPress potrebbe aggiungere un po’ di codice al file functions.</description>
			<content type="html"><![CDATA[<p>In WordPress, <strong>Functions.php</strong> è uno dei file più <strong>importanti</strong> presenti all’interno di un tema.</p>
<p>Racchiude <strong>tutte le funzioni necessarie al funzionamento del tema</strong>. Funziona come un <strong>plugin per il tuo sito WordPress</strong> che viene attivato automaticamente con il tuo tema attuale. Il file functions.php utilizza il codice <a href="/categoria_guide/php">PHP</a> per <strong>aggiungere funzionalità</strong> o modificare funzionalità predefinite su un sito WordPress.</p>
<p>Ad esempio, un tema WordPress potrebbe aggiungere un po’ di codice al file functions.php del tema per <strong>aggiungere una nuova area widget</strong> al piè di pagina o aggiungere un messaggio di benvenuto personalizzato alla dashboard di WordPress. Le possibilità sono infinite!</p>
<p>Il file Functions.php <strong>si carica automaticamente</strong> quando installi e attivi un tema sul tuo sito WordPress.</p>
<p>La modifica del file Functions.php utilizzando codici personalizzati ti consente di <strong>aggiungere custom post type, tassonomie , shortcodes</strong> e altro per migliorare il tuo sito web.</p>
<h2 id="dove-si-trova-il-file-functions">Dove si trova il file Functions?</h2>
<p>Il percorso del file Functions.php si trova <strong>nella cartella del tema.</strong></p>
<p>Se vuoi aggiungere uno <strong>snippet</strong> di codice al tuo sito WordPress, puoi aggiungerlo al file Functions.php.</p>
<p>Ma di solito non è il modo migliore per farlo. WordPress cerca di separare design e funzionalità quando possibile. Questo è il motivo per cui abbiamo <strong>temi</strong> che determinano il <strong>design</strong> e <strong>plugin</strong>, che determinano le <strong>funzioni</strong>.</p>
<p>È meglio poter <strong>cambiare il tema di WordPress senza cambiare il modo in cui funziona</strong> il tuo sito o cambiare i tuoi plugin senza influire sulla progettazione del tuo sito.</p>
<p>Esistono molti tutorial di WordPress che ti diranno di aggiungere frammenti di codice al file Functions.php del tuo tema, ma <strong>non sempre è la cosa migliore da fare</strong>. Occorre analizzare bene il caso.</p>
<p>Se decidi di modificare il tuo file Functions.php, usa la massima <strong>cautela</strong>. Ecco 3 motivi per cui modificare il tuo file Functions.php non è una buona idea:</p>
<ul>
<li>Le modifiche al file delle funzioni andranno perse quando il tema viene aggiornato.</li>
<li>Le modifiche andranno perse se cambi il tema di WordPress.</li>
<li>Fare errori di codifica nel file delle funzioni può bloccare fuori dal tuo sito.</li>
</ul>
<p>Anche qualcosa di semplice come un punto e virgola mancante potrebbe far scomparire tutto il tuo sito… </p>
<p>Perché i plugin specifici del sito sono migliori (alternativa a Functions.php)</p>
<p>Quindi, se non vuoi modificare Functions.php, dove dovresti aggiungere le nuove funzioni del tuo sito?</p>
<p>La risposta è creare il tuo <a href="/blog/creare-un-plugin-wordpress/">plugin WordPress</a> .</p>
<p>Questo sarà un <strong>plugin specifico per il tuo sito</strong>, perché è specifico per il tuo sito e non verrà mai condiviso nella directory dei plug-in di WordPress.</p>
<p>L’uso di un plug-in specifico per il sito è la <strong>soluzione migliore</strong> perché i frammenti di codice vengono archiviati separatamente dal file Functions.php del tuo tema. Ciò significa che possono essere attivati â€‹â€‹o disattivati, proprio come qualsiasi altro plugin. Questo garantisce che <strong>il tuo codice non scomparirà se cambi tema.</strong></p>
<p>Speriamo che questo articolo ti abbia aiutato a conoscere tutto sul file Functions.php in WordPress e su come aggiungere frammenti di codice al tuo sito!</p>
]]></content>
		</item>
		
		<item>
			<title>Software per Sviluppo Web</title>
			<link>https://albertoreineri.it/blog/software-per-sviluppo-web/</link>
			<pubDate>Tue, 23 Feb 2021 20:28:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/software-per-sviluppo-web/</guid>
			<description>Amo programmare e amo i computer, quindi mi trovo spesso a dover configurare un pc per lo sviluppo web, installando tutti i software necessari.
Che sia su un pc nuovo, su una nuova distro o semplicemente dopo una formattazione, ci sono sempre una serie di programmi che devo installare ogni volta. Col tempo ho quindi creato una** lista di app** da installare al primo avvio, per avere il pc subito pronto a lavorare.</description>
			<content type="html"><![CDATA[<p>Amo programmare e amo i computer, quindi mi trovo spesso a dover configurare un pc per lo sviluppo web, installando <strong>tutti i software necessari.</strong></p>
<p>Che sia su un pc nuovo, su una nuova distro o semplicemente dopo una formattazione, ci sono sempre una serie di programmi che devo installare ogni volta. Col tempo ho quindi creato una** lista di app** da installare al primo avvio, per avere il pc subito pronto a lavorare.</p>
<p>Ho suddiviso la lista per <strong>categorie</strong> di software: quelli per programmare, per la grafica, i software generali e quelli destinati solamente ad un sistema operativo specifico.</p>
<p>Su Linux per esempio installo sempre anche le gestures (uso praticamente solo più laptop…).</p>
<p>Ecco la mia lista di software per sviluppo web:</p>
<h3 id="softwares">Softwares</h3>
<ul>
<li><a href="https://brew.sh/index_it" target="_blank" rel="noreferrer noopener">Homebrew</a></li>
<li><a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank" rel="noreferrer noopener">Git</a></li>
<li><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer noopener">VS Code</a></li>
<li><a href="https://filezilla-project.org/" target="_blank" rel="noreferrer noopener">Filezilla</a></li>
<li><a href="https://localwp.com/" target="_blank" rel="noreferrer noopener">Local by Flywheel</a></li>
<li><a href="https://nodejs.org/it/" target="_blank" rel="noreferrer noopener">Node JS</a></li>
<li><a href="https://www.python.org/" target="_blank" rel="noreferrer noopener">Python</a></li>
<li><a href="https://www.google.com/intl/it_it/chrome/" target="_blank" rel="noreferrer noopener">Chrome</a></li>
<li><a href="https://www.mozilla.org/it/firefox/new/" target="_blank" rel="noreferrer noopener">Firefox</a></li>
</ul>
<hr class="wp-block-separator" />
<h3 id="grafica">Grafica:</h3>
<ul>
<li><a href="https://www.figma.com/" target="_blank" rel="noreferrer noopener">Figma</a></li>
<li><a href="https://www.adobe.com/it/products/photoshop.html" target="_blank" rel="noreferrer noopener">Photoshop</a></li>
</ul>
<hr class="wp-block-separator" />
<h3 id="generali">Generali:</h3>
<ul>
<li><a href="https://www.whatsapp.com/?lang=it" target="_blank" rel="noreferrer noopener">WhatsApp</a></li>
<li><a href="https://simplenote.com/" target="_blank" rel="noreferrer noopener">Simplenote</a></li>
<li><a href="https://www.notion.so/" target="_blank" rel="noreferrer noopener">Notion</a></li>
<li><a href="https://www.google.com/drive/download/" target="_blank" rel="noreferrer noopener">Google Drive Sync</a></li>
<li><a href="https://www.amazon.it/gp/help/customer/display.html?nodeId=GZSM7D8A85WKPYYD" target="_blank" rel="noreferrer noopener">Kindle</a></li>
<li><a href="https://justgetflux.com/" target="_blank" rel="noreferrer noopener">F.lux</a></li>
<li><a href="https://www.spotify.com/it/download/" target="_blank" rel="noreferrer noopener">Spotify</a></li>
</ul>
<hr class="wp-block-separator" />
<h3 id="mac">MAC:</h3>
<ul>
<li><a href="https://sparkmailapp.com/it" target="_blank" rel="noreferrer noopener">Spark Mail</a></li>
<li><a href="https://www.mowglii.com/itsycal/" target="_blank" rel="noreferrer noopener">Itsycal</a></li>
<li><a href="https://rectangleapp.com/" target="_blank" rel="noreferrer noopener">Rectangle</a></li>
<li><a href="https://transmissionbt.com/" target="_blank" rel="noreferrer noopener">Transmission</a></li>
<li><a href="https://theunarchiver.com/" target="_blank" rel="noreferrer noopener">Unarchive</a></li>
</ul>
<hr class="wp-block-separator" />
<h3 id="windows">WINDOWS:</h3>
<ul>
<li><a href="https://www.avast.com/it-it/free-antivirus-download" target="_blank" rel="noreferrer noopener">Avast Antivirus</a></li>
<li><a href="https://www.utorrent.com/intl/it/desktop" target="_blank" rel="noreferrer noopener">uTorrent</a></li>
<li><a href="https://www.microsoft.com/it-it/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab" target="_blank" rel="noreferrer noopener">Windows terminal</a></li>
<li><a href="https://docs.microsoft.com/it-it/windows/wsl/install-win10" target="_blank" rel="noreferrer noopener">WSL</a></li>
<li><a href="https://www.winrar.it/" target="_blank" rel="noreferrer noopener">WinRAR</a></li>
<li><a href="https://getmailspring.com/" target="_blank" rel="noreferrer noopener">MailSpring</a></li>
<li><a href="https://www.apachefriends.org/it/index.html" target="_blank" rel="noreferrer noopener">XAMPP</a></li>
</ul>
<hr class="wp-block-separator" />
<h3 id="linux">LINUX:</h3>
<ul>
<li><a href="https://s0rata.medium.com/gesture-setup-on-elementary-os-fce53997a50" target="_blank" rel="noreferrer noopener">Gestures</a></li>
<li><a href="https://it.libreoffice.org/">Libre Office</a></li>
<li><a href="https://getmailspring.com/" target="_blank" rel="noreferrer noopener">MailSpring</a></li>
</ul>
<p>Sia per Linux che per Mac ho intenzione di creare uno script oppure anche solamente salvarmi i codici di installazione di questi software in modo da lanciare il comando una volta sola e aspettare che il pc installi tutto da solo.</p>
<p>Per ora non ho ancora avuto l’occasione per farlo, in ogni caso è molto semplice ed è uno dei motivi per cui amo i sistemi Unix.</p>
<p>Spero che questa semplice lista possa essere utile a chi come me smanetta spesso con distro e pc e ogni volta si trova a dover installare software e app.</p>
<p>Manca ancora NextCloud in questa lista, ma lo sto testando e devo ancora provarlo un po’ prima di renderlo parte definitiva del mio stack. Mi piace perché posso mantenere gli hard disk liberi e mettere tutto nel cloud, ma sono ancora in fase di test…</p>
]]></content>
		</item>
		
		<item>
			<title>Come abilitare gli aggiornamenti automatici in WordPress per le Major Release</title>
			<link>https://albertoreineri.it/blog/come-abilitare-gli-aggiornamenti-automatici-in-wordpress-per-le-major-release/</link>
			<pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-abilitare-gli-aggiornamenti-automatici-in-wordpress-per-le-major-release/</guid>
			<description>Sapevi che WordPress include aggiornamenti automatici abilitati per le versioni minori? Ciò significa che il team di WordPress.org può installare automaticamente gli aggiornamenti di sicurezza senza richiedere nulla dell’utente.
Tuttavia, non aggiorna automaticamente il tuo sito Web quando è disponibile una nuova versione del sistema. A meno che tu non faccia parte di un servizio di hosting WordPress gestito , dovrai avviare manualmente l’aggiornamento da solo.
In questo articolo, ti mostreremo come abilitare facilmente gli aggiornamenti automatici anche per le major release.</description>
			<content type="html"><![CDATA[<p>Sapevi che WordPress include <strong>aggiornamenti automatici</strong> abilitati per le versioni minori? Ciò significa che il team di WordPress.org può <strong>installare automaticamente gli aggiornamenti di sicurezza</strong> senza richiedere nulla dell’utente.</p>
<p>Tuttavia, <strong>non aggiorna automaticamente il tuo sito Web quando è disponibile una nuova versione del sistema</strong>. A meno che tu non faccia parte di un servizio di hosting WordPress gestito , dovrai avviare manualmente l’aggiornamento da solo.</p>
<p>In questo articolo, ti mostreremo come a<strong>bilitare facilmente gli aggiornamenti automatici anche per le major release.</strong></p>
<h2 id="come-funzionano-gli-aggiornamenti-automatici-di-wordpress">Come funzionano gli aggiornamenti automatici di WordPress</h2>
<p>WordPress ha introdotto la funzione di aggiornamento automatico in WordPress 3.7 (24 ottobre 2013). Ciò ha permesso a WordPress di installare automaticamente le nuove versioni minori per migliorare la sicurezza del tuo sito web.</p>
<p>C’è un’opzione per disabilitare gli aggiornamenti automatici in WordPress. Tuttavia, ti consigliamo di <strong>mantenere abilitati gli aggiornamenti automatici</strong> perché in genere risolvono importanti problemi di sicurezza e vulnerabilità.</p>
<p>I provider di hosting WordPress gestiti aggiornano automaticamente WordPress per tutte le nuove versioni, non solo per quelle minori.</p>
<p>Ora, se gestisci solo uno o due siti Web WordPress, puoi aggiornarli manualmente senza grossi problemi.</p>
<p>D’altra parte, <strong>se gestisci più siti WordPress</strong>, l’aggiornamento di tutti questi può richiedere molto tempo.</p>
<p>Diamo un’occhiata a come impostare facilmente gli aggiornamenti automatici per le principali versioni di WordPress.</p>
<h2 id="preparazione-agli-aggiornamenti-automatici-in-wordpress">Preparazione agli aggiornamenti automatici in WordPress</h2>
<p>Il livello più importante di sicurezza che è possibile aggiungere a qualsiasi sito Web è la configurazione di un sistema di <strong>backup</strong>. Che tu attivi gli aggiornamenti automatici o meno, dovresti sempre avere un sistema di backup automatico in atto per ogni sito Web WordPress.</p>
<p>Esistono diversi plug-in di backup WordPress utili che puoi utilizzare per impostare backup automatici sul tuo sito WordPress.</p>
<p>Ti consigliamo di utilizzare il plug-in <a href="https://it.wordpress.org/plugins/updraftplus/">UpdraftPlus</a> perché è il plug-in di WordPress più popolare sul mercato ed è gratuito. <strong>UpdraftPlus</strong> consente di impostare facilmente backup automatici dell’intero sito Web WordPress.</p>
<p>Inoltre, consente di archiviare automaticamente i file di backup in una posizione remota come <strong>Google Drive</strong>, Dropbox, ecc.</p>
<p>Dopo aver impostato i backup automatici di WordPress, puoi andare avanti e attivare l’aggiornamento automatico di WordPress per le versioni principali.</p>
<h2 id="metodo-1-abilita-gli-aggiornamenti-automatici-di-wordpress-per-le-versioni-principali-utilizzando-un-plug-in">Metodo 1. Abilita gli aggiornamenti automatici di WordPress per le versioni principali utilizzando un plug-in</h2>
<p>Questo metodo è più <strong>semplice</strong> e consigliato a tutti gli utenti.</p>
<p>Innanzitutto, è necessario installare e attivare il plug-in <a href="https://wordpress.org/plugins/stops-core-theme-and-plugin-updates/">Easy Updates Manager</a> . </p>
<p>Al momento dell’attivazione, è necessario visitare <strong>Dashboard »</strong> <strong>Update Options</strong> per configurare il plug-in.</p>
<p><img src="images/image-27-1-1024x200.png" alt=""></p>
<p>Nella sezione “<strong>WordPress core updates</strong>“, fai clic sull’opzione “<strong>Auto update all releases</strong>“.</p>
<p>Il plugin memorizzerà automaticamente le tue impostazioni e consentirà <strong>l’aggiornamento automatico delle principali versioni di WordPress.</strong></p>
<p>Questo plugin consente anche di <strong>impostare altri aggiornamenti automatici</strong> o disabilitarli. </p>
<h2 id="metodo-2-abilita-manualmente-laggiornamento">Metodo 2. Abilita manualmente l’aggiornamento</h2>
<p>Questo metodo richiede di <strong>aggiungere codice</strong> ai tuoi file WordPress.</p>
<p>Innanzitutto, devi aggiungere la seguente riga di codice al file <em>wp-config.php</em> del tuo sito .</p>
<pre tabindex="0"><code>define( &#39;WP_AUTO_UPDATE_CORE&#39;, true );
</code></pre><p>C’è un piccolo problema con questo codice: consente aggiornamenti <strong>notturni</strong>.</p>
<p>Per <strong>disabilitare build notturni</strong> e aggiornamenti di sviluppo, è necessario aggiungere il seguente codice nel file <em>functions.php</em></p>
<pre tabindex="0"><code>add_filter( &#39;allow_dev_auto_core_updates&#39;, &#39;__return_false&#39; );
</code></pre><p>Questo filtro disabiliterà gli aggiornamenti automatici per build notturne o aggiornamenti di sviluppo.</p>
<p>Il tuo sito WordPress è ora pronto per aggiornarsi automaticamente, senza il tuo input, ogni volta che è disponibile una nuova versione di WordPress.</p>
<h2 id="domande-frequenti-sugli-aggiornamenti-automatici-di-wordpress">Domande frequenti sugli aggiornamenti automatici di WordPress</h2>
<h3 id="1-perché-devo-installare-gli-aggiornamenti-di-wordpress"><strong>1. Perché devo installare gli aggiornamenti di WordPress?</strong></h3>
<p><strong>WordPress è un software regolarmente gestito</strong>. Migliaia di sviluppatori contribuiscono a rendere WordPress migliore e sicuro.</p>
<p>Devi installare gli aggiornamenti di WordPress non appena sono disponibili. Ciò <strong>garantisce che il tuo sito Web disponga delle ultime patch di sicurezza</strong>, nuove funzionalità per velocità e prestazioni ottimali.</p>
<h3 id="2-gli-aggiornamenti-sono-sicuri-per-il-mio-sito-web"><strong>2. Gli aggiornamenti sono sicuri per il mio sito Web?</strong></h3>
<p>Gli aggiornamenti di WordPress diventano immediatamente disponibili per milioni di siti Web. <strong>Il team principale lavora molto duramente per garantire che siano assolutamente sicuri</strong> per l’installazione di tutti i siti Web.</p>
<p>Tuttavia, consigliamo a tutti di <strong>eseguire sempre il backup del sito Web WordPress prima degli aggiornamenti</strong>. Ciò consente di tornare rapidamente indietro nel caso in cui qualcosa vada storto dopo un aggiornamento.</p>
<h3 id="3-posso-anche-aggiornare-automaticamente-i-plugin-di-wordpress"><strong>3. Posso anche aggiornare automaticamente i plugin di WordPress?</strong></h3>
<p>Per impostazione predefinita, WordPress richiede l’installazione manuale degli aggiornamenti dei plug-in. Tuttavia, <strong>puoi abilitare gli aggiornamenti automatici anche per i plugin</strong>. </p>
<p>Speriamo che questo articolo ti abbia aiutato a imparare come <strong>abilitare gli aggiornamenti automatici in WordPress</strong> per le</p>
]]></content>
		</item>
		
		<item>
			<title>2021! Buoni propositi e considerazioni</title>
			<link>https://albertoreineri.it/blog/2021-buoni-propositi-e-considerazioni/</link>
			<pubDate>Fri, 01 Jan 2021 20:26:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/2021-buoni-propositi-e-considerazioni/</guid>
			<description>È arrivato il 2021, e come ogni anno ci si ritrova a fare i buoni propositi e le considerazioni dell’anno passato. Che i propositi per questo 2021 vengano rispettati o meno non importa granché, è importante però fare un punto della propria situazione per cercare dove e come migliorarsi, ma anche per apprezzare ciò che si è riusciti a creare e a raggiungere.
Il mio 2020 Il 2020 per me è stato un anno molto molto particolare, bellissimo per certi versi ma anche bruttissimo per altri, dal quale ho imparato molto.</description>
			<content type="html"><![CDATA[<p>È arrivato il <strong>2021</strong>, e come ogni anno ci si ritrova a fare i <strong>buoni propositi</strong> e le considerazioni dell’anno passato. Che i propositi per questo 2021 vengano rispettati o meno non importa granché, è importante però <strong>fare un punto della propria situazione</strong> per cercare dove e come migliorarsi, ma anche per apprezzare ciò che si è riusciti a creare e a raggiungere.</p>
<h2 id="il-mio-2020">Il mio 2020</h2>
<p>Il 2020 per me è stato un anno molto molto particolare, <strong>bellissimo</strong> per certi versi ma anche <strong>bruttissimo</strong> per altri, dal quale ho imparato molto. Analizzando questo anno passato potrò pensare correttamente i propositi per il 2021.</p>
<p>Questo articolo parlerà del mondo della programmazione ma andrà anche un pochino <strong>dentro la mia vita personale</strong>. Lo scrivo sia per condividere esperienze lavorative e di vita, ma anche per me stesso, per mettere nero su bianco quel che mi passa per la mente in questo periodo di passaggio al nuovo anno. Così magari a inizio 2022 potrò tornare a leggermi e vedere cosa sono riuscito a fare da oggi in avanti.</p>
<h3 id="grandi-soddisfazioni">Grandi soddisfazioni</h3>
<p>Il 2020 è l’anno che mi ha <em>incoronato</em> Web Developer a tutti gli effetti. Se mi leggete da un po’ sapete che ho iniziato più di dieci anni fa a sviluppare, l’ho fatto per cinque anni da dipendente, poi mi sono dato all’insegnamento per qualche anno, sempre tenendomi aggiornato sul mondo dello sviluppo e continuando a realizzare qualche piccolo software.</p>
<p>Nel 2019 ho iniziato a lavorare come <strong>freelance</strong> nel mondo web, ma non ero sicuro che ce l’avrei fatta. Nel 2020 posso affermare di esserci riuscito. Non posso affatto dire che sono arrivato, ma che <strong>ho superato il primo anno</strong> da gennaio a dicembre. Ora vedremo come andrà questo, ma sono molto positivo.</p>
<p>Ho conosciuto e lavorato con <strong>persone meravigliose</strong>, che mi hanno spronato a diventare sempre migliore e a dedicarmi anima e corpo in progetti che mi interessano anche al di fuori dell’ambito lavorativo. Lavorare per aziende attente all’ambiente e con <strong>un’etica forte</strong> mi piace molto. Da buon teologo apprezzo quando c’è un’anima dietro un’idea o un progetto.</p>
<p>Oltre che al lavoro sono passato a <strong><a href="/blog/nuovo-macbook-pro-2020-per-sviluppo-web/">Mac</a></strong>, direi definitivamente. Per me è una soddisfazione perché finora ho sempre desiderato hardware <strong>Apple</strong>, ma non aveva senso spendere il sovrapprezzo senza avere maggiori vantaggi. Ora invece posso dire che per il mio lavoro fa la differenza, e vale sicuramente la pena spendere qualcosa in più per avere grandi vantaggi in termini di sviluppo. Poter utilizzare un sistema <strong>Unix</strong> è grande cosa.</p>
<p>Ho anche imparato ad utilizzare molto bene <strong>Linux</strong>, sia lato server che desktop. Per un po’ ho provato ad utilizzarlo come main system desktop, ma da quando ho comprato il Mac ci ho rinunciato, <strong>non è ancora arrivato il momento.</strong></p>
<p>Infine sono andato ad <strong>abitare da solo.</strong> Non sono giovanissimo, ho compiuto 29 anni da poco, ma per problemi di salute non ho potuto farlo prima. Ora nonostante abbia ancora qualche acciacco me la cavo abbastanza. Ho avuto qualche giornata negativa e qualche settimana un po’ faticosa. Dover gestire tutto quanto da solo è abbastanza complicato, spesso fare le cose comuni semplici ai più può essere molto faticoso per me, ma ce la sto facendo e ne sono molto contento.</p>
<h3 id="grandi-difficoltà">Grandi difficoltà</h3>
<p>La più grande difficoltà è sempre legata alla mia <strong>salute</strong>. Da cinque anni non sono più in forma, e ogni volta che cerco di recuperare prontamente il fisico mi blocca e devo fermarmi. Non è facile avere una mente che dice una cosa e il corpo che la ferma e la rinchiude quasi in una prigione.</p>
<p>Quest’anno a fine gennaio ho avuto una botta molto forte. Solitamente nel giro di un paio di settimane mi riprendo abbastanza, ma questa volta è stata <strong>più forte</strong> e ci ho messo dei mesi interi. Per giunta mentre cercavo di recuperare è arrivato questo <strong>maledetto</strong> Covid, che per un immunodepresso come me non è stato piacevole. Il mio stato di ansia è aumentato notevolmente e da marzo si è aggiunta una nuova paura a tutte quelle che avevo già sul lato della salute.</p>
<p>Ora a fine anno <strong>sto recuperando</strong>, sono in fase di uscita, o almeno lo spero. Ho ripreso a passeggiare e godermi la vita per quel che si può.</p>
<p>Oltre alle difficoltà fisiche anche dal punto di vista lavorativo ci sono stati degli episodi particolari che mi hanno <strong>rattristato</strong>.</p>
<p>Sono molto felice e anche orgoglioso del lavoro che ho fatto quest’anno, ma promuovendomi online mi capita di ricevere contatti <strong>dalle persone e dalle aziende più disparate</strong>. Io forse sono ancora troppo poco scaltro e tendo a fidarmi troppo fin dall’inizio, e questo mi ha portato a ritrovarmi in alcuni <strong>rapporti poco professionali</strong> dove ho dovuto rimetterci, fortunatamente solo ore di lavoro e qualche arrabbiatura. Da quest’anno cercherò di essere più scaltro, anche perché cambierò abbastanza modo di pormi online, ne parlerò fra poco.</p>
<h2 id="2021-cosa-mi-attende">2021: cosa mi attende?</h2>
<p>Cosa mi attende non lo so, ma so cosa vorrei fare durante i prossimi 12 mesi, i miei propositi per il 2021.</p>
<p>Per prima cosa ho <em>variato</em> un pochino il mio sito web. Da un sito di autopromozione è diventato un <strong>sito di divulgazione</strong>. Voglio dedicare queste pagine allo <strong>sviluppo web</strong>, non alla vendita di servizi.</p>
<p>Perciò quest’anno troverai la sezione <strong><a href="/blog">Guide</a></strong>, presente nel menù di navigazione, dove inserisco alcuni tutorial o semplici guide su alcune tecnologie web. Ho imparato molto grazie alle risorse gratuite online, e penso che sia giunta <strong>l’ora di fare la mia parte</strong>. Puoi leggere tutto gratis e anche scaricare alcune <strong>risorse</strong> utili.</p>
<p>Oltre a questo proseguirò con il <strong><a href="/articoli">blog</a></strong>. Le guide saranno articoli formativi, mentre il blog sarà un po’ più <strong>personale</strong>. Vorrei condividere i miei pensieri sulle tecnologie, l’hardware e il mondo digitale, senza escludere critiche e complimenti.</p>
<p>C’è poi il mio <strong>podcast</strong>: <a href="https://open.spotify.com/show/546eUw3PsRI1HUGbBUeghC" target="_blank" rel="noreferrer noopener">Codice e Design</a>. Sinceramente non so ancora come andrà avanti. Devo trovare il tempo di inserirlo ma non voglio farlo di corsa velocemente fra una cosa e l’altra, piuttosto sto pensando di fermarlo per un po’ e quando sarò più tranquillo riprendere a registrare puntate… Sono ancora <strong>indeciso</strong>, non so se dedicarmi maggiormente al blog o al podcast. Personalmente preferisco scrivere che parlare, ma vedremo nei prossimi mesi.</p>
<p>Infine vorrei provare a tradurre in <strong>inglese</strong> qualche mia guida, ma è un’idea buttata lì, vedremo se riuscirò a mantenerla, sicuramente non è primaria al momento.</p>
<p>Per quanto riguarda i miei servizi ora sono legato a <strong><a href="https://bikeitalia.it/" target="_blank" rel="noreferrer noopener">bikeitalia.it</a></strong> e per il momento mi basta. Lavoro anche ad un progetto personale sulla montagna e ho un’idea diciamo imprenditoriale che è in corso d’opera, magari fra qualche mese potrò dire qualcosa in più.</p>
<p>Le mie attività lavorative nel 2021:</p>
<ul>
<li><a href="https://bikeitalia.it/" target="_blank" rel="noreferrer noopener">bikeitalia.it</a></li>
<li><a href="https://attrezzaturatrekking.it/" target="_blank" rel="noreferrer noopener">attrezzaturatrekking.it</a></li>
<li><a href="/guide">Guide</a></li>
<li><a href="/articli/">Blo</a>g</li>
<li><a href="https://open.spotify.com/show/546eUw3PsRI1HUGbBUeghC">Podcast</a></li>
</ul>
<p>Faccio anche un breve elenco più che altro per me stesso, per ricordarmi che oltre al lavoro è anche importante dedicare tempo alla vita privata, e ad attività sane e rilassanti. Queste sono quelle a cui vorrei dedicarmi quest’anno:</p>
<ul>
<li>Montagna</li>
<li>Passeggiate col Cane</li>
<li>Chitarra</li>
<li>Bici</li>
<li>Moto</li>
</ul>
<p>Cose da limitare:</p>
<ul>
<li>Smartphone la mattina e la sera (lo msartphone non deve essere la prima cosa da vedere al mattino e l’ultima alla sera)</li>
<li>Social Network (sto pensando di uscirne pian piano… Per ora terrò solamente Instagram e Facebook, più che altro per lavoro, niente più Twitter, Reddit e nemmeno LinkedIn, li lascio così come sono senza utilzzarli più)</li>
<li>Linux (per quanto mi piaccia e mi diverta pasticciare sulle varie distro ultimamente è diventato peggio di una droga. Inizio con il voler testare qualche script e mi trovo un paio d’ore dopo ancora lì sopra a smanettare col terminale… Troppo tempo… Per ora mi dedicherò solamente a Linux Server)</li>
</ul>
<p>Questi sono i miei propositi per il 2021. Spero che questa lettura un po’ più personale possa esserti <strong>d’ispirazione</strong>, lo sarà sicuramente per me. Avere messo per iscritto quel che voglio fare durante l’anno <strong>mi spronerà a realizzarlo.</strong></p>
<p><strong><em>I miei migliori auguri per un buon 2021!</em></strong></p>
<p><em>Buon codice</em></p>
]]></content>
		</item>
		
		<item>
			<title>Fare lo sviluppatore è un bel lavoro?</title>
			<link>https://albertoreineri.it/blog/fare-lo-sviluppatore-%C3%A8-un-bel-lavoro/</link>
			<pubDate>Tue, 01 Dec 2020 20:23:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/fare-lo-sviluppatore-%C3%A8-un-bel-lavoro/</guid>
			<description>Ho iniziato a lavorare nel mondo della programmazione più di dieci anni fa e mi sono domandato spesso se fare lo sviluppatore è un bel lavoro.
Nella mia vita di lavori ne ho cambiati molti, sempre per mia scelta fortunatamente; non mi è ancora capitato di essere buttato fuori, almeno per il momento, non si può mai dire…
Nella mia storia lavorativa ho spaziato molto, da agente immobiliare a insegnante, ma nel frattempo sono sempre stato sviluppatore.</description>
			<content type="html"><![CDATA[<p>Ho iniziato a lavorare nel mondo della programmazione più di dieci anni fa e mi sono domandato spesso se <strong>fare lo sviluppatore è un bel lavoro</strong>.</p>
<p>Nella mia vita di lavori ne ho cambiati molti, sempre per mia scelta fortunatamente; non mi è ancora capitato di essere buttato fuori, almeno per il momento, non si può mai dire…</p>
<p>Nella mia storia lavorativa ho spaziato molto, da agente immobiliare a insegnante, ma nel frattempo sono sempre stato sviluppatore.</p>
<p>Si perché fare il programmatore ti permette di <strong>lavorare in una miriade infinita di modi</strong>: dal classico lavoro di ufficio ai lavori da freelance, bisogna solo trovare la propria strada.</p>
<p>E io ce ne ho messo di tempo per trovarla, ma penso finalmente di essere sulla strada giusta.</p>
<p>Ma non perdiamoci in chiacchiere e veniamo al dunque: <strong>fare lo sviluppatore è un bel lavoro?</strong></p>
<p>Ho ricevuto molte email di <a href="https://open.spotify.com/show/546eUw3PsRI1HUGbBUeghC" target="_blank" rel="noreferrer noopener">lettori e ascoltatori dei miei podcast</a> a riguardo, tanti ragazzi giovani e meno giovani si chiedono come sia lavorare come sviluppatore e se sia un bel lavoro o no. Rispondere non è mai facile.</p>
<p><strong>Il lavoro è una cosa molto soggettiva</strong>, dipende dal tipo di personalità che uno ha, dalla forma mentis, da ciò che vuole dalla vita. Ma in questo articolo cercherò di tirare le somme e darvi un’idea di massima circa il lavoro dello sviluppatore, cosicché possiate capire se può fare per voi o meno.</p>
<h2 id="fare-lo-sviluppatore--contro">Fare lo sviluppatore – Contro</h2>
<p>Vediamo adesso gli aspetti negativi di questo lavoro. Come tutte le cose anche qui ce ne sono…</p>
<h3 id="snervante">Snervante</h3>
<p>Questa parola rende molto. Dall’enciclopedia Treccani leggiamo: “<em>fiaccare il sistema nervoso e le relative capacità di azione e di reazione di un individuo</em>“, questa definizione ci sta tutta.</p>
<p>Spesso lavorare ore e ore a fissare righe di codici, studiare algoritmi, variabili, matrici e sistemi può mettere a dura prova il nostro povero cervello. Lavorare su progetti complessi è assai impegnativo e la sera ci si può trovare a non sapere più come ci si chiama…</p>
<p>A me capitava spesso lavorando sui gestionali. Erano software molto importanti che permettevano alle aziende di gestire magazzino, clienti, fornitori e fatture. Capite che un piccolo errore poteva portare a perdite di denaro o a verifiche da parte dell’agenzia delle entrate, e sebbene io ero solo un piccolo dipendente la responsabilità del mio codice ricadeva tutta su di me. Questo per uno stipendio veramente misero…</p>
<p>Certo molto dipende da cosa si sviluppa, se programmate siti web vetrina di 5 pagine allora potete saltare questo paragrafo e vivere felici. Se invece avete intenzione di sviluppare software complessi sappiate che il mal di testa sarà una costante.</p>
<h3 id="responsabilità-elevate">Responsabilità elevate</h3>
<p>Come già accennato sopra le responsabilità spesso sono elevate. Anche qua dipende dal progetto finale, ma se lavorate su qualcosa di grande merito e colpa sono completamente vostri.</p>
<p>Molti fanno dei paragoni fra il mondo della programmazione e i classici lavori più manuali. Certo un muratore ha la responsabilità per il muro che costruisce, questo muro deve reggere e non crollare altrimenti è colpa sua. Però il paragone non è corretto, perché un muro può essere fatto in un paio di modi, e si costruiva cinquant’anni fa come si fa adesso (non sono esperto, sicuramente qualcosa sarà cambiato ma non drasticamente).</p>
<p>Nel mondo della programmaizone le variabili sono infinite. Un processo si faceva in un modo l’anno scorso e quest’anno occorre farlo diversamente, perché sono emersi dei bug e le tecnologie si sono aggiornate. Inoltre quel processo potrà essere richiamato migliaia di volte da migliaia di utenti, se non milioni, e prevedere tutti i casi possibili non è facile.</p>
<p>Occorre avere una mente molto aperta per individuare possibili problematiche e cercare di non farsi prendere dall’ansia.</p>
<h3 id="solitudine">Solitudine</h3>
<p>Che si lavori da soli nella propria casa oppure in un ufficio con altri cento colleghi, il lavoro del programmatore è comunque solitario. I rapporti principali sono fra due soggetti: il programmatore e il computer.</p>
<p>Quando si lavora si è concentrati al massimo, si entra nel mood dello sviluppo. Non si può scrivere codice mentre si chiacchiera della partira o dell’ultima gara di Formula 1, è un lavoro che si fa con se stessi e basta.</p>
<p>Certo sono utili confronti con i colleghi, ma è impossibile fare multitasking mentre si scrive codice.</p>
<h3 id="saccenza">Saccenza</h3>
<p>Questo è il punto peggiore e che mi ha sempre fatto arrabbiare molto, anzi, che mi fa ancora arrabbiare molto.</p>
<p>Nel mondo degli sviluppatore spessi vi è una grande saccenza. Alcuni pensano di essere migliori di altri, e magari lo sono davvero, ma c’è la tendenda a considerare nulla tutto ciò che è meno di se stessi.</p>
<p>Il mondo della programmazione è veramente vastissimo! Web, Desktop, Mobile, Python, Java, PHP, .Net, poi i vari framework, per non parlare delle singole versioni di framework e linguaggi, un’infinità di roba.</p>
<p>Sapere tutto di tutto è impossibile, almeno per la maggior parte di noi, quindi ci specializziamo. Impariamo quello che ci è più utile, che ci può portare il massimo del guadagno.</p>
<p>Ebbene spesso capita di confrontarsi con altri sviluppatori su questioni in cui questi sono a un livello superiore di noi, cosa normalissima. Questi però molte volte tendono ad essere molto saccenti.</p>
<blockquote class="wp-block-quote">
  <p>
    <em>Eh ma non conosci questo?</em>
  </p>
  <p>
    <em>Davvero fai così?</em>
  </p>
  <p>
    <em>Questo fa schifo.</em>
  </p>
</blockquote>
<p>Se decidete di diventare programmatori vi sentirete sicuramente dire queste frasi, purtroppo. C’è la voglia di sentirsi superiori, di primeggiare.</p>
<p>Fortunatamente non tutti sono così, e spero che in futuro ce ne siano sempre meno, ma basta girare i forum o i gruppi facebook per vedere frasi di questo tipo, e spesso anche nel mondo reale vengono pronunciate.</p>
<p>Io personalmente sono contrarissimo a questo atteggiamento. Avendo svolto anche il lavoro di insegnante ho visto di persona quanto negativizzare le situazioni non è positivo per nessuno. Certo può gonofiare un po’ l’ego di chi pronuncia queste frasi, ma nulla più.</p>
<p>Avrei ancora moltissimo da dire su questo argomento, ma magari scriverò un articolo dedicato.</p>
<h3 id="stipendi">Stipendi</h3>
<p>Ultima nota negativa: gli stipendi.</p>
<p>Qua dipende moltissimo dalla realtà in cui si lavora. Il mio primo lavoro da programmatore era veramente sottopagato, rispetto all’impegno e alle responsabilità che comportava. Esistono però realtà che pagano molto bene, bisogna solo saperle cercare e trovare quella giusta.</p>
<p>Per mia esperienza bisogna rivolgersi alle grandi città. Non ho mai sentito di Software House o Web Agency di paesi di provincia che pagano stipendi alti ai dipendenti.</p>
<p>Nel mio caso da freelance ho visto di tutto. Ci sono aziende disposte a pagare perché riconoscono il valore del lavoro, e altre che invece prendono e pretendono e basta.</p>
<h2 id="fare-lo-sviluppatore--pro">Fare lo sviluppatore – Pro</h2>
<p>Ora che ti ho scoraggiato per bene è giunto il momento di vedere anche le cose positive. Il male risalta sempre maggiormente, ma esistono anche fattori positivi per niente male nel lavoro da programmatore. Se ho deciso di fare di questo il mio mestiere è perché questi lati positivi alla fine hanno battuto i negativi</p>
<h3 id="stimolante">Stimolante</h3>
<p>Non c’è mai un giorno uguale all’altro. Non mi riferisco alle attività fisiche, quelle sono sempre le stesse: ci si siede al computer e si batte sulla testiera.</p>
<p>Ma la mente spazia in posti infiniti. Un giorno si lavora su un sito vetrina, poi si realizza un e-commerce, poi un gestionale per inserire i dati dei propri rappresentanti e calcolarne le statistiche, poi si crea un’app…</p>
<p>C’è sempre qualcosa da fare e l’unico limite è l’immaginazione.</p>
<p>A tutti i miei clienti dico sempre “Si può fare tutto”, perché è vero, ormai tutto ciò che ci passa per la testa è fattibile. Certo servono capacità e budget, ma veramente si può creare di tutto, ora il mondo si sta digitalizzando sempre più, e noi sviluppatori siamo artefici di questo mondo.</p>
<p>Penso che questo sia molto bello e ogni mattina mi da la carica per creare qualcosa di nuovo.</p>
<h3 id="creativo">Creativo</h3>
<p>I nostri lavori vengono pubblicati, visti e utilizzati da migliaia se non milioni di persone.</p>
<p>Qua ci avviciniamo molto agli artigiani. Creaiamo qualcosa che poi sarà utilizzato al suo scopo. Possiamo mostrare al mondo i nostri lavori e ancora meglio possiamo realizzare qualcosa di positivo per l’umanità, qualcosa che aiuti tutti, anche in piccolo.</p>
<p>Quando ho realizzato il nuovo sito per bikeitalia.it ero veramente soddisfatto. È il sito di un’attività che sponsorizza l’ecologia, una mobilità rispettosa dell’ambiente e del prossimo, la salute fisica e mentale delle persone e molto altro. Inoltre quel sito costruito da me viene utilizzato da milioni di persone ogni mese. Questi dati sono fantastici, sono numeri veramente elevati.</p>
<p>Questo è veramente il lato più figo del fare lo sviluppatore</p>
<h3 id="flessibile">Flessibile</h3>
<p>Non ci sono le restrizioni tipiche dei lavori 9 to 5. Lo sviluppatore è un lavoro che può essere svolto ovunque ci sia un computer e una connessione. Si lavora principalmente da soli quindi un paio di call organizzative bastano a dare inizio a un lavoro.</p>
<p>Si può lavorare di giorno o di notte, l’importante è il prodotto finito. Se funziona tutto è a posto.</p>
<p>Certo questa mentalità non è ancora condivisa, tantomeno in Italia… Ma esiste già qualche realtà che ha capito i grandi benefici di ciò.</p>
<p>Se si dà completa libertà agli sviluppatori questi lavoreranno meglio. Lavorare quando si vuole è una grandissima cosa, si è più produttivi, non si perde tempo a fissare la finestra, a pensare al calcio o ai problemi, quando si è pronti ci si mette al pc e di fa codice. In questo modo due ore di lavoro valgono quanto 6/8 ore di lavoro svogliato.</p>
<p>Non è facile trovare aziende che capiscano questa mentalità, ma se leggete come Google gestisce i dipendenti potete farvi un’idea del giusto mindset dei datori di lavoro.</p>
<p>Io ho optato per la strada del freelance perché mi permette di gestirmi al meglio questo frangente, anche se nasconde mille altri problemi… Ma ne parleremo più avanti.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Alla fine di tutto la risposta per me è SI, fare lo sviluppatore è un bel lavoro. Certo ha i suoi lati negativi come tutto, ma alla fine dei conti non è affatto male. Se c’è la passione allora si può passare sopra alle cose brutte e concentrarsi solamente su quelle positive.</p>
<p>Certo non siamo nello stato migliore per questo lavoro, è indubbio che l’Italia sia arretrata dal punto di vista informatico, ma non penso che l’unica cosa da fare sia scappare all’estero.</p>
<p>Se c’è un problema non serve a nulla scappare, occorre cercare di risolverlo. Prendiamo atto che l’Italia ha una visione ancora antica sulla tecnologia e <strong>rimbocchiamoci le maniche per migliorare la situazione.</strong></p>
<p>Creiamo progetti, piattaforme, generiamo reddito attraverso il digitale e attraiamo il business ad investire nell’ambito. Non sono un economista, ma piuttosto che scappare preferisco affrontare la situazione e cercare, nel mio piccolo, di migliorarla!</p>
]]></content>
		</item>
		
		<item>
			<title>Nuovi Macbook con M1 per programmare</title>
			<link>https://albertoreineri.it/blog/nuovi-macbook-con-m1-per-programmare/</link>
			<pubDate>Sun, 22 Nov 2020 20:22:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/nuovi-macbook-con-m1-per-programmare/</guid>
			<description>Di recente Apple ha scosso il mondo intero con l’annuncio dei suoi nuovi Macbook con processore proprietario, l’ormai famoso Apple Silicon M1, ma andranno bene per programmare?
La risposta semplice è “dipende“… Ma mi rendo conto che non è abbastanza quindi andiamo un po’ più a fondo.
Sviluppatori iOS e Mac Per tutti quelli sviluppatori che lavorano esclusivamente in ambiente Apple, cioè che sviluppano solamente app per iOS o software per Mac OS allora la risposta è semplice: SI, i Macbook con M1 possono andare bene per programmare in questo modo.</description>
			<content type="html"><![CDATA[<p>Di recente <strong><a href="https://www.apple.com/it/" target="_blank" rel="noreferrer noopener">Apple</a> ha scosso il mondo intero <strong>con l’annuncio dei suoi nuovi Macbook con processore proprietario, l’ormai famoso</strong> Apple Silicon M1</strong>, ma andranno bene per programmare?</p>
<p>La risposta semplice è “<strong><em>dipende</em></strong>“… Ma mi rendo conto che non è abbastanza quindi andiamo un po’ più a fondo.</p>
<h2 id="sviluppatori-ios-e-mac">Sviluppatori iOS e Mac</h2>
<p>Per tutti quelli sviluppatori che lavorano esclusivamente in ambiente Apple, cioè che sviluppano solamente app per iOS o software per Mac OS allora la risposta è semplice: <strong>SI</strong>, i Macbook con M1 possono andare bene per programmare in questo modo.</p>
<p>Apple è sempre <strong>molto attenta al proprio ecosistema</strong>, il che è un gran surplus per i prodotti di questa casa. Utilizzare soltanto hardware e software Apple permette di vivere in un <strong>limbo magico</strong>, in cui tutto funziona a meraviglia senza problemi e senza bug (o comunque molto molto pochi).</p>
<p>Se siete in questa piccola nicchia innanzitutto <strong>beati voi!</strong> Rimaneteci finché potete perché il mondo al di fuori è un accumularsi di bug, errori, diver, librerie e molto altro in grado di far venire un gran mal di testa…</p>
<p>Sinceramente al di fuori di YouTube non ho ancora mai conosciuto uno sviluppatore che si occupi SOLAMENTE di sviluppo iOS e quindi possa fare a meno di tutta quella serie di componenti di cui noi Web Developer dobbiamo fare uso per forza…</p>
<h2 id="sviluppatori-android">Sviluppatori Android</h2>
<p>E per Android? Si può programmare con l’M1?</p>
<p>Da quel che ho capito <strong>al momento no</strong>, perché non è possibile virtualizzare l’emulatore di Android, ma presto dovrebbe essere possibile farlo. Non resta che <strong>aspettare</strong>…</p>
<h2 id="sviluppatori-web">Sviluppatori Web</h2>
<p>Se sei uno sviluppatore web e ti stai chiedendo se il <a href="/blog/nuovo-macbook-pro-2020-per-sviluppo-web/">Macbook</a> con processore M1 possa essere il prodotto giusto cercherò di risponderti al meglio.</p>
<p>Essendo il mondo dello sviluppo web molto molto vasto <strong>tutto dipende da cosa fai.</strong></p>
<p>Se ti occupi di sviluppo di <strong>piccoli siti web</strong>, utilizzi soltanto il browser e un editor di testo, allora non c’è nessun problema! <em>Potresti utilizzare anche la Fire Stick TV da 20 euro e non avresti grossi problemi ??.</em></p>
<p>Purtroppo però molte volte questo non basta e ci troviamo ad utilizzare software abbastanza pesanti…</p>
<p>Per il momento molti software sono disponibili su Apple Silicon solamente attraverso <strong>Rosetta</strong>, l’emulatore di Apple che permette di eseguire software sviluppati per Intel . Questo comporta maggiore lentezza, anche se si parla molto molto bene di questo emulatore.</p>
<p><strong>Chrome</strong> per il momento funziona solamente in questo modo, con Rosetta, e questo è un problema per la stragrande maggioranza degli sviluppatori web… Se non usi Chrome per sviluppare lo devi per forza utilizzare per i test dato che è il browser più utilizzato in assoluto, e non poterlo eseguire nativamente è un grande peccato. Fortunatamente Google rilascerà a breve una versione ARM quindi non c’è nulla da temere. Big G ha già fatto un bel teatrino rilasciando la versione per M1 e bloccandola poco dopo… A breve dovrebbero rilasciarla nuovamente, questa volta per davvero!</p>
<p><em>È bello come le aziende di software più grandi al mondo possono permettersi di fare grossi errori senza grandi ripercussioni, mentre noi piccoli sviluppatori siamo torchiati ad ogni minimo minuscolo buggettino??…</em></p>
<p>Oltre a Chrome ci sono altri software utilizzati molto di frequente da programmatori web che non funzionano ancora a dovere, come <strong>Docker</strong>, tutte le <strong>virtual machine</strong> (VMWare, Virtualbox, Parallels Desktop…) e <strong>Homebrew</strong> (funziona ma non ancora al 100%).</p>
<p>Personalmente senza questi programmi per me questo Macbook sarebbe praticamente inutilizzabile! Ok, è una punzecchiatura perché sicuramente risolveranno questi problemi, ma <strong>per il momento sono appunto ancora un problema.</strong></p>
<h2 id="conclusione">Conclusione</h2>
<p>Da quanto dichiara Apple e dalle prime prove sul web si può notare che questi <strong>Macbook sono macchine davvero fantastiche.</strong></p>
<p><strong>Veloci, performanti e con una batteria infinita! Meravigliosi.</strong></p>
<p>Per un utente medio sono sicuramente grandiosi, assolvono alla quasi totalità dei compiti in maniera egregia, ma per noi sviluppatori penso che sia ancora un po’ presto…</p>
<p>Scrivo questo articolo a fine <strong>novembre 2020</strong>, e al momento la vedo dura utilizzare questi Macbook per programmare senza beccarsi dei grandi mal di testa…</p>
<p>Il mio consiglio è di <strong>aspettare ancora almeno un anno</strong>, finché il periodo di transizione all’era Silicon non sarà rodato a dovere, allora potremmo sicuramente usufruire degli enormi vantaggi di questi Macbook con M1 per programmare, senza rinunciare ai nostri software preferiti!</p>
]]></content>
		</item>
		
		<item>
			<title>Miglior PC per sviluppatori, la mia esperienza</title>
			<link>https://albertoreineri.it/blog/miglior-pc-per-sviluppatori-la-mia-esperienza/</link>
			<pubDate>Sun, 13 Sep 2020 20:19:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/miglior-pc-per-sviluppatori-la-mia-esperienza/</guid>
			<description>Qual è il miglior pc per sviluppatori? Bella domanda!
È da un po’ di tempo che non scrivo un post sul mio blog. Fra le ferie e la ripresa del lavoro sono stato molto preso e non ho più avuto molto tempo per scrivere qualcosa di interessante.
Questo però mi dispiace, perché mi piace scrivere, raccontare e consigliare qualcosa sul mondo dello sviluppo web, che oltre ad essere il mio lavoro rimane una delle mie più grandi passioni.</description>
			<content type="html"><![CDATA[<p>Qual è il miglior pc per sviluppatori? Bella domanda!</p>
<p>È da un po’ di tempo che non scrivo un post sul mio blog. Fra le ferie e la ripresa del lavoro sono stato molto preso e non ho più avuto molto tempo per scrivere qualcosa di interessante.</p>
<p>Questo però mi dispiace, perché <strong>mi piace scrivere, raccontare e consigliare qualcosa sul mondo dello sviluppo web,</strong> che oltre ad essere il mio lavoro rimane una delle mie più grandi passioni.</p>
<p>In questi mesi di pausa dal blog ho ricevuto molti messaggi in cui <strong>i lettori mi chiedevano consigli sull’acquisto del PC migliore per sviluppare</strong>.</p>
<p>Oggi abbiamo a disposizione una <strong>marea di prodotti</strong> e migliaia di recensioni, che anziché semplificare l’acquisto spesso non fanno altro che insinuarci dubbi in testa e crearci più ansia del dovuto.</p>
<p><strong><em>Il pc per noi è importante!</em></strong></p>
<p>Per molte persone il pc è solamente uno strumento, un oggetto che permette di accedere a internet, leggere mail e creare documenti, da usare marginalmente durante la giornata.</p>
<p>Per noi sviluppatori invece non è così. <strong>Il pc è il nostro migliore amico</strong> (o peggior nemico…), è sì uno strumento, ma è anche <strong>LO</strong> strumento, la macchina grazie alla quale facciamo tutto.</p>
<p>Passiamo intere giornate a digitare sulla tasitera, ma non solo. Anche i classici lavori di segreteria costringono all’utilizzo del PC per la maggior parte della giornata, ma noi siamo “<em>più dentro</em>” i nostri computer.</p>
<p>Utilizziamo strumenti avanzati e comunichiamo quasi direttamente con le nostre macchine, e queste devono rispondere sempre e essere disponibili, non deluderci o mollarci di colpo.</p>
<p><strong>Qualche mese fa ho cambiato computer</strong>, dopo aver pensato molto a lungo alla macchina da acquistare, ho analizzato vari punti di vista e alla fine ho fatto la mia scelta, ma ve la dirò alla fine. Prima voglio raccontarvi percorso che mi ha portato all’acquisto.</p>
<h2 id="sistema-operativo-pc-per-sviluppatori">Sistema Operativo PC per sviluppatori</h2>
<p>Non sono mai stato un <em>Fanboy</em> di qualche azienda o progetto. Nella mia vita ho utilizzato sia <strong>Windows</strong> che <strong>Mac Os</strong> che <strong>Linux</strong> senza grossi problemi da parte di nessuno. <strong>Ognuno ha i suoi punti forti e deboli</strong>, non penso che esista un vincitore assoluto, semplicemente hanno ambiti di utilizzo diversi.</p>
<p>Il primo computer che ho acquistato da solo, “con il sudore della fronte” dopo i primi stipendi è stato un Macbook, il fantastico <strong>Macbook White</strong> del 2010. All’epoca lavoravo come sviluppatore e volevo iniziare a registrare qualche demo musicale, quindi il Mac era la scelta migliore.</p>
<p>Nel 2016 sono passato a <strong>Windows</strong>. Il Mac cominciava a rallentare e io all’epoca lavoravo come insegnante. Usavo molto poco il computer, più che altro usavo la suite di office per creare schede da dare agli studenti e gmail per leggere le email, niente altro.</p>
<p>Ho quindi preso un <strong>Asus Vivobook</strong> con il quale ho iniziato anche a dedicarmi saltuariamente a un pochino di <strong>Gaming</strong>. Niente di esasperato, ma ogni tanto la sera mi piaceva rilassarmi e giochicchiare un pochino.</p>
<p>Dal 2018 ho intrapreso la carriera di Sviluppatore Web Freelance e ho sempre utilizzato l’ASUS, andando a <strong>aumentare RAM e sostituendo l’SSD</strong> con uno migliore (ho sempre amato montare e smontare i computer, super divertente! ? ? ).</p>
<p>Quest’anno però ho sentito <strong>la necessità di cambiare</strong>. Ho iniziato a lavorare su progetti grandi e mi è capitato di dover fare non solo più lo sviluppatore ma anche il <strong>Sys Admin</strong> di un server. Questa esperienza mi ha aperto al favoloso mondo di <strong>Linux</strong>!</p>
<h2 id="linux-che-meraviglia-per-programmare">Linux, che meraviglia per programmare!</h2>
<p>Da ragazzino avevo installato una <strong>Ubuntu</strong> sul mio vecchio PC Fisso, una di quelle macchine grige/giallognole con un tubo catodico grande quanto una cassa di Moretti e ci avevo pasticciato un pochino, ma avevo abbandonato il progetto e non avevo più installato linux da nessuna parte.</p>
<p>Ho però sempre amato <strong>la filosofia dell’Open Source</strong>. Ho alternato la mia vita <strong>fra studi tecnici e filosifici</strong>, e in qualche modo l’open source metteva insieme entrambe queste parti.</p>
<p>L’idea di non dover essere schiavi di un software mi piaceva! Esistono milioni di modi per effettuare una cosa, e dover per forza utilizzarne uno obbligatoriamente scelto dallo sviluppatore in qualche modo è una limitazione della libertà. Ma qua andiamo sul palloso quindi mi fermo…</p>
<p>Il fatto è che <strong>Linux mi è piaciuto un sacco!</strong> Poter fare praticamente tutto utilizzando solo <strong>tastiera e terminale</strong>, abbandonare il fastidioso mouse e dire addio all’indolenzimento del polso, e sentirsi degli hacker solamente navigando fra le cartelle! Fantastico!!!</p>
<p><strong><em>Ho iniziato a utilizzare Ubuntu sul lavoro.</em></strong></p>
<p>Ho scelto questa distro per la sua <strong>stabilità</strong>, ne ho provate tante ma avevo bisogno di installare una serie di strumenti senza timore di piantare tutto, e Ubuntu se non altro è stabile da questo punto di vista.</p>
<p>Mi sono trovato molto bene, ma <strong><em>non al massimo.</em></strong></p>
<p>Se <strong>per sviluppare era l’ideale</strong>, non lo era per tutto il corollario di attività che svolgo da freelance, come gestione di task, gestione degli indirizzi email (leggo la posta di 12 indirizzi…), grafica etc.</p>
<p>Questo per me era un <em><strong>problema</strong></em>…</p>
<p>Come fare per unire le bellezze di Linux a una gestione ottimale della produttivita?</p>
<h2 id="mac-os-è-il-migliore">Mac OS, è il migliore???</h2>
<p>E qua spunta il buon vecchio <strong>Mac OS</strong>, un grande sistema operativo per pc per sviluppatori.</p>
<p>Se nelle conferenze google si vede la schera di sviluppatori con la mela illuminata sulle ginocchia un motivo ci sarà!</p>
<p><strong>Mac Os è veramente buono per programmare.</strong></p>
<p>Unisce un sistema <strong>Unix</strong> alla stabilità e ai software di design e produttività fondamentali per me e per molti freelance.</p>
<p>Con Mac Os posso agire da terminale con la stessa facilità di Linux (o quasi) e allo stesso tempo posso utilizzare Photoshop e <strong>Figma</strong> per il design e <strong>Spark</strong> per la gestione delle email (adoro questo programma! Se non lo conosci dacci un’occhiata.)</p>
<p>Inoltre <strong>i prodotti della Apple sono belli!</strong> E non lo dico in maniera superficiale, ma sono davvero curati e trasmettono una piacevole sensazione ogni volta che vengono utilizzati.</p>
<p><strong><em>Steve Jobs non si sbagliava sul design!</em></strong></p>
<p>Passare l’intera giornata su una macchina e dentro un sistema bello, piacevole al tocco, silenzioso e curato è tutta un’altra esperienza!</p>
<p>Questo ha solamente <strong>2 svantaggi</strong>: prezzo e giochi.</p>
<p>Il prezzo è più alto! E qui c’è poco da fare se non aspettare offerte o guardare l’usato. Ma se guardiamo ai notebook top di gamma di altre aziende alla fine la differenza di prezzo non è così elevata.</p>
<p>Per il gaming invece la Apple qualcosa sta facendo, ma lo standard rimane ancora Windws lato PC.</p>
<h2 id="quindi">Quindi?</h2>
<p>Alla fine ho preso il <strong>Macbook Pro</strong>, e mi trovo alla grande! Penso sia un gran pc per sviluppatori.</p>
<p>Per la mia attività è la macchina ideale, veloce, portatile, bella e funzionale.</p>
<p>Certo <strong>mi rimane il vecchio Asus con cui giocare.</strong></p>
<p>Inoltre ho <strong>una bella partizione con <a href="https://elementary.io/it/" target="_blank" rel="noreferrer noopener">Elementary OS </a>per quando voglio fare un po’ il Nerd</strong> e pacioccare senza timore di rompere tutto!</p>
<p>In questo momento <strong>per le mie necessità sicuramente il Mac è la macchina migliore</strong> sotto molti punti di vista. Certo <strong>non è perfetta ma ci va molto vicino.</strong></p>
<h2 id="outro">Outro</h2>
<p>Mi piace molto l’evoluzione che stanno avendo le varie <strong>distro Linux</strong> durante gli ultimi anni. Grazie anche ai social e specialmente <strong>YouTube</strong> molte persone stanno entrando nell’open-source e questo è un bene, sia per la diversificazione che per la crescita delle singole distro.</p>
<p>Se nel giro di qualche anno si potranno trovare <strong>macchine curate</strong> come il MacBook Pro (sembra che Huawei ci stia provando con i <strong>Matebook 13</strong>) e se finalmente arriveranno su Linux alcuni programmi per gestire design e produttività allora per le mie esigenze saremo vicini alla perfezione, al pc per sviluppatori dei miei sogni.</p>
<p>Spero vivamente che possa succedere!</p>
]]></content>
		</item>
		
		<item>
			<title>Piccolo progetto open source</title>
			<link>https://albertoreineri.it/blog/piccolo-progetto-open-source/</link>
			<pubDate>Mon, 31 Aug 2020 10:32:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/piccolo-progetto-open-source/</guid>
			<description>Ho pubblicato su github un piccolo progettino open source che probabilmente amplierò in futuro.
Avrei voluto pubblicare tutto Orange CMS, ma visto che crearlo è stato un lavoro molto grande e che per poterlo caricare su github dovrei ancora lavorarci su per renderlo scaricabile, installabile e capibile da tutti, per il momento ho iniziato a pubblicare solamente una piccola base per poter creare una propria area riservata in php.
E’ un modulo di login molto semplice da utilizzare, vuole essere un’idea per iniziare a sviluppare un backend, un punto dal quale partire.</description>
			<content type="html"><![CDATA[<p>Ho pubblicato su <a href="https://github.com/albertoreineri/Simple-login-and-registration-in-php" target="_blank" rel="noreferrer noopener">github </a>un piccolo <strong>progettino open source</strong> che probabilmente amplierò in futuro.</p>
<p>Avrei voluto pubblicare tutto <strong><a href="https://orange.reineristudio.comt/" target="_blank" rel="noreferrer noopener">Orange CMS</a></strong>, ma visto che crearlo è stato un lavoro molto grande e che per poterlo caricare su github dovrei ancora lavorarci su per renderlo scaricabile, installabile e capibile da tutti, per il momento <strong>ho iniziato a pubblicare solamente una piccola base</strong> per poter creare una propria area riservata in php.</p>
<p>E’ un modulo di login <strong>molto semplice</strong> da utilizzare, <strong>vuole essere un’idea per iniziare a sviluppare un backend</strong>, un punto dal quale partire.</p>
<h2 id="come-si-usa">Come si usa?</h2>
<p>E’ molto <strong>semplice</strong>! Basta seguire i seguenti passaggi:</p>
<ul>
<li>Clona la repo nella cartella del tuo sito web</li>
<li>Crea un database in phpmyadmin</li>
<li>Importa “user.sql” dalla cartella “database”</li>
<li>Inserisci i parametri corretti nel file “login/config.php”</li>
<li>Vai su “il-tuo-sito/login”</li>
<li>Effettua il login o crea un nuovo utente</li>
</ul>
<p><em>Utente di default:</em></p>
<p><em>– Username: user</em></p>
<p>_– Email: <a href="mailto:user@user.com">user@user.com</a> _</p>
<p><em>– Password: Username1!</em></p>
<p>Se stai cercando qualche risorsa per poter creare un’area di amministrazione, un backend o una web app, allora questo modulo può fare per te.</p>
<h2 id="framework">Framework</h2>
<p>È vero che oggi esistono molti framework che offrono questa funzionalità già integrata, ma non sempre sono la scelta migliore.</p>
<p>Tutto dipende dalla tipologia di progetto. Se si tratta di un grande progetto scalabile allora sicuramente è meglio orientarsi su un framework solido e ampiamente testato (sempre open source).</p>
<p>Se invece si tratta di un piccolo portale web, una web app semplice o di un progetto sviluppato da un singolo sviluppatore senza particolari funzionalità impegnative, allora penso che si possa fare tutto da zero.</p>
<p>Spero che possa essere di aiuto!</p>
<p><em>Buon codice!!!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Come ho creato un’app per le note</title>
			<link>https://albertoreineri.it/blog/come-ho-creato-unapp-per-le-note/</link>
			<pubDate>Mon, 03 Aug 2020 21:57:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-ho-creato-unapp-per-le-note/</guid>
			<description>In rete esistono molte app per le note. Le ho provate quasi tutte ma nessuna ha mai soddisfatto al pieno le mie esigenze.
Quando cerco un’app per le note ho bisogno di alcune cose fondamentali:
Grafica piacevole e minimale (odio il superfluo) Modalità notte Facilità di formattazione (non devo far granché, ma almeno poter inserire il grassetto in maniera semplice e veloce) Disponibile su tutti i dispositivi (odio dover usare per forza il pc o lo smartphone e non poter condividere) Una volta che ho capito come avrei voluto avere la mia app per le note non mi restava altro che iniziare a crearla!</description>
			<content type="html"><![CDATA[<p>In rete esistono <strong>molte app per le note.</strong> Le ho provate quasi tutte ma <strong>nessuna ha mai soddisfatto al pieno le mie esigenze</strong>.</p>
<p>Quando cerco un’app per le note ho bisogno di alcune cose <strong>fondamentali</strong>:</p>
<ul>
<li>Grafica <strong>piacevole</strong> e minimale (odio il superfluo)</li>
<li>Modalità <strong>notte</strong></li>
<li>Facilità di <strong>formattazione</strong> (non devo far granché, ma almeno poter inserire il grassetto in maniera semplice e veloce)</li>
<li>Disponibile su <strong>tutti i dispositivi</strong> (odio dover usare per forza il pc o lo smartphone e non poter condividere)</li>
</ul>
<p>Una volta che ho capito come avrei voluto avere la mia app per le note non mi restava altro che <strong>iniziare a crearla!</strong></p>
<p>Così è nata <a href="https://www.albynotes.albydev.net/" target="_blank" rel="noreferrer noopener">Albertonotes</a>!</p>
<p>Ho preso spunto soprattutto dall’app <a href="https://apps.apple.com/it/app/note/id1110145109" target="_blank" rel="noreferrer noopener">Note</a> di Apple e da <a href="https://simplenote.com/" target="_blank" rel="noreferrer noopener">Simplenote</a>, due fantastiche app, ma la prima è disponibile solo su <strong>iPhone</strong>, <strong>iPad</strong> e <strong>Mac</strong>, mentre la seconda permette la formattazione solo in <strong>markdown</strong> e bisogna sempre <em>switchare</em> fra testo editato e renderizzato, non proprio il massimo…</p>
<p>Ho così deciso di <strong>prendere il meglio da entrambe</strong> e metterlo inseme in qualcosa di mio.</p>
<h2 id="ho-utilizzato">Ho utilizzato:</h2>
<h3 id="php-e-mysql">PHP e MySQL</h3>
<p>Ho pensato di fare tutto in Javascript, magari con Node JS, ma lo <a href="/blog/cms-framework-o-core-language/">stack <strong>php e mysql</strong></a> lo conosco molto bene e visto che si tratta di un side project ho scelto la via più semplice per me</p>
<h3 id="ajax">Ajax</h3>
<p>Per evitare il reload della pagina ad ogni salvataggio, cambio di nota etc. ho utilizzato delle chiamate ajax.</p>
<p>In questo modo <strong>la pagina è sempre fissa</strong>, cambia solo il contenuto di alcune sessioni. se riuscirò a creare anche le varie app desktop e mobile questa funzionalità sarà molto utile, oltre che dare una piacevole esperienza utente</p>
<h3 id="quill-js">Quill JS</h3>
<p>Per formattare le note ho utilizzato <strong><a href="https://quilljs.com/" target="_blank" rel="noreferrer noopener">Quill JS</a></strong>, un fantastico editor in Javascript molto semplice da implementare e gestire.</p>
<p>Sono stato a lungo indeciso, in passato utilizzavo spesso <a href="https://ckeditor.com/ckeditor-4/demo/#inline" target="_blank" rel="noreferrer noopener">CkEditor</a> ma è un po’ pesantuccio. Mi interessava anche <a href="https://editorjs.io/" target="_blank" rel="noreferrer noopener">Editor Js</a>, molto bello graficamente ma mi è sembrato ancora un po’ agli inizi.</p>
<p>Quill JS è per me la scelta migliore, almeno per il momento.</p>
<h3 id="orange-framework">Orange Framework</h3>
<p>Non ne ho ancora parlato molto ma ho costruito un mio framework in php per creare le mie web app.</p>
<p>Ho lavorato con <strong>Laravel</strong> e <strong>CodeIgniter</strong>, ma mi trovo meglio a fare tutto da me. Voglio precisare che non si tratta di reinventare la ruota come molti dicono, ma di sviluppare le cose per bene la prima volta e riutilizzarle in seguito.</p>
<p>Ho iniziato creando il modulo di login, poi studiando un’architettura software decente e ora ho una struttura abbastanza pronta all’uso e soprattutto portable. Posso copiare i singoli moduli che mi interessano da un progetto all’altro, modificare il file di configurazione e sono sicuro che funzionano.</p>
<p>Potete provare l’app qui: <a href="https://typewrite.reineristudio.com/">https://www.albynotes.albydev.net</a></p>
<p>Sono ancora in <strong>fase beta</strong>, quindi ogni consiglio o segnalazione di bug è ben accetto!</p>
<p>Fammi sapere nei commenti cosa ne pensi o se vuoi saperne di più.</p>
<p>Spero che questo articolo sia stato interessante.</p>
]]></content>
		</item>
		
		<item>
			<title>Nuovo Macbook Pro 2020 per sviluppo web</title>
			<link>https://albertoreineri.it/blog/nuovo-macbook-pro-2020-per-sviluppo-web/</link>
			<pubDate>Tue, 30 Jun 2020 21:52:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/nuovo-macbook-pro-2020-per-sviluppo-web/</guid>
			<description>Ebbene sì, sono passato ad Apple! Ho acquistato il nuovo Macbook Pro 2020.
È stata una decisione pensata a lungo, ho valutato tutto nei minimi dettagli e alla fine mi sono deciso a fare l’acquisto. Ne è valsa la pena?
Ve lo racconto in questo articolo. Essendo uno sviluppatore mi concentrerò soprattutto sul software, ma parlerò anche un pochino di hardware.
Quale Macbook? Per prima cosa devo specificare il modello che ho acquistato.</description>
			<content type="html"><![CDATA[<p>Ebbene sì, sono passato ad <strong>Apple</strong>! Ho acquistato il nuovo Macbook Pro 2020.</p>
<p>È stata una decisione <strong><a href="/blog/nuovi-macbook-con-m1-per-programmare/">pensata a lungo</a></strong>, ho valutato tutto nei minimi dettagli e alla fine mi sono deciso a fare l’acquisto. <strong>Ne è valsa la pena?</strong></p>
<p>Ve lo racconto in questo articolo. Essendo uno <strong>sviluppatore</strong> mi concentrerò soprattutto sul software, ma parlerò anche un pochino di hardware.</p>
<h2 id="quale-macbook">Quale Macbook?</h2>
<p>Per prima cosa devo specificare il modello che ho acquistato. L’offerta della Apple, sebbene sia sempre limitata, contiene macchine molto diverse fra loro per prestazioni e potenza.</p>
<p>Io mi sono portato a casa il <strong><a href="https://www.apple.com/it/macbook-pro/" target="_blank" rel="noreferrer noopener">Macbook Pro 2020 Modello Base</a></strong> (core i5 di ottava generazione, 8Gb di RAM e 250Gb di SSD).</p>
<p>Secondo me al momento è il miglior compromesso fra prezzo e prestazioni. Certo è sempre molto più caro di un suo equivalente Windows, ma analizzandolo a fondo alla fine si scopre che non è proprio così.</p>
<p>Certo si può acquistare un Notebook Windows con stesse componenti interne a metà prezzo, però questo prodotto avrà sicuramente un pessimo display, ventole molto rumorose, touchpad piccolo e poco sfruttabile, effetto plastica, tastiera di bassa qualità etc.</p>
<p>Guardanto solo le componenti principali può sembrare caro, ma andando su un suo concorrente Windows con la stessa qualità costruttiva come il Dell XPS 13, alla fine il prezzo non è molto superiore, e se devo spendere 1500 euro per un 13 pollici prendo un Apple.</p>
<p>Non perché odio Windows, anzi, però Mac Os è molto più gradevole e ordinato.</p>
<h2 id="perché-sono-passato-a-apple">Perché sono passato a Apple?</h2>
<p><strong>Unix</strong> è la risposta base. Lavorando sempre più spesso con il terminale sentivo molto la mancanza di questo tool in Windows. Mi sono arrangiato per molto con WSL, ma non è la stessa cosa.</p>
<p>Sono un tipo un po’ <strong>precisino</strong>, e avere un PC con due terminali suoi (cmd e Powershell) più altri sottosistemi (io avevo Ubuntu e Kali Linux) crea un gran disordine d’insieme. Ci sono alcune cose che funzionano solo su linux e quindi necessitano della WSL, altre che invece devono girare per forza con Powershell, e alla fine tutto questo disordine è disorientativo e porta via molto tempo in configurazioni.</p>
<p>Su MacOS il terminale funziona alla grande, e può contare su un ambiente bello e elegante, cosa che purtroppo non ho mai trovato il Linux. Certo Ubuntu è molto figo anche come design, ma non mi ci sono mai trovato veramente a mio agio, soprattutto quando si trattava di usare strumenti di design.</p>
<h2 id="ho-fatto-bene">Ho fatto bene?</h2>
<p>Si, non mi sono ancora pentito della scelta. Conoscevo già molto bene MacOS in quanto l’ho utilizzato per quasi dieci anni in passato. Ero passato a Windows perché non ho mai amato la batterfly keyboard né i prezzi esorbitanti degli ultimi anni.</p>
<p>Quando ho visto la tastiera nuova, l’SSD raddoppiato e il prezzo sceso (sebbene di soli 20€) ho deciso che era giunto il momento di tornare a MacOs.</p>
<p>Da sviluppatore sono veramente molto più tranquillo. Tutto ciò che mi serve funziona benissimo. Node Js, Git, Lamp stack, React, tutto ciò che ho installato gira molto bene.</p>
<p>Inoltre posso utilizzare un gran numero di gesture e scorciatoie veramente utili e che mi fanno risparmiare molto tempo.</p>
<p>Esistono migliaia di articoli sul web che parlano dei vantaggi del trackpad, delle gestures e di queste cose, ma ho scoperto una cosetta che non ho trovato scritta da nessuna parte. Forse sono solo io nella mia pignoleria ad averla colta, ma l’ho trovata una cosa fantastica. Ecco cos’è:</p>
<h3 id="pollice-vs-mignolo">Pollice VS Mignolo</h3>
<p>Eh già, parliamo di dita. Ma mi spiego meglio. Su Windows il tasto forte della tastiera è il Ctrl, su Mac il Cmd. Su Windows quindi si utilizza molto il mignolo (Ctrl+C), su Mac il pollice (Cmd+C).</p>
<p>Ebbene ho apprezzato tantissimo questa cosa su Mac. Il pollice è molto vicino al trackpad e alla barra spaziatrice, inoltre è molto più facile muovere il pollice rispetto all’indice, anatomicamente.</p>
<p>Questo ha velocizzato un sacco di operazioni. Fare copia/incolla, refreshare pagine web, spostarsi fra i software, tutto è più fluido.</p>
<h2 id="cosa-amo-di-macos">Cosa amo di MacOS</h2>
<ul>
<li>Trackpad favoloso</li>
<li>Pollice meglio di mignolo</li>
<li>Terminale</li>
<li>Qualità generale</li>
<li>Batteria</li>
<li>Software</li>
</ul>
<h2 id="cosa-mi-manca">Cosa mi manca</h2>
<ul>
<li>Giochi</li>
</ul>
<h2 id="conclusione">Conclusione</h2>
<p>Alla fine penso che il prezzo non sia così esagerato. Per chi come me poi utilizza il computer per lavoro è fondamentale avere una macchina affidabile su cui poter contare, ed è di aiuto averla anche bella e piacevole da vedere e utilizzare.</p>
<p>Alla fine l’unica cosa che un pochino mi manca sono i giochi. Non sono un gamer incallito, ma ogni tanto mi piace trascorrere una mezz’oretta a giocare un po’ la sera, e per fare questo devo ancora utilizzare il mio vecchio pc, ma va bene così, almeno il Mac resta pulito anche a livello software.</p>
<p>Questa è la mia esperienza con il nuovo Macbook Pro fino ad adesso, spero continui ad andare avanti bene.</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>1. Creare un tema WordPress da zero – Parte 1</title>
			<link>https://albertoreineri.it/blog/1.-creare-un-tema-wordpress-da-zero-parte-1/</link>
			<pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/1.-creare-un-tema-wordpress-da-zero-parte-1/</guid>
			<description>WordPress è una piattaforma fantastica! Permette di creare siti web di ogni tipo in maniera semplice e veloce, grazie all’infinita quantità di temi e plugin disponibili, moltissimi dei quali in maniera gratuita.
Però quando si vuole fare il salto di livello ed avere un sito web veramente performante, allora conviene utilizzare un tema sviluppato da zero, in grado di implementare tutte le funzioni necessarie nella maniera più performante!
Niente errori in console, niente stringhe in inglese, niente codici sparsi in giro per il sito, niente css e js inutili… Solo ciò che serve realmente, sviluppato nel modo corretto.</description>
			<content type="html"><![CDATA[<p><strong>WordPress</strong> è una piattaforma <strong>fantastica</strong>! Permette di creare <strong>siti web di ogni tipo</strong> in maniera semplice e <strong>veloce</strong>, grazie all’infinita quantità di <strong>temi</strong> e <strong>plugin</strong> disponibili, moltissimi dei quali in maniera gratuita.</p>
<p>Però <strong>quando si vuole fare il salto di livello</strong> ed avere un sito web veramente <strong>performante</strong>, allora conviene utilizzare un <strong>tema sviluppato da zero</strong>, in grado di implementare tutte le funzioni necessarie nella maniera più performante!</p>
<p><strong>Niente errori</strong> in console, niente stringhe in inglese, niente codici sparsi in giro per il sito, niente css e js inutili… Solo ciò che serve realmente, sviluppato nel modo corretto.</p>
<p><strong>Oggi vediamo come creare un tema WordPress da zero!</strong></p>
<p>Mettiti comodo e <strong>prenditi il tuo tempo</strong>, ci vorrà un po’, ma alla fine avrai realizzato <strong>il tuo primo tema WordPress</strong> funzionante e nel rispetto di tutte le best practice.</p>
<p><em><strong>Partiremo da un’installazione di WordPress, se non sai come installare il CMS ti consiglio di seguire le guide per <a href=".local/inizia-qui/inizia-qui-principiante/">Inizia Qui</a>.</strong></em></p>
<p><em>Questo tutorial è suddiviso in 3 parti, alla fine potrai scaricare l’intero tema che creeremo insieme per confrontarlo e correggere eventuali errori. Ti consiglio di seguire le varie parti e scaricare il tema solo alla fine, ma se ti servisse prima lo puoi trovare sul fondo della <a href="/blog/creare-un-tema-wordpress-da-zero-parte-3/">parte 3</a>.</em></p>
<h2 id="creiamo-il-nostro-tema">CREIAMO IL NOSTRO TEMA</h2>
<p>Se apri la cartella del tuo sito <strong>WordPress</strong> noterai che all’interno sono presenti <strong>3 cartelle</strong>:</p>
<ul>
<li>wp-admin</li>
<li>wp-content</li>
<li>wp-includes</li>
</ul>
<p>A noi per il momento interessa solamente la “<strong>wp-content</strong>“, quindi iniziamo ad <strong>aprirla</strong>.</p>
<p>All’interno di wp-content apriamo ora la cartella “<strong>themes</strong>“, che come puoi intuire contiene <strong>i temi del progetto.</strong></p>
<p><strong>Procediamo quindi a creare il nostro primo tema!</strong></p>
<p>Creiamo una <strong>nuova cartella</strong> e la chiamiamo “<strong>il-mio-tema</strong>“, dopodiché apriamo la cartella con <strong><a href="http://code.visualstudio.com/">VS Code</a></strong>. (Se non sai come fare questo passaggio visualizza le <a href="/blog/le-basi-dellhtml/">guide per principianti</a>)</p>
<p>Un <strong>tema WordPress</strong> per essere riconosciuto necessita solamente di <strong>2 file:</strong></p>
<ul>
<li>style.css</li>
<li>index.php</li>
</ul>
<p><strong>creiamo quindi questi 2 file all’interno della cartella “il-mio-tema”</strong> e inseriamo questo codice in “<strong>style.css</strong>“, in modo da indicare a WordPress i dati del tema:</p>
<pre tabindex="0"><code>/*
Theme Name: Il mio tema
Author: Specialista WP
Description: Il mio primo tema WordPress
Version: 0.0.1
*/
</code></pre><p>Puoi <strong>sostituire</strong> l’autore con il tuo nome, così come il nome del tema e la descrizione.</p>
<p>Se ora salvi il file CSS e vai nel backend di WordPress in “<strong>Aspetto – Temi</strong>” vedrai comparire il nostro tema!</p>
<p><img src="images/image-12-2.png" alt=""></p>
<p>Puoi <strong>attivare il tema</strong> e <em>voilà</em>! Il tema è fatto!</p>
<p>Non è poi tanto complicato vero? Già, però ora il tema è <strong>vuoto</strong>, occorre riempirlo!</p>
<p>Inizia con l’inserire questo codice nella “<strong>index.php</strong>“, è un <strong>layout di base</strong> creato con <a href="/blog/le-basi-di-bootstrap/">bootstrap</a> sul quale andremo a costruire il nostro sito:</p>
<p><strong>index.html</strong></p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;IE=edge&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&gt;
    &lt;!-- I 3 meta tags qua sopra DEVONO essere inseriti come primi --&gt;
    &lt;meta name=&#34;description&#34; content=&#34;&#34;&gt;
    &lt;meta name=&#34;author&#34; content=&#34;&#34;&gt;

    &lt;title&gt;Il mio primo tema&lt;/title&gt;

    &lt;!-- Bootstrap core CSS --&gt;
    &lt;link href=&#34;http://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; rel=&#34;stylesheet&#34;&gt;

&lt;/head&gt;

&lt;body&gt;

    &lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
        &lt;div class=&#34;container&#34;&gt;
            &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Il mio primo tema&lt;/a&gt;
            &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
                &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
            &lt;/button&gt;

            &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
                &lt;ul class=&#34;navbar-nav ml-auto&#34;&gt;
                    &lt;li class=&#34;nav-item active&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Chi sono&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Blog&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Contatti&lt;/a&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/nav&gt;


    &lt;div class=&#34;container mt-5&#34;&gt;

        &lt;div class=&#34;row&#34;&gt;
            &lt;!-- CONTENUTO --&gt;
            &lt;div class=&#34;col-sm-8&#34;&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;articolo-list&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;15 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;articolo-list mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 2&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;16 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;articolo-list mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 3&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;17 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- NAVIGATION LINKS --&gt;
                &lt;nav aria-label=&#34;Page navigation example&#34;&gt;
                    &lt;ul class=&#34;pagination justify-content-center mb-5&#34;&gt;
                        &lt;li class=&#34;page-item disabled&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Precedente&lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;2&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;3&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;Successivo&lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/nav&gt;
                &lt;!-- /NAVIGATION LINKS --&gt;
            &lt;/div&gt;
            &lt;!-- /CONTENUTO --&gt;

            &lt;!-- SIDEBAR --&gt;
            &lt;div class=&#34;col-sm-3 col-sm-offset-1 blog-sidebar&#34;&gt;
                &lt;div&gt;
                    &lt;h4&gt;Chi sono&lt;/h4&gt;
                    &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Ultimi articoli&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 1&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 2&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 3&lt;/a&gt;&lt;/li&gt;

                    &lt;/ol&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Social&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
                    &lt;/ol&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;!-- /SIDEBAR --&gt;

        &lt;/div&gt;&lt;!-- /.row --&gt;

    &lt;/div&gt;&lt;!-- /.container --&gt;

    &lt;footer&gt;
        &lt;div class=&#34;container text-center mb-5&#34;&gt;
            &lt;p&gt;Sito realizzato da &lt;a href=&#34;&#34;&gt;Specialista WP!&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/footer&gt;


    &lt;!-- Bootstrap core JavaScript
    ================================================== --&gt;
    &lt;!-- Placed at the end of the document so the pages load faster --&gt;
    &lt;script src=&#34;http://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p>Se ora <strong>salvi</strong> e <strong><em>refreshi</em></strong> la home del sito vedrai del contenuto!</p>
<p>La pagina è commentata, quindi dovresti riuscire a capire bene il codice al suo interno.</p>
<p><em>Ricorda sempre di commentare il codice indicando cosa stai facendo, potrà aiutare i tuoi collaboratori ma anche il te stesso del futuro quando ritornerà al codice dopo molto tempo!</em></p>
<p><strong>Ora procediamo con la creazione del tema!</strong></p>
<h2 id="dividere-in-sezioni">DIVIDERE IN SEZIONI</h2>
<p>Ora esiste solamente index.php, ma noi vogliamo creare un <strong>tema vero e proprio</strong>, che avrà delle parti di layout che si <strong>ripeteranno</strong> spesso e altre parti da aggiornare <strong>dinamicamente</strong>.</p>
<p>Procediamo quindi a <strong>dividere il layout</strong> del nostro sito in quattro sezioni:</p>
<ul>
<li>header.php</li>
<li>footer.php</li>
<li>sidebar.php</li>
<li>content.php</li>
</ul>
<p><strong>Creiamo</strong> questi <strong>quattro file</strong> nella cartella del nostro tema ed andiamo a <strong>spezzettare la index.php</strong> in questo modo:</p>
<p><strong>heder.php</strong></p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;IE=edge&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&gt;
    &lt;!-- I 3 meta tags qua sopra DEVONO essere inseriti come primi --&gt;
    &lt;meta name=&#34;description&#34; content=&#34;&#34;&gt;
    &lt;meta name=&#34;author&#34; content=&#34;&#34;&gt;

    &lt;title&gt;Il mio primo tema&lt;/title&gt;

    &lt;!-- Bootstrap core CSS --&gt;
    &lt;link href=&#34;http://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; rel=&#34;stylesheet&#34;&gt;

&lt;/head&gt;

&lt;body&gt;

    &lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
        &lt;div class=&#34;container&#34;&gt;
            &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Il mio primo tema&lt;/a&gt;
            &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
                &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
            &lt;/button&gt;

            &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
                &lt;ul class=&#34;navbar-nav ml-auto&#34;&gt;
                    &lt;li class=&#34;nav-item active&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Chi sono&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Blog&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Contatti&lt;/a&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/nav&gt;


    &lt;div class=&#34;container mt-5&#34;&gt;

        &lt;div class=&#34;row&#34;&gt;
</code></pre><p><strong>footer.php</strong></p>
<pre tabindex="0"><code>
            &lt;/div&gt;&lt;!-- /.row --&gt;

&lt;/div&gt;&lt;!-- /.container --&gt;

    &lt;footer&gt;
        &lt;div class=&#34;container text-center mb-5&#34;&gt;
            &lt;p&gt;Sito realizzato da &lt;a href=&#34;&#34;&gt;Specialista WP!&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/footer&gt;


    &lt;!-- Bootstrap core JavaScript
    ================================================== --&gt;
    &lt;!-- Placed at the end of the document so the pages load faster --&gt;
    &lt;script src=&#34;http://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><strong>sidebar.php</strong></p>
<pre tabindex="0"><code>            &lt;!-- SIDEBAR --&gt;
            &lt;div class=&#34;col-sm-3 col-sm-offset-1 blog-sidebar&#34;&gt;
                &lt;div&gt;
                    &lt;h4&gt;Chi sono&lt;/h4&gt;
                    &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Ultimi articoli&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 1&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 2&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 3&lt;/a&gt;&lt;/li&gt;

                    &lt;/ol&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Social&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
                    &lt;/ol&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;!-- /SIDEBAR --&gt;
</code></pre><p><strong>content.php</strong></p>
<pre tabindex="0"><code>

            &lt;!-- CONTENUTO --&gt;
            &lt;div class=&#34;col-sm-8&#34;&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;articolo-list&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;15 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;articolo-list mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 2&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;16 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;articolo-list mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 3&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;17 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- NAVIGATION LINKS --&gt;
                &lt;nav aria-label=&#34;Page navigation example&#34;&gt;
                    &lt;ul class=&#34;pagination justify-content-center mb-5&#34;&gt;
                        &lt;li class=&#34;page-item disabled&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Precedente&lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;2&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;3&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;Successivo&lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/nav&gt;
                &lt;!-- /NAVIGATION LINKS --&gt;
            &lt;/div&gt;
            &lt;!-- /CONTENUTO --&gt;
</code></pre><p>Ora non ci resta che richiamare i vari pezzi di contenuto nella index.php, in modo da montare il sito, in questo modo:</p>
<p><strong>index.php</strong></p>
<pre tabindex="0"><code>&lt;?php get_header(); ?&gt;

&lt;?php get_template_part( &#39;content&#39;, get_post_format() ); ?&gt;

&lt;?php get_sidebar(); ?&gt;

&lt;?php get_footer(); ?&gt;
</code></pre><p>Ora la nostra index.php è <strong>molto più semplice</strong> no?</p>
<p>Le funzioni <em>get_header()</em>, <em>get_sidebar()</em> e <em>get_footer()</em> vanno automaticamente ad inserire i fine <em>header.php</em>, <em>sidebar.php</em> e <em>footer.php</em>.</p>
<p>Per inserire un file diverso abbiamo utilizzato la funzione <em>get_template_part()</em> indicando il nome del file php da cui prendere il codice.</p>
<p>Nella programmazione è molto importante <strong>suddividere i contenuti</strong> in parti più piccole, in modo da rendere i file più semplici e facilmente leggibili.</p>
<h2 id="impostazioni-principali">IMPOSTAZIONI PRINCIPALI</h2>
<p>Vediamo ora come <strong>recuperare</strong> alcune delle <strong>informazioni principali</strong> del nostro sito.</p>
<p>Nel <strong>backend</strong> puoi impostare un nome e una descrizione al tuo sito, nella sezione “<strong>Impostazioni – Generali</strong>“.</p>
<p><img src="images/image-14-1.png" alt=""></p>
<p><strong>Inserisci</strong> il <strong>titolo</strong> del sito e un <strong>motto</strong>. Ora vediamo come recuperare questi dati nel <strong>frontend</strong>!</p>
<p>Andiamo in <strong>header.php</strong> e modifichiamo il <strong>titolo</strong> nella navbar del sito.</p>
<p>Eliminiamo quindi la scritta “<strong>Il mio primo tema</strong>” e la sostituiamo con</p>
<pre tabindex="0"><code>&lt;?php echo get_bloginfo( &#39;name&#39; ); ?&gt;
</code></pre><p>In questo modo <strong>il nome del sito sarà dinamico.</strong></p>
<p>Possiamo anche inserire il <strong>motto</strong> del sito con questa funzione:</p>
<pre tabindex="0"><code>&lt;?php echo get_bloginfo( &#39;description&#39; ); ?&gt;
</code></pre><p>Infine possiamo impostare <strong>i link alla home del sito</strong> sul titolo, in questo modo:</p>
<pre tabindex="0"><code>&lt;a class=&#34;navbar-brand&#34; href=&#34;&lt;?php echo esc_url( home_url( &#39;/&#39; ) ); ?&gt;&#34;&gt;&lt;?php echo get_bloginfo( &#39;name&#39; ); ?&gt;&lt;/a&gt;
</code></pre><p>Molto bene! <strong>Abbiamo iniziato a rendere dinamico il nostro sito!</strong> Ora buttiamoci in qualcosa di più complicato ma <strong>fondamentale</strong>!</p>
<h2 id="il-loop">IL LOOP</h2>
<p><strong>Il loop sta alla base di ogni tema WordPress</strong>. Consente di inserire una serie di dati recuperandoli dal database.</p>
<p>Possiamo utilizzarlo per inserire l’elenco degli articoli, delle pagine, di una determinata categoria, di sezioni speciali etc.</p>
<p>Tutti i contenuti in WordPress vengono generati da loop! Possiamo dire che <strong>è la funzione più importante di tutte!</strong></p>
<p>Nel <strong>backend</strong> al momento abbiamo solamente <strong>l’articolo</strong> di default: “Ciao mondo!”, vediamo come <strong>farlo comparire nella home page del sito.</strong></p>
<p>Il <strong>loop</strong> di WordPress è molto semplice:</p>
<pre tabindex="0"><code>&lt;?php
if (have_posts()) :
    while (have_posts()) : the_post();
?&gt;

        &lt;!-- Contenuto del loop --&gt;

&lt;?php
    endwhile;
endif;
?&gt;
</code></pre><p>Direi che <strong>si spiega</strong> abbastanza <strong>da solo</strong>.</p>
<p>Se ci sono dei post allora inizia il loop, nel quale inserisce i post finché ce ne sono.</p>
<p>Proviamo ad <strong>inserire il loop nella nostra home page</strong>, in index.php</p>
<p><strong>index.php</strong></p>
<pre tabindex="0"><code>&lt;?php get_header(); ?&gt;

&lt;?php
if (have_posts()) :
    while (have_posts()) : the_post();

        get_template_part(&#39;content&#39;, get_post_format());

    endwhile;
endif;
?&gt;

&lt;?php get_sidebar(); ?&gt;

&lt;?php get_footer(); ?&gt;
</code></pre><p>Ora <strong>rendiamo dinamico il contenuto</strong> all’interno del file content.php</p>
<p><strong>content.php</strong></p>
<pre tabindex="0"><code>

            &lt;!-- CONTENUTO --&gt;
            &lt;div class=&#34;col-sm-8&#34;&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;articolo-list&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;&lt;?php the_title(); ?&gt;&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;&lt;?php the_date(&#39;d/m/Y&#39;); ?&gt;  - Scritto da &lt;a href=&#34;#&#34;&gt;&lt;?php the_author(); ?&gt;&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;?php the_content(); ?&gt;

                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- NAVIGATION LINKS --&gt;
                &lt;nav aria-label=&#34;Page navigation example&#34;&gt;
                    &lt;ul class=&#34;pagination justify-content-center mb-5&#34;&gt;
                        &lt;li class=&#34;page-item disabled&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Precedente&lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;2&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;3&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;Successivo&lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/nav&gt;
                &lt;!-- /NAVIGATION LINKS --&gt;
            &lt;/div&gt;
            &lt;!-- /CONTENUTO --&gt;
</code></pre><p>Benissimo! Ora in home page compare solamente il nostro primo articolo.</p>
<p>Prova a <strong>creare un nuovo articolo</strong> nel backend e a pubblicarlo, lo vedrai comparire anche nella home page!</p>
<p><strong>Grande! Stai iniziando a fare sul serio con WordPress!</strong></p>
<p>Se vuoi continuare a sviluppare il tuo primo tema WordPress da zero prosegui con la <a href="/blog/creare-un-tema-wordpress-da-zero-parte-2/">parte 2</a>!</p>
<p><a href="/blog/creare-un-tema-wordpress-da-zero-parte-2/">Parte 2 &raquo;</a></p>
]]></content>
		</item>
		
		<item>
			<title>2. Creare un tema WordPress da zero – Parte 2</title>
			<link>https://albertoreineri.it/blog/2.-creare-un-tema-wordpress-da-zero-parte-2/</link>
			<pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/2.-creare-un-tema-wordpress-da-zero-parte-2/</guid>
			<description>Nella parte 1 di questa guida per creare un tema WordPress da zero abbiamo iniziato a creare in nostro primo tema WordPress, creando header, footer e sidebar e imparando come funziona il loop di WordPress.
Ora andiamo a rendere dinamico il contenuto delle varie sezioni!
MENU WordPress permette di impostare dei menu, nella sezione “Aspetto – Menu“.
Questi menu creati nel backend possono essere inseriti nel frontend, rendendo così eventuali modifiche molto semplici ed immediate.</description>
			<content type="html"><![CDATA[<p>Nella <strong><a href="/blog/creare-un-tema-wordpress-da-zero-parte-1/">parte 1</a></strong> di questa guida per <strong>creare un tema WordPress da zero</strong> abbiamo iniziato a creare in nostro primo tema WordPress, creando <strong>header</strong>, <strong>footer</strong> e <strong>sidebar</strong> e imparando come funziona il <strong>loop</strong> di WordPress.</p>
<p>Ora andiamo a <strong>rendere dinamico</strong> il contenuto delle varie sezioni!</p>
<h2 id="menu">MENU</h2>
<p>WordPress permette di impostare dei <strong>menu</strong>, nella sezione “<strong>Aspetto – Menu</strong>“.</p>
<p>Questi menu <strong>creati nel backend</strong> possono essere <strong>inseriti nel frontend</strong>, rendendo così eventuali modifiche molto semplici ed immediate.</p>
<p><strong>Vediamo come fare.</strong></p>
<p>Per prima cosa dobbiamo <strong>abilitare il nostro tema all’utilizzo dei menu</strong>. Se infatti provi ad andare nel backend a certare la sezione “Aspetto – Menu” ora non la troverai ancora.</p>
<p>Per abilitarla dobbiamo creare quello che sarà il file più importante di tutto il tema: <em><strong>functions.php</strong></em>.</p>
<p>Creiamo quindi un file chiamato <em>functions.php</em> e inseriamo al suo interno questo codice:</p>
<pre tabindex="0"><code>&lt;?php
//Setup del tema
function il_mio_tema_setup() {

//Imposto il menù per la navbar
    register_nav_menus(array(
		&#39;navigation&#39; =&gt; __( &#39;Menu Navbar&#39;,&#39;il-mio-tema&#39;),
	));

}

add_action(&#39;after_setup_theme&#39;, &#39;il_mio_tema_setup&#39;);
</code></pre><p>Abbiamo creato una funzione di <strong>setup del tema</strong>, che utilizzeremo ancora in seguito per inserire altre personalizzazioni.</p>
<p>Qua abbiamo <strong>registrato un nuovo menu</strong> attraverso la funzione <em>register_nav_menus</em> e l’abbiamo chiamato ‘<strong>Menu Navbar</strong>‘.</p>
<p>Se ora andiamo nel <strong>backend</strong> vedremo che la sezione “Aspetto – Menu” è attiva e utilizzabile.</p>
<p>Procediamo quindi a <strong>creare un nuovo menù:</strong></p>
<p><img src="images/image-31-1024x324-1.png" alt=""></p>
<p>Per il momento inseriamo solamente la home page e la pagina di esempio di default di WordPress, giusto per avere del contenuto al suo interno e clicchiamo su “<strong>Crea menu</strong>“.</p>
<p>Poi possiamo impostare il menù nella <strong>posizione</strong> “Menù navbar”:</p>
<p><img src="images/image-32-1024x142-1.png" alt=""></p>
<p>Ora non ci resta che <strong>inserire questo menù nella nostra barra di navigazione</strong>, nell’header del tema.</p>
<p>Apriamo quindi <em>header.php</em> e sostituiamo l&rsquo;<ul> della nav con questo:</p>
<pre tabindex="0"><code>            &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
                &lt;?php
                $args = array(
                    &#39;theme_location&#39; =&gt; &#39;navigation&#39;,
                    &#39;depth&#39;      =&gt; 2,
                    &#39;container&#39; =&gt; false,
                    &#39;menu_class&#39; =&gt; &#39;navbar-nav ml-auto&#39;,
                    &#39;add_li_class&#39;  =&gt; &#39;nav-item&#39;,
                    &#39;link_class&#39;   =&gt; &#39;nav-link&#39;,
                    &#39;walker&#39;     =&gt; new Bootstrap_Walker_Nav_Menu()

                );

                ?&gt;
                &lt;?php wp_nav_menu($args); ?&gt;
            &lt;/div&gt;
</code></pre><p>IMPORTANTE: per selezionare il giusto menù abbiamo inserito il theme_location uguale al nome di registrazione del menu inserito in functions.php.</p>
<p>Per far funzionare correttamente il <strong>dropdown</strong> di bootstrap dobbiamo ancora aggiungere una funzione che permetta di gestire i vari sottomenù. Questa funzione è chiamata “<strong>walker</strong>“, puoi semplicemente incollare questo codice nel <em>functions.php</em>:</p>
<pre tabindex="0"><code>// Custom Walker Class for Bootstrap Menu
add_action( &#39;after_setup_theme&#39;, &#39;bootstrap_setup&#39; );

if ( ! function_exists( &#39;bootstrap_setup&#39; ) ):

  function bootstrap_setup(){

    class Bootstrap_Walker_Nav_Menu extends Walker_Nav_Menu {


      function start_lvl( &amp;$output, $depth = 0, $args = array() ) {

        $indent = str_repeat( &#34;\t&#34;, $depth );
        $output    .= &#34;\n$indent&lt;ul class=\&#34;dropdown-menu\&#34;&gt;\n&#34;;

      }

      function start_el( &amp;$output, $item, $depth = 0, $args = array(), $id = 0 ) {

        $indent = ( $depth ) ? str_repeat( &#34;\t&#34;, $depth ) : &#39;&#39;;

        $li_attributes = &#39;&#39;;
        $class_names = $value = &#39;&#39;;

        $classes = empty( $item-&gt;classes ) ? array() : (array) $item-&gt;classes;
        $classes[] = ($args-&gt;walker-&gt;has_children) ? &#39;dropdown&#39; : &#39;&#39;;
        $classes[] = ($item-&gt;current || $item-&gt;current_item_ancestor) ? &#39;active&#39; : &#39;&#39;;
        $classes[] = &#39;menu-item-&#39; . $item-&gt;ID;
        $classes[] = &#39;nav-item&#39;;


        $class_names = join( &#39; &#39;, apply_filters( &#39;nav_menu_css_class&#39;, array_filter( $classes ), $item, $args ) );
        $class_names = &#39; class=&#34;&#39; . esc_attr( $class_names ) . &#39;&#34;&#39;;

        $id = apply_filters( &#39;nav_menu_item_id&#39;, &#39;menu-item-&#39;. $item-&gt;ID, $item, $args );
        $id = strlen( $id ) ? &#39; id=&#34;&#39; . esc_attr( $id ) . &#39;&#34;&#39; : &#39;&#39;;

        $output .= $indent . &#39;&lt;li&#39; . $id . $value . $class_names . $li_attributes . &#39;&gt;&#39;;

        $attributes  = ! empty( $item-&gt;attr_title ) ? &#39; title=&#34;&#39;  . esc_attr( $item-&gt;attr_title ) .&#39;&#34;&#39; : &#39;&#39;;
        $attributes .= ! empty( $item-&gt;target )     ? &#39; target=&#34;&#39; . esc_attr( $item-&gt;target     ) .&#39;&#34;&#39; : &#39;&#39;;
        $attributes .= ! empty( $item-&gt;xfn )        ? &#39; rel=&#34;&#39;    . esc_attr( $item-&gt;xfn        ) .&#39;&#34;&#39; : &#39;&#39;;
        $attributes .= ! empty( $item-&gt;url )        ? &#39; href=&#34;&#39;   . esc_attr( $item-&gt;url        ) .&#39;&#34;&#39; : &#39;&#39;;
        $attributes .= ($args-&gt;walker-&gt;has_children)      ? &#39; class=&#34;nav-link dropdown-toggle&#34; id=&#34;navbarDropdownMenuLink&#34; data-toggle=&#34;dropdown&#34; aria-haspopup=&#34;true&#34; aria-expanded=&#34;false&#34;&#39; : &#39;class=&#34;nav-link&#34;&#39;;

        $item_output = $args-&gt;before;
        $item_output .= ($depth &gt; 0) ? &#39;&lt;a class=&#34;dropdown-item&#34;&#39; . $attributes . &#39;&gt; &#39; : &#39;&lt;a&#39;. $attributes .&#39;&gt;&#39;;
        $item_output .= $args-&gt;link_before . apply_filters( &#39;the_title&#39;, $item-&gt;title, $item-&gt;ID ) . $args-&gt;link_after;
        $item_output .= &#39;&lt;/a&gt;&#39;;
        $item_output .= $args-&gt;after;

        $output .= apply_filters( &#39;walker_nav_menu_start_el&#39;, $item_output, $item, $depth, $args );
      }

    }

  }

endif;
</code></pre><p>Ora se salvi e aggiorni dovresti avere <strong>il menu funzionante e dinamico!</strong></p>
<h2 id="widget">WIDGET</h2>
<p>I <strong>widget</strong> sono una parte <strong>importantissima</strong> di WordPress. Consentono di creare una <strong>sezione inseribile in più parti</strong> in maniera semplice e veloce.</p>
<h3 id="inizializziamo-i-widget">INIZIALIZZIAMO I WIDGET</h3>
<p>Per inizializzare un widget dobbiamo andare sempre nel <em>functions.php</em> ed inserire questo codice:</p>
<pre tabindex="0"><code>// Widgets
function InizializzazioneWidget() {

	register_sidebar( array(
		&#39;name&#39; =&gt; &#39;Sidebar&#39;,
		&#39;id&#39; =&gt; &#39;sidebar1&#39;,
		&#39;before_widget&#39; =&gt; &#39;&lt;div class=&#34;sidebar&#34;&gt;&#39;,
		&#39;after_widget&#39; =&gt; &#39;&lt;/div&gt;&#39;,
		&#39;before_title&#39; =&gt; &#39;&lt;h3&gt;&#39;,
		&#39;after_title&#39; =&gt; &#39;&lt;/h3&gt;&#39;,
	));
}

add_action(&#39;widgets_init&#39;, &#39;InizializzazioneWidget&#39;);
</code></pre><p>Ora abbiamo <strong>aggiunto la possibilità di inserire widget nella sidebar</strong>. I widget saranno inseriti in un div con classe “<strong>sidebar</strong>” e il titolo di ogni widget sarà un <h3>.</p>
<p>Se andiamo nel backend in “<strong>Aspetto – Widget</strong>” possiamo vedere che abbiamo un’area riservata alla sidebar:</p>
<p><img src="images/image-33.png" alt=""></p>
<p>Proviamo ad inserire dei widget al suo interno. Al momento non verranno inseriti nel frontend.</p>
<p>Dobbiamo <strong>andare a dire alla sidebar di prendere il suo contenuto attraverso i widget</strong>!</p>
<p>Apriamo quindi il nostro file <em>sidebar.php</em>, cancelliamo tutto e sostituiamo il codice con questo:</p>
<pre tabindex="0"><code>&lt;!-- SIDEBAR --&gt;
&lt;div class=&#34;col-sm-3 col-sm-offset-1 blog-sidebar&#34;&gt;
    &lt;?php if (is_active_sidebar(&#39;sidebar1&#39;)) : ?&gt;

        &lt;?php dynamic_sidebar(&#39;sidebar1&#39;); ?&gt;

    &lt;?php endif; ?&gt;
&lt;/div&gt;
&lt;!-- /SIDEBAR --&gt;
</code></pre><p>Ora nel backend proviamo ad inserire il Widget <strong>“Articoli recenti”</strong> nella sidebar, inserendo “Articoli recenti” come titolo e salvando.</p>
<p><img src="images/image-34-1.png" alt=""></p>
<p>Se tutto è andato liscio dovresti vedere gli ultimi articoli apparire nella sidebar!</p>
<p><img src="images/image-35.png" alt=""></p>
<p><strong>Fantastico! Hai appena creato un widget!</strong></p>
<p>Puoi creare <strong>widget anche in altre parti del sito</strong>, per esempio nel footer.</p>
<p><strong>Esercizio:</strong></p>
<p>Prova a creare dei widget da solo adesso.</p>
<p>Crea 4 widget da inserire nel footer del sito. Ricordati, devi registrare 4 zone per il footer in functions.php e andare nel file footer.php a inserire le aree giuste!</p>
<p>Ecco il risultato nel front-end:</p>
<p><img src="images/image-36-1024x138-1.png" alt=""></p>
<p>Prenditi un po’ di tempo e prova a farlo, qua sotto ti lascerò <strong>il codice:</strong></p>
<p><strong>functions.php</strong></p>
<pre tabindex="0"><code>// Widgets
function InizializzazioneWidget() {

	register_sidebar( array(
		&#39;name&#39; =&gt; &#39;Sidebar&#39;,
		&#39;id&#39; =&gt; &#39;sidebar1&#39;,
		&#39;before_widget&#39; =&gt; &#39;&lt;div class=&#34;sidebar&#34;&gt;&#39;,
		&#39;after_widget&#39; =&gt; &#39;&lt;/div&gt;&#39;,
		&#39;before_title&#39; =&gt; &#39;&lt;h3&gt;&#39;,
		&#39;after_title&#39; =&gt; &#39;&lt;/h3&gt;&#39;,
	));

    register_sidebar( array(
		&#39;name&#39; =&gt; &#39;Footer Area 1&#39;,
		&#39;id&#39; =&gt; &#39;footer1&#39;,
		&#39;before_widget&#39; =&gt; &#39;&lt;div class=&#34;widget-item&#34;&gt;&#39;,
		&#39;after_widget&#39; =&gt; &#39;&lt;/div&gt;&#39;,
		&#39;before_title&#39; =&gt; &#39;&lt;h2&gt;&#39;,
		&#39;after_title&#39; =&gt; &#39;&lt;/h2&gt;&#39;,
    ));

    register_sidebar( array(
		&#39;name&#39; =&gt; &#39;Footer Area 2&#39;,
		&#39;id&#39; =&gt; &#39;footer2&#39;,
		&#39;before_widget&#39; =&gt; &#39;&lt;div class=&#34;widget-item&#34;&gt;&#39;,
		&#39;after_widget&#39; =&gt; &#39;&lt;/div&gt;&#39;,
		&#39;before_title&#39; =&gt; &#39;&lt;h2&gt;&#39;,
		&#39;after_title&#39; =&gt; &#39;&lt;/h2&gt;&#39;,
    ));

    register_sidebar( array(
		&#39;name&#39; =&gt; &#39;Footer Area 3&#39;,
		&#39;id&#39; =&gt; &#39;footer3&#39;,
		&#39;before_widget&#39; =&gt; &#39;&lt;div class=&#34;widget-item&#34;&gt;&#39;,
		&#39;after_widget&#39; =&gt; &#39;&lt;/div&gt;&#39;,
		&#39;before_title&#39; =&gt; &#39;&lt;h2&gt;&#39;,
		&#39;after_title&#39; =&gt; &#39;&lt;/h2&gt;&#39;,
    ));

    register_sidebar( array(
		&#39;name&#39; =&gt; &#39;Footer Area 4&#39;,
		&#39;id&#39; =&gt; &#39;footer4&#39;,
		&#39;before_widget&#39; =&gt; &#39;&lt;div class=&#34;widget-item&#34;&gt;&#39;,
		&#39;after_widget&#39; =&gt; &#39;&lt;/div&gt;&#39;,
		&#39;before_title&#39; =&gt; &#39;&lt;h2&gt;&#39;,
		&#39;after_title&#39; =&gt; &#39;&lt;/h2&gt;&#39;,
	));


}

add_action(&#39;widgets_init&#39;, &#39;InizializzazioneWidget&#39;);
</code></pre><p><strong>footer.php</strong></p>
<pre tabindex="0"><code>&lt;div class=&#34;row&#34;&gt;

            &lt;?php if (is_active_sidebar(&#39;footer1&#39;)) : ?&gt;

                &lt;div class=&#34;col-lg-3&#34;&gt;
                    &lt;?php dynamic_sidebar(&#39;footer1&#39;); ?&gt;
                &lt;/div&gt;

            &lt;?php endif; ?&gt;

            &lt;?php if (is_active_sidebar(&#39;footer2&#39;)) : ?&gt;

                &lt;div class=&#34;col-lg-3&#34;&gt;
                    &lt;?php dynamic_sidebar(&#39;footer2&#39;); ?&gt;
                &lt;/div&gt;

            &lt;?php endif; ?&gt;

            &lt;?php if (is_active_sidebar(&#39;footer3&#39;)) : ?&gt;

                &lt;div class=&#34;col-lg-3&#34;&gt;
                    &lt;?php dynamic_sidebar(&#39;footer3&#39;); ?&gt;
                &lt;/div&gt;

            &lt;?php endif; ?&gt;

            &lt;?php if (is_active_sidebar(&#39;footer4&#39;)) : ?&gt;

                &lt;div class=&#34;col-lg-3&#34;&gt;
                    &lt;?php dynamic_sidebar(&#39;footer4&#39;); ?&gt;
                &lt;/div&gt;

            &lt;?php endif; ?&gt;
        &lt;/div&gt;
</code></pre><p>Molto bene, ora <strong>il sito inizia a prendere forma!</strong> Andiamo ora a cerare i layout per le pagine, gli articoli e gli archivi.</p>
<h2 id="layout-pagine">LAYOUT PAGINE</h2>
<p>Per creare un layout dedicato alle pagine di WordPress dobbiamo andare nella cartella del nostro tema e creare un file <em><strong>page.php</strong></em>.</p>
<p><strong>page.php</strong></p>
<pre tabindex="0"><code>&lt;?php get_header(); ?&gt;


&lt;?php
if (have_posts()) :
    while (have_posts()) : the_post();

?&gt;
        &lt;!-- TITOLO --&gt;
        &lt;h1&gt;&lt;?php the_title(); ?&gt;&lt;/h1&gt;

        &lt;!-- IMMAGINE EVIDENZA --&gt;
        &lt;?php the_post_thumbnail(); ?&gt;

        &lt;!-- CONTENUTO --&gt;
        &lt;?php the_content(); ?&gt;

&lt;?php

    endwhile;
endif;
?&gt;

&lt;?php get_footer(); ?&gt;
</code></pre><p>Questo codice ci permetterà di <strong>visualizzare il titolo, l’immagine in evidenza ed il contenuto</strong> della pagina salvata nel backend.</p>
<p>Per differenziarla dagli articoli non abbiamo inserito la sidebar nelle pagine.</p>
<p>Vediamo ora come creare un articolo.</p>
<h3 id="layout-articoli">LAYOUT ARTICOLI</h3>
<p>Per creare un layout dedicato agli articoli ci basterà creare il file <em><strong>single.php</strong></em> all’interno del tema e inserire il loop:</p>
<p><strong>single.php</strong></p>
<pre tabindex="0"><code>&lt;?php get_header(); ?&gt;

&lt;div class=&#34;container&#34;&gt;
    &lt;div class=&#34;row&#34;&gt;g&lt;!-- CONTENTUO --&gt;
        &lt;div class=&#34;col-lg-8&#34;&gt;

            &lt;?php
            if (have_posts()) :
                while (have_posts()) : the_post();

            ?&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h1&gt;&lt;?php the_title(); ?&gt;&lt;/h1&gt;

                    &lt;!-- IMMAGINE EVIDENZA --&gt;
                    &lt;?php the_post_thumbnail(); ?&gt;

                    &lt;!-- CONTENUTO --&gt;
                    &lt;?php the_content(); ?&gt;

            &lt;?php

                endwhile;
            endif;
            ?&gt;

        &lt;/div&gt;
        &lt;!-- SIDEBAR --&gt;
        &lt;div class=&#34;col-lg-4&#34;&gt;

            &lt;?php get_sidebar(); ?&gt;

        &lt;/div&gt;
    &lt;/div&gt;

&lt;/div&gt;

&lt;?php get_footer(); ?&gt;
</code></pre><p>In questo caso abbiamo il contenuto dell’articolo sulla sinistra e la sidebar sulla destra.</p>
<p>Ed ecco il nostro bel layout per gli articoli!</p>
<h2 id="layout-archivi">LAYOUT ARCHIVI</h2>
<p>Un <strong>archivio</strong> è una pagina che contiene un <strong>elenco di post.</strong></p>
<p>Iniziamo con il creare una categoria “<strong>blog</strong>” nel backend di WordPress, dopodiché inseriamo questa categoria nel nostro menu di navigazione.</p>
<p>Creiamo anche un paio di articoli con categoria “blog”, in modo da avere dei contenuti da visualizzare nel frontend.</p>
<p>Ora andiamo nella cartella del nostro tema e creiamo un file <em><strong>archive.php</strong></em> contenente questo codice:</p>
<p><strong>archive.php</strong></p>
<pre tabindex="0"><code>&lt;?php get_header(); ?&gt;

&lt;div class=&#34;container&#34;&gt;
    &lt;div class=&#34;row&#34;&gt;
        &lt;!-- CONTENTUO --&gt;
        &lt;div class=&#34;col-lg-8&#34;&gt;
            &lt;h1&gt;
                &lt;?php
                single_cat_title();
                ?&gt;
            &lt;/h1&gt;

            &lt;?php
            if (have_posts()) :
                while (have_posts()) : the_post();

            ?&gt;
                    &lt;a href=&#34;&lt;?php the_permalink(); ?&gt;&#34;&gt;
                        &lt;div class=&#34;articolo&#34;&gt;
                            &lt;!-- TITOLO --&gt;
                            &lt;h1&gt;&lt;?php the_title(); ?&gt;&lt;/h1&gt;

                            &lt;!-- IMMAGINE EVIDENZA --&gt;
                            &lt;?php the_post_thumbnail(); ?&gt;

                            &lt;!-- CONTENUTO --&gt;
                            &lt;?php the_excerpt(); ?&gt;
                        &lt;/div&gt;
                    &lt;/a&gt;
            &lt;?php

                endwhile;
            endif;
            ?&gt;

        &lt;/div&gt;
        &lt;!-- SIDEBAR --&gt;
        &lt;div class=&#34;col-lg-4&#34;&gt;

            &lt;?php get_sidebar(); ?&gt;

        &lt;/div&gt;
    &lt;/div&gt;

&lt;/div&gt;



&lt;?php get_footer(); ?&gt;
</code></pre><p>Il <strong>loop</strong> come puoi vedere <strong>è sempre lo stesso</strong>, però in questo caso al posto che visualizzare il contenuto (the_content), abbiamo visualizzato <strong>l’excerpt</strong>!</p>
<p>Un <strong>excerpt</strong> è una parte del contenuto, un’anteprima del testo vero e proprio.</p>
<p>In più abbiamo inserito il link ad ogni singolo articolo, utilizzando <em><strong>the_permalink</strong></em>.</p>
<p>Non è così complicato vero?</p>
<p><strong>Il tema è sempre più completo!</strong> Ci mancano solamente ancora un paio di passaggi. Leggi la parte numero 3 per imparare a creare un tema WordPress completo!</p>
<p><em><a href="/blog/le-basi-dellhtml/">&laquo; Parte 1</a></em></p>
<p><em><a href="/blog/creare-un-tema-wordpress-da-zero-parte-3/">Parte 3 &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>3. Creare un tema WordPress da zero – Parte 3</title>
			<link>https://albertoreineri.it/blog/3.-creare-un-tema-wordpress-da-zero-parte-3/</link>
			<pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/3.-creare-un-tema-wordpress-da-zero-parte-3/</guid>
			<description>Negli ultimi tutorial abbiamo iniziato a creare un tema WordPress da zero, e siamo arrivati già a un buon punto!
Ci mancano però ancora un paio di cosette per rendere accettabile il nostro lavoro. Vediamo di andare avanti!
Ti ricordo che sul fondo di questo articolo potrai trovare un link al tema completo. Potrai scaricarlo per cercare eventuali errori ed utilizzarlo come vorrai! Consideralo un regalo!
Ma riprendiamo il tutorial!</description>
			<content type="html"><![CDATA[<p>Negli <a href="/argomento/wordpress-dev/">ultimi tutorial</a> abbiamo iniziato a <strong>creare un tema WordPress da zero</strong>, e siamo arrivati già a un buon punto!</p>
<p>Ci mancano però ancora un paio di cosette per rendere accettabile il nostro lavoro. <strong>Vediamo di andare avanti!</strong></p>
<p><em>Ti ricordo che sul fondo di questo articolo potrai trovare un link al tema completo. Potrai scaricarlo per cercare eventuali errori ed utilizzarlo come vorrai! Consideralo un regalo!</em></p>
<p>Ma riprendiamo il <strong>tutorial</strong>!</p>
<h2 id="inserire-immagini">Inserire immagini</h2>
<p>Con WordPress è semplicissimo inserire immagini all&rsquo;interno degli articoli, delle pagine o dei widget, ma se volessimo inserire per esempio un logo? Oppure un&rsquo;immagine in un punto specifico del sito?</p>
<p>Per fare questo dobbiamo utilizzare la funzione <em>get_template_directory_uri</em>, che ci permette di <strong>collegarci alla cartella del nostro tema</strong>. Vediamo come fare.</p>
<h3 id="inseriamo-un-logo-nella-navbar">Inseriamo un logo nella navbar</h3>
<p>Per prima cosa rechiamoci nella cartella del nostro tema e creiamo un&rsquo;altra cartella chiamata &ldquo;<strong>img</strong>&rdquo;. Qua dentro ora possiamo inserire le immagini che vogliamo inserire nel tema. Inseriamo un logo. Io lo chiamerò &ldquo;<strong>logo.png</strong>&rdquo;.</p>
<p>Ora andiamo nel nostro <em>header.php</em> e inseriamo il logo prima del titolo del nostro sito, in questo modo:</p>
<pre tabindex="0"><code>&lt;img src=&#34;&lt;?php echo get_template_directory_uri(); ?&gt;/img/logo.png&#34; alt=&#34;&#34; height=&#34;50&#34;&gt;
</code></pre><p>La funzione <em>get_template_directory_uri</em> inserirà il percorso della cartella del nostro sito, a cui noi aggiungiamo il percorso per raggiungere l&rsquo;immagine.</p>
<p>Prova a salvare e aggiornare il sito, dovresti vedere <strong>il logo comparire</strong> prima del nome del sito!</p>
<p>Se appare brutto puoi <strong>modificarlo tramite CSS</strong>, ma per il momento ci interessa il fatto che compaia!</p>
<p>La funzione <em>get_template_directory_uri</em> può essere utilizzata ogni volta che dobbiamo raggiungere qualcosa contenuto nella <strong>cartella del nostro tema.</strong></p>
<p>Potremmo anche utilizzarla per inserire i file CSS e JS nel sito, ma WordPress prevede un sistema diverso, che vedremo fra poco.</p>
<h2 id="hook">Hook</h2>
<p>Nello sviluppo WordPress gli <strong>hook</strong> hanno una grande importanza.</p>
<p>Ci permettono di <em>aggrapparci</em> a questi per inserire le nostre customizzazioni. Questo permette a noi sviluppatori di inserire delle <strong>modifiche al nostro tema</strong> senza toccare il core di WordPress.</p>
<p>Ci sono alcuni hook che sono <strong>fondamentali</strong> in ogni tema ben fatto.</p>
<h3 id="wp_title">wp_title</h3>
<p>Un primo hook da inserire è il <em>wp_title</em>, che va messo nel meta tag <code>&lt;title&gt;</code>, nell&rsquo;<code>&lt;head&gt;</code> della pagina.</p>
<p>Apriamo quindi il nostro <code>heder.php</code> e modifichiamo il <code>&lt;title&gt;</code> in questo modo:</p>
<pre tabindex="0"><code>&lt;title&gt;&lt;?php wp_title(); ?&gt;&lt;/title&gt;
</code></pre><p>In questo modo il tag del titolo verrà <strong>gestito da WordPress</strong> nel migliore dei modi.</p>
<h3 id="wp_head">wp_head</h3>
<p>Sempre nel nostro header dobbiamo aggiungere l&rsquo;hook <em>wp_head</em>. Questo ci permette di inserire i nostri CSS e JS nell&rsquo;<head> della pagina, come vedremo fra poco.</p>
<p>Aggiungiamo quindi questo codice giusto prima del <em></head></em>:</p>
<pre tabindex="0"><code>&lt;?php wp_head(); ?&gt;
</code></pre><h3 id="body_class">body_class</h3>
<p>Rimaniamo sempre nel nostro header.php e aggiungiamo un hook anche al <body>, in questo modo:</p>
<pre tabindex="0"><code>&lt;body &lt;?php body_class(); ?&gt;&gt;
</code></pre><p>Così WordPress <strong>gestirà al meglio il body</strong> del nostro tema.</p>
<h3 id="wp_footer">wp_footer</h3>
<p>L&rsquo;ultimo hook che andremo ad aggiungere è il <em>wp_footer</em>, che permette di inserire i contenuti prima del <em></body></em>, come i file javascript.</p>
<p>Andiamo quindi nel <em>footer.php</em> e inseriamo questo giusto prima del </body></p>
<pre tabindex="0"><code>&lt;?php wp_footer(); ?&gt;
</code></pre><h2 id="inserire-css-e-js-in-un-tema-wordpress">Inserire CSS e JS in un tema WordPress</h2>
<p>Il <strong>metodo corretto</strong> per inserire dei file CSS e JS all&rsquo;interno di un tema WordPress è un po&rsquo; particolare.</p>
<p>Sebbene funzioni anche in metodo classico di inserimento nell&rsquo;<head> e prima del </body> (metodo che abbiamo utilizzato nella parte 1 di questa serie di tutorial), un tema WordPress ben fatto deve inserire i file CSS e JS attraverso il file <strong><em>functions.php.</em></strong></p>
<h3 id="css">CSS</h3>
<p>Iniziamo ad aprire il nostro file <em>functions.php</em> e inseriamo questo codice per embeddare il nostro file style.css nel tema:</p>
<pre tabindex="0"><code>function risorse_il_mio_tema() {
	//CSS
         enqueue_style(&#39;style&#39;, get_stylesheet_uri());
}
add_action(&#39;wp_enqueue_scripts&#39;, &#39;risorse_il_mio_tema&#39;);
</code></pre><p>In questo modo embedderemo il file <em>style.css</em>, obbligatorio in ogni tema WordPress.</p>
<p>Ora inseriamo il CSS di <strong><a href="/blog/le-basi-di-bootstrap/">Bootstrap</a></strong> in maniera corretta. Lo aggiungiamo a questa funzione, in questo modo:</p>
<pre tabindex="0"><code>wp_enqueue_style( &#39;bootstrap&#39;,&#39;http://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#39;,&#39;&#39;,&#39;&#39;,&#39;all&#39;);
</code></pre><p>Ricorda di inserire <strong>Bootstrap</strong> come <strong>primo file</strong>, prima di &ldquo;style&rdquo;, per un corretto funzionamento.</p>
<p>Ora andiamo nell&rsquo;header.php e rimuoviavo il CSS di bootstrap, che ora verrà inserito nella maniera corretta tramite functions.php</p>
<h3 id="js">JS</h3>
<p>Inseriamo ora i file <strong>javascript di Bootstrap</strong> nel modo corretto.</p>
<p>Anche i file Javascript vanno inseriti come i CSS, nella stessa funzione, in questo modo:</p>
<pre tabindex="0"><code>//JS
wp_enqueue_script( &#39;jquery-js&#39;, &#39;http://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#39;, &#39;&#39;,&#39;&#39; ,true);
wp_enqueue_script( &#39;bootstrap-js&#39;, &#39;http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&#39;, &#39;&#39;,&#39;&#39; ,true);
</code></pre><p>Ora possiamo eliminare i file JS di bootstrap dal nostro <strong>footer.php</strong></p>
<p>Per semplicità ti riscrivo <strong>tutta la funzione</strong> di embeddamento di CSS e JS:</p>
<pre tabindex="0"><code>/* CSS e JS */
function risorse_il_mio_tema() {
	//CSS
	wp_enqueue_style( &#39;bootstrap&#39;,&#39;http://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#39;,&#39;&#39;,&#39;&#39;,&#39;all&#39;);
	wp_enqueue_style(&#39;style&#39;, get_stylesheet_uri());

	//JS
	wp_enqueue_script( &#39;jquery-js&#39;, &#39;http://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#39;, &#39;&#39;,&#39;&#39; ,true);
	wp_enqueue_script( &#39;bootstrap-js&#39;, &#39;http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&#39;, &#39;&#39;,&#39;&#39; ,true);

}
add_action(&#39;wp_enqueue_scripts&#39;, &#39;risorse_il_mio_tema&#39;);
</code></pre><p><strong>In questo modo hai inserito i codici CSS e JS secondo le Best Practice di WordPress!</strong></p>
<h2 id="paginazione">Paginazione</h2>
<p>Se il nostro tema inizierà ad avere molti articoli, allora la pagina archivio diventerà presto molto pesante.</p>
<p>Fortunatamente WordPress fornisce una funzione per facilitare moltissimo la <strong>paginazione</strong>.</p>
<p>Puoi decidere quanti articoli far visualizzare nelle pagine archivio tramite la sezione &ldquo;<strong>Impostazioni - Lettura</strong>&rdquo;.</p>
<p><img src="images/image-38-1.png" alt=""></p>
<p>Per inserire la paginazione nel frontend andiamo nel nostro <em><strong>archive.php</strong></em> e inseriamo questa funzione <strong>dopo il</strong> <strong>loop</strong>:</p>
<pre tabindex="0"><code>&lt;?php echo paginate_links(); ?&gt;
</code></pre><p>In questo modo <strong>i link di paginazione saranno gestiti interamente da WordPress!</strong></p>
<p>Fantastico vero? Nulla di più semplice! Non ti resta che rendere questi link un po&rsquo; più carini, tramite <strong>CSS</strong>.</p>
<h3 id="commenti">Commenti</h3>
<p>Il sito inizia ad avere senso, ma non abbiamo ancora inserito una sezione commenti! Vediamo come fare!</p>
<p>Iniziamo creando un file <strong><em>comments.php</em></strong> nella cartella del nostro tema.</p>
<p><strong>comments.php</strong></p>
<pre tabindex="0"><code>
&lt;div id=&#34;comments&#34; class=&#34;comments-area&#34;&gt;

    &lt;?php if ( have_comments() ) : ?&gt;
        &lt;h2 class=&#34;comments-title&#34;&gt;
            &lt;?php
                printf( _nx( &#39;Un commento per &#34;%2$s&#34;&#39;, &#39;%1$s Commenti su &#34;%2$s&#34;&#39;, get_comments_number(), &#39;comments title&#39;, &#39;beauty-mountain&#39; ),
                    number_format_i18n( get_comments_number() ), &#39;&lt;span&gt;&#39; . get_the_title() . &#39;&lt;/span&gt;&#39; );
            ?&gt;
        &lt;/h2&gt;

        &lt;ol class=&#34;comment-list&#34;&gt;
            &lt;?php
                wp_list_comments( array(
                    &#39;style&#39;       =&gt; &#39;ol&#39;,
                    &#39;short_ping&#39;  =&gt; true,
                    &#39;avatar_size&#39; =&gt; 74,
                ) );
            ?&gt;
        &lt;/ol&gt;&lt;!-- .comment-list --&gt;

        &lt;?php
            // Ci sono più commenti?
            if ( get_comment_pages_count() &gt; 1 &amp;&amp; get_option( &#39;page_comments&#39; ) ) :
        ?&gt;
        &lt;nav class=&#34;navigation comment-navigation&#34; role=&#34;navigation&#34;&gt;
            &lt;h1 class=&#34;screen-reader-text section-heading&#34;&gt;&lt;?php _e( &#39;Comment navigation&#39;, &#39;beauty-mountain&#39; ); ?&gt;&lt;/h1&gt;
            &lt;div class=&#34;nav-previous&#34;&gt;&lt;?php previous_comments_link( __( &#39;&amp;larr; Older Comments&#39;, &#39;beauty-mountain&#39; ) ); ?&gt;&lt;/div&gt;
            &lt;div class=&#34;nav-next&#34;&gt;&lt;?php next_comments_link( __( &#39;Newer Comments &amp;rarr;&#39;, &#39;beauty-mountain&#39; ) ); ?&gt;&lt;/div&gt;
        &lt;/nav&gt;&lt;!-- .comment-navigation --&gt;
        &lt;?php endif; ?&gt;

        &lt;?php if ( ! comments_open() &amp;&amp; get_comments_number() ) : ?&gt;
        &lt;p class=&#34;no-comments&#34;&gt;&lt;?php _e( &#39;Comments are closed.&#39; , &#39;beauty-mountain&#39; ); ?&gt;&lt;/p&gt;
        &lt;?php endif; ?&gt;

    &lt;?php endif; // have_comments() ?&gt;

    &lt;?php comment_form(); ?&gt;

&lt;/div&gt;&lt;!-- #comments --&gt;
</code></pre><p>Questo codice ti pemetterà di inserire i commenti, ora andiamo nel file <strong><em>single.php,</em></strong> quello che contiene i nostri articoli, e inseriamo il template per i commenti dopo il contenuto:</p>
<pre tabindex="0"><code>&lt;!-- COMMENTI --&gt;
&lt;?php comments_template(); ?&gt;
</code></pre><p>In questo modo potrai <strong>vedere i commenti sui tuoi articoli!</strong></p>
<p><strong>Perfetto!</strong> Direi che per iniziare abbiamo già creato qualcosa di carino!</p>
<p>Prima di lasciarti andare via ti condivido ancora <strong>un po&rsquo; di CSS</strong> per rendere il nostro lavoro un po&rsquo; più carino.</p>
<p>Ricorda che puoi <strong>scaricare l&rsquo;intero tema</strong>, per controllare errori e verificare di aver capito tutto al meglio! Clicca <strong>sul bottone sul fondo</strong> dell&rsquo;articolo per scaricare il tema!</p>
<p>Non è un tema perfetto ma può essere un buon <strong>starter theme</strong> per i tuoi progetti futuri!</p>
<p><strong>style.css</strong></p>
<pre tabindex="0"><code>/*
Theme Name: Il mio tema
Author: Specialista WP
Description: Il mio primo tema WordPress
Version: 0.0.1
*/

/*
 * Globals
 */

a:hover{
  text-decoration: none;
}

img{
  max-width: 100%;
  height:auto
}

footer{
  background-color: #888;
  margin-top: 50px;
  padding-top: 50px;
  color:#000;
  margin-bottom: 0;
  padding-bottom: 50px;
}
</code></pre><p><em><a href="/blog/le-basi-dellhtml/">&laquo; Parte 2</a></em></p>
<p><em><a href="/blog/creare-un-plugin-wordpress/">Creare Plugin &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>4. Creare un plugin WordPress</title>
			<link>https://albertoreineri.it/blog/4.-creare-un-plugin-wordpress/</link>
			<pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/4.-creare-un-plugin-wordpress/</guid>
			<description>Hai imparato a creare un tema WordPress da zero e vuoi impratichirti anche con i plugin?
Sei nel posto giusto!
Creare un plugin per WordPress può essere una cosa semplicissima e molto veloce come complicatissima e molto lenta…
In questa guida vediamo semplicemente come creare un plugin per WordPress funzionante.
Creeremo un plugin che aggiunge il back on top del sito. Andremo a inserire una freccia verso l’alto nell’angolo in basso a destra della pagina.</description>
			<content type="html"><![CDATA[<p>Hai imparato a <strong><a href="/blog/creare-un-tema-wordpress-da-zero-parte-1/">creare un tema WordPress da zero</a></strong> e vuoi impratichirti anche con i <strong>plugin</strong>?</p>
<p>Sei nel posto giusto!</p>
<p>Creare un plugin per WordPress può essere una cosa semplicissima e molto veloce come complicatissima e molto lenta…</p>
<p>In questa guida vediamo semplicemente come <strong>creare un plugin per WordPress funzionante.</strong></p>
<p>Creeremo un plugin che aggiunge il <strong>back on top</strong> del sito. Andremo a inserire una freccia verso l’alto nell’angolo in basso a destra della pagina. Cliccando su questa freccia avvieremo uno smooth scroll verso il top della pagina!</p>
<h2 id="creare-il-plugin">CREARE IL PLUGIN</h2>
<p>Creare un nuovo plugin <strong>non è difficile.</strong></p>
<p>Per prima cosa rechiamoci nella <strong>cartella dei plugin</strong> di WordPress: <em>/wp-content/pluigns.</em></p>
<p>Ora qui dentro <strong>creiamo una nuova cartella</strong> con il nome “<strong>back-on-top</strong>” e apriamo la cartella con <strong>VS Code</strong>.</p>
<p>Creiamo adesso un <strong>file</strong> in questa cartella chiamato “<em><strong>back-on-top.php</strong></em>” e inseriamo questo codice al suo interno:</p>
<pre tabindex="0"><code>&lt;?php

/**
 * Plugin Name: Back on top
 * Plugin URI: /
 * Description: Un semplice link al top della pagina
 * Version: 1
 * author: Alberto Reineri DEV
 * Author URI: http://albydev.net
 * Text Domain: back-on-top
 */
</code></pre><p>Questo codice <strong>indicherà a WordPress l’esistenza del plugin.</strong></p>
<p>Se salviamo e andiamo nel backend in “<strong>Plugins</strong>” vedremo apparire “<strong>Back on top</strong>” nell’elenco. Possiamo quindi <strong>attivarlo</strong>.</p>
<p><img src="images/image-41-1024x48-1.png" alt=""></p>
<p>Il plugin al momento <strong>non fa assolutamente nulla</strong>, ma l’abbiamo creato.</p>
<p>Vediamo ora come aggiungere una funzionalità al plugin.</p>
<h2 id="aggiungere-funzionalità-al-plugin">AGGIUNGERE FUNZIONALITÀ AL PLUGIN</h2>
<p>Per poter aggiungere una funzionalità al nostro plugin occorre <strong>agganciarsi ai vari hook di WordPress</strong>. Nel nostro caso dobbiamo inserire una freccia in fondo alla pagina, quindi ci attaccheremo al footer.</p>
<p>Possiamo considerare il file back-on-top.php come un’<strong>estensione del functions.php</strong>. Ogni funzione che agguingiamo nel plugni verrà aggiunta al tema corrente.</p>
<h3 id="inseriamo-il-contenuto-nel-footer">INSERIAMO IL CONTENUTO NEL FOOTER</h3>
<pre tabindex="0"><code>add_action(&#39;wp_footer&#39;, &#39;back_on_top&#39;);
function back_on_top()
{
    ob_start();
?&gt;
    &lt;div class=&#34;back-on-top&#34; onclick=&#34;scrollToTop()&#34;&gt;
        &lt;?php
        echo file_get_contents(plugin_dir_url(__FILE__) . &#34;up.svg&#34;);
        ?&gt;
    &lt;/div&gt;
&lt;?php
    $output = ob_get_contents();
    ob_end_clean();
    echo $output;
}
</code></pre><p>In questo modo abbiamo inserito sul fondo della nostra pagina <strong>l’immagine up.svg</strong> presente nella cartella del plugin.</p>
<p><strong>Puoi inserire l’immagine che preferisci</strong>. Se inserisci un jpg o un png al posto di un svg puoi usare semplicemente il tag <img src=…>.</p>
<p><strong><em>on_start</em></strong> è una funzione che permette di inserire codice html e considerarlo come una <strong>variabile php.</strong></p>
<p>Ora aggiungiamo un po’ di <strong>CSS</strong> per rendere sensata la grafica. Per semplificare inseriamo il CSS direttamente nel file php, giusto sopra il div “<strong>back-on-top</strong>“:</p>
<pre tabindex="0"><code>&lt;style&gt;
        .back-on-top {
            position: fixed;
            z-index: 99999;
            bottom: 30px;
            right: 30px;
            cursor: pointer
        }

        .back-on-top svg {
            width: 30px;
            height: 30px;
            fill: #444;
            transition: .3s;
        }

        .back-on-top svg:hover {
            fill: lightblue;
        }
    &lt;/style&gt;
</code></pre><p>Adesso non ci resta che inserire un po’ di <strong>Javascript</strong> per effettuare lo smooth scroll al top della pagina. Questo può essere fatto in molti modi, da vanilla Javascript a JQuery.</p>
<p>Per rendere le cose minimali inseriamo del <strong>vanilla Javascript</strong> dopo il div “<strong>back-on-top</strong>“:</p>
<pre tabindex="0"><code>&lt;script&gt;
        // Smooth scroll to top
        const scrollToTop = () =&gt; {
            const c = document.documentElement.scrollTop || document.body.scrollTop;
            if (c &gt; 0) {
                window.requestAnimationFrame(scrollToTop);
                window.scrollTo(0, c - c / 8);
            }
        };
        scrollToTop();
    &lt;/script&gt;
</code></pre><p><strong><em>E voilà!</em></strong></p>
<p><strong>Il plugin è bello che pronto.</strong> Puoi salvare e se tutto è andato a buon fine dovresti vedere una freccia verso l’alto nell’angolo in basso a destra del sito. Cliccando sulla freccia dovresti tornare al top della pagina.</p>
<p><img src="images/image-39-1.png" alt=""></p>
<p><strong><em>Complimenti! Hai appena creato il tuo primo plugin!!!</em></strong></p>
<pre tabindex="0"><code>&lt;?php

/**
 * Plugin Name: Back on top
 * Plugin URI: /
 * Description: Un semplice link al top della pagina
 * Version: 1
 * author: Alberto Reineri DEV
 * Author URI: http://albydev.net
 * Text Domain: back-on-top
 */

add_action(&#39;wp_footer&#39;, &#39;back_on_top&#39;);
function back_on_top()
{
    ob_start();
?&gt;
    &lt;style&gt;
        .back-on-top {
            position: fixed;
            z-index: 99999;
            bottom: 30px;
            right: 30px;
            cursor: pointer
        }

        .back-on-top svg {
            width: 30px;
            height: 30px;
            fill: #444;
            transition: .3s;
        }

        .back-on-top svg:hover {
            fill: lightblue;
        }
    &lt;/style&gt;
    &lt;div class=&#34;back-on-top&#34; onclick=&#34;scrollToTop()&#34;&gt;
        &lt;?php
        echo file_get_contents(plugin_dir_url(__FILE__) . &#34;up.svg&#34;);
        ?&gt;
    &lt;/div&gt;

    &lt;script&gt;
        // Smooth scroll to top
        const scrollToTop = () =&gt; {
            const c = document.documentElement.scrollTop || document.body.scrollTop;
            if (c &gt; 0) {
                window.requestAnimationFrame(scrollToTop);
                window.scrollTo(0, c - c / 8);
            }
        };
        scrollToTop();
    &lt;/script&gt;
&lt;?php
    $output = ob_get_contents();
    ob_end_clean();
    echo $output;
}
</code></pre><p><em><a href="/blog/creare-un-tema-wordpress-da-zero-parte-3/">&laquo; Parte 3</a></em><a href=".local/assistenza/"></a></p>
]]></content>
		</item>
		
		<item>
			<title>Ha senso il nuovo Macbook Air 2020 per lo Sviluppo Web</title>
			<link>https://albertoreineri.it/blog/ha-senso-il-nuovo-macbook-air-2020-per-lo-sviluppo-web/</link>
			<pubDate>Sat, 21 Mar 2020 21:49:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/ha-senso-il-nuovo-macbook-air-2020-per-lo-sviluppo-web/</guid>
			<description>Mi sto chiedendo se il Macbook Air 2020 possa essere un buon pc per sviluppo web.
In questo articolo voglio uscire un attimo dal codice puro per parlare di qualcosa che è altrettanto importante per uno sviluppatore: il computer!
La macchina tramite la quale scriviamo i nostri codici è molto importante.
Per molti è un semplice strumento, ma in realtà è un oggetto su cui passiamo ore e ore, sudiamo, ci arrabbiamo, ci disperiamo e tramite il quale creiamo i nostri fantastici progetti!</description>
			<content type="html"><![CDATA[<p>Mi sto chiedendo se il Macbook Air 2020 possa essere un buon pc per sviluppo web.</p>
<p>In questo articolo voglio uscire un attimo dal codice puro per parlare di qualcosa che è altrettanto importante per uno sviluppatore: il <strong>computer</strong>!</p>
<p>La macchina tramite la quale scriviamo i nostri <strong>codici</strong> è molto importante.</p>
<p>Per molti è un semplice <strong>strumento</strong>, ma in realtà è un oggetto su cui passiamo ore e ore, sudiamo, ci arrabbiamo, ci disperiamo e tramite il quale creiamo i nostri fantastici progetti!</p>
<p>Non è quindi sufficiente avere un <strong>insieme di pezzi di ferro e plastica</strong>!</p>
<p><em>In realtà sì però…</em></p>
<p>Per sviluppare siti web, anche molto pesanti, non servono super computer. Un <strong>core i5</strong> con 8gb di RAM e un buon SSD possono già fare molto, non è il caso di puntare a chissà quale hardware.</p>
<p>Anche <strong>virtualizzando</strong> i nostri server l’impiego di risorse non è altissimo, a patto di non lavorare con 30 macchine virtuali aperte contemporaneamente… Ma nella maggior parte dei casi si lavora su un progetto per volta, magari due. Personalmente non credo di aver mai avuto bisogno di aprire più di 3 istanze vagrant contemporaneamente… Poi dipende anche dal tipo di ambiente di sviluppo che utilizzate.</p>
<p>Ma <strong>gli strumenti non sono tutti uguali</strong>. Ogni pittore ha il suo pennello preferito, ogni scultore il suo martello a cui tiene particolarmente!</p>
<p>E questo <strong>non ha a che fare con le scelte razionali</strong>. Non è detto che il massimo della tecnica sia automaticamente lo strumento migliore per noi! Ci sono molte cose che influenzano i nostri pensieri, e in un lavoro nel quale il <strong>pensare è la parte fondamentale</strong>, avere gli strumenti che fanno pensare bene può fare la differenza.</p>
<h2 id="il-mio-laptop">Il mio laptop</h2>
<p>La macchina che utilizzo adesso è frutto di un pensiero puramente <strong>razionale</strong>.</p>
<p><strong>Due anni fa avevo bisogno di un pc nuovo</strong> e sapevo di volere un laptop, per praticità.</p>
<p>Ho quindi acquistato quello con il miglior hardware al prezzo più contenuto: un <strong>ASUS Vivobook Pro</strong>, core i7, 16bg RAM, 128 SSD, 1Tb HHD e 4Gb di scheda video, il tutto a 999€.</p>
<p>E’ un gran bel computer, <strong>fa tutto quello che deve</strong> e non mi ha mai abbandonato né fatto rimpiangere l’acquisto.</p>
<p>Ho effettuato lavori pensati, anche sviluppo 3D e non ha mai tentennato.</p>
<p><em>Ha però dei punti negativi…</em></p>
<p>In primo luogo il <strong>display</strong>. In poche parole _fa un po’ schifo… _La luminosità è molto bassa e i colori non sono il massimo. C’è da dire che io lo collego sempre ad un monitor esterno e utilizzo il display del laptop come <strong>secondario</strong>, quindi non è un gran problema, tranne quando voglio portarmelo all’aperto e fare qualche lavoretto <strong>sotto il sole</strong>. In questo caso risulta <strong>impossibile</strong> lavorare. Supera di poco i 200 nits e se c’è anche solo un po’ di sole non si vede praticamente nulla…</p>
<p>Poi c’è la <strong>batteria</strong>, un gran tasto dolente… Non è mai durata più di 4 ore. Certo la componentistica è pesante, e per far girare un processore potente con una scheda video ne serve di energia. Ma io vorrei poter portarmelo fuori senza avere il timore di rimanere bloccato a metà di un lavoro.</p>
<p>Inoltre 4 ore sono in utilizzo tranquillo, ma <strong>sul lavoro non riesco a farlo durare più di 2…</strong> E la cosa peggiora quando lancio la mia amata <strong>Elementary Os</strong>… Purtroppo su questo fronte linux deve ancora migliorare un po’…</p>
<p>Le <strong>ventole</strong> poi mi fanno impazzire! Subito non ci facevo caso, ma con il tempo ho iniziato a non sopportare più il continuo ronzare, perpetuo, infinito e <strong>snervante</strong>… Ho scoperto che la rumorosità è una caratteristica comune dei Vivobook, quindi c’è poco da fare.</p>
<p>Infine ci sono le <strong>sensazioni emotive</strong>, tutti quei sentimenti che ci legano agli oggetti senza nessun particolare motivo.</p>
<p>Tutti abbiamo degli oggetti materiali a cui teniamo particolarmente, verso cui proviamo qualcosa.</p>
<h2 id="un-po-di-storia">Un po’ di storia</h2>
<p>Ricordo quando ho acquistato il mio primo <strong>Macbook nel 2011</strong>. Arrivato a casa ero estasiato dalla bellezza di quella macchina, che mi ha servito dignitosamente per 7 anni.</p>
<p><strong>Con l’ASUS non c’è mai stato il colpo di fulmine</strong>. E’ carino, funziona bene, ha una bellissima tastiera, è veramente potente, posso lanciare Windows, aprire Ubuntu in VmWare e nel frattempo farmi una partita a Far Cry senza dover chiudere nulla. Tutto funziona a meraviglia, ma <strong>manca il sentimento…</strong></p>
<p>Quando scrivo sul Vivobook non è come quando digitavo i tasti sul vecchio Macbook. <strong>E’ una sensazione!</strong> E’ vero che è semplicemente una macchina, uno strumento, ma è attraverso questo strumento che sviluppo i miei lavori, ed è molto importante <strong>utilizzarlo con il sorriso sulle labbra!</strong></p>
<h2 id="perché">Perché?</h2>
<p>Ho una teoria a riguardo. <strong>Windows 10 è un sistema operativo fantastico.</strong> Dico sul serio, ho iniziato a sviluppare creando software per Widnows in Visual Basic e negli anni ho avuto modo di conoscere a fondo questo sistema operativo, che con il passaggio dall’8.1 al 10 è diventato veramente figo! E’ versatile, leggero e semplice, l’ideale per la maggioranza delle persone.</p>
<h3 id="_ma_"><em>Ma…</em></h3>
<p>C’è sempre un ma… E nel mio caso sono <strong>2</strong>:</p>
<p>Da un lato non è <em><strong>unix like</strong></em>. Man mano che miglioro come sviluppatore mi rendo conto di quando sia importante avere un buon terminale con il quale lavorare, e sebbene <strong>WSL</strong> non sia male, non è paragonabile ai terminali Linux e Mac.</p>
<p>Dall’altro il design è troppo “<em><strong>da ufficio</strong></em>“. Windows si è distinto fin dall’inizio per essere il sistema operativo della <strong>gente che lavora</strong>, dei produttivi, delle scuole, degli uffici… <strong>La grafica è molto <em>quadrata</em></strong>, nel senso allegorico della cosa (<em>dalle mie parti una persona quadrata è una molto seria e attenta alle regole</em>). Per lavori creativi questo sistema quadrato risulta una <strong>gabbia</strong>, una prigione che ci costringe al suo interno invece che ispirarci!</p>
<p>Per questo penso proprio che <strong>la mia futura macchina avrà la mela morsicata</strong> sopra.</p>
<h2 id="e-linux">E linux?</h2>
<p>Bella domanda! <strong>La soluzione migliore sarebbe certo linux!</strong> I server web girano tutti con debian e centOs, quindi quale ambiente migliore per sviluppare?</p>
<p>Inoltre è <strong>free</strong>, quindi non bisogna sottostare ai <strong>prezzi folli di Apple.</strong></p>
<p>Ma anche qui bisogna fare dei compromessi…</p>
<p>Ho utilizzato molto <strong>Ubuntu</strong>e <strong>Elementary Os</strong>, con una propensione per la seconda (solamente per gusti estetici).</p>
<p>Ci sono delle cose che per un ambiente desktop sono ancora un po’ troppo complicate.</p>
<p>E’ vero che posso crearmi una lamp stack in 3 minuti digitando solamente una serie di comandi, posso utilizzare docker e vagrant senza problemi, è un sistema leggero e veloce e non installa le porcherie che si portano dietro gli altri 2 big, però non funziona ancora bene <strong>out of the box</strong>…</p>
<p>Per questo intendo per esempio che occorre installare e configurare un software per le gestures, uno per la gestione della batteria, uno per sincronizzare Google Drive etc. <em>Il bello dell’open source è che ogni cosa può essere configurata a piacere, il brutto è che ogni cosa può essere configurata a piacere…</em></p>
<p>Inoltre ci sono alcuni programmi per me fondamentali come Photoshop che non sono disponibili per linux… Si, esiste Wine, ma di nuovo serve un software per far andare un altro software…..</p>
<p>Oltre che programmare, <strong>il computer mi serve per gestire i lavori</strong>, creare fatture, scrivere e rispondere ai clienti e fare tutto ciò che sta attorno allo sviluppo (<em>la parte peggiore della giornata</em>… <em>Perché non posso starmete tutto il giorno a pensare e scrivere codice???</em>) e da questo punto di vista ho preferito <strong>Mac</strong> e <strong>Windows</strong>.</p>
<h2 id="quindi">Quindi?</h2>
<p>A sedici anni ho comprato una <strong>Vespa PX 125 del 1980</strong>. Va piano, non frena nulla, sta in equilibrio per miracolo, consuma e ogni volta che devo fare il pieno devo farmi la miscela da solo.</p>
<p>A ventiquattro anni ho comprato una <strong>Yamaha FZ6</strong>, una moto affidabile, stabile e sicura che mi ha portato a superare i 200km/h senza problemi e permesso di viaggiare molto più lontano della Vespa.</p>
<p>Indovinate <strong>quale delle 2</strong> è ancora oggi nel mio garage?</p>
<p><strong>La vecchia vespa!</strong></p>
<p>Ogni tanto la ragione ci spinge a fare qualcosa ma <strong>è il cuore quello da seguire.</strong> Non dobbiamo sempre fare scelte intelligenti per forza, anzi, a volte le scelte più stupide ci fanno sentire meglio! In fondo siamo uomini, non dei.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Questo è il pensiero che riempie le mie giornate durante gli ultimi giorni. Devo comprare il nuovo <strong>macbook air</strong> 2020 per sviluppo web? Può avere senso per lo sviluppo web?</p>
<p>Comprerei una macchina più cara di quella che utilizzo attualmente, più piccola e con meno potenza, ma più bella.</p>
<p><strong>Bella</strong> non solo sul lato estetico, ma più silenziosa, più portatile, con una migliore batteria e un sistema unix-like.</p>
<p>Quindi ho davvero bisogno dei 16Gb di RAM? Posso sempre usare l’ASUS come pc <em>bestia</em>, per i carichi pesanti, e potrei usare il Macbook Air 2020 per sviluppo web e tutto il resto.</p>
<p><strong>Ne vale la pena?</strong> Sono soldi buttati? Sono tutte scuse per avere un notebook figo e alla moda?</p>
<p>Non faccio mai niente solo per moda, per questo mi faccio tutte queste domande, ma da <strong>sviluppatore</strong> che passa ore e ore al pc secondo me avere una macchina come il nuovo <strong>macbook air 2020 per sviluppo web</strong> non è uno spreco di denaro.</p>
<p>Che ne dite? Fatemi sapere la vostra opinione, magari mi aiuterà a scegliere!</p>
<p><strong>Grazie per aver letto questo articolo!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>1. Configurare il PC per Sviluppare in WordPress</title>
			<link>https://albertoreineri.it/blog/1.-configurare-il-pc-per-sviluppare-in-wordpress/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/1.-configurare-il-pc-per-sviluppare-in-wordpress/</guid>
			<description>Ti stai appassionando al mondo della programmazione e vuoi iniziare a sviluppare qualche sito web in WordPress? Complimenti! Benvenuto nel fantastico mondo del Web Development!
Per cominciare dovrai installare i programmi necessari per scrivere i tuoi primi codici e riuscire a “far girare” ciò che hai scritto. In questo articolo vedremo rapidamente di quali software avremo bisogno.
Lasciamo da parte l’eterna discussione su quale sistema operativo sia migliore per una determinata cosa, sulle mode che portano a scegliere un pc rispetto ad un altro e cose di questo genere.</description>
			<content type="html"><![CDATA[<p>Ti stai appassionando al mondo della programmazione e vuoi iniziare a <strong>sviluppare qualche sito web in WordPress</strong>? Complimenti! Benvenuto nel fantastico mondo del <strong>Web Development</strong>!</p>
<p>Per cominciare dovrai installare i <strong>programmi necessari</strong> per scrivere i tuoi primi codici e riuscire a “<em>far girare</em>” ciò che hai scritto. In questo articolo vedremo rapidamente di quali software avremo bisogno.</p>
<p>Lasciamo da parte <strong>l’eterna discussione</strong> su quale sistema operativo sia migliore per una determinata cosa, sulle mode che portano a scegliere un pc rispetto ad un altro e cose di questo genere. Tutti i software presenti in questo articolo sono disponibili sia per <strong>Windows</strong> che per <strong>Mac</strong> che per <strong>Linux</strong>.</p>
<p><a href=".local/risorse-gratuite//"><img src="images/scarica-gratis-desk.jpg" alt=""></a></p>
<p>In questa guida ti indicherò i <strong>migliori tool e programmi</strong> grazie ai quali potrai <strong>installare WordPress, sviluppare temi e plugin</strong>, testare funzionalità e caricare le modifiche online.</p>
<p>Vediamo allora <strong>cosa ci serve</strong> per poter sviluppare siti web in <strong>WordPress</strong>.</p>
<h2 id="1-browser">1. BROWSER</h2>
<p><img src="images/image-17-1024x550-1.png" alt=""></p>
<p>Se abbiamo intenzione di fare un po’ di sviluppo web, il <strong>software fondamentale</strong> che dobbiamo avere è un browser. Tutti i sistemi operativi posseggono un browser pre-installato, ma il mio consiglio è quello di utilizzare <a href="http://www.google.com/intl/it/chrome/"><strong>Google Chrome</strong></a>. Questo browser è molto rapido ed offre una serie di <strong>strumenti per sviluppatori</strong> molto utile.</p>
<p>Non mi dilungo su questo punto perché probablimente stai già utilizzando Chrome oppure sai perfettamente cos’è.</p>
<p>Recentemente <strong>Microsoft</strong> ha rilasciato la nuova versione di <a href="http://www.microsoft.com/en-us/edge"><strong>Edge</strong></a>. Lo sto testando da qualche tempo e ne sono veramente entusiasta, quindi anche il browser di casa Microsoft può essere una buona scelta!</p>
<h2 id="2-editor-di-testo">2. EDITOR DI TESTO</h2>
<p><img src="images/image-18-1024x548-1.png" alt=""></p>
<p>Per poter fare sviluppo web è necessario <strong>scrivere del codice</strong>, e per scrivere il codice occorre avere un <strong>editor di testo</strong>. E’ possibile scrivere codice anche con il blocco note, ma non è certo una soluzione ottimale.</p>
<p>Il mio consiglio è di utilizzare <strong><a href="http://code.visualstudio.com/">Visual Studio Code</a></strong>, un software gratuito della Microsoft veramente fantastico!</p>
<p>Ricco di funzionalità ed estensioni, permette di gestire molto bene i progetti, anche grazie al <strong>terminale</strong> interno all’interfaccia. </p>
<p>Questo è sicuramente il <strong>programma esseziale</strong> per qualsiasi programmatore</p>
<h2 id="3-server-locale">3. SERVER LOCALE</h2>
<p><img src="images/image-1-1.png" alt=""></p>
<p>Per poter “<strong><em>far girare</em></strong>” i nostri progetti sul nostro pc, è nevessario installare un server locale per far sì che funzionino.</p>
<p>Io utilizzo da anni <a href="http://www.apachefriends.org/it/index.html"><strong>XAMPP</strong></a>, un software anch’esso gratuito che contiene in sè anche <strong>MySQL</strong>. Software utilissimo e semplice da utilizzare, permette in pochi minuti di configurare un server locale e iniziare il proprio progetto in <strong>PHP</strong>.</p>
<p>Fondamentale per la creazione di siti in <strong>WordPress</strong>, per progetti in framework PHP come <strong>Laravel</strong> o <strong>CodeIgniter</strong> oppure anche per un lavori in <strong>Core PHP</strong>.</p>
<h2 id="4-client-ftp">4. CLIENT FTP</h2>
<p><img src="images/image-19-1024x548-1.png" alt=""></p>
<p>Una volta terminato il nostro sito dobbiamo <strong>caricarlo online</strong>! </p>
<p>Per fare questo è possibile utilizzare un <strong>Client FTP</strong> che ci permette di <strong>connetterci all’hosting</strong> e caricare i file del sito.</p>
<p>Il software più utilizzato per questo compito è sicuramente <a href="http://filezilla-project.org/"><strong>FileZilla</strong></a>. Gratis, semplice ed intuitivo, è la scelta giusta per “tirare su” il tuo sito in maniera semplice, rapida e veloce.</p>
<h2 id="5-grafica">5. GRAFICA</h2>
<p>Infine non dimentichiamo che ogni progetto ha in sè anche una parte grafica! </p>
<p>Per <strong>sviluppare i layout</strong> dei vostri progetti vi consiglio l’utilizzo di <a href="http://www.figma.com/"><strong>Figma</strong></a>. Uso da un po’ di tempo questo software e sono veramente soddisfatto, in più è <strong>completamente gratuito</strong>! Basterà inscriversi con l’account google e voilà! Potete iniziare a creare fantastici layout web ma non solo!</p>
<p>Tutti questi software sono <strong>free</strong> e <strong>cross platform</strong>, il prossimo purtroppo no.</p>
<p>Sto parlando di <a href="http://www.adobe.com/it/products/photoshop.html?gclid=CjwKCAjwtajrBRBVEiwA8w2Q8PvEfIWtLKBGk-wtMLSQEQ1slHQCulhlLxYEG-ScQVPToYcZ2qNQQRoCVa0QAvD_BwE&amp;sdid=8DN85NTV&amp;mv=search&amp;ef_id=CjwKCAjwtajrBRBVEiwA8w2Q8PvEfIWtLKBGk-wtMLSQEQ1slHQCulhlLxYEG-ScQVPToYcZ2qNQQRoCVa0QAvD_BwE:G:s&amp;s_kwcid=AL!3085!3!340641313438!e!!g!!photoshop"><strong>Photoshop</strong></a>, un favoloso software di Adobe che permette di fare tutto ciò che desideriamo con foto e immagini. Sebbene molte di queste cose si possano fare anche con Figma, <strong>non riesco ancora a staccarmi totalmente da questo software</strong>, che rimane l’unico della mia configurazione <strong>a pagamento</strong>…</p>
<p>Se volete provare una valida alternativa esiste <a href="http://www.gimp.org/"><strong>Gimp</strong></a>, che a quanto dicono dovrebbe essere molto potente. Purtroppo avendo iniziato con Photoshop e conoscendolo ormai discretamente bene non mi va di ricominciare da zero ad imparare un nuovo programma… Lascio a voi giudicare!</p>
<p>Questo è <strong>tutto ciò che vi serve</strong>! Ora potete inizare a sbizzarrirvi fra <a href="https://open.spotify.com/show/546eUw3PsRI1HUGbBUeghC"><strong>codice e design</strong></a> e creare i vostri primi progetti!</p>
<p>Grazie per aver letto questo articolo</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>2. Perché installare WordPress in locale?</title>
			<link>https://albertoreineri.it/blog/2.-perch%C3%A9-installare-wordpress-in-locale/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/2.-perch%C3%A9-installare-wordpress-in-locale/</guid>
			<description>Molte guide o tutorial mostrano come installare WordPress direttamente online, spesso utilizzando i servizi che le aziende di hosting mettono a disposizione per installare il CMS automaticamente.
Sebbene questa pratica sia molto semplice e veloce, non è la più raccomandabile, soprattutto se siete o volete diventare sviluppatori e quindi andare a personalizzare il codice del vostro sito.
Quando ci si approccia ad un nuovo progetto per prima cosa si configura un server locale sul proprio computer in modo da poter iniziare a scrivere il codice per il sito tranquillamente senza paura di eventuali bug o crash (che ci saranno sicuramente).</description>
			<content type="html"><![CDATA[<p>Molte guide o tutorial mostrano come <strong>installare WordPress direttamente online</strong>, spesso utilizzando i servizi che le aziende di hosting mettono a disposizione per installare il CMS automaticamente.</p>
<p>Sebbene questa pratica sia molto semplice e veloce, <strong>non è la più raccomandabile</strong>, soprattutto se siete o volete diventare <strong>sviluppatori</strong> e quindi andare a personalizzare il codice del vostro sito.</p>
<p>Quando ci si approccia ad un nuovo progetto <strong>per prima cosa si configura un server locale</strong> sul proprio computer in modo da poter iniziare a scrivere il codice per il sito tranquillamente <strong>senza paura di eventuali bug o crash</strong> (che ci saranno sicuramente).</p>
<p>Perciò ogni sito come si deve sarà sviluppato <strong>prima in locale</strong> e, una volta terminato e debuggato a dovere, potrà essere portato online e reso disponibile al mondo intero!</p>
<p>Questo è molto importante non solo all’inizio, durante la creazione del sito, ma anche successivamente nell’<strong>integrazione di funzionalità o correzioni</strong>. Effettuare una modifica direttamente <strong>online</strong> è molto molto <strong>rischioso</strong> e assai poco raccomandabile!</p>
]]></content>
		</item>
		
		<item>
			<title>3. Come funziona XAMPP</title>
			<link>https://albertoreineri.it/blog/3.-come-funziona-xampp/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/3.-come-funziona-xampp/</guid>
			<description>Hai letto l’articolo sulla configurazione del PC per lo sviluppo web, hai installato tutti i programmi e sei pronto ad iniziare a sviluppare!
MA COME FUNZIONA XAMPP? Sebbene non sia un software particolarmente complicato, il primo approccio potrebbe spaventare un pochino.
Oggi vedremo come avviarlo e farlo funzionare correttamente!
Per prima cosa avvia XAMPP cliccando sulla sua icona.
Ti troverai una schermata come questa:
Sulla sinistra puoi vedere che XAMPP fornisce una serie di servizi.</description>
			<content type="html"><![CDATA[<p>Hai letto l’articolo sulla <a href="/blog/configurare-il-pc-per-sviluppare-in-wordpress%ef%bf%bc/">configurazione del PC per lo sviluppo web</a>, hai installato tutti i programmi e sei pronto ad iniziare a sviluppare!</p>
<h2 id="ma-come-funziona-xampp">MA COME FUNZIONA XAMPP?</h2>
<p>Sebbene non sia un software particolarmente complicato, il primo approccio potrebbe spaventare un pochino.</p>
<p>Oggi vedremo <strong>come avviarlo e farlo funzionare correttamente</strong>!</p>
<p><strong>Per prima cosa avvia XAMPP</strong> cliccando sulla sua icona.</p>
<p>Ti troverai una schermata come questa:</p>
<p><img src="images/image-2-1.png" alt=""></p>
<p>Sulla sinistra puoi vedere che <strong>XAMPP fornisce una serie di servizi.</strong></p>
<p>A noi interessano principalmente i primi 2:</p>
<ul>
<li><strong>Apache</strong> (il server web che permette a WordPress di funzionare)</li>
<li><strong>MySQL</strong> (database dentro il quale salveremo i dati del sito WordPress)</li>
</ul>
<p>Senza perderci in chiacchiere <strong>inizia con l’avviare questi due servizi</strong>, cliccando sul pulsante “<strong>Start</strong>” in corrispondenza di entrambi.</p>
<p>Se tutto è andato per il verso giusto le scritte “<strong>Apache</strong>” e “<strong>MySQL</strong>” dovrebbero avere sfondo verde, così:</p>
<p><img src="images/image-3-1-1.png" alt=""></p>
<p>A questo punto il nostro server locale è avviato e funzionante!</p>
<h2 id="e-ora-che-faccio">E ORA CHE FACCIO?</h2>
<p>Ora devi sapere ancora un paio di cose:</p>
<ul>
<li><strong>Dove inserire</strong> materialmente <strong>i siti web</strong> da “<em>far girare</em>” sul server Apache</li>
<li><strong>Come gestire il database</strong></li>
</ul>
<p>Stai tranquillo, anche questa volta <strong>è più facile a farsi che a dirsi.</strong></p>
<h3 id="dove-inserire-i-siti-web">DOVE INSERIRE I SITI WEB?</h3>
<p><strong>XAMPP</strong> fornisce una cartella dentro la quale inserire tutti i nostri siti web.</p>
<p>Sarà sufficiente <strong>inserire i nostri siti all’interno di questa cartella</strong> per poterli visualizzare nel browser.</p>
<p>La cartella è la seguente:</p>
<p><strong>Windows:</strong> C:\xampp\htdocs</p>
<p>Tutti le cartelle presenti in questo percorso saranno sito web e saranno raggiungibili tramite il browser.</p>
<h3 id="come-raggiungere-il-sito-web-dal-browser">COME RAGGIUNGERE IL SITO WEB DAL BROWSER?</h3>
<p>Abbiamo visto dove inserire i nostri siti web, ova vediamo anche <strong>come farli partire dal browser.</strong></p>
<p>Per poter vedere i siti in locale occorre <strong>dire al browser di andare a cercare i nostri siti</strong> appunto <strong>in locale</strong>, non nel www.</p>
<p>Per fare ciò <strong>nella barra di ricerca</strong> scriviamo “<em>localhost</em>“.</p>
<p>Se premete invio dovreste vedere la pagina di default di XAMPP, ma a noi interessa poco, noi vogliamo vedere i nostri siti.</p>
<p>È molto semplice, basterà digitare dopo “localhost” uno slash più la cartella presente in htdocs contentente il nostro sito.</p>
<h4 id="esempio">Esempio:</h4>
<ul>
<li>Andate nella cartella htdocs</li>
<li>Create una cartella chiamata “test”</li>
<li>Entrate nella cartella</li>
<li>Fate click con il tasto destro del mouse e premete “Open with Code” (per farlo avrete bisogno di Visual Studio Code, se non l’hai installato <a href="/blog/configurare-il-pc-per-sviluppare-in-wordpress%ef%bf%bc/">clicca qui</a>)</li>
<li>Premete “File – New File”</li>
<li>Salvatelo come “index.html”</li>
<li>All’interno del file scrivete “Ciao Mondo”</li>
<li>Aprite il browser e digitate “localhost/test”</li>
</ul>
<p>Dovreste vedere una pagina completamente bianca con la scritta “Ciao Mondo” in alto a sinistra!</p>
<p><strong>Congratulazioni!</strong> Hai appena creato <strong>un sito internet in locale con XAMPP!</strong></p>
<h2 id="e-il-database">E IL DATABASE?</h2>
<p>Prima ho parlato di database, <strong>fondamentare per ogni sito WordPress.</strong></p>
<p>Per poter accedere al database XAMPP installa in automatico un sito che permette di gestire i dati in maniera semplice e veloce: <strong>phpmyadmin</strong>.</p>
<p>Per accedere a phpmyadmin è sufficiente recarsi a questo <strong>indirizzo</strong> sul browser:</p>
<p><a href="http://localhost/phpmyadmin/">localhost/phpmyadmin</a></p>
<p>Ed ecco qua, sei appena entrato nella gestione dei database del tuo server locale!</p>
<h2 id="tips">TIPS:</h2>
<p>Un paio di consigli per velocizzare il tuo lavoro:</p>
<ul>
<li>Crea un link sul desktop o sulla barra delle applicazioni a <strong>XAMPP</strong></li>
<li>Crea un link alla cartella “<strong>htdocs</strong>” sul desktop o sulla barra delle applicazioni</li>
<li>Inserisci <strong>phpyadmin</strong> nei preferiti</li>
</ul>
<p>Molto bene, <strong>ora sei pronto a fare sul serio!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>4. Installare WordPress in locale￼</title>
			<link>https://albertoreineri.it/blog/4.-installare-wordpress-in-locale/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/4.-installare-wordpress-in-locale/</guid>
			<description>Se vuoi diventare uno sviluppatore WordPress allora dovrai installare il fantastico CMS in locale. Non preoccuparti se non sai bene cosa vuol dire, questo articolo è rivolto ai principianti, perciò andrò ad affrontare l’argomento passo passo spiegandoti tutto nei dettagli.
Perciò mettiti seduto e concentrato e iniziamo ad imparare!
PERCHÉ IN LOCALE? Molte guide o tutorial mostrano come installare WordPress direttamente online, spesso utilizzando i servizi che le aziende di hosting mettono a disposizione per installare il CMS automaticamente.</description>
			<content type="html"><![CDATA[<p>Se vuoi diventare uno <strong>sviluppatore WordPress</strong> allora dovrai installare il fantastico CMS in <strong>locale</strong>. Non preoccuparti se non sai bene cosa vuol dire, questo articolo è rivolto ai <strong>principianti</strong>, perciò andrò ad affrontare l’argomento <strong>passo passo</strong> spiegandoti tutto nei dettagli.</p>
<p>Perciò mettiti seduto e concentrato e <strong>iniziamo ad imparare!</strong></p>
<h2 id="perché-in-locale">PERCHÉ IN LOCALE?</h2>
<p>Molte guide o tutorial mostrano come <strong>installare WordPress direttamente online</strong>, spesso utilizzando i servizi che le aziende di hosting mettono a disposizione per installare il CMS automaticamente.</p>
<p>Questo può esssere molto utile ad un utente che non sa nulla di programmazione e vuole provare a crearsi il proprio sito da solo.</p>
<p>Vogliamo <strong>capire quel che facciamo</strong>, diventare <strong>bravi sviluppatori WordPress</strong> e creare siti web e web app <strong>meravigliosi</strong>!</p>
<p>Perciò faremo la strada più lunga (non poi tanto in realtà) ed impareremo veramente tutto su WordPress <strong>a partire da ZERO!</strong></p>
<hr>
<p>Per capire meglio ciò che andremo a fare ora ti <strong>consiglio</strong> di leggere questi articoli:</p>
<ul>
<li><a href="/blog/configurare-il-pc-per-sviluppare-in-wordpress%ef%bf%bc/">Configurare il PC per Sviluppare in WordPress</a></li>
<li><a href="/blog/perche-installare-wordpress-in-locale/">Perché intallare WordPress in locale?</a></li>
<li><a href="/blog/come-funziona-xampp/">Come funziona XAMPP</a></li>
</ul>
<hr>
<h2 id="1-scaricare-wordpress">1. SCARICARE WORDPRESS</h2>
<p>Per prima cosa è necessario <strong>scaricare WordPress.</strong></p>
<p>Farlo è molto semplice, è sufficiente andare a questo <strong>link</strong>: <a href="http://it.wordpress.org/">http://it.wordpress.org/</a> e premere il bottone “<strong>Scarica WordPress</strong>” in alto a destra.</p>
<p><img src="images/image-4-1024x250-1.png" alt=""></p>
<p>Ora non resta che aspettare il termine del <strong>download</strong>, di solito è abbastanza rapido ma i tempi potrebbero cambiare a seconda della velocità della tua connessione.</p>
<h2 id="estrarre-wordpress">ESTRARRE WORDPRESS</h2>
<p>Il file scaricato è in formato <strong>.zip</strong>, perciò occorre <strong>estrarlo</strong>.</p>
<p>Basta fare <strong>click</strong> con il tasto <strong>destro</strong> sul file e premere “<strong>estrai qui</strong>“.</p>
<p>Terminata l’estrazione avrai una cartella chiamata “<strong>wordpress</strong>“.</p>
<h2 id="avviare-xampp">AVVIARE XAMPP</h2>
<p>Per poter far funzionare il nostro sito in WordPress in locale dobbiamo far partire il <strong>XAMPP</strong>.</p>
<p>Per <strong>avviare XAMPP</strong> ti basterà cliccare sulla sua icona e una volta aperto il software cliccare su “<strong>Start</strong>” in corrispondenza di <strong>Apache</strong> e <strong>MySQL</strong>.</p>
<p><img src="images/image-2-2.png" alt=""></p>
<p>In questo modo avvierai il server locale ed il database!</p>
<p>Ora sei pronto a caricare WordPress sul server.</p>
<h2 id="caricare-wordpress-nel-server-locale">CARICARE WORDPRESS NEL SERVER LOCALE</h2>
<p>Aprendo questa cartella dovresti trovare al suo interno <strong>3 cartelle:</strong></p>
<ul>
<li>wp-admin</li>
<li>wp-content</li>
<li>wp-includes</li>
</ul>
<p><strong>più una serie di file.</strong></p>
<p><img src="images/image-6-1.png" alt=""></p>
<p><strong>Questo è WordPress!!!</strong></p>
<p>Ora torna indietro di un livello e <strong>segui questi passaggi:</strong></p>
<ul>
<li>Copia la cartella “wordpress”.</li>
<li>Vai nella cartella <strong>htdocs</strong> (C:\xampp\htdocs in Windows) e incolla qui.</li>
<li>Rinomina “wordpress” con “wp-test”</li>
</ul>
<p>Hai appena inserito il sito “wp-test” sul tuo <strong>server locale!</strong></p>
<p>Ora vediamo come creare un database <strong>MySQL</strong> per il tuo sito.</p>
<h2 id="creare-il-database">CREARE IL DATABASE</h2>
<p><strong>WordPress</strong> per poter funzionare <strong>ha bisogno di un database.</strong></p>
<p>Andremo quindi ora a <strong>crearlo</strong> utilizzando <strong>phpmyadmin</strong>.</p>
<p><strong>Accedere</strong> a phpmyadmin è molto <strong>semplice</strong>, ti basterà scrivere “<strong>localhost/phpmyadmin</strong>” nella barra di ricerca del tuo browser.</p>
<p>Ti ritroverai in una schermata come questa:</p>
<p><img src="images/phpmyadmin-1024x486-1.jpeg" alt=""></p>
<p>Questo è il programma attraverso il quale <strong>gestiremo i nostri database.</strong> Graficamente non è carinissimo ma è molto <strong>potente</strong> e funzionale.</p>
<p>Per il momento devi solamente <strong>cliccare su “Nuovo”</strong> nella barra laterale sinistra.</p>
<p><img src="images/image-5-1024x98-1.png" alt=""></p>
<p>Sulla destra vedrai una schermata come questa qua sopra, ti basterà <strong>scrivere il nome del database</strong>, in questo caso “wp-test” e cliccare “<strong>Crea</strong>“</p>
<p>Dovresti vedere comparire un database chiamato “wp-test” nella sidebar a sinistra.</p>
<p><strong>Complimenti!!!</strong> Hai appena creato il database per il tuo sito WordPress!</p>
<h2 id="installare-wordpress">INSTALLARE WORDPRESS!</h2>
<p><strong>Finalmente</strong> è arrivato il momento di installare <strong>WordPress</strong>.</p>
<p>Per prima cosa colleghiamoci al nostro sito sul server locale, a questo indirizzo: http://wp.local-test</p>
<p>Nel corso degli anni la procedura di installazione del CMS si è perfezionata sempre di più e oggi è possibile portarla a termine con <strong>pochi semplici passaggi</strong>:</p>
<h3 id="passaggio-1">PASSAGGIO 1:</h3>
<p><img src="images/image-7-1024x496-1.png" alt=""></p>
<p>Clicchiamo sul pulsante “<strong>Iniziamo!</strong>“</p>
<h3 id="passaggio-2">PASSAGGIO 2:</h3>
<p><img src="images/image-8-1024x497-1.png" alt=""></p>
<p>A questo punto ci vengono chiesti dei <strong>parametri di configurazione</strong>. Non preoccuparti, ora ti spiegherò cosa significano:</p>
<ul>
<li><strong>Nome database:</strong> è il nome che abbiamo dato prima al database creato con phpmyadmin, in questo caso “<em>wp-test</em>“.</li>
<li><strong>Nome utente:</strong> è il nome utente del database. <strong>ATTENZIONE!!!</strong> Non è il tuo nome utente, ma quello per poter accedere al database. XAMPP crea in automatico un nome utente per il database che è “<em>root</em>“.</li>
<li><strong>Password:</strong> anche qua è la password del database. Di default XAMPP non inserisce nessuna password. Essendo in locale non c’è bisogno di questo livello di sicurezza. Quando andremo a creare un sito WordPress online la password del database sarà fondamentale.</li>
<li><strong>Host del database:</strong> dove è “<em>hostato</em>” il database. In questo caso “<em>localhost</em>“, cioè sul nostro server locale.</li>
<li><strong>Prefisso tabella:</strong> WordPress assegna un prefisso ad ogni tabella che crea. Per il momento puoi lasciare “<em>wp_</em>“.</li>
</ul>
<p><strong>In sintesi puoi compilare questo passaggio così:</strong></p>
<ul>
<li>Nome database: wp-test</li>
<li>Nome utente: root</li>
<li>Password:</li>
<li>Host del database: localhost</li>
<li>Prefisso tabella: “wp_”</li>
</ul>
<h3 id="passaggio-3">PASSAGGIO 3:</h3>
<p><img src="images/image-9-1024x499-1.png" alt=""></p>
<p>Molto bene! Il difficile è fatto! <strong>Da ora è tutto in discesa.</strong></p>
<p>WordPress si congratula con noi per aver inserito correttamente i dati del passaggio precedente, quindi non ci resta che cliccare su “<strong>Avvia installazione</strong>“</p>
<h3 id="passaggio-4">PASSAGGIO 4:</h3>
<p><img src="images/image-11.png" alt=""></p>
<p>Ora WordPress è stato installato! Non ci resta che <strong>configurare</strong> un paio di cosette:</p>
<ul>
<li><strong>Titolo del sito:</strong> sarà il titolo del nostro sito web, in questo caso puoi mettere “Sito di prova WP”</li>
<li><strong>Nome utente:</strong> questo è il tuo nome utente con il quale accederai al backend del sito. Metti pure ciò che vuoi. Ti consiglio di non utilizzare nomi facilmente indovinabili come “admin”, è meglio un nome come “pippo8756”.</li>
<li><strong>Password:</strong> la password con la quale accederai al backend.</li>
<li><strong>La tua email:</strong> il tuo indirizzo email che sarà collegato al tuo account. ATTENZIONE! Essendo installato in locale WordPress non potrà inviare email, lo può fare solamente se installato online.</li>
<li><strong>Visibilità ai motori di ricerca:</strong> tramite questa checkbox puoi dire a WordPress di escludere il tuo sito dalla ricerca dei motori di ricerca. Raramente dovrai cliccare questo campo.</li>
</ul>
<p>Compilati i campi puoi cliccare su “<strong>Installa WordPress</strong>“</p>
<h3 id="passaggio-5">PASSAGGIO 5:</h3>
<p><img src="images/image-12-1024x591-1.png" alt=""></p>
<p><strong>E VOILÀ!!!</strong></p>
<p>Hai appena terminato di installare correttamente WordPress in locale sul tuo computer!</p>
<p>Ora puoi cliccare su “<strong>Login</strong>“</p>
<p><img src="images/image-13-2.png" alt=""></p>
<p>Inserire i tuoi dati di accesso ed <strong>entrare nella tua installazione di WordPress.</strong></p>
<p>Questo è il <strong>backend</strong> di WordPress:</p>
<p><img src="images/image-14-1024x481-1-1.png" alt=""></p>
<p>Da qui potrai <strong>configurare</strong> e <strong>compilare</strong> il tuo sito web.</p>
<p>Cliccando sull’icona della casetta in alto a destra invece potrai vedere il front-end del tuo sito</p>
<p><img src="images/image-15-2.png" alt=""></p>
<p>Durante l’installazione WordPress inserisce il suo tema standard. Quindi per il momento vedrai un <strong>front-end</strong> come questo:</p>
<p><img src="images/image-16-1024x460-1.png" alt=""></p>
<p><strong>CONGRATULAZIONI!!!</strong></p>
<p>Hai appena installato <strong>WordPress in locale</strong> sul tuo computer!</p>
<p>Hai fatto il primo passo per iniziare a diventare uno sviluppatore WP. Continua a leggere i nostri articoli per migliorare sempre di più e diventare un vero PRO!</p>
]]></content>
		</item>
		
		<item>
			<title>5. Come funziona WordPress</title>
			<link>https://albertoreineri.it/blog/5.-come-funziona-wordpress/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/5.-come-funziona-wordpress/</guid>
			<description>Hai seguito la guide per configurare il tuo PC per lo sviluppo web, hai capito come funziona un server locale e installato una copia di WordPress sul tuo computer, e ora?
Ora iniziamo a capire come funziona WordPress!
Spiegare tutto il funzionamento di WordPress in un singolo articolo è impensabile… Sono troppe le possibilità che il CMS offre…
Ma oggi vedremo le cose principali, butteremo le fondamenta per creare le nostre skills con WordPress!</description>
			<content type="html"><![CDATA[<p>Hai seguito la guide per <a href="/blog/configurare-il-pc-per-sviluppare-in-wordpress%ef%bf%bc/">configurare il tuo PC per lo sviluppo web</a>, hai capito <a href="/blog/perche-installare-wordpress-in-locale/">come funziona un server locale</a> e <a href="/blog/installare-wordpress-in-locale%ef%bf%bc/">installato una copia di WordPress</a> sul tuo computer, <strong>e ora?</strong></p>
<p>Ora <strong>iniziamo a capire come funziona WordPress!</strong></p>
<p>Spiegare tutto il funzionamento di WordPress in un singolo articolo è impensabile… Sono troppe le possibilità che il CMS offre…</p>
<p><a href=".local/risorse-gratuite//"><img src="images/scarica-gratis-desk.jpg" alt=""></a></p>
<p>Ma oggi vedremo <strong>le cose principali</strong>, butteremo le <strong>fondamenta</strong> per creare le nostre skills con WordPress!</p>
<p>In questo articolo ti insegnerò <strong>nello specifico:</strong></p>
<ul>
<li>come WordPress gestisce i contenuti</li>
<li>come creare Articoli e Pagine</li>
</ul>
<h2 id="accedere-al-backend">ACCEDERE AL BACKEND</h2>
<p>Ora che hai <a href="/blog/installare-wordpress-in-locale%ef%bf%bc/">installato il tuo sito in WordPress in locale</a>, iniziamo a capire come è possibile entrare nel <strong>backend</strong>.</p>
<p>Dopo aver <a href="/blog/come-funziona-xampp/">avviato <strong>Apache</strong> e <strong>MySQL</strong> da <strong>XAMPP</strong></a>, apriamo il <strong>browser</strong> e digitiamo “localhost/” + il nome del nostro sito.</p>
<p>Se hai seguito la lezione precedente dovrai digitare: <a href="http://localhost/wp-test/">http://localhost/wp-test/</a></p>
<p>Dovresti vedere la <strong>home page</strong> del sito standard di <strong>WordPress</strong>.</p>
<p>Ora per entrare nel backend andiamo nella barra dell’<strong>URL</strong> e <strong>aggiungiamo</strong> “wp-admin”.</p>
<p><strong>L’URL finale</strong> sarà quindi questo: <a href="http://localhostalbydev.net.local-test/wp-admin/">http://localhostal/</a><a href="http://localhost/wp-test/">wp-test</a><a href="http://localhostal/wp-test/wp-admin/">/wp-admin/</a></p>
<p>A questo punto ci troviamo la schermata di <strong>login</strong> di WordPress.</p>
<p><img src="images/image-13.png" alt=""></p>
<p><strong>Inseriamo</strong> i nostri dati ed entriamo.</p>
<p>Ecco il <strong>backend di WordPress</strong>. Da qui potrai <strong>gestire</strong> tutti i contenuti presenti sul tuo sito web.</p>
<p><img src="images/image-14-1024x481-1.png" alt=""></p>
<h2 id="indicazioni-generali-sul-backend">INDICAZIONI GENERALI SUL BACKEND</h2>
<p>Ma <strong>come funziona</strong> questo backend?</p>
<p>È molto <strong>semplice</strong>. Sulla sinistra troverai tutte le sezioni per configurare il tuo sito, sulla destra invece vedrai ciò che stai attualmente modificando.</p>
<p>Prenditi un po’ di tempo per <strong>scorrere tutti i punti nel menù laterale</strong> del backend, in modo da farti un’idea generale del suo funzionamento.</p>
<p><img src="images/image-22-1.png" alt=""></p>
<h2 id="1-gestione-dei-contenuti">1. GESTIONE DEI CONTENUTI</h2>
<p>Ora iniziamo a capire come <strong>vengono gestiti i contenuti in WordPress.</strong></p>
<p>Quando andiamo a creare una nuova pagina per il nostro sito possiamo scegliere fra <strong>due possibilità:</strong></p>
<ul>
<li><strong>Articoli</strong></li>
<li><strong>Pagine</strong></li>
</ul>
<h3 id="articoli">ARTICOLI</h3>
<p><img src="images/image-23.png" alt=""></p>
<p>Gli <strong>Articoli</strong> sono dei contenuti elencati in ordine cronologico inverso (dal più recente al più vecchio). Sono utilizzati per i <strong>blog</strong>, i giornali e tutti i siti che si aggiornano continuamente.</p>
<p>Gli <strong>Articoli</strong> possono essere suddivisi in <strong>categorie</strong> e possono contenere dei <strong>tag</strong>. In questo modo sono facilmente rintraciabili dagli utenti.</p>
<p>Inoltre invitano alla conversazione grazie alla presenza dei <strong>commenti</strong> in fondo.</p>
<p>Un <strong>esempio</strong> di Articolo è quello che stai leggendo ora!</p>
<h3 id="pagine">PAGINE</h3>
<p><img src="images/image-24-1.png" alt=""></p>
<p>Le <strong>Pagine</strong> di WordPress sono contenuti <strong>a sè stanti</strong>, una tantum, senza particolari relazioni con altri contenuti del sito. Un esempio di una <strong>Pagina</strong> è la pagina di contatto del sito oppure la pagina “<strong>chi siamo</strong>“. Questa tipologia di contenuto non ha la sezione commenti solitamente.</p>
<p>Entrambe queste tipologie possono contenere <strong>testi</strong>, immagini, <strong>link</strong> e tutto ciò che puoi desiderare inserire all’interno dei tuoi <strong>contenuti</strong>.</p>
<h3 id="media">MEDIA</h3>
<p><img src="images/image-25.png" alt=""></p>
<p>Se hai dato un’occhiata alla barra laterale del backend di WordPress avrai notato che, proprio fra <strong>Articoli</strong> e <strong>Pagine</strong>, c’è la sezione <strong>Media</strong>.</p>
<p>Questa sezione raccoglie <strong>tutte le risorse</strong> che caricherai sul tuo sito, come <strong>foto</strong>, immagini, pdf etc…</p>
<h2 id="2-gestione-della-grafica">2. GESTIONE DELLA GRAFICA</h2>
<p>La parte grafica del tuo sito è gestita tramite la sezione “<strong>Aspetto</strong>“.</p>
<p><img src="images/image-26-1.png" alt=""></p>
<p>All’interno di questa sezione <strong>puoi trovare:</strong></p>
<ul>
<li><strong>Temi:</strong> è il “vestito” del tuo sito, ciò che circonda i tuoi contenuti. In parole povere la grafica. Tramite questa sezione puoi cercare e installare nuovi temi per il tuo sito.</li>
<li><strong>Personalizza:</strong> questa sezione ti permette di personalizzare il tema che hai installato. Alcuni temi hanno personalizzazioni maggiori rispetto ad altri.</li>
<li><strong>Widget:</strong> i widget sono dei blocchi che eseguono un’azione specifica (come un elenco o un menù) e possono essere aggiunti in un luogo preciso del sito, come la sidebar.</li>
<li><strong>Menu:</strong> permette di creare e modificare i menù del tuo sito web. Un esempio di menù è solitamente la navbar del sito, che permette di spostarsi e trovare i contenuti desiderati</li>
<li><strong>Sfondo:</strong> permette di modificare lo sfondo del sito. Questa voce è collegata con il tema di default di WordPress, se installerai un tema nuovo potrebbe sparire.</li>
<li><strong>Editor del tema:</strong> permette di modificare il foglio di stile del tema. Qua le cose si fanno interessanti. Se provi ad aprirlo vedrai un foglio scritto in linguaggio CSS. Se continuerai a seguire questo sito imparerai a districarti senza problemi in mezzo a questi tipi di file.</li>
</ul>
<h2 id="3-gestione-delle-funzionalità">3. GESTIONE DELLE FUNZIONALITÀ</h2>
<p>Tutte le funzionalità che vuoi implementare nel tuo sito le puoi trovare nella sezione “<strong>Plugin</strong>“.</p>
<p><img src="images/image-27.png" alt=""></p>
<p>I plugin sono dei <strong>piccoli software</strong> che consentono al sito di fare una <strong>determinata funzione.</strong></p>
<p>Se per esempio vuoi inserire un <strong>modulo di contatto</strong> al tuo sito, allora puoi cercare un plugin che gestisca questa funzione.</p>
<p>Esistono <strong>migliaia di plugin</strong> per infinite funzionalità, basta provare a cercare.</p>
<p>Tramite questa sezione puoi <strong>cercare e installare nuovi pluign</strong>.</p>
<p>I plugin dopo essere stati installati <strong>devono essere attivati</strong> per poter funzionare.</p>
<hr>
<p>Spero che questa <strong>infarinatura generale</strong> ti sia stata utile per capire a grandi linee <strong>il funzionamento di WordPress!</strong></p>
<p>Ti consiglio di provare a <strong>dedicare un po’ di tempo</strong> a creare articoli e pagine, installare temi e plugin e vedere cosa succede!</p>
<p><strong>La pratica è il miglior modo per imparare!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>6. Come installare e personalizzare un tema WordPress</title>
			<link>https://albertoreineri.it/blog/6.-come-installare-e-personalizzare-un-tema-wordpress/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/6.-come-installare-e-personalizzare-un-tema-wordpress/</guid>
			<description>Se hai letto tutti gli articoli precedenti avrai già imparato come installare un sito in WordPress sul tuo PC.
Se ancora non l’hai fatto invece ti invito a dare un’occhiata a questa pagina nella quale potrai trovare una serie di articoli utili per un primo approccio al fantastico mondo di WordPress!
Bene, ora andiamo dritti al sodo!!!
CHE COS’È UN TEMA WORDPRESS? Un tema WordPress è un insieme di layout e stili che creano l’aspetto grafico del tuo sito.</description>
			<content type="html"><![CDATA[<p>Se hai letto tutti gli articoli precedenti avrai già imparato come <strong>installare un sito in WordPress sul tuo PC.</strong></p>
<p>Se ancora non l’hai fatto invece ti invito a <strong>dare un’occhiata</strong> a <a href="/blog/installare-wordpress-in-locale%ef%bf%bc/">questa pagina</a> nella quale potrai trovare una serie di articoli utili per un <strong>primo approccio al fantastico mondo di WordPress!</strong></p>
<p><strong>Bene, ora andiamo dritti al sodo!!!</strong></p>
<h2 id="che-cosè-un-tema-wordpress">CHE COS’È UN TEMA WORDPRESS?</h2>
<p>Un tema WordPress è un insieme di layout e stili che creano <strong>l’aspetto grafico</strong> del tuo sito. In poche parole è la grafica del tuo sito web!</p>
<p>Esistono <strong>tonnellate</strong> di temi sviluppati per WordPress (e se continuerai a seguire questo sito imparerai a crearne anche uno tu!), molti <strong>gratuiti</strong> e tanti a <strong>pagamento</strong>, che offrono design e features differenti.</p>
<h2 id="come-installare-un-tema-su-wordpress">COME INSTALLARE UN TEMA SU WORDPRESS</h2>
<p>Come avrai potuto capire <a href="/blog/come-funziona-wordpress/">nell’articolo precedente</a>, per modificare la veste grafica di un sito occorre recarsi nel backend ed entrare nella sezione “<strong>Aspetto-Temi</strong>“</p>
<p><img src="images/image-26-2.png" alt=""></p>
<p>A questo punto ci troviamo nella schermata che ci mostra <strong>i temi attualmente installati</strong> sul nostro sito.</p>
<p><img src="images/image-28-1024x463-1.png" alt=""></p>
<p>Ma noi vogliamo installarne uno <strong>nuovo</strong>, quindi clicchiamo sul pulsante “<strong>Aggiungi nuovo tema</strong>” in lato a sinistra.</p>
<p><img src="images/image-29-1.png" alt=""></p>
<p>A questo punto possiamo cercare fra i <strong>migliaia di temi gratis</strong> proposti direttamente da WordPress.</p>
<p><img src="images/image-30-1024x508-1.png" alt=""></p>
<p>Esistono anche altre piattaforme che permettono di scaricare temi e plugin, le più popolari sono <a href="http://themeforest.net/free/wordpress-themes">ThemeForest</a> e <a href="http://www.templatemonster.com/it/type/temi-wordpress/">TemplateMonster</a>.</p>
<p>Ma per il momento utilizzeremo un tema fra quelli proposti da WordPress.</p>
<hr>
<p><strong>ATTENZIONE!!!</strong> WordPress controlla personalmente ogni tema inserito dentro la sua repository, così come <a href="http://themeforest.net/free/wordpress-themes">ThemeForest</a> e <a href="http://www.templatemonster.com/it/type/temi-wordpress/">TemplateMonster</a>. Questo garantisce la professionalità e la sicurezza dei prodotti che si andranno ad installare sui propri siti web. È insicuro scaricare temi da fonti sconosciute, possono contenere codice maligno che potrebbe causare molti problemi al sito.</p>
<hr>
<p>È possibile <strong>cercare un tema</strong> utilizzando la <strong>barra di ricerca</strong> in alto a destra oppure utilizzare il <strong>filtro</strong>, per trovare temi strutturati appositamente per blog, portfolio, ecommerce etc.</p>
<p>Per ora <strong>installeremo un tema semplice e carino</strong>, in modo da iniziare a costruire il nostro sito web!</p>
<p>Andiamo nella barra di ricerca e scriviamo “<strong><em>Nisarg</em></strong>“</p>
<p><img src="images/image-31-1024x441-1.png" alt=""></p>
<p>Dopo aver trovato il tema clicchiamo su “<strong>Installa</strong>” e successivamente su “<strong>Attiva</strong>“.</p>
<p>Ora se torniamo nel <strong>frontend</strong> (cliccando sulla casetta in alto a sinistra) possiamo vedere che <strong>il nostro sito è cambiato!</strong></p>
<p><img src="images/image-32-1024x461-1.png" alt=""></p>
<p>Così come lo vediamo ora non è niente di che, ma lo faremo diventare un bel sito, <strong>promesso</strong>!</p>
<p>Adesso andremo <strong>personalizzare</strong> questo nuovo tema per <strong>crere il nostro primo sito web!</strong></p>
<h2 id="personalizzare-un-tema-wordpress">PERSONALIZZARE UN TEMA WORDPRESS</h2>
<p>Dopo aver installato il nuove tema dobbiamo andare a <strong>personalizzarlo</strong>.</p>
<p>In WordPress è possibile personalizzare i temi attraverso la sezione “<strong>Aspetto-Personalizza</strong>“, presente nella barra laterale.</p>
<p>Cliccando quindi su “<strong>Aspetto-Personalizza</strong>” ci troveremo di fronte una schermata come questa:</p>
<p><img src="images/image-33-1024x481-1.png" alt=""></p>
<p>Attraverso questa sezione possiamo <strong>personalizzare il nostro sito</strong> e vedere in anteprima le modifiche che andremo a fare.</p>
<p>Sulla sinistra abbiamo le <strong>opzioni</strong> che il tema ci mette a disposizione per personalizzarlo a nostro piacere, mentre sulla destra c’è <strong>l’anteprima</strong> delle modifiche effettuate.</p>
<p><strong>Iniziamo quindi a fare sul serio!!!</strong></p>
<h3 id="denominazione-del-sito">DENOMINAZIONE DEL SITO</h3>
<p>Questa voce è presente in <strong>ogni tema WordPress</strong> e ti consente di modificare <strong>il titolo del tuo sito e il <em>motto</em></strong>, il sottotitolo. Questo tema non prevede di inserire il sottotitolo all’interno del tem.</p>
<p><img src="images/image-34.png" alt=""></p>
<p>Per personalizzare il nostro sito possiamo inserire come titolo: “<strong>Test WP</strong>“</p>
<p>Cancelliamo il motto e successivamente andiamo ad inserire un’icona al nostro sito, cliccando su “<strong>Seleziona l’icona del sito</strong>“</p>
<p>WordPress aprirà il <strong>gestore dei file media</strong> grazie al quale potremo caricare immagini sul sito.</p>
<p><img src="images/image-35-1024x457-1.png" alt=""></p>
<p>Clicchiamo sulla scheda “<strong>Carica file</strong>“, selezioniamo un’immagine dal nostro computer e infine clicchiamo sul pulsante blu “<strong>Seleziona</strong>” per inserire l’immagine scelta come icona per il nostro sito.</p>
<p><strong>L’icona</strong> apparirà nella scheda del browser in alto:</p>
<p><img src="images/image-37.png" alt=""></p>
<p>Ora <strong>torniamo indietro</strong> e scopiramo le altre personalizzazioni.</p>
<h3 id="colori">COLORI</h3>
<p>Questa opzione ci consente di <strong>modificare i colori</strong> del nostro sito.</p>
<p><img src="images/image-38.png" alt=""></p>
<p>Puoi inserire i colori che preferisci. Non perdere troppo tempo a scegliere i colori di sfondo perché fra poco inseriremo <strong>un’immagine</strong> sotto al titolo.</p>
<h3 id="immagine-dellheader">IMMAGINE DELL’HEADER</h3>
<p>Ora possiamo inserire <strong>un’immagine</strong> come sfondo del titolo del nostro sito web.</p>
<p><img src="images/image-39.png" alt=""></p>
<p>Il tema ci propone già alcune immagini, ma possiamo inserire quella che vogliamo cliccando su “<strong>Aggiungi nuova immagine</strong>“.</p>
<p>Io sono un grande amante della montagna quindi selezionerò la prima fra le immagini proposte, ma sentiti pure libero di <strong>inserire l’immagine che più ti aggrada.</strong></p>
<h3 id="immagine-di-sfondo">IMMAGINE DI SFONDO</h3>
<p>Questo tema ci permette anche di avere un’<strong>immagine come sfondo.</strong></p>
<p><img src="images/image-40.png" alt=""></p>
<p>Personalmente <strong>sconsiglio</strong> di inserirla perché rende meno chiaro il contenuto e potrebbe <strong>distrarre l’utente</strong>, ma puoi provare a caricare qualcosa e vedere l’effetto che fa!</p>
<p>Io lascerò questo campo vuoto.</p>
<h3 id="menu">MENU</h3>
<p>Attraverso questa sezione è possibile creare e modificare i <strong>menù</strong> del nostro sito, come la <strong>navbar</strong> e i menù laterali.</p>
<p><img src="images/image-41.png" alt=""></p>
<p>Per il momento sorvoliamo su questo passaggio, creeremo i nostri menù <strong>successivamente</strong> tramite un’altra interfaccia.</p>
<h3 id="widget">WIDGET</h3>
<p>I Widget sono <strong>piccoli blocchi</strong> che adempiono una <strong>funzione</strong> particolare.</p>
<p><img src="images/image-42.png" alt=""></p>
<p>Questo tema ci consente di inserirli nella <strong>sidebar</strong>, ma anche questo punto sarà trattato <strong>successivamente</strong> e approfonditamente, perciò per ora possiamo lasciare tutto così com’è!</p>
<h3 id="impostazione-homepage">IMPOSTAZIONE HOMEPAGE</h3>
<p>Questa opzione è presente <strong>in ogni tema WordPress</strong> e ci consente di impostare <strong>il contenuto della nostra Homepage.</strong></p>
<p><img src="images/image-43.png" alt=""></p>
<p>Possiamo scegliere se inserire in home page <strong>gli ultimi articoli</strong> che pubblichiamo (utile soprattutto per i siti in stile blog) oppure se inserire un <strong>pagina statica</strong> creata appositamente.</p>
<p>Per il momento non abbiamo ancora creato pagine, quindi possiamo lasciare selezionati “<strong>Gli ultimi articoli</strong>“.</p>
<h3 id="css-aggiuntivo">CSS AGGIUNTIVO</h3>
<p>Questo punto ci permette di inserire del <strong>codice CSS</strong> da aggiungere allo stile del tema, per customizzare più nel dettaglio alcuni particolari del sito.</p>
<p><img src="images/image-44.png" alt=""></p>
<p>Per poter utilizzare questa opzione <strong>occorre conoscere il linguaggio CSS.</strong></p>
<p>Per ora possiamo sorvolare, ma se continuerai a leggere le nostre guide <strong>imparerai</strong> anche ad utilizzare questa parte, <strong>promesso</strong>!</p>
<h3 id="accent-color">ACCENT COLOR</h3>
<p>Qui possiamo selezionare il <strong>colore</strong> di <strong>evidenziazione</strong> del nostro sito</p>
<p><img src="images/image-45.png" alt=""></p>
<p>Il tema ce ne propone alcuni, ma se chicchiamo su “<strong>Seleziona colore</strong>” possiamo scegliere quello che ci piace di più!</p>
<p>Io inserirò <strong>l’arancione</strong>, tu scegli pure con calma il colore che preferisci!</p>
<h3 id="post-option">POST OPTION</h3>
<p>Infine questo tema ci chiede come vogliamo <strong>visualizzare i nostri post</strong> nella pagina che li elenca tutti (chiamata anche pagina “archivio”).</p>
<p><img src="images/image-46.png" alt=""></p>
<p><strong>L’excerpt</strong> è una piccola parte dell’articolo, i primi caratteri, mentre per “Full post” intende tutti il contenuto.</p>
<p>Dato che questa opzione riguarda la pagina archivio dove sarà presente l’elenco dei nostri post è preferibile lasciare “<strong>Post excerpt</strong>“. Chi vorrà leggere il contenuto intero potrà cliccare sull’articolo per aprirlo in una pagina a sè stante.</p>
<p>Prima di terminare questa lezione ricordati di premere il pulsante “<strong>Pubblica</strong>” in alto a sinistra nella schermata di personalizzazione <strong>per non perdere le modifiche effettuate!!!</strong></p>
<p>Molto bene, abbiamo installato il nostro tema e iniziato a personalizzarlo un pochino, ma il sito è ancora soltanto <strong>abbozzato</strong>!</p>
<p>Nelle <strong>prossime lezioni</strong> vedremo come sistemarlo al meglio.</p>
<p><strong>Continua così</strong>, presto avrai creato <strong>il tuo primo sito web in WordPress!!!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>7. Creiamo le pagine del nostro primo sito web!</title>
			<link>https://albertoreineri.it/blog/7.-creiamo-le-pagine-del-nostro-primo-sito-web/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/7.-creiamo-le-pagine-del-nostro-primo-sito-web/</guid>
			<description>Ora che abbiamo installato un tema sul nostro progetto in WordPress possiamo iniziare a creare le varie pagine per il nostro sito.
Per prima cosa entriamo nel backend andando al seguente indirizzo e inserendo le credenziali:
http://localhost/wp-test/wp-admin/
Creeremo sia pagine che articoli, in questo modo capirai meglio quando è il caso di utilizzare uno anziché l’altro. Al termine della lezione avremo una “Home page“, una pagina “Chi sono“, una pagina “Contatti” e una sezione “Blog“.</description>
			<content type="html"><![CDATA[<p>Ora che abbiamo <strong>installato un tema</strong> sul nostro progetto in <strong>WordPress</strong> possiamo iniziare a <strong>creare le varie pagine</strong> per il nostro sito.</p>
<p>Per prima cosa entriamo nel <strong>backend</strong> andando al seguente indirizzo e inserendo le credenziali:</p>
<p><a href="http://localhost/wp-test/wp-admin/">http://localhost/wp-test/wp-admin/</a></p>
<p>Creeremo sia <strong>pagine</strong> che <strong>articoli</strong>, in questo modo <strong>capirai meglio</strong> quando è il caso di utilizzare uno anziché l’altro. <strong>Al termin</strong>e della lezione avremo una “<strong>Home page</strong>“, una pagina “<strong>Chi sono</strong>“, una pagina “<strong>Contatti</strong>” e una sezione “<strong>Blog</strong>“.</p>
<p><strong>Diamoci da fare!</strong></p>
<h2 id="pagine">PAGINE</h2>
<p>Iniziamo con il creare la pagina “<strong>Chi sono</strong>“.</p>
<p>Tramite il <strong>menù laterale</strong> ci rechiamo in “<strong>Pagine</strong>” e poi su “<strong>Aggiungi pagina</strong>“</p>
<p><img src="images/image-53.png" alt=""></p>
<p>Ora ci troveremo di fronte a <strong>Gutenberg</strong>: il <strong>page builder</strong> di WordPress.</p>
<p>Attraverso questa interfaccia possiamo <strong>creare la nostra pagina web</strong> senza scrivere una sola riga di codice.</p>
<p><img src="images/image-54-1024x507-1.png" alt=""></p>
<p>Nel campo “<strong>Aggiungi titolo</strong>” scriviamo “<em>Chi sono</em>“, sotto al titolo invece possiamo scrivere il <strong>contenuto della nostra pagina</strong></p>
<h3 id="gutenberg">GUTENBERG</h3>
<p>Come già detto <strong>Gutenberg è il page builder di WordPress</strong>. È relativamente giovane, WordPress l’ha implementato da poco, ma ha delle <strong>potenzialità</strong> molto grandi.</p>
<p>Il bello di questo page builder è che è <strong>minimale</strong>, <strong>semplice</strong> ed <strong>intuitivo</strong>.</p>
<p>Tutti i contenuti sono <strong>suddivisi in blocchi</strong>. Per esempio un <strong>paragrafo</strong> è un blocco, <strong>un’immagine</strong> un altro blocco, un <strong>elenco puntato</strong> un altro e così via.</p>
<p>Per inserire un blocco basta cliccare sul “<strong>+</strong>” sulla sinistra e scegliere il blocco desiderato.</p>
<p><img src="images/image-55.png" alt=""></p>
<p>In questa pagina possiamo inserire un blocco “<strong>Paragrafo</strong>“, dentro il quale scrivere:</p>
<p><em>“Ciao, sono nome, questo è il mio primo sito in WordPress!!! Bello vero?”</em></p>
<p>e sotto questo paragrafo possiamo inserire un blocco “<strong>Immagine</strong>” e andare a prendere <strong>una nostra foto</strong>.</p>
<p>Dopo aver scelto il blocco immagine è sufficiente cliccare su “<strong>Carica</strong>“, scegliere una foto presente sul computer e questa verrà inserita nella posizione corretta.</p>
<p><img src="images/image-56.png" alt=""></p>
<p>Infine per rendere visibili le modifiche dobbiamo <strong>pubblicare la pagina.</strong></p>
<p><img src="images/image-58.png" alt=""></p>
<p>In alto a destra troverai due bottoni: <strong>Anteprima</strong> e <strong>Pubblica</strong>.</p>
<p>Premendo su “<strong>Anteprima</strong>” potrai vedere un’anteprima della pagina che stai creando. Quando hai finito di riempire la pagina puoi cliccare su “<strong>Pubblica</strong>” e questa <strong>sarà messa online!</strong></p>
<p>Clicchiamo quindi su pubblica e <strong>abbiamo creato la nostra prima pagina!!!</strong></p>
<h3 id="contatti">CONTATTI</h3>
<p>Per creare la pagina “<strong>Contatti</strong>” utilizziamo lo stesso metodo di sopra:</p>
<p>Andiamo su “<strong>Pagine – Aggiungi Pagina</strong>” e nel titolo inseriamo “<strong>Contatti</strong>“. Dopodiché <strong>possiamo pubblicarla così per ora.</strong></p>
<p>Nella <strong>prossima lezione</strong> vedremo come <strong>inserire un modulo di contatto</strong> semplice ed elegante per permettere ai nostri utenti di scriverci via mail!</p>
<h2 id="blog">BLOG</h2>
<p>Ora creiamo la sezione “<strong>Blog</strong>” del sito. Come ormai saprai WordPress è nato come piattaforma di blogging, perciò è molto molto semplice implementare questa funzione!</p>
<p>Per farlo andremo in “<strong>Articoli – Categorie</strong>“</p>
<p><img src="images/image-63.png" alt=""></p>
<p>Qua possiamo <strong>creare le categorie del nostro sito</strong>, per suddividere gli articoli e rendere la gestione e la navigazione ordinata.</p>
<p><img src="images/image-64-1024x515-1.png" alt=""></p>
<p>Come vedi di default è già presente una categoria “<strong>Senza categoria</strong>“, che fra poco andremo ad eliminare.</p>
<p>Ma prima creiamo la categoria “<strong>Blog</strong>” inserendo la scritta “<em>Blog</em>” nel campo nome e cliccando su “<strong>Aggiungi una nuova categoria</strong>“.</p>
<p>Ora vedrai “<strong>Blog</strong>” apparire sulla destra nell’elenco delle categorie.</p>
<p>Se provi a <strong>cancellare “Senza categoria”</strong> vedrai che <strong>non puoi</strong> al momento, non c’è nessuna opzione “Elimina”…</p>
<p>Questo perché è impostata come <strong>categoria di default,</strong> cioè ogni articolo senza categoria verrà inserito automaticamente dentro questa. Ma noi non la vogliamo, quindi andiamo a vedere come eliminarla!</p>
<p>Andiamo su “<strong>Impostazioni – Scrittura</strong>“</p>
<p><img src="images/image-65.png" alt=""></p>
<p>Ed ecco qua che vediamo le impostazione per la <strong>categoria predefinita:</strong></p>
<p><img src="images/image-66.png" alt=""></p>
<p>Basterà selezionare “<strong>Blog</strong>” al posto di “<strong>Senza categoria</strong>” e salvare premendo il tasto “<strong>Salva le modifiche</strong>” sul fondo.</p>
<p>Ora torniamo in “<strong>Articoli – Categorie</strong>” e cancelliamo “<strong>Senza categoria</strong>“.</p>
<p><img src="images/image-67.png" alt=""></p>
<p>Adesso ogni articolo che scriverai rientrerà in automatico nella categoria “<strong>Blog</strong>“.</p>
<h2 id="articoli">ARTICOLI</h2>
<p>Ora creeremo un paio di articoli di prova!</p>
<p>Andiamo in “<strong>Articoli – Aggiungi articolo</strong>“.</p>
<p><img src="images/image-68.png" alt=""></p>
<p>Come puoi vedere <strong>l’interfaccia è la stessa per la creazione di pagine.</strong></p>
<p>Siamo sempre di fronte a <strong>Gutenberg</strong>, in funzionamento è lo stesso.</p>
<p>Possiamo scrivere un articolo intitolato “<em>Il mio primo articolo</em>“, inserendo del testo a piacere, e un secondo articolo intitolato “<em>Articolo numero 2</em>“, anche qua inserendo il testo a caso, volendo anche includendo qualche immagine. Ricorda di premere “<strong>Pubblica</strong>” una volta che avrai terminato di scrivere l’articolo!</p>
<hr>
<p>TIPS: è molto comune nel mondo del design utilizzare il testo “Lorem ipsum” nelle grafiche di esempio. Si tratta di un brano in latino che funziona molto bene come riempitivo. Io utilizzo questo sito per generarlo: <a href="http://it.lipsum.com/">http://it.lipsum.com/</a></p>
<hr>
<h2 id="creiamo-il-menù-di-navigazione">CREIAMO IL MENÙ DI NAVIGAZIONE</h2>
<p>Ora che abbiamo creato le nostre pagine e impostato il blog possiamo andare a creare il <strong>menù di navigazione</strong>, per permettere agli utenti di raggiungere tutte le pagine del nostro sito in maniera semplice, intuitiva e veloce.</p>
<p>Andiamo quindi su “<strong>Aspetto – Menu</strong>“.</p>
<p><img src="images/image-59-1.png" alt=""></p>
<p>Tramite questa sezione possiamo <strong>creare i menù del nostro sito WordPress!</strong></p>
<p><img src="images/image-60-1024x514-1.png" alt=""></p>
<p>Di default WordPress ci propone di creare un menù con inserite le ultime pagine che abbiamo creato.</p>
<p>Andiamo nel campo “<strong>Nome menu</strong>” e al posto di “Menu 1” inseriamo “<em>Menù di navigazione</em>“.</p>
<p>Dopodiché clicchiamo sulla freccia verso il basso sulla destra di “<strong>Pagina di esempio</strong>“. Si apriranno delle opzioni:</p>
<p><img src="images/image-61.png" alt=""></p>
<p>Qua clicchiamo “<strong>Rimuovi</strong>“.</p>
<p>Per inserire la sezione “<strong>Blog</strong>” nel nostro menù di navigazione ci basterà cliccare su “<strong>Categorie</strong>“, selezionare “<strong>Blog</strong>” e premere “<strong>Aggiungi al menu</strong>“</p>
<p><img src="images/image-69.png" alt=""></p>
<p>È possibile <strong>spostare in alto o in basso le voci</strong> del menù semplicemente premendo su di esse e trascinandole nella posizione desiderata! <strong>Semplice</strong> no?</p>
<p>Ora possiamo premere su “<strong>Crea menu</strong>“.</p>
<p>Ora che il menù è creato vedremo delle <strong>nuove impostazioni:</strong></p>
<p><img src="images/image-62.png" alt=""></p>
<p>Qua clicchiamo su “<strong>Top Primary menu</strong>” per poter impostare il menù appena creato come menu top, cioè in alto, la classica <strong>barra di navigazione.</strong></p>
<hr>
<p>ATTENZIONE! Ogni menù creato necessita di essere inserito da qualche parte nel tema. Se creiamo un menù solamente questo non verrà visualizzato da nessuna parte. Occorrerà indicare al tema dove questo deve essere visualizzato, attraverso le “Impostazioni del menu” oppure tramite widget.</p>
<hr>
<p>Molto bene, <strong>hai appena creato il menù di navigazione del tuo sito web.</strong></p>
<p><img src="images/image-70.png" alt=""></p>
<p>Prova ad andare nel <strong>front-end</strong> e lo vedrai comparire in alto sulla destra!</p>
<p>Prova a utilizzarlo <strong>cliccando i vari link</strong>, vedrai che il tuo sito è diventato navigabile in maniera semplice, chiara e veloce.</p>
<p><strong>Siamo a buon punto</strong> no? Mancano solo un paio di cose, <strong>prosegui</strong> nelle prossime lezioni per terminare il sito!</p>
]]></content>
		</item>
		
		<item>
			<title>8. Installare i plugin fondamentali per un sito web!</title>
			<link>https://albertoreineri.it/blog/8.-installare-i-plugin-fondamentali-per-un-sito-web/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/8.-installare-i-plugin-fondamentali-per-un-sito-web/</guid>
			<description>Il nostro sito comincia a prendere forma, ma mancano ancora alcune funzionalità fondamentali!
Oggi vedremo come aggiungere queste funzionalità al nostro sito WordPress utilizzando i plugin!
COSA SONO I PLUGIN WORDPRESS? I plugin WordPress sono dei pezzi di codice che creano una funzionalità!
Questi pezzi di codice contenuti nei plugin consentono al core di WordPress di aggiungere o migliorare le sue caratteristiche!
Per esempio WordPress non prevede la possibilità di creare un form contatti, per farlo basterà scaricare ed installare un plugin e in questo modo potremo avere il nostro form pronto all’uso!</description>
			<content type="html"><![CDATA[<p>Il nostro sito <strong>comincia a prendere forma</strong>, ma mancano ancora alcune funzionalità fondamentali!</p>
<p>Oggi vedremo come aggiungere queste funzionalità al nostro sito WordPress utilizzando i <strong>plugin</strong>!</p>
<h2 id="cosa-sono-i-plugin-wordpress">COSA SONO I PLUGIN WORDPRESS?</h2>
<p>I plugin WordPress sono dei <strong>pezzi di codice che creano una funzionalità</strong>!</p>
<p>Questi pezzi di codice contenuti nei plugin consentono al core di WordPress di <strong>aggiungere o migliorare le sue caratteristiche</strong>!</p>
<p>Per esempio WordPress non prevede la possibilità di creare un <strong>form contatti</strong>, per farlo basterà scaricare ed installare un plugin e in questo modo potremo avere il nostro form pronto all’uso!</p>
<p>Nel corso degli anni WordPress è diventato sempre più famoso e il <strong>numero</strong> dei plugin è cresciuto <strong>considerevolmente</strong>! Questo è uno dei motivi per cui <strong>WordPress è il CMS più utilizzato al mondo.</strong></p>
<p>Molti plugin sono <strong>gratuiti</strong>, ma esistono anche alcuni plugin a pagamento, che consentono di ampliare il nostro sito con funzionalità potentissime con cifre contenute.</p>
<h2 id="i-plugin-fondamentali">I PLUGIN FONDAMENTALI</h2>
<h3 id="wp-forms">WP FORMS</h3>
<p>Questo plugin ci permetterà di creare un <strong>modulo di contatto</strong> in maniera semplice e veloce!</p>
<p>Per prima cosa <strong>accediamo al backend</strong> del nostro sito in WordPress (se non sai come si fa leggi le <a href="/argomento/inizia-qui/">guide precedenti</a>) e clicchiamo su “<strong>Plugin – Aggiungi nuovo</strong>“</p>
<p><img src="images/Annotazione-2020-03-31-164744.png" alt=""></p>
<p>Ci troveremo di fronte ad una schermata come questa:</p>
<p><img src="images/image-1024x528-1.png" alt=""></p>
<p>Qua dobbiamo andare in alto a destra, nella casella “<strong>Ricerca plugin in corso…</strong>” e qui dentro scrivere WP Forms.</p>
<p>La ricerca partirà in automatico e dopo pochi istanti dovremmo vedere questo plugin nell’elenco:</p>
<p><img src="images/image-1-2.png" alt=""></p>
<p>Ora non ci resta che cliccare su “<strong>Installa ora</strong>“.</p>
<p>Dopo che il plugin sarà installato possiamo attivarlo, cliccando su “<strong>Attiva</strong>“</p>
<p><img src="images/image-2.png" alt=""></p>
<p>Ora ci troveremo a questo punto:</p>
<p><img src="images/image-3-1.png" alt=""></p>
<p>Questo plugin rende la creazione dei form un’azione veramente <strong>semplicissima</strong>! Possiamo quindi <strong>seguire la guida</strong> che il plugin stesso ci fornisce e in meno di cinque minuti avremo il nostro form bello e funzionante!</p>
<p>Procediamo quindi con il cliccare sul pulsante arancione “<strong>Crea il tuo primo modulo</strong>“.</p>
<p><img src="images/image-4-1024x458-1.png" alt=""></p>
<p>A questo punto possiamo premere su “<strong>Semplice modulo di contatto</strong>“. Il plugin procederà con la creazione di un form base. Quando avrà finito dovresti vedere una schermata come la seguente:</p>
<p><img src="images/image-5-1024x495-1.png" alt=""></p>
<p>Sulla destra c’è l’anteprima del modulo, mentre sulla sinistra si possono aggiungere e modificare i campi che compongono il modulo.</p>
<p>Esiste anche una versione a pagamento di questo plugin, ma per dei form base è sufficiente quella <strong>gratuita</strong>.</p>
<p>A questo punto clicchiamo su “<strong>Salva</strong>” in alto a destra e poi su “Embed”.</p>
<p>Dopo aver cliccato “<strong>Embed</strong>” si aprirà una finestra come questa:</p>
<p><img src="images/image-6.png" alt=""></p>
<p>Quello scritto nel riquadro grigio scuro è uno <strong>shortcode</strong>: un codice che consente di far apparire qualcosa all’interno di un articolo o di una pagina.</p>
<p>A questo punto non dobbiamo far altro che <strong>copiare questo shortcode</strong> ed andarlo a <strong>copiare nella pagina</strong> dove vogliamo che appaia il nostro form di contatto.</p>
<p>Dopo aver copiato lo shortcode chiudiamo WP Forms (con la X in alto a destra) e clicchiamo su “<strong>Pagine</strong>” nel menù laterale.</p>
<p><img src="images/Annotazione-2020-03-31-170213-1024x294-1.png" alt=""></p>
<p>Qui clicchiamo su “<strong>Contatti</strong>” per modificare la pagina che abbiamo <a href="/blog/creiamo-le-pagine-del-nostro-primo-sito-web/">creato in precedenza</a>.</p>
<p>Ora non ci resta che <strong>incollare lo shortcode</strong> nel contenuto della pagina e fare click su “<strong>Aggiorna</strong>” in alto a destra.</p>
<p><img src="images/image-7-1024x458-1.png" alt=""></p>
<p>Se <strong>andiamo a visualizzare</strong> la nostra pagina contatti ora vedremo al suo interno <strong>sarà apparso il modulo creato con WP Forms!</strong></p>
<p><em><strong>Bello vero? Hai appena installato ed utilizzato il tuo primo plugin!</strong></em></p>
<p>Vediamo quali <strong>altri plugin</strong> possiamo installare per migliorare il nostro sito web!</p>
<h3 id="yoast-seo">YOAST SEO</h3>
<p>Questo plugin ti permette di <strong>migliorare la SEO</strong>, cioè tutte quelle funzionalità che permettono al tuo sito di <strong>scalare la classifica di google</strong> per posizionarsi ai primi posti!</p>
<p>Essere fra i primi di google è importantissimo e permette di raggiungere numeri enormi. Questo plugin ti aiuterà a raggiungere questo scopo!</p>
<p>Per scaricarlo vai in “<strong>Plugin – Aggiungi nuovo</strong>” e nella barra di ricerca scrivi “<strong>Yoast SEO</strong>“</p>
<p><img src="images/image-8-1.png" alt=""></p>
<p>Una volta trovato procedi ad <strong>installarlo</strong> ed <strong>attivarlo</strong>.</p>
<p>Nel menù laterale potrai vedere la voce “<strong>SEO</strong>“. Prova a darci un’occhiata e modifica i campi a seconda del tuo sito.</p>
<p>Potrai vedere un blocco di Yoast anche a fine <strong>articolo</strong>, dove poter inserire dei <strong>parametri apposta per google relativi al post o alla pagina.</strong></p>
<p><img src="images/image-9.png" alt=""></p>
<h3 id="w3-total-cache">W3 TOTAL CACHE</h3>
<p>Per migliorare le performance del tuo sito puoi installare un plugin di cache, che permette di <strong>ottimizzare i tempi di caricamento.</strong></p>
<p>Uno fra i migliori è <strong>W3 Total Cache!</strong></p>
<p>Per installarlo cerca “<strong>W3 Total Cache</strong>” fra i plugin e una volta trovato installalo e attivalo!</p>
<p><img src="images/image-10-1.png" alt=""></p>
<p>Una volta attivato vedrai la voce “<strong>Performance</strong>” nella barra laterale.</p>
<p>Vai su “<strong>Performance – General settings</strong>” ed attiva la cache in questo riquadro.</p>
<p><img src="images/image-11-1024x188-1.png" alt=""></p>
<p>Questo plugin permette di spingersi ancora oltre, ma <strong>per il momento può bastare così!</strong></p>
<p>Molto bene, oggi abbiamo installato alcuni fra i <strong>plugin fondamentali</strong> per un sito web.</p>
<p>Il nostro primo <strong>sito web in WordPress ora è pronto per essere pubblicato!</strong> Nella prossima guida andremo a pubblicare online il nostro sito utilizzando risorse completamente <strong>grauite</strong>. Potrai così finalmente rendere pubblico il tuo lavoro, farlo vedere ad amici e parenti e <strong>vantarti un po’!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>9. Esportare online un sito WordPress</title>
			<link>https://albertoreineri.it/blog/9.-esportare-online-un-sito-wordpress/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/9.-esportare-online-un-sito-wordpress/</guid>
			<description>Finora abbiamo creato il nostro sito web in locale, ma adesso è arrivato il momento di pubblicarlo finalmente online!
Finalmente potrai mostrare al mondo intero il risultato del tuo lavoro e vantarti con amici e conoscenti della tua nuova creazione.
Non perdiamo altro tempo e diamoci da fare con la parte finale di questo corso.
Questa è la parte più complicata di tutte. Prenditi il tempo necessario per capirla a fondo e se hai bisogno di aiuto non esitare a contattarci, possiamo aiutarti e rendere tutto più semplice!</description>
			<content type="html"><![CDATA[<p>Finora abbiamo creato il nostro sito web <strong>in locale</strong>, ma adesso è arrivato il momento di <strong>pubblicarlo finalmente online!</strong></p>
<p>Finalmente potrai <strong>mostrare al mondo</strong> intero il risultato del tuo lavoro e vantarti con amici e conoscenti della tua nuova creazione.</p>
<p>Non perdiamo altro tempo e <strong>diamoci da fare</strong> con la parte finale di questo corso.</p>
<p><a href=".local/risorse-gratuite//"><img src="images/scarica-gratis-desk.jpg" alt=""></a></p>
<hr>
<p><em>Questa è la parte più complicata di tutte. Prenditi il tempo necessario per capirla a fondo e se hai bisogno di aiuto non esitare a <a href=".local/assistenza/">contattarci</a>, possiamo aiutarti e rendere tutto più semplice!</em></p>
<hr>
<h2 id="di-cosa-abbiamo-bisogno">DI COSA ABBIAMO BISOGNO</h2>
<p>Per poter pubblicare un sito online abbiamo bisogno fondamentalmente di <strong>due cose:</strong></p>
<ul>
<li><strong>Nome dominio:</strong> il nome attraverso il quale gli utenti possono collegarsi al sito, il famoso <a href="https://www.nomesito.it">www.nomesito.it</a></li>
<li><strong>Hosting:</strong> uno spazio su cui inserire il nostro nuovo sito.</li>
</ul>
<p>Sono molte le aziende che offrono questo tipo di servizi, dalle più economiche alle più care. Molte di queste hanno un servizio dedicato proprio a WordPress, ma <strong>è possibile installare WordPress da soli e risparmiare qualche euro</strong>.</p>
<p><strong>Ecco alcune aziende che offrono spazi di hosting:</strong></p>
<ul>
<li>Aruba</li>
<li>Register.it</li>
<li>TopHost</li>
<li>SiteGround</li>
<li>Keliweb</li>
<li>Serverplan</li>
<li>etc.</li>
</ul>
<p>Alcuni preferiscono una all’altra. La mia opinione è che <strong>non ci sia troppa differenza</strong> fra i gestori di hosting. Logicamente non si può paragonare un hosting annuale da 15€ con uno da 500€. Come in ogni cosa <strong>più si spende migliore è il servizio che si riceve.</strong></p>
<h3 id="specifiche-tecniche">SPECIFICHE TECNICHE</h3>
<p>Se stai scegliendo un piano di hosting per il tuo sito web in <strong>WordPress</strong> devi sapere che ti serviranno queste <strong>2 cose:</strong></p>
<ul>
<li>Hosting LINUX</li>
<li>Database MySQL</li>
</ul>
<p><strong>WordPress</strong> è realizzato con un linguaggio di programmazione che si chiama <strong>PHP</strong> e che per funzionare ha bisogno di un server con sistema operativo <strong>LINUX</strong>.</p>
<p>Inoltre senza <strong>database</strong> WordPress non può funzionare, quindi ricorda di acquistarne anche uno.</p>
<h3 id="hosting-gratis">HOSTING GRATIS</h3>
<p>Ma dato che questo è un corso rivolto ai <strong>principianti</strong>, è sempre meglio cercare di spendere il meno possibile all’inizio, quindi oggi ti indicherò un modo per avere un <strong>hosting completamente gratuito.</strong></p>
<p>Andremo quindi ad installare il nostro sito web online in modo che possa essere raggiunto da tutti e lo faremo <strong>senza spendere un euro!</strong></p>
<p><strong><em>Non male no?</em></strong></p>
<p><strong>Inziamo!!!</strong></p>
<h2 id="altervista">ALTERVISTA</h2>
<p>Utilizzeremo il servizio gratuito di <strong>altervista.org</strong>, che ci permetterà di installare il nostro sito da zero su uno spazio di <strong>hosting gratuito.</strong></p>
<p>Per prima cosa vai su <a href="http://it.altervista.org/">altervista.org</a>.</p>
<p>Aperto il sito troverai una schermata come questa:</p>
<p><img src="images/image-1024x481-1.png" alt=""></p>
<p>Sebbene il tasto centrate “CREA SITO” sia molto invitante, clicca su “<strong>HOSTING</strong>” in alto a sinistra.</p>
<p><img src="images/Senza-titolo-1.jpeg" alt=""></p>
<p>Altervista Hosting</p>
<p>Puoi installare anche WordPress cliccando su “CREA SITO” in maniera ancora più semplice di come sto per mostrarti, ma sarà una versione di WordPress personalizzata da altervista. Noi invece installeremo WordPress originale importando le modifiche effettuate in locale.</p>
<p>Dopo aver cliccato su “Hosting” ti troverai in questa schermata:</p>
<p><img src="images/image-47-1024x485-1.png" alt=""></p>
<p>Ora clicca su “<strong>Inizia subito</strong>“.</p>
<p><img src="images/image-48-1024x479-1.png" alt=""></p>
<p>Adesso lasciamo selezionato “<strong>Attiva un Hosting</strong>” e premiamo “<strong>Prosegui</strong>“</p>
<p><img src="images/image-49-1024x483-1.png" alt=""></p>
<p>Ora devi inserire <strong>il nome del tuo sito</strong>. Io in questo caso ho inserito “<em>albydev</em>“.</p>
<p>Ricordati che con altervista non potrai avere un sito con il “.it” o “.com”, ma solamente con “.altervista.org”. Può essere una <strong>limitazione</strong> ma considerando la gratuità del servizio penso possa andar bene lo stesso, almeno all’inizio per effettuare test senza spendere nulla!</p>
<p>Dopo che avrai compilato i tuoi dati pesonali clicca su “<strong>Prosegui</strong>” in fondo alla pagina.</p>
<p><img src="images/image-50-1024x482-1.png" alt=""></p>
<p><strong><em>E Voilà!</em></strong></p>
<p><img src="images/image-51-1024x486-1.png" alt=""></p>
<p>Abbiamo il nostro spazio di hosting gratuito!</p>
<p>Ora non resta che <strong>aspettare la mail di altervista</strong> con le credenziali per accedere all’hosting. Prima di poter accedere è necessario <strong>confermare la creazione dell’account</strong>, dopo aver cliccato sul relativo link della email abbiamo terminato la procedura di creazione!</p>
<p>Se non la vedi nella posta in arrivo controlla anche nella spam.</p>
<p>Una volta creato lo spazio web possiamo <strong>entrare nella sezione di configurazione.</strong></p>
<p><img src="images/image-52-1024x697-1.png" alt=""></p>
<h2 id="creare-il-database">CREARE IL DATABASE</h2>
<p>Come ormai saprai bene, <strong>WordPress per funzionare ha bisogno di un database</strong> nel quale salvare i dati.</p>
<p>Quindi per prima cosa <strong>attiviamo il database su altervista.</strong></p>
<p>È molto semplice, basta cliccare sul bottone “<strong>Attiva Database</strong>” presente nella schermata del backend di altervista e poi “<strong>Attiva database gratis</strong>“</p>
<p>Dopo aver attivato il database dovresti vedere questi campi nella pagina di altervista:</p>
<p><img src="images/image-52-1024x697-2.png" alt=""></p>
<p><strong>Ora inizia la parte più complicata di tutte!</strong></p>
<p>Certo potevamo creare il nostro sito <strong>direttamente online</strong>, ma noi vogliamo diventare degli <strong>Specialisti WP</strong>, gente che ne sa di WordPress, e dobbiamo <strong>imparare anche come funzionano le cose!</strong> Saper importare ed esportare un sito manualmente è una capacità molto importante <strong>se vuoi diventare uno sviluppatore web!</strong></p>
<h2 id="caricare-il-sito-wordpress-online">CARICARE IL SITO WORDPRESS ONLINE</h2>
<h3 id="filezilla">FILEZILLA</h3>
<p>Per poter <em><strong>uploadare</strong></em> il nostro sito su altervista non possiamo semplicemente fare un copia/incolla, ma dobbiamo inviarlo al server tramite un <strong>Client FTP</strong>.</p>
<p>Il software migliore per questo tipo di operazioni è <strong>FileZilla</strong>!</p>
<p>Procedi quindi con il download di questo software tramite questo link: <a href="http://filezilla-project.org/download.php">http://filezilla-project.org/download.php</a></p>
<p>L’installazione è semplicissima, basta seguire la guida e cliccare su “<strong>Avanti</strong>” fino alla fine!</p>
<p>Dopo averlo installato dobbiamo inserire il nostro account FTP per collegarci al server di altervista.</p>
<p><em>Non spaventarti per questi paroloni, man mano che vedremo le cose diventeranno sempre più semplici.</em></p>
<p>Per prima cosa <strong>cerca fra le tue email quella che ti ha inviato Altervista</strong> contentente i dati per loggarti, che inizia così:</p>
<p><img src="images/image-14.png" alt=""></p>
<p>Ora <strong>lanciamo FileZilla</strong> e clicchiamo sulla prima icona sotto al menù (apri il gestore siti):</p>
<p><img src="images/image-13-1.png" alt=""></p>
<p>Si aprirà una schermata come questa:</p>
<p><img src="images/Untitled-1024x576-1.jpeg" alt=""></p>
<p>Qui clicchiamo su “<strong>Nuovo sito</strong>“.</p>
<p>Sulla sinistra apparirà un nuovo campo con scritto”<strong>Nuovo sito</strong>“, puoi rinominare questo campo come vuoi, io per esempio inserisco “<strong>albydev.altervista.org</strong>“.</p>
<p>Ora concentriamoci sulla <strong>parte a destra</strong>, quella più importante:</p>
<p><img src="images/image-15-1.png" alt=""></p>
<p>Qua dobbiamo andare ad inserire <strong>i dati inviatici dalla mail di altervista.</strong></p>
<p>Dopo i dati di accesso al pannello, c’è un riquadro intitolato “Login via FTP”. Compiliamo quindi i campi “<strong>Host</strong>“, “<strong>Utente</strong>” e “<strong>Password</strong>” con i dati della mail e clicchiamo su “<strong>Connetti</strong>“.</p>
<p><em>Il campo “Porta” possiamo lasciarlo vuoto.</em></p>
<p>Dovrebbe comparire una schermata come questa:</p>
<p><img src="images/image-16.png" alt=""></p>
<p><strong>È tutto normale</strong> non preoccuparti, puoi flaggare “Considera sempre sicuro il certificato…” e cliccare su “<strong>OK</strong>“.</p>
<p><strong>A questo punto sei connesso al tuo server altervista.</strong></p>
<p>Inizia subito con il cancellare il file “index.html” sulla destra, così non ci darà fastidio dopo.</p>
<p><img src="images/image-20-1.png" alt=""></p>
<h3 id="copiare-il-nostro-sito-su-altervista">COPIARE IL NOSTRO SITO SU ALTERVISTA</h3>
<p>Ora possiamo caricare il nostro sito su altervista. Per prima cosa dobbiamo <strong>raggiungere il nostro sito in locale</strong>.</p>
<p>Tutti i nostri siti in locale sono nella cartella “C:\XAMPP\htdocs”, percui il nostro sito sarà in “<em>C:\XAMPP\htdocs/wp-test</em>“.</p>
<p>Filezilla ci fa vedere <strong>sulla sinistra il nostro computer in locale</strong> e <strong>sulla destra il nostro server altervista</strong>.</p>
<p><img src="images/image-17-1024x554-1.png" alt=""></p>
<p>Nel riquadro a destra andiamo quindi in “<em>C:\XAMPP\htdoc\wp-test</em>“. Dovresti vedere una schermata come questa:</p>
<p><img src="images/image-18-1.png" alt=""></p>
<p>Ora non ti resta che <strong>selezionare tutti i file</strong> (CTRL+A) <strong>e trascinarli su altervista</strong> (sulla parte destra), con un Drag&amp;Drop!</p>
<p><img src="images/image-19-1024x553-1.png" alt=""></p>
<p>Questa operazione può <strong>durare un po’ di tempo</strong>…</p>
<p>Ma noi <strong>non ci annoieremo</strong>! Dobbiamo anche importare online il nostro database!</p>
<h2 id="importare-online-il-database-wordpress">IMPORTARE ONLINE IL DATABASE WORDPRESS</h2>
<p>Questa è <strong><em>la parte più complicata di tutte</em></strong>… Ma non ti scoraggiare, <strong>è finalmente l’ultima!</strong></p>
<p>Andremo a esportare il nostro database locale, lo modificheremo e lo uploderemo online su altervista!</p>
<h3 id="iniziamo">INIZIAMO!</h3>
<p>Per prima cosa dobbiamo andare a <strong>scaricarci il nostro database locale</strong>. Per fare questo è necessario <strong>avviare XAMPP</strong>, avviare <strong>Apache</strong> e <strong>MySQL</strong> e cliccare su “<strong>Admin</strong>” <strong>in corrispondenza di MySQL</strong>:</p>
<p><img src="images/image-21.png" alt=""></p>
<p>Si aprirà <strong>PhpMyAdmin</strong>, un software per gestire facilmente i database MySQL.</p>
<p><img src="images/Untitled-1-1024x470-1.jpeg" alt=""></p>
<p>Qua andiamo nella <strong>barra sulla sinistra</strong> e selezioniamo il database del nostro sito:<strong>wp-test</strong> e poi clicchiamo su “<strong>Esporta</strong>“.</p>
<p><img src="images/image-22-1024x338-1.png" alt=""></p>
<p>Possiamo lasciare “Rapido” e cliccare direttamente su “<strong>Esegui</strong>“</p>
<p>Scaricheremo quindi il nostro database, potete salvarlo dove volete.</p>
<p>Una volta salvato lo dobbiamo <strong>aprire</strong>. Non serve un programma specifico, basta il classico “<strong>Blocco note</strong>” o “<strong>Text editor</strong>“.</p>
<p><img src="images/image-23-1024x695-1.png" alt=""></p>
<p>Il file aperto è simile a questo, un insieme di stringhe. <strong>Questo è il nostro database.</strong></p>
<p>Ora dobbiamo fare <strong>un’operazione abbastanza delicata</strong>: <strong>sostituire l’url del sito in locale con l’url del sito online.</strong></p>
<p>Per far ciò andiamo su “<strong>Modifica – Sostituisci</strong>“.</p>
<p><img src="images/image-24-2.png" alt=""></p>
<p>In Trova dovremmo inserire l’url al nostro sito in locale, cioè “<em>http://localhost/nome-sito</em>“, mentre in Sostituisci con dovremo inserire l’url di altervista, nel mio caso “<em><a href="http://albydev.altervista.org">http://albydev.altervista.org</a></em>“.</p>
<p>Dopo avere compilato possiamo premere su <strong>Sostituisci tutto</strong> e infine <strong>salvare</strong> il file.</p>
<p><strong>Ora il nostro Database è pronto per essere importato su altervista.</strong></p>
<h3 id="importare-il-database-su-altervista">IMPORTARE IL DATABASE SU ALTERVISTA</h3>
<p>Torniamo ora nel backend di altervista e clicchiamo su <strong>Accedi a PhpMyAdmin</strong></p>
<p><img src="images/image-12.png" alt=""></p>
<p>Si aprirà il <strong>phpmyadmin</strong> del nostro server <strong>altervista</strong>.</p>
<p>Clicchiamo sul nostro database sulla sinistra, chiamato <strong>my_nomesito</strong> e poi su “<strong>Importa</strong>“</p>
<p><img src="images/image-25-1024x416-1.png" alt=""></p>
<p>Ora clicchiamo su “<strong>Scegli file</strong>“, andiamo a selezionare il database locale che abbiamo appena modificato e infine premiamo “<strong>Esegui</strong>“.</p>
<p>Alla fine dovremmo visualizzare un messaggio come il seguente su sfondo verde:</p>
<p><em>Importazione eseguita con successo, 86 query eseguite.</em> (wp-test.sql)</p>
<p><em><strong>E voilà!</strong></em></p>
<p>Il database è importato!</p>
<p>Ora non ci resta che <strong>aspettare che FileZilla termini di caricare online</strong> il nostro sito.</p>
<h3 id="lultima-operazione">L’ULTIMA OPERAZIONE</h3>
<p>Quando FileZilla avrà terminato l’upload occorrerà fare ancora <strong>un’ultimissima modifica!</strong></p>
<p>Andiamo ad aprire il file “<strong>wp-config.php</strong>” su altervista facendo click con il tasto destro sul file e cliccando su “<strong>Visualizza / Modifica</strong>“</p>
<p><img src="images/image-26-1024x552-1.png" alt=""></p>
<p>Si aprirà il blocco note con il file wp-config.php al suo interno.</p>
<p><img src="images/image-27-1024x555-1.png" alt=""></p>
<p>Qua dobbiamo solamente andare a modificare i dati relativi al database, che non è più quello di XAMPP ma quello di altervista.</p>
<p>Cerca questi campi:</p>
<pre tabindex="0"><code>// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( &#39;DB_NAME&#39;, &#39;wp-test&#39; );

/** MySQL database username */
define( &#39;DB_USER&#39;, &#39;root&#39; );

/** MySQL database password */
define( &#39;DB_PASSWORD&#39;, &#39;&#39; );

/** MySQL hostname */
define( &#39;DB_HOST&#39;, &#39;localhost&#39; );
</code></pre><p>Su <strong>DB_NAME</strong> dobbiamo indicare il nuovo nome del database, che sarà “<strong>my_nomesito</strong>“. Per sicurezza torna sul <strong>PhpMyAdmin</strong> di altervista e guarda nel menù laterale a sinistra, c’è un unico database che inizia con “my_”, quello è il nome da inserire.</p>
<p>Gli altri dati restano uguali fortunatamente. Ora non ci resta che <strong>salvare</strong> il file, riaprire <strong>FileZilla</strong> e cliccare su “<strong>Si</strong>” per apportare le modifiche online!</p>
<p><img src="images/image-28.png" alt=""></p>
<p>A questo punto <strong>basterà andare all’URL del nostro sito Altervista e ce lo troveremo online, bello e funzionante!</strong></p>
<p>Un’ultima operazione che è bene fare è quella di <strong>risalvare i permalink</strong> di WordPress, in modo che tutti i link funzionino correttamente.</p>
<p>Per fare ciò basterà loggarsi nel backend ed andare in “<strong>Impostazioni – Permalink</strong>” e semplicemente cliccare su “<strong>Salva</strong> <strong>le modifiche</strong>“, senza modificare nulla!</p>
<p><img src="images/image-29-1024x481-1.png" alt=""></p>
<p><strong><em>CONGRATULAZIONI</em></strong>!!!</p>
<p><strong>Hai terminato la serie per principianti! Ora puoi iniziare a dedicarti a qualcosa di più complesso!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>Come aggiungere uno shortcode in WordPress?</title>
			<link>https://albertoreineri.it/blog/come-aggiungere-uno-shortcode-in-wordpress/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-aggiungere-uno-shortcode-in-wordpress/</guid>
			<description>Gli shortcode sono un modo semplice per aggiungere contenuti dinamici nei post, nelle pagine e nelle barre laterali di WordPress.
Molti plugin e temi WordPress utilizzano shortcode per aggiungere contenuti particolari come moduli di contatto, gallerie di immagini, cursori e altro.
In questo articolo, ti mostreremo come aggiungere facilmente uno shortcode in WordPress. Ti mostreremo anche come creare i tuoi shortcode personalizzati in WordPress.
COSA SONO GLI SHORTCODE? Gli shortcode in ​​WordPress sono stringhe che ti aiutano ad aggiungere contenuti dinamici nei post, nelle pagine e nei widget della sidebar di WordPress.</description>
			<content type="html"><![CDATA[<p>Gli shortcode sono un modo semplice per <strong>aggiungere contenuti dinamici</strong> nei post, nelle pagine e nelle barre laterali di WordPress.</p>
<p>Molti <strong>plugin e temi WordPress utilizzano shortcode</strong> per aggiungere contenuti particolari come moduli di contatto, gallerie di immagini, cursori e altro.</p>
<p>In questo articolo, ti mostreremo come <strong>aggiungere facilmente uno shortcode in WordPress</strong>. Ti mostreremo anche come creare i tuoi shortcode personalizzati in WordPress.</p>
<h2 id="cosa-sono-gli-shortcode">COSA SONO GLI SHORTCODE?</h2>
<p>Gli shortcode in ​​WordPress sono stringhe che ti aiutano ad aggiungere contenuti dinamici nei post, nelle pagine e nei widget della sidebar di WordPress. Sono visualizzati <strong>tra parentesi quadre</strong> quadre in questo modo:</p>
<p><em>[shortcode]</em></p>
<p>Per comprendere meglio gli shortcode, diamo un’occhiata al motivo per cui sono stati inseriti.</p>
<p>WordPress filtra tutto il contenuto per assicurarsi che nessuno utilizzi post e contenuto della pagina per inserire <strong>codice dannoso</strong> nel database . Ciò significa che <strong>puoi scrivere HTML di base nei tuoi post, ma non puoi scrivere codice PHP.</strong></p>
<p>E se volessi eseguire un codice personalizzato all’interno dei tuoi post per visualizzare post correlati, banner pubblicitari, moduli di contatto, gallerie, ecc.?</p>
<p>Qui entra in gioco <strong>l’API Shortcode.</strong></p>
<p>Fondamentalmente, <strong>consente agli sviluppatori di aggiungere il loro codice all’interno di una funzione</strong> e quindi di registrarla con WordPress come shortcode, in modo che gli utenti possano usarlo facilmente senza avere alcuna conoscenza di sviluppo web.</p>
<p>Quando WordPress trova lo shortcode, eseguirà automaticamente il codice ad esso associato.</p>
<p>Vediamo <strong>come aggiungere facilmente</strong> shortcode nei post e nelle pagine di WordPress.</p>
<h2 id="aggiunta-di-uno-shortcode-nei-post-e-nelle-pagine-di-wordpress">AGGIUNTA DI UNO SHORTCODE NEI POST E NELLE PAGINE DI WORDPRESS</h2>
<p>Innanzitutto, è necessario <strong>modificare il post e la pagina in cui si desidera aggiungere lo shortcode</strong>. Successivamente, è necessario fare clic sul pulsante <strong>Aggiungi blocco</strong> per inserire un blocco <em>shortcode</em>.</p>
<p><img src="images/shortcode-1024x513.gif" alt=""></p>
<p>Dopo aver aggiunto il blocco <em>shortcode</em>, puoi semplicemente inserire il tuo shortcode nelle impostazioni del blocco. Lo shortcode sarà fornito da vari plugin di WordPress che potresti utilizzare.</p>
<p>Ora puoi salvare il tuo post o la pagina e visualizzare in anteprima le modifiche <strong>per vedere lo shortcode in azione.</strong></p>
<h2 id="aggiunta-di-uno-shortcode-nei-widget-della-sidebar-di-wordpress">AGGIUNTA DI UNO SHORTCODE NEI WIDGET DELLA SIDEBAR DI WORDPRESS</h2>
<p>Puoi anche usare gli shortcode nei widget della sidebar di WordPress . Basta visitare la pagina <strong>Aspetto »Widget</strong> e aggiungere il widget “Testo” a una sidebar.</p>
<p>Ora puoi <strong>incollare il tuo shortcode</strong> nell’area di testo del widget.</p>
<p><img src="images/image-33-1-1024x438.png" alt=""></p>
<p>Non dimenticare di fare clic sul pulsante “<strong>Salva</strong>” per memorizzare le impostazioni del widget.</p>
<p>Successivamente, puoi visitare il tuo sito Web WordPress per vedere <strong>l’anteprima dal vivo</strong> dello shortcode nel widget della barra laterale.</p>
<h2 id="aggiunta-di-uno-shortcode-nel-vecchio-editor-classico-di-wordpress">AGGIUNTA DI UNO SHORTCODE NEL VECCHIO EDITOR CLASSICO DI WORDPRESS</h2>
<p>Se stai ancora utilizzando il vecchio <strong>editor classico</strong> in WordPress, ecco come aggiungere codici brevi ai tuoi post e alle tue pagine WordPress.</p>
<p>Modifica semplicemente il post e la pagina in cui desideri aggiungere lo shortcode. È possibile <strong>incollare lo shortcode</strong> in qualsiasi punto all’interno dell’editor dei contenuti nel punto in cui si desidera che venga visualizzato. Assicurati solo che lo shortcode sia nella sua stessa riga.</p>
<p><img src="images/image-34-3-1024x316.png" alt=""></p>
<p>Non dimenticare di <strong>salvare</strong> le modifiche. Successivamente puoi visualizzare l’anteprima del tuo post e della pagina per vedere lo shortcode in azione.</p>
<h2 id="come-aggiungere-un-shortcode-nel-tema-wordpress">COME AGGIUNGERE UN SHORTCODE NEL TEMA WORDPRESS</h2>
<p>Gli shortcode sono pensati per essere utilizzati all’interno di post, pagine e widget di WordPress. Tuttavia, a volte potresti voler <strong>usare un shortcode all’interno di un tema</strong> di WordPress.</p>
<p>Fondamentalmente, puoi aggiungere uno shortcode a qualsiasi file del tuo tema WordPress semplicemente aggiungendo il seguente codice.</p>
<pre tabindex="0"><code>&lt;?php echo do_shortcode(&#34;[shortcode]&#34;); ?&gt;
</code></pre><p>WordPress cercherà lo shortcode e visualizzerà il suo output nel file del tema.</p>
<h2 id="come-creare-il-tuo-shortcode-personalizzato-in-wordpress">COME CREARE IL TUO SHORTCODE PERSONALIZZATO IN WORDPRESS</h2>
<p>Gli shortcode possono essere davvero utili quando si desidera <strong>aggiungere contenuto dinamico o codice personalizzato</strong> all’interno del post e delle pagine di WordPress. Tuttavia, se vuoi <strong>creare un tuo shortcode personalizzato</strong>, dovrai scrivere un po’ di codice.</p>
<p>Se hai dimestichezza con la scrittura di codice PHP, ecco un esempio che puoi utilizzare come modello:</p>
<pre tabindex="0"><code>// Funzione che viene eseguita quando è richiamato lo shortcode
function my_shortcode() {
    $messaggio = &#39;Ciao mondo!&#39;;  // Output
    return $messaggio;
}
// Registro lo shortcode
add_shortcode(&#39;saluto&#39;, &#39;my_shortcode&#39;); // Lo shortcode sarà [saluto]
</code></pre><p>Con questo codice abbiamo prima creato una funzione che esegue del codice e restituisce l’output. Successivamente, abbiamo creato un nuovo shortcode chiamato ‘saluto’ e abbiamo detto a WordPress di eseguire la funzione che abbiamo creato.</p>
<p>Ora puoi <strong>usare aggiungi questo shortcode ai tuoi post</strong>, pagine e widget usando il seguente codice:</p>
<p><em>[saluto]</em></p>
<p>Questo eseguirà la funzione creata e mostrerà l’output desiderato.</p>
<h2 id="shortcode-o-blocchi-di-gutenberg">SHORTCODE O BLOCCHI DI GUTENBERG?</h2>
<p>Gli utenti ci chiedono spesso le differenze tra shortcode e nuovi blocchi di Gutenberg.</p>
<p>Fondamentalmente se trovi utili gli shortcode, adorerai i blocchi dell’editor di WordPress. I blocchi ti consentono di fare la stessa cosa ma <strong>in modo più intuitivo.</strong></p>
<p>Invece di richiedere agli utenti di aggiungere uno shortcode per visualizzare contenuti dinamici, i blocchi consentono agli utenti di aggiungere contenuti dinamici all’interno di post / pagine con <strong>un’interfaccia utente più intuitiva</strong>. Molti plugin WordPress popolari stanno passando all’uso dei blocchi <strong>Gutenberg</strong> anziché degli shortcode perché sono <strong>più adatti ai principianti.</strong></p>
<p>Speriamo che questo articolo ti abbia aiutato a imparare come aggiungere uno shortcode in WordPress.</p>
]]></content>
		</item>
		
		<item>
			<title>Cos’è un plugin WordPress? E come si usa?</title>
			<link>https://albertoreineri.it/blog/cos%C3%A8-un-plugin-wordpress-e-come-si-usa/</link>
			<pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/cos%C3%A8-un-plugin-wordpress-e-come-si-usa/</guid>
			<description>Se stai iniziando ad entrare nel mondo di WordPress avrai sicuramente sentito spesso parlare di plugin. Ma cosa sono? E come si utilizzano?
Vediamolo insieme!
COSA SONO I PLUGIN WORDPRESS? I plugin WordPress sono dei pezzi di codice che creano una funzionalità!
Questi pezzi di codice contenuti nei plugin consentono al core di WordPress di aggiungere o migliorare le sue caratteristiche!
Per esempio WordPress non prevede la possibilità di creare un form contatti, per farlo basterà scaricare ed installare un plugin e in questo modo potremo avere il nostro form pronto all’uso!</description>
			<content type="html"><![CDATA[<p>Se stai iniziando ad entrare nel mondo di WordPress avrai sicuramente sentito spesso parlare di <strong>plugin</strong>. Ma cosa sono? E come si utilizzano?</p>
<p><strong>Vediamolo insieme!</strong></p>
<h2 id="cosa-sono-i-plugin-wordpress">COSA SONO I PLUGIN WORDPRESS?</h2>
<p>I plugin WordPress sono dei <strong>pezzi di codice che creano una funzionalità</strong>!</p>
<p>Questi pezzi di codice contenuti nei plugin consentono al core di WordPress di <strong>aggiungere o migliorare le sue caratteristiche</strong>!</p>
<p>Per esempio WordPress non prevede la possibilità di creare un <strong>form contatti</strong>, per farlo basterà scaricare ed installare un plugin e in questo modo potremo avere il nostro form pronto all’uso!</p>
<p>Nel corso degli anni WordPress è diventato sempre più famoso e il <strong>numero</strong> dei plugin è cresciuto <strong>considerevolmente</strong>! Questo è uno dei motivi per cui <strong>WordPress è il CMS più utilizzato al mondo.</strong></p>
<p>Molti plugin sono <strong>gratuiti</strong>, ma esistono anche alcuni plugin a pagamento, che consentono di ampliare il nostro sito con funzionalità potentissime con cifre contenute.</p>
<h2 id="come-installare-un-plugin">COME INSTALLARE UN PLUGIN</h2>
<p>Vediamo ora <strong>come si installa un plugin.</strong> Installeremo una delle funzioni basilari che ogni sito dovrebbe avere: un <strong>modulo di contatto.</strong></p>
<p>Per farlo utilizzeremo il plugin <strong><a href="http://it.wordpress.org/plugins/wpforms-lite/">WPForms</a></strong>.</p>
<p>Questo plugin ci permetterà di creare un <strong>modulo di contatto</strong> in maniera semplice e veloce!</p>
<p>Per prima cosa <strong>accediamo al backend</strong> del nostro sito in WordPress (se non sai come si fa leggi le <a href="http://specialistawp.local/inizia-qui/inizia-qui-principiante/">guide precedenti</a>) e clicchiamo su “<strong>Plugin – Aggiungi nuovo</strong>“</p>
<p><img src="images/Annotazione-2020-03-31-164744-1.png" alt=""></p>
<p>Ci troveremo di fronte ad una schermata come questa:</p>
<p><img src="images/image-1024x528.png" alt=""></p>
<p>Qua dobbiamo andare in alto a destra, nella casella “<strong>Ricerca plugin in corso…</strong>” e qui dentro scrivere WP Forms.</p>
<p>La ricerca partirà in automatico e dopo pochi istanti dovremmo vedere questo plugin nell’elenco:</p>
<p><img src="images/image-1-1-1.png" alt=""></p>
<p>Ora non ci resta che cliccare su “<strong>Installa ora</strong>“.</p>
<p>Dopo che il plugin sarà installato possiamo attivarlo, cliccando su “<strong>Attiva</strong>“</p>
<p><img src="images/image-2-3.png" alt=""></p>
<p>Ora ci troveremo a questo punto:</p>
<p><img src="images/image-3-2.png" alt=""></p>
<p>Questo plugin rende la creazione dei form un’azione veramente <strong>semplicissima</strong>! Possiamo quindi <strong>seguire la guida</strong> che il plugin stesso ci fornisce e in meno di cinque minuti avremo il nostro form bello e funzionante!</p>
<p>Procediamo quindi con il cliccare sul pulsante arancione “<strong>Crea il tuo primo modulo</strong>“.</p>
<p><img src="images/image-4-1024x458.png" alt=""></p>
<p>A questo punto possiamo premere su “<strong>Semplice modulo di contatto</strong>“. Il plugin procederà con la creazione di un form base. Quando avrà finito dovresti vedere una schermata come la seguente:</p>
<p><img src="images/image-5-1-1024x495.png" alt=""></p>
<p>Sulla destra c’è l’anteprima del modulo, mentre sulla sinistra si possono aggiungere e modificare i campi che compongono il modulo.</p>
<p>Esiste anche una versione a pagamento di questo plugin, ma per dei form base è sufficiente quella <strong>gratuita</strong>.</p>
<p>A questo punto clicchiamo su “<strong>Salva</strong>” in alto a destra e poi su “Embed”.</p>
<p>Dopo aver cliccato “<strong>Embed</strong>” si aprirà una finestra come questa:</p>
<p><img src="images/image-6-2.png" alt=""></p>
<p>Quello scritto nel riquadro grigio scuro è uno <strong>shortcode</strong>: un codice che consente di far apparire qualcosa all’interno di un articolo o di una pagina.</p>
<p>A questo punto non dobbiamo far altro che <strong>copiare questo shortcode</strong> ed andarlo a <strong>copiare nella pagina</strong> dove vogliamo che appaia il nostro form di contatto.</p>
<p>Dopo aver copiato lo shortcode chiudiamo WP Forms (con la X in alto a destra) e clicchiamo su “<strong>Pagine</strong>” nel menù laterale.</p>
<p><img src="images/Annotazione-2020-03-31-170213-1024x294.png" alt=""></p>
<p>Qui clicchiamo su “<strong>Contatti</strong>” per modificare la pagina che abbiamo <a href="http://specialistawp.local/creiamo-le-pagine-del-nostro-primo-sito-web/">creato in precedenza</a>.</p>
<p>Ora non ci resta che <strong>incollare lo shortcode</strong> nel contenuto della pagina e fare click su “<strong>Aggiorna</strong>” in alto a destra.</p>
<p><img src="images/image-7-1-1024x458.png" alt=""></p>
<p>Se <strong>andiamo a visualizzare</strong> la nostra pagina contatti ora vedremo al suo interno <strong>sarà apparso il modulo creato con WP Forms!</strong></p>
<p><em><strong>Bello vero? Hai appena installato ed utilizzato il tuo primo plugin!</strong></em></p>
]]></content>
		</item>
		
		<item>
			<title>1. Le basi dell&#39;HTML</title>
			<link>https://albertoreineri.it/blog/1.-le-basi-dellhtml/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/1.-le-basi-dellhtml/</guid>
			<description>L’HTML è la base del web, c’è dappertutto! Ogni pagina internet che visualizzi ha del codice HTML al suo interno. Se vuoi diventare uno sviluppatore web quindi la prima cosa da fare è un corso intensivo di HTML!
Questo corso è rivolto ai principianti, pertanto se conosci già l’HTML questo articolo non fa per te, se invece sei agli inizi BENVENUTO e buono studio! Vedrai che imparerai presto a cerare fantastici contenuti web!</description>
			<content type="html"><![CDATA[<p><strong>L’HTML è la base del web</strong>, c’è dappertutto! Ogni pagina internet che visualizzi ha del codice HTML al suo interno. Se vuoi diventare uno sviluppatore web quindi la prima cosa da fare è un corso intensivo di HTML!</p>
<hr>
<p><em>Questo corso è rivolto ai <strong>principianti</strong>, pertanto se conosci già l’HTML questo articolo non fa per te, se invece sei agli inizi <strong>BENVENUTO</strong> e buono studio! Vedrai che <strong>imparerai presto</strong> a cerare fantastici contenuti web!</em></p>
<hr>
<p>L’HTML non è proprio un linguaggio di programmazione, ma è un <strong>linguaggio di markup,</strong> infatti HTML è l’acronimo di <em>HyperText Markup Language</em>.</p>
<p>Ciò significa che l’HTML non fa operazioni di calcolo, ma sostanzialmente indica al browser <strong>come <em>montare</em> la pagina</strong>, cosa posizionare e come posizionarlo.</p>
<h2 id="cosa-serve-per-iniziare">Cosa serve per iniziare</h2>
<p>Per iniziare a scrivere codice HTML <strong>non servono super computer</strong> nè programmi pesanti e costosi.</p>
<p>Se vuoi iniziare a sviluppare contenuti per il web inizialmente <strong>ti bastano 2 cose:</strong></p>
<ul>
<li>web browser</li>
<li>editor di testo</li>
</ul>
<h3 id="web-browser">Web Browser</h3>
<p>Sviluppando qualcosa che sarà fruibile attraverso un browser, <strong>il browser è fondamentale</strong>. Ne esistono veramente molti e tutti validi, ma il mio consiglio è di utilizzare <strong><a href="https://www.google.com/intl/it_it/chrome/">Google Chrome</a></strong>.</p>
<p>Se non sei un fan del browser di google eccoti alcune alternative:</p>
<ul>
<li><a href="https://www.microsoft.com/it-it/edge">Microsoft Edge</a> (Windows)</li>
<li><a href="https://www.apple.com/it/safari/">Safari</a> (Mac)</li>
<li><a href="https://www.mozilla.org/it/firefox/new/">Mozilla Firefox</a></li>
</ul>
<h3 id="editor-di-testo">Editor di testo</h3>
<p>L’altro software <strong>fondamentale</strong> per sviluppare per il web è un editor di testo.</p>
<p>Un editor di testo è un programma che <strong>consente di scrivere il codice.</strong> Si potrebbe utilizzare banalmente il classico editor di testo del sistema operativo (Blocco note o Text edit), ma fortunatamente esistono software dedicati allo sviluppo che rendono la scrittura del codice molto più semplice.</p>
<p>Il mio consiglio è di utilizzare <strong><a href="https://code.visualstudio.com/">VS Code</a></strong>, a mio avviso in questo momento è il migliore in assoluto.</p>
<p>Anche qui hai comunque molta scelta! Ecco alcune delle migliori <strong>alternative</strong> a VS Code:</p>
<ul>
<li><a href="https://www.sublimetext.com/">Sublime Text</a></li>
<li><a href="https://atom.io/">Atom</a></li>
<li><a href="http://brackets.io/">Brackets</a></li>
<li><a href="https://notepad-plus-plus.org/downloads/">Notepad++</a></li>
</ul>
<h2 id="creiamo-il-nostro-primo-file-html">Creiamo il nostro primo file HTML</h2>
<p>Ora che hai scaricato un browser e un editor di testo, possiamo crerare il nostro primo file HTML.</p>
<p>Creiamo una <strong>cartella</strong> sul desktop chiamata “<strong>HTML</strong>“. Ora apriamo questa cartella con <strong>VS Code</strong>, facendo click con il tasto destro del mouse all’interno della cartella e cliccando “<strong>Apri con Code</strong>“</p>
<p><img src="images/Group-5-1.jpeg" alt=""></p>
<p>Ora possiamo creare il nostro file con VS Code.</p>
<p>Clicchiamo “<strong>CTRL+N</strong>” per creare un nuovo file e poi “<strong>CTRL+S</strong>” per salvarlo, con il nome “<strong><em>index.html</em></strong>“.</p>
<p>Tutti i file HTML devono avere estensione .html, cioè finire con .html, questo farà capire al browser il tipo di file che sta leggendo.</p>
<p>Puoi creare i file anche tramite il menù in alto, cliccando su “File-New File” oppure con l’icona specifica nella barra laterale sulla sinistra.</p>
<p><strong>PERFETTO! Abbiamo creato il nostro primo file HTML!</strong></p>
<h2 id="struttura-base">Struttura base</h2>
<p>Ogni pagina HTML è diversa, ma tutte hanno una <strong>struttura base comune</strong>, uno <em><strong>scheletro</strong></em> sul quale sono costruite.</p>
<p><em>VS Code</em> ci permette di creare questo scheletro in maniera <strong>semplicissima e molto veloce.</strong></p>
<p>Ci basterà aprire il file, inserire un <strong>punto esclamativo</strong> e cliccare il tasto “<strong>tab</strong>“. In questo modo VS Code creerà la struttura base della nostra pagina HTML in automatico.</p>
<p>Se hai fatto questa operazione dovresti vedere comparire questo codice all’interno del file:</p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Questo è lo <em><strong>scheletro</strong></em> di ogni pagina HTML. Andiamo ad analizzarlo!</p>
<h2 id="i-tag-html">I tag HTML</h2>
<p>L’HTML è un linguaggio basato sui <strong>tag</strong>.</p>
<p>Ogni tag indica una <strong>tipologia di contenuto.</strong></p>
<p><strong>Struttura base</strong>: <nometag>contenuto</nometag></p>
<p>Qualsiasi contenuto è sempre inserito all’interno di un <strong>tag</strong>, che <strong>indica al browser come trattare quel tipo di contenuto</strong>.</p>
<p>Generalmente i tag hanno un inizio e una fine, il tag di fine inizia con uno slash(/).</p>
<p>Esistono però alcuni tag senza tag di chiusura, come il tag <br>, che è utilizzato per andare a capo.</p>
<h2 id="esempi-di-tag">Esempi di tag:</h2>
<pre tabindex="0"><code>&lt;html&gt;&lt;/html&gt;
</code></pre><p>Questi tag indicano dove inizia e dove finisce la pagina HTML. Tutto il contenuto va inserito fra questi due!</p>
<pre tabindex="0"><code>&lt;head&gt;&lt;/head&gt;
</code></pre><p>Questo tag permette di inserire delle informazioni relative alla pagina, come il titolo, gli stili da inserire, gli script etc. (Questo ti sarà più chiaro man mano che andrai avanti)</p>
<pre tabindex="0"><code>&lt;body&gt;&lt;/body&gt;
</code></pre><p>All’interno di questi tag c’è il vero e proprio contenuto della pagina</p>
<pre tabindex="0"><code>&lt;h1&gt;La mia prima pagina web&lt;/h1&gt;
</code></pre><p>I titoli sono inseriti dentro i tag heading, che vanno dall’1 al 6, in ordine di importanza. Il titolo della pagina deve essere inserito fra i tag <h1></h1>, il sottotitolo <h2></h2> e così via.</p>
<pre tabindex="0"><code>&lt;br&gt;
</code></pre><p>Questo tag indica al browser di andare a capo.</p>
<pre tabindex="0"><code>&lt;!-- Questo è un commento --&gt;
</code></pre><p>In qualiasi tipo di codice è molto importante inserire i commenti. Questi permettono di inserire delle note all’interno del codice, per poter capire meglio cosa si sta scrivendo o per inserire delle frasi rivolte ai colleghi etc.</p>
<pre tabindex="0"><code>&lt;ul&gt;

    &lt;li&gt;Questo è un item di un elenco&lt;/li&gt;

    &lt;li&gt;Questo è un altro item&lt;/li&gt;

&lt;/ul&gt;
</code></pre><p>Il tag <ul> permette di inserire un elenco. Per inserire un elenco numerato c’è il tag <ol> (Unordered List e Ordered List).</p>
<p>Ogni elemento di un elenco deve essere inserito con il tag <li> (List Item)</p>
<h2 id="sporchiamoci-le-mani">Sporchiamoci le mani</h2>
<p>Iniziamo ora a <strong>modificare lo</strong> <strong><em>scheletro</em></strong> della nostra pagina HTML.</p>
<p>Iniziamo a modificare la <strong>lingua</strong>, modificando “en” con “it” nella <strong>riga 2</strong> del nostro file.</p>
<p>La riga 2 sarà quindi così:</p>
<pre tabindex="0"><code>&lt;html lang=&#34;en&#34;&gt;
</code></pre><p>Ora andiamo sulla riga 6 e modifichiamo il titolo, nel tag <code>&lt;title&gt;</code>.</p>
<p>Chiamiamo questa pagina “<strong>La mia prima pagina web</strong>“</p>
<pre tabindex="0"><code>&lt;title&gt;La mia prima pagina web&lt;/title&gt;
</code></pre><p>Ora salviamo il file e apriamolo, semplicemente aprendo la cartella “<strong>HTML</strong>” e facendoci <strong>doppio click</strong> sopra.</p>
<p><img src="images/image-1536x529-1-1024x353.png" alt=""></p>
<p>Ci troveremo di fonte una <strong>pagina completamente bianca</strong>, perché non abbiamo ancora inserito nessun codice nel contenuto.</p>
<p>Possiamo vedere però che il nome della scheda in alto è “<strong>La mia prima pagina web</strong>“. Questo è il <code>&lt;title&gt;</code> della nostra pagina.</p>
<p><strong>Ora inseriamo un po’ di contenuto.</strong></p>
<p>Andiamo <strong>fra i tag <body></body></strong> e inseriamo questo:</p>
<pre tabindex="0"><code>   &lt;h1&gt;La mia prima pagina web&lt;/h1&gt;
    &lt;p&gt;Benvenuto nella mia prima pagina web!&lt;/p&gt;
    &lt;br&gt;&lt;!-- questo è un a capo--&gt;
    &lt;p&gt;Questo è il secondo paragrafo della mia prima pagina web&lt;/p&gt;
    &lt;br&gt;
    &lt;h2&gt;Elenco&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li&gt;Primo Item&lt;/li&gt;
        &lt;li&gt;Secondo Item&lt;/li&gt;
    &lt;/ul&gt;
</code></pre><p>Ora <strong>salva la pagina e aggiornala nel browser</strong>, vedrai comparire del contenuto!</p>
<p><img src="images/image-1.png" alt=""></p>
<p>Non è difficile da capire, ogni tag spiega se stesso.</p>
<p><strong>CONGRATULAZIONI!</strong></p>
<p><strong>Hai appena creato la tua prima pagina web!</strong></p>
<p>Ma addentriamoci ancora un po’ nell’HTML.</p>
<h2 id="inseriamo-unimmagine">Inseriamo un’immagine</h2>
<p>Per inserire un’immagine in una pagina HTML bisogna utilizzare il tag <strong><img></strong>, con alcuni attributi.</p>
<p>Gli <strong>attributi</strong> forniscono <strong>informazioni aggiuntive</strong> ai tag html. Per esempio il tag <img> indicherà al browser di inserire un’immagine, ma quale immagine? A questa domanda rispondiamo con l’attributo “<strong>src</strong>“, cioè la sorgente da cui il browser può attingere per inserire l’immagine.</p>
<p>Esempio:</p>
<pre tabindex="0"><code>&lt;img src=&#34;immagini/foto.jpg&#34;&gt;
</code></pre><p>In questo esempio il browser inserirà l’immagine <strong>foto.jpg</strong> presente nella cartella “<strong>immagini</strong>“.</p>
<p>Proviamo ora ad inserire un’immagine nella nostra pagina.</p>
<p>Andiamo nella nostra cartella “<strong>HTML</strong>” sul desktop e creiamo una cartella chiamata “<strong>img</strong>“, all’interno di questa cartella inseriamo ora una qualsiasi immagine in formato <strong>JPG</strong>.</p>
<p>Adesso <strong>richiamiamo l’immagine nel nostro file <em>index.html</em>,</strong> in questo modo:</p>
<pre tabindex="0"><code>&lt;img src=&#34;img/immagine.jpg&#34;&gt;
</code></pre><p>Ora <strong>salviamo</strong> il file e <strong>aggiorniamo</strong> il browser.</p>
<p><img src="images/image-2-768x370-1.png" alt=""></p>
<p>Vediamo che l’immagine viene visualizzata nella nostra pagina html.</p>
<p>Però è un po’ <strong>troppo grande!</strong> Almeno nel mio caso, questo dipende dalle dimensioni dell’immagine.</p>
<p>Per visualizzare l’immagine in modo più carino possiamo aggiungere un altro attributo al nostro tag <img>: <strong>l’attributo height o width</strong></p>
<pre tabindex="0"><code>    &lt;img src=&#34;img/immagine.jpg&#34; width=&#34;200&#34;&gt;
</code></pre><p>In questo modo sto <strong>impostando la larghezza dell’immagine a 200px.</strong> Ed ecco che si vede tutto decisamente meglio.</p>
<p><img src="images/image-3.png" alt=""></p>
<p>In questo modo posso <strong>ridimensionare</strong> l’immagine.</p>
<p>Ora <strong>andiamo ancora più a fondo</strong> nell’html.</p>
<h2 id="i-contenitori">I contenitori</h2>
<p>Nelle nostre pagine html possiamo inserire dei <strong>contenitori</strong>, nei quali inserire del contenuto. Questi sono molto utili per <strong>suddividere le pagine e gestire i contenuti al meglio.</strong></p>
<h3 id="div"><div></h3>
<p>Un primo tipo di contenitore è il tag <strong><div></strong>. Questo crea una <strong>sezione</strong> nella pagina. È un <strong>block element</strong>, cioè il contenuto dopo questo tag è inserito <strong>a capo</strong>.</p>
<h3 id="span"><span></h3>
<p>Lo <strong><span></strong> è un contenitore ma <strong>inline</strong>, cioè <strong>non va a capo</strong> dopo di esso.</p>
<p>Se voglio creare un quadrato verde nel sito dovrò utilizzare un <div>, se invece voglio colorare una parola di rosso allora userò il tag <span>.</p>
<p><strong>Eccoti un esempio:</strong></p>
<p>Aggiungi questo codice a <em><strong>index.html</strong></em></p>
<pre tabindex="0"><code>    &lt;div style=&#34;background-color: green;&#34;&gt;
        Questo è un contenitore con sfondo verde
    &lt;/div&gt;
    &lt;p&gt;
        Questo è un paragrafo con del testo inserito a caso. In questo testo voglio &lt;span style=&#34;color:red&#34;&gt;colorare&lt;/span&gt; una parola di rosso
    &lt;/p&gt;
</code></pre><p>ed ecco il <strong>risultato</strong></p>
<p><img src="images/image-4-1536x666-1-1024x444.png" alt=""></p>
<p>Per inserire i colori ho utilizzato l’attributo “style”, che permette di inserire del codice CSS all’interno dell’HTML, ma lo vedremo meglio nella <a href="/blog/le-basi-del-css/">guida</a> <a href="/corso-intensivo-di-css/">al CSS.</a></p>
<h2 id="i-form">I form</h2>
<p>Un altro elemento molto importante di una pagina web è il <strong>form</strong>.</p>
<p>Navigando online avrai compilato moltissime volte dei <strong>moduli</strong>, che siano di contatto, di prenotazione etc.</p>
<p>Per inserire un form occorre utilizzare il tag <strong><form></form></strong> e al suo interno inserire <strong>le tipologia di input</strong> richieste.</p>
<p><strong>Esempio</strong> di form:</p>
<pre tabindex="0"><code>  &lt;form&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Nome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Cognome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;select name=&#34;select&#34; id=&#34;&#34;&gt;
            &lt;option value=&#34;0&#34;&gt;Opzione 1&lt;/option&gt;
            &lt;option value=&#34;1&#34;&gt;Opzione 2&lt;/option&gt;
            &lt;option value=&#34;2&#34;&gt;Opzione 3&lt;/option&gt;
        &lt;/select&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;textarea name=&#34;&#34; id=&#34;&#34; cols=&#34;30&#34; rows=&#34;10&#34; placeholder=&#34;Inserisci il testo qui.&#34;&gt;&lt;/textarea&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;input type=&#34;checkbox&#34; name=&#34;privacy&#34; value=&#34;0&#34;&gt;Accetto la Privacy Policy
        &lt;br&gt;&lt;br&gt;
        &lt;button&gt;Invia&lt;/button&gt;
    &lt;/form&gt;
</code></pre><p>Prova a inserire questo codice in <strong><em>index.html</em></strong>, salvare e aggiornare.</p>
<p>Vedrai comparire dei campi compilabili.</p>
<p><strong>Questi campi sono</strong></p>
<ul>
<li>input di tipo text nel caso del nome e del cognome.</li>
<li>select nel caso del menù a tendina</li>
<li>textarea nel caso dell’area di testo</li>
<li>input di tipo checkbox per accettare la privacy</li>
<li>button per il bottone di invio</li>
</ul>
<p>Premendo sul tasto “<strong>Invia</strong>” non succederà nulla. Per far svolgere un’azione alla nostra pagina html occorre integrarla con altri linguaggi. Ricordi che <strong>l’HTML è solamente un linguaggio di markup</strong>, non di programmazione.</p>
<p>Per questa guida è tutto. Ti lascio ancora <strong>il codice per intero della nostra <em>index.html</em></strong> con i <strong>commenti</strong> che spiegano cosa fa ogni cosa.</p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;La mia prima pagina web&lt;/title&gt;&lt;!-- Il titolo della pagina che appare nella scheda del browser --&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- Titolo --&gt;
    &lt;h1&gt;La mia prima pagina web&lt;/h1&gt;
    &lt;!-- Paragrafo --&gt;
    &lt;p&gt;Benvenuto nella mia prima pagina web!&lt;/p&gt;

    &lt;br&gt;&lt;!-- questo è un a capo--&gt;

    &lt;!-- Sottotitolo --&gt;
    &lt;h2&gt;Sottotitolo&lt;/h2&gt;

    &lt;p&gt;Questo è il secondo paragrafo della mia prima pagina web&lt;/p&gt;

    &lt;br&gt;

    &lt;h2&gt;Elenco&lt;/h2&gt;
    &lt;!-- Elenco --&gt;
    &lt;ul&gt;
        &lt;li&gt;Primo Item&lt;/li&gt;&lt;!-- Item di un elenco --&gt;
        &lt;li&gt;Secondo Item&lt;/li&gt;
    &lt;/ul&gt;

    &lt;!-- Immagine --&gt;
    &lt;img src=&#34;img/immagine.jpg&#34; width=&#34;200&#34;&gt;

    &lt;!-- DIV: block element --&gt;
    &lt;div style=&#34;background-color: green;&#34;&gt;
        Questo è un contenitore con sfondo verde
    &lt;/div&gt;

    &lt;!-- SPAN: inline element --&gt;
    &lt;p&gt;
        Questo è un paragrafo con del testo inserito a caso. In questo testo voglio
        &lt;span style=&#34;color:red&#34;&gt;colorare&lt;/span&gt; una parola di rosso
    &lt;/p&gt;

    &lt;!-- FORM --&gt;
    &lt;form&gt;
        &lt;!-- Casella di testo --&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Nome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Cognome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Menù a tendina --&gt;
        &lt;select name=&#34;select&#34; id=&#34;&#34;&gt;
            &lt;option value=&#34;0&#34;&gt;Opzione 1&lt;/option&gt;
            &lt;option value=&#34;1&#34;&gt;Opzione 2&lt;/option&gt;
            &lt;option value=&#34;2&#34;&gt;Opzione 3&lt;/option&gt;
        &lt;/select&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Area di testo --&gt;
        &lt;textarea name=&#34;&#34; id=&#34;&#34; cols=&#34;30&#34; rows=&#34;10&#34; placeholder=&#34;Inserisci il testo qui.&#34;&gt;&lt;/textarea&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Checkbox--&gt;
        &lt;input type=&#34;checkbox&#34; name=&#34;privacy&#34; value=&#34;0&#34;&gt;Accetto la Privacy Policy
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Bottone --&gt;
        &lt;button&gt;Invia&lt;/button&gt;
    &lt;/form&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><strong>Ora puoi iniziare a smanettare un po’ con i tag</strong> che hai imparato, provando a <strong>creare e modificare qualche pagina HTML!</strong></p>
<p>Leggi anche <em><a href="/blog/le-basi-del-css/">Le basi del CSS &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>2. Le basi del CSS</title>
			<link>https://albertoreineri.it/blog/2.-le-basi-del-css/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/2.-le-basi-del-css/</guid>
			<description>Il CSS è il linguaggio di formattazione del web. Sta per Cascading Style Sheets ed è utilizzato per assegnare uno stile alle pagine html.
Ha una sintassi specifica e permette di separare l’html dal suo stile, mantene do così il codice pulito ed ordinato.
Come l’HTML, anche il css non è un linguaggio di programmazione, è un linguaggio utilizzato per creare i layout delle pagine web. Consente di gestire gli spazi, modificare i colori, creare i layout e tutto ciò che ha a che fare con la parte grafica di un contenuto web.</description>
			<content type="html"><![CDATA[<p>Il CSS è il linguaggio di <strong>formattazione</strong> del web. Sta per <em>Cascading Style Sheets</em> ed è utilizzato per <strong>assegnare uno stile alle pagine html</strong>.</p>
<p>Ha una sintassi specifica e permette di separare l’html dal suo stile, mantene do così il <strong>codice pulito ed ordinato</strong>.</p>
<p>Come l’HTML, anche il css <strong>non è un linguaggio di programmazione</strong>, è un linguaggio utilizzato per creare i layout delle pagine web. Consente di gestire gli spazi, modificare i colori, creare i layout e tutto ciò che ha a che fare con la parte grafica di un contenuto web.</p>
<hr>
<p><em>Questo corso è rivolto ai <strong>principianti</strong>, pertanto se conosci già il CSS questo articolo non fa per te, se invece sei agli inizi <strong>BENVENUTO</strong> e buono studio! Vedrai che <strong>imparerai presto</strong> a cerare fantastici contenuti web!</em></p>
<hr>
<p>Questo articolo è una continuazione del la guida <a href="/blog/le-basi-dellhtml/">Le basi di</a> <a href="/blog/le-basi-dell-html/">HTML</a>, che puoi trovare <a href="/blog/le-basi-dellhtml/">qui</a>.</p>
<p>Se ti perdi durante l’articolo sul fondo di questo articolo potrai trovare il codice di tutto ciò che andremo a creare.</p>
<h2 id="come-inserire-il-css-in-una-pagina-html">Come inserire il CSS in una pagina HTML</h2>
<p>Il CSS da solo quindi non serve a nulla, ma <strong>deve essere inserito in una pagina html.</strong></p>
<p>Esistono <strong>3 modi</strong> per inserire del codice CSS in una pagina HTML</p>
<ul>
<li><strong>Inline CSS</strong></li>
<li><strong>CSS Interno</strong></li>
<li><strong>CSS Esterno</strong></li>
</ul>
<h3 id="inline-css">Inline CSS</h3>
<p>Consente di inserire del codice CSS <strong>direttamente all’interno del codice HTML.</strong></p>
<p>Con questo metodo <strong>i linguaggi HTML e CSS restano mischiati insieme</strong>. Un esempio di questa tipologia di codice è quello che abbiamo inserito nel corso intensivo di HTML, quando abbiamo impostato lo sfondo verde al div, o il rosso alla parola nello span.</p>
<p><strong>Esempio</strong>:</p>
<pre tabindex="0"><code>&lt;div style=&#34;background-color:green&gt;Ciao Mondo&lt;/div&gt;
</code></pre><p>Sebbene sia molto veloce da applicare, <strong>è il modo peggiore</strong> per inserire del codice CSS.</p>
<p><strong>Mischiare i linguaggi di programmazione non è mai un bene</strong>, è meglio imparare fin da subito che l’ordine è una caratteristica fondamentale per un buon sviluppatore.</p>
<p>Vediamo quindi gli altri metodi.</p>
<h3 id="css-interno">CSS Interno</h3>
<p>Questo metodo consiste nell’inserire il codice CSS <strong>all’interno dell’head</strong> della pagina HTML.</p>
<p>In questo modo il CSS è all’interno della pagina HTML ma <strong>non in mezzo al contenuto HTML.</strong> È una scelta sicuramente migliore rispetto all’Inline CSS ma non ancora ottimale.</p>
<p>Per inserire del CSS interno occorre andare <strong>fra i tag <head></head></strong> e indicare che stiamo per scrivere del codice CSS, in questo modo:</p>
<pre tabindex="0"><code>&lt;style type=&#34;text/css&#34;&gt;


&lt;/style&gt;
</code></pre><p>All’interno del tag <style> possiamo inserire il codice CSS.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>&lt;style type=&#34;text/css&#34;&gt;
   h1{
      color:red
   }
&lt;/style&gt;
</code></pre><p>In questo caso <strong>tutti gli h1 della pagina saranno rossi.</strong></p>
<h3 id="css-esterno">CSS Esterno</h3>
<p>Questo è <strong>il modo migliore</strong> e più efficiente di gestire i file CSS.</p>
<p>Consiste nel <strong>creare un file esterno</strong>, che deve avere estensione .css, e <strong>richiamarlo nell’head della pagina HTML.</strong></p>
<p>In questo modo <strong>i linguaggi sono ben separati</strong>, ognuno nel suo file.</p>
<p><strong>Esempio:</strong></p>
<p>Ora <strong>creiamo un nuovo file</strong> (CTRL+N) e salviamolo (CTRL+S) con il nome “<strong><em>style.css</em></strong>“.</p>
<p>In questo file possiamo inserire questo:</p>
<pre tabindex="0"><code>h1{
   color:red;
}
</code></pre><p>Ora <strong>salviamo</strong> “<strong><em>style.css</em></strong>” e apriamo “<em><strong>index.html</strong></em>“.</p>
<p>Andiamo <strong>nell’head</strong> di “index.html” e inseriamo questo sotto al title:</p>
<pre tabindex="0"><code>&lt;link rel=&#34;stylesheet&#34; href=&#34;style.css&#34;&gt;
</code></pre><p>Se apri il file “<strong><em>index.html</em></strong>” nel tuo browser noterai che <strong>l’h1 ora è rosso.</strong></p>
<p>Questi sono <strong>i tre metodi</strong> per inserire del codice CSS in una pagina HTML. Come avrai potuto capire <strong>il metodo migliore è il terzo</strong>, ma ci sono alcune occasioni nelle quali può essere utile applicare uno dei primi due metodi.</p>
<p>Ora che abbiamo imparato a inserire il CSS in una pagina HTML iniziamo a parlare proprio di CSS!</p>
<h2 id="sintassi-css">Sintassi CSS</h2>
<p>Il CSS è un linguaggio con una <strong>sintassi specifica</strong>. Se si commette un <strong>errore</strong> nella scrittura della sintassi il codice <strong>non funzionerà.</strong></p>
<p>Ecco uno <strong>schema</strong> che raccoglie gli <strong>elementi</strong> del linguaggio CSS:</p>
<p><img src="images/schema-CSS.jpeg" alt=""></p>
<h3 id="selettore">Selettore</h3>
<p>Indica <strong>l’oggetto a cui applicare lo stile</strong>. Questo può essere un tag html, come <h1>, <p> etc., oppure una classe o un id (approfondiremo classi e id fra poco).</p>
<h3 id="proprietà">Proprietà</h3>
<p>Una proprietà è una <strong>regola che si applica al selettore</strong>. Il CSS ha moltissime proprietà, man mano che imparerai questo linguaggio ne scoprirai sempre di più. Fortunatamente VS Code offre una lista di tutte le proprietà, visibile premendo “CTRL+Space Bar”.</p>
<p>Nell’esempio di prima la proprietà è “<em><strong>color</strong></em>“, altre fra le più utilizzate sono “background-color”, “margin”, “padding”, “border” etc.</p>
<h3 id="valore">Valore</h3>
<p>È il <strong>valore da assegnare alla proprietà</strong>. Può essere un colore, un numero in pixel o altro ancora. Imparerai ad utilizzare i valori corretti man mano che utilizzerai il CSS.</p>
<p>Proprietà e Valore devono essere racchiusi in una <strong>parentesi graffa.</strong></p>
<p>Al termine di ogni Valore occorre inserire un “<strong>punto e virgola</strong>“.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>h1{
   color:red;
}
</code></pre><ul>
<li><strong>h1</strong> è il <strong>selettore</strong></li>
<li>sopo il selettore apro la <strong>graffa</strong></li>
<li><strong>color</strong> è la <strong>Proprietà</strong></li>
<li><strong>red</strong> è il <strong>Valore</strong></li>
<li>alla fine del valore inserisco il <strong>punto e virgola</strong></li>
<li>chiudo la <strong>graffa</strong>.</li>
</ul>
<p>Dopo questa piccola introduzione teorica <strong>iniziamo a fare sul serio!</strong></p>
<h2 id="iniziamo-a-sporcarci-le-mani"><strong>Iniziamo a sporcarci le mani</strong></h2>
<p>Andiamo nel nostro file “style.css” e iniziamo a scrivere del codice CSS!</p>
<p>Iniziamo con il dare uno stile generale alla nostra pagina, utilizzando il selettore “body”, in questo modo:</p>
<pre tabindex="0"><code>body{
   color:#444;
   background-color:#f2f2f2
}
</code></pre><p>In questo modo abbiamo inserito un colore grigio scuro al testo e un bianco leggermente sporco allo sfondo.</p>
<h2 id="i-colori">I colori</h2>
<p>Nel codice CSS ci sono <strong>vari modi con i quali inserire i colori:</strong></p>
<ul>
<li>Nome del colore</li>
<li>Esadecimale</li>
<li>RGB</li>
</ul>
<h3 id="nome-del-colore">Nome del colore</h3>
<p>Questo modo consente di indicare il colore semplicemente scrivendo il <strong>nome del colore in inglese</strong>.</p>
<p>Per esempio se voglio un colore bianco basterà scrivere “white”, e così via.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>color:blue;
</code></pre><h3 id="esadecimale">Esadecimale</h3>
<p>Il colore è indicato utilizzando un codice esadecimale, chiamato anche <strong>Hex code</strong>. Per utilizzare questo metodo occorre inserire un # seguito dal codice a 6 cifre. È di gran lunga il metodo più utilizzato.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>color:#f4f4f4;
</code></pre><h3 id="rgb">RGB</h3>
<p>Consiste nell’indicare il colore utilizzando il <strong>metodo RGB</strong>. È possibile anche utilizzare delle trasparenze con l’RGBA.</p>
<p><strong>Esempi:</strong></p>
<p><strong>RGB:</strong></p>
<pre tabindex="0"><code>rgb(243, 163, 44)
</code></pre><p><strong>RGBA</strong>:</p>
<pre tabindex="0"><code>rgba(243, 163, 44,.7)
</code></pre><p>In questo caso il “.7” indica che la trasparenza sarà al 70%.</p>
<h2 id="font">Font</h2>
<p>Una delle prime cose da fare quando si personalizza un layout è <strong>scegliere un bel font.</strong></p>
<p>Per inserire un font in un sito web occorre <strong>importarlo</strong>, per essere certi che qualsiasi utente su qualsiasi computer visualizzi il font corretto.</p>
<p>Fortunatamente <strong>google</strong> mette a disposizione moltissimi <strong>font</strong> in maniera <strong>gratuita</strong> e semplicissima da utilizzare. Vediamo come.</p>
<p>Per prima cosa andiamo su <strong>google fonts</strong>, a questo link: <a href="https://fonts.google.com/">https://fonts.google.com/</a></p>
<p>Qua possiamo cercare il font che più ci piace. In questa guida utilizzeremo il “<strong>Source Sans Pro</strong>“.</p>
<p>Inseriamo quindi “<strong>Source Sans Pro</strong>” nella barra di ricerca di Google Fonts</p>
<p><img src="images/image-5.png" alt=""></p>
<p>e lo <strong>selezioniamo</strong>.</p>
<p>Ora ci troveremo di fronte ad una schermata come questa:</p>
<p><img src="images/image-6-1536x725-1-1024x483.png" alt=""></p>
<p>Sulla destra possiamo cliccare su “<strong>+ Select this style</strong>” in corrispondenza del carattere che vogliamo. Possiamo selezionarli tutti per avere tutte le variabili possibili del font, ma per ottimizzare i tempo di caricamento della pagina è meglio selezionare solo l’essenziale.</p>
<p>In questa guida selezioniamo solo il “<strong>regular 400</strong>” e il “<strong>bold 700</strong>“.</p>
<p>Ora si aprirà sulla destra una finestra come questa:</p>
<p><img src="images/image-7.png" alt=""></p>
<p>Qua clicchiamo su “<strong>Embed</strong>” e successivamente su “<strong>@import</strong>“</p>
<p><img src="images/image-8.png" alt=""></p>
<p>Adesso possiamo copiare il contenuto fra <em><style></em> e <em></style></em> e incollarlo nel nostro <strong>“style.css</strong>“, cancellando tutto il resto.</p>
<p>Ora aggiungiamo questo codice:</p>
<pre tabindex="0"><code>body{
    font-family: &#39;Source Sans Pro&#39;, sans-serif;
    font-size: 22px;
    font-weight: 400;
    font-style: normal;
    line-height: 35px;
}
</code></pre><p>In questo modo abbiamo impostato <strong>“Source Sans Pro” come font primario</strong> del sito.</p>
<p>Ecco cos’altro abbiamo impostato:</p>
<ul>
<li><strong>Font-size</strong> indica la <strong>dimensione</strong> del font, che abbiamo settato a 22 pixel.</li>
<li><strong>Font-weight</strong> indica lo <strong>spessore</strong> del font, in questo caso è settato come regolare. In questo campo possiamo utilizzare sia i numeri da 100 a 900, sia il nome, da “lighter” a “bolder”. Logicamente occorrerà importare queste dimensioni da google fonts, per il momento abbiamo importato solo il 400 e il 700.</li>
<li><strong>Font-style</strong> indica lo <strong>stile</strong> del font, in questo caso è normale. Puoi inserire per esempio “italiac” per avere un font in corsivo.</li>
<li><strong>Line-height</strong> indica <strong>l’altezza</strong> del font, lo spazio fra le righe, in questo caso impostato a 35 pixel.</li>
</ul>
<p>Prova a <strong>salvare</strong> il foglio di stile e <strong>aggiornare</strong> la pagina, vedrai che <strong>il testo sarà cambiato!</strong></p>
<h2 id="classi-e-id">Classi e id</h2>
<p>Come abbiamo già accennato poco fa, è possibile impostare delle classi e degli id ai tag html, in modo da poterli <strong>raggruppare</strong> alcune regole di css.</p>
<p>Classi e id sono <strong>attributi</strong> che possiamo <strong>aggiungere ai tag html</strong> per distinguerli fra loro.</p>
<h3 id="id">Id</h3>
<p>Un <strong>id</strong> è un <strong>attributo univoco</strong>, va utilizzato nel caso ci sia un elemento particolare che <strong>non si ripeterà</strong> mai. Se per esempio voglio che un titolo sia giallo, solo quel titolo, posso dargli un id particolare.</p>
<p>Per indicare un id nel CSS occorre farlo precedere da un <strong>hashtag</strong></p>
<p><strong>Esempio:</strong></p>
<p><strong><em>style.css</em></strong></p>
<pre tabindex="0"><code>#giallo{
   color:yellow
}
</code></pre><p><strong><em>index.html</em></strong></p>
<pre tabindex="0"><code>&lt;h2 id=&#34;giallo&#34;&gt;Questo titolo è giallo&lt;/h2&gt;
</code></pre><h3 id="classi">Classi</h3>
<p>Una classe è un <strong>elemento che ritorna spesso</strong>, e che quindi posso <strong>riutilizzare</strong>. Per esempio se voglio inserire una serie di bottoni con la stessa formattazione, posso dare loro la classe “<strong>bottone</strong>“, impostarla una sola volta nel CSS e questa verrà applicata a tutti gli elementi con la classe “bottone”</p>
<p>Per indicare una classe nel CSS occorre farla precedere da un <strong>punto</strong>.</p>
<p><strong>Esempio:</strong></p>
<p><em><strong>style.css</strong></em></p>
<pre tabindex="0"><code>.bottone{
   background-color:coral;
   border-radius: 15px;
   color:white;
}
</code></pre><p><strong><em>index.html</em></strong></p>
<pre tabindex="0"><code>&lt;div class=&#34;bottone&#34;&gt;Premi qui!&lt;/div&gt;
</code></pre><h2 id="margin-e-padding">Margin e Padding</h2>
<p>Per gestire gli spazi fra gli elementi si possono utilizzare “<strong>margin</strong>” e “<strong>padding</strong>“.</p>
<p>Ecco uno <strong>schema</strong> per spiegarti che differenza c’è fra i due:</p>
<p><img src="images/margin-e-padding-1.jpeg" alt=""></p>
<p>Il <strong>margin</strong> indica lo spazio <strong>all’esterno</strong> del contenuto, il <strong>padding</strong> lo spazio <strong>all’interno</strong>.</p>
<p>È possibile indicare la <strong>direzione</strong> dello spazio sia per il margin che per il padding, per esempio se si vuole inserire un margine superiore occorre utiilzzare “<strong>margin-top</strong>“.</p>
<p>Ecco alcuni <strong>esempi</strong>:</p>
<p><em><strong>style.css</strong></em></p>
<pre tabindex="0"><code>.box-margin{
    background-color: coral;
    margin:50px
}
.box-padding{
    background-color: coral;
    padding:50px
}
.box-margin-top{
    margin-top: 50px;
    background-color: aquamarine;
}
</code></pre><p><strong><em>index.html</em></strong></p>
<pre tabindex="0"><code>    &lt;h2&gt;Margin e Padding&lt;/h2&gt;
    &lt;h3&gt;Margin:&lt;/h3&gt;
    &lt;div class=&#34;box-margin&#34;&gt;
        Questo è un box con del margine
    &lt;/div&gt;

    &lt;div class=&#34;box-margin-top&#34;&gt;
        Questo box ha solo il margine superiore
    &lt;/div&gt;

    &lt;h3&gt;Padding&lt;/h3&gt;
    &lt;div class=&#34;box-padding&#34;&gt;
        Questo è un box con del padding
    &lt;/div&gt;
</code></pre><h2 id="contenitore">Contenitore</h2>
<p>Gli elementi del CSS possono essere <strong>uno dentro l’altro</strong>, in questo modo permettono di creare layout più elaborati.</p>
<p>Proviamo a rendere la nostra pagina HTML un po’ più carina inserendola in un <strong>contenitore</strong>.</p>
<p>Andiamo <strong>sotto il tag body</strong> e inseriamo un <strong>div</strong> con classe “<strong>container</strong>“, in questo modo:</p>
<pre tabindex="0"><code>&lt;div class=&#34;container&#34;&gt;
</code></pre><p>Ora andiamo prima del </body> e <strong>chiudiamo questo div</strong>, inserendo:</p>
<pre tabindex="0"><code>&lt;/div&gt;
</code></pre><p>Ora aggiungiamo questo codice nel nostro “<strong>style.css</strong>“:</p>
<pre tabindex="0"><code>.container{
    max-width: 800px;
    margin: 0 auto;
}
</code></pre><p>In questo modo abbiamo impostato una <strong>larghezza massima del contenuto della nostra pagina a 800 pixel</strong>, e impostato il margine del contenuto a 0 pixel dall’alto e dal basso e <strong>automaticamente</strong> da destra e sinistra.</p>
<p>Ora <strong>salviamo</strong> e <strong>aggiorniamo</strong> e vedremo il contenuto inserito a centro pagina, più carino no?</p>
<h2 id="immagine-come-sfondo">Immagine come sfondo</h2>
<p>Vediamo ancora un’ultima cosa prima di terminare questa prima carrellata generale di CSS: come inserire <strong>un’immagine come sfondo</strong> di un elemento.</p>
<p>Per poter inserire un’immagine come sfondo occorre utilizzare la proprietà “<strong>background-image</strong>“.</p>
<p>Creiamo un <strong>div</strong> che conterrà la nostra immagine nel file <strong>html</strong>:</p>
<pre tabindex="0"><code>&lt;div class=&#34;immagine-sfondo&#34;&gt;
    Questo div ha un&#39;immagine di sfondo!
&lt;/div&gt;
</code></pre><p>E inseriamo l’url all’immagine tramite il <strong>CSS</strong> nel nostro “style.css”:</p>
<pre tabindex="0"><code>.immagine-sfondo{
    background-image: url(img/immagine.jpg);
    height:500px;
    text-align: center;
    padding-top: 250px;
    color:white;
}
</code></pre><p>In questo modo abbiamo impostato <strong>la nostra immagine come sfondo.</strong> Abbiamo anche impostato <strong>un’altezza</strong> in modo da far vedere bene l’immagine.</p>
<p>Prova a <strong>salvare</strong> e <strong>aggiornare</strong> e vedrai cosa succede.</p>
<p><strong>Ora prova a smanettare un po’</strong> con queste classi e con queste regole, modificando dimensioni, font, colori, immagini e tutto ciò che hai in mente!</p>
<p>Ricorda che <strong>il modo migliore per imparare e dedicare tanto tempo</strong> alla pratica, quindi <strong>inizia a darci dentro con il CSS!</strong></p>
<h3 id="codice-completo">Codice completo:</h3>
<p>Qua puoi trovare il <strong>codice completo</strong> dei file index.html e style.css</p>
<p><strong><em>index.html</em></strong></p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;La mia prima pagina web&lt;/title&gt;&lt;!-- Il titolo della pagina che appare nella scheda del browser --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;style.css&#34;&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;div class=&#34;container&#34;&gt;
    &lt;!-- Titolo --&gt;
    &lt;h1&gt;La mia prima pagina web&lt;/h1&gt;
    &lt;!-- Paragrafo --&gt;
    &lt;p&gt;Benvenuto nella mia prima pagina web!&lt;/p&gt;

    &lt;br&gt;&lt;!-- questo è un a capo--&gt;

    &lt;!-- Sottotitolo --&gt;
    &lt;h2&gt;Sottotitolo&lt;/h2&gt;

    &lt;p&gt;Questo è il secondo paragrafo della mia prima pagina web&lt;/p&gt;

    &lt;br&gt;

    &lt;h2&gt;Elenco&lt;/h2&gt;
    &lt;!-- Elenco --&gt;
    &lt;ul&gt;
        &lt;li&gt;Primo Item&lt;/li&gt;&lt;!-- Item di un elenco --&gt;
        &lt;li&gt;Secondo Item&lt;/li&gt;
    &lt;/ul&gt;

    &lt;!-- Immagine --&gt;
    &lt;img src=&#34;img/immagine.jpg&#34; width=&#34;200&#34;&gt;

    &lt;!-- DIV: block element --&gt;
    &lt;div style=&#34;background-color: green;&#34;&gt;
        Questo è un contenitore con sfondo verde
    &lt;/div&gt;

    &lt;!-- SPAN: inline element --&gt;
    &lt;p&gt;
        Questo è un paragrafo con del testo inserito a caso. In questo testo voglio
        &lt;span style=&#34;color:red&#34;&gt;colorare&lt;/span&gt; una parola di rosso
    &lt;/p&gt;

    &lt;!-- FORM --&gt;
    &lt;form&gt;
        &lt;!-- Casella di testo --&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Nome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;input type=&#34;text&#34; placeholder=&#34;Cognome&#34;&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Menù a tendina --&gt;
        &lt;select name=&#34;select&#34; id=&#34;&#34;&gt;
            &lt;option value=&#34;0&#34;&gt;Opzione 1&lt;/option&gt;
            &lt;option value=&#34;1&#34;&gt;Opzione 2&lt;/option&gt;
            &lt;option value=&#34;2&#34;&gt;Opzione 3&lt;/option&gt;
        &lt;/select&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Area di testo --&gt;
        &lt;textarea name=&#34;&#34; id=&#34;&#34; cols=&#34;30&#34; rows=&#34;10&#34; placeholder=&#34;Inserisci il testo qui.&#34;&gt;&lt;/textarea&gt;
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Checkbox--&gt;
        &lt;input type=&#34;checkbox&#34; name=&#34;privacy&#34; value=&#34;0&#34;&gt;Accetto la Privacy Policy
        &lt;br&gt;&lt;br&gt;
        &lt;!-- Bottone --&gt;
        &lt;button&gt;Invia&lt;/button&gt;
    &lt;/form&gt;

    &lt;h2&gt;Margin e Padding&lt;/h2&gt;
    &lt;h3&gt;Margin:&lt;/h3&gt;
    &lt;div class=&#34;box-margin&#34;&gt;
        Questo è un box con del margine
    &lt;/div&gt;

    &lt;div class=&#34;box-margin-top&#34;&gt;
        Questo box ha solo il margine superiore
    &lt;/div&gt;

    &lt;h3&gt;Padding&lt;/h3&gt;
    &lt;div class=&#34;box-padding&#34;&gt;
        Questo è un box con del padding
    &lt;/div&gt;

&lt;div class=&#34;immagine-sfondo&#34;&gt;
    Questo div ha un&#39;immagine di sfondo!
&lt;/div&gt;

&lt;/div&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><strong><em>style.css</em></strong></p>
<pre tabindex="0"><code>@import url(&#39;https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;700&amp;display=swap&#39;);
body{
    font-family: &#39;Source Sans Pro&#39;, sans-serif;
    font-size: 22px;
    font-weight: lighter;
    line-height: 35px;
    font-style: normal;
}
.box-margin{
    background-color: coral;
    margin:50px
}
.box-padding{
    background-color: coral;
    padding:50px
}
.box-margin-top{
    margin-top: 50px;
    background-color: aquamarine;
}
.container{
    max-width: 800px;
    margin: 0 auto;
}
.immagine-sfondo{
    background-image: url(img/immagine.jpg);
    height:500px;
    text-align: center;
    padding-top: 250px;
    color:white;
}
</code></pre><p><em><a href="/blog/le-basi-dellhtml/">&laquo; Le basi di HTML</a></em></p>
<p><em><a href="/blog/le-basi-di-javascript/">Le basi di Javascript &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>3. Le basi di Javascript</title>
			<link>https://albertoreineri.it/blog/3.-le-basi-di-javascript/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/3.-le-basi-di-javascript/</guid>
			<description>Javascript è il linguaggio che permette di creare animazioni nei contenuti web. Tutte le gallery, gli slider, i pop up, le transizioni di pagina e ogni effetto animato che vedi navigando online è realizzato con Javascript.
Questo linguaggio si è sviluppato moltissimo, passando dall’essere una cosa in più, un modo per creare effetti divertenti e simpatici, ad essere oggi uno dei più utilizzati al mondo, non solo per animazioni. ma per creare vere e proprie strutture software in grado di far funzionare applicativi potentissimi.</description>
			<content type="html"><![CDATA[<p><strong>Javascript</strong> è il linguaggio che permette di <strong>creare animazioni</strong> nei contenuti web. Tutte le gallery, gli slider, i pop up, le transizioni di pagina e ogni effetto animato che vedi navigando online è realizzato con <strong>Javascript</strong>.</p>
<p>Questo linguaggio <strong>si è sviluppato moltissimo</strong>, passando dall’essere una cosa in più, un modo per creare effetti divertenti e simpatici, ad essere oggi uno dei più utilizzati al mondo, non solo per animazioni. ma per creare <strong>vere e proprie strutture software</strong> in grado di far funzionare applicativi potentissimi.</p>
<p>In questo articolo <strong>tratteremo le basi</strong>, partiremo <strong>da zero</strong> e vedremo come funziona questo linguaggio di programmazione, e creeremo insieme qualcosa di <strong>semplice</strong> ma utile per capire come utilizzare questo linguaggio.</p>
<p>Faremo prima un po’ di teoria e poi passeremo a creare qualcosa di utilizzabile sulla nostra pagina web.</p>
<p>Se ti perdi durante l’articolo sul fondo di questo articolo potrai trovare il codice di tutto ciò che andremo a creare.</p>
<hr>
<p><em>Questo corso è rivolto ai <strong>principianti</strong>, pertanto se conosci già Javascript questo articolo non fa per te, se invece sei agli inizi <strong>BENVENUTO</strong> e buono studio! Vedrai che <strong>imparerai presto</strong> a cerare fantastici contenuti web!</em></p>
<hr>
<h2 id="inserire-javascript-nellhtml">Inserire Javascript nell’HTML</h2>
<p>Iniziamo ad <strong>inserire</strong> del codice Javascript nel nostro file html (se non sai di cosa sto parlando dai un’occhiata ai nostri articoli su <a href="/blog/le-basi-dellhtml/">HTML</a> e <a href="/blog/le-basi-del-css/">CSS</a>)</p>
<p>Come per il codice CSS, anche il Javascript può essere inserit in <strong>modi diversi:</strong></p>
<ul>
<li>Javascript interno</li>
<li>Javascript esterno</li>
</ul>
<h3 id="codice-javascript-interno">Codice Javascript interno</h3>
<p>In questo caso il codice Javascript è inserito <strong>direttamente nel file html</strong> prima del fine body (</body>).</p>
<p><strong>Esempio:</strong></p>
<p>Apriamo il nostro “<strong>index.html</strong>“, andiamo sul fondo e inseriamo questo codice appena prima del tag <code>&lt;/body&gt;</code>:</p>
<pre tabindex="0"><code>&lt;script&gt;
   alert(&#34;CIAO&#34;);
&lt;/script&gt;
</code></pre><p>Ora <strong>salviamo</strong> e <strong>apriamo</strong> la pagina “index.html”. Ecco che apparirà un <strong>popup</strong> con scritto “CIAO!”.</p>
<p><img src="images/image-10.png" alt=""></p>
<h2 id="codice-javascript-esterno">Codice Javascript esterno</h2>
<p>Per inserire il javascript esterno occorre <strong>creare un file .js</strong> e <strong>importarlo</strong> nell’html. Come per il CSS questo è <strong>il metodo migliore</strong>, quasi sempre.</p>
<p><strong>Esempio:</strong></p>
<p>Andiamo nella nostra cartella “<strong>HTML</strong>” sul desktop, la apriamo con code (guadra la guida <a href="/blog/le-basi-dellhtml/">Le basi di HTML</a>) e creiamo un file (<strong>CTRL+N</strong>) e lo salviamo (<strong>CTRL+S</strong>) con il nome “<em><strong>scripts.js</strong></em>“.</p>
<p>All’interno di questo file scriviamo:</p>
<pre tabindex="0"><code>alert(&#34;CIAO&#34;);
</code></pre><p>Ora <strong>salviamo</strong> “<strong><em>scripts.js</em></strong>” e apriamo “<strong><em>index.html</em></strong>“.</p>
<p>Qua, sempre prima del <em></body></em>, inseriamo questo:</p>
<pre tabindex="0"><code>&lt;script src=&#34;scripts.js&#34;&gt;&lt;/script&gt;
</code></pre><p>Ora <strong>salviamo</strong> e <strong>aggiorniamo</strong> il browser.</p>
<p><strong>Il risultato è uguale a prima</strong>: il popup, solo che il modo con cui l’abbiamo fatto apparire è diverso.</p>
<h2 id="un-po-di-teoria">Un po’ di teoria</h2>
<h3 id="alert">Alert</h3>
<p>Abbiamo appena utilizzato la funziona “<strong>alert</strong>“, che permette di far apparire un <strong>popup</strong> nella pagina web con del testo al suo interno. Raramente questo è utilizzato per i popup, perché l&rsquo;<strong>estetica è un po’ bruttina</strong> ed esistono metodi molto migliori per far comparire dei popup nelle pagine web, ma può essere molto utile <strong>in fase di debugging</strong>.</p>
<p>Se sto creando una funzione e non riesco a trovare l’errore, posso inserire un “alert” a metà funzione e vedere così se l’errore si verifica prima o dopo.</p>
<h3 id="consolelog">Console.log</h3>
<p>Un altro modo per visualizzare errori in Javascript è la funzione “<strong>console.log</strong>“. Questa permette di <strong>inserire del testo nella console di Javascript</strong>. Anche questa è molto utile in fase di debug e sviluppo.</p>
<p><strong>Ecco un esempio:</strong></p>
<pre tabindex="0"><code>console.log(&#34;CIAO!&#34;);
</code></pre><p>Se inserisci questa in “<em><strong>scripts.js</strong></em>“, salvi e aggiorni, non vedrai accadere niente. Questo perché il <strong>“CIAO!”</strong> che abbiamo scritto <strong>è inserito nella console di Javascript</strong>, non nel body della pagina. Per vedere la console Javascript premi il tasto “<strong>f12</strong>“, oppure fai click con il tasto destro e clicca su “<strong>ispeziona</strong>” (Su google chrome, ma è molto simile su tutti i browser)</p>
<p><img src="images/image-11-1536x353-1-1024x235.png" alt=""></p>
<h3 id="commenti">Commenti</h3>
<p>I <strong>commenti</strong> sono <strong>importantissimi</strong> in ogni linguaggio di programmazione.</p>
<p>Per inserire i commenti in Javascript esistono <strong>due modi:</strong></p>
<p>Se il commento è su <strong>una sola riga</strong> puoi inserire un <strong>doppio slash</strong> prima della riga. In questo modo <strong>tutta la riga sarà commentata.</strong></p>
<p><strong>Esempio</strong></p>
<pre tabindex="0"><code>// Questo è un commento su una riga Javascript
</code></pre><p>Se invece <strong>il commento è più lungo</strong>, puoi usare la stessa sintassi del CSS: <strong><em>/* Commento */</em></strong></p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>/*
Questo è un commento
Javascript su più righe
*/
</code></pre><h3 id="variabili">Variabili</h3>
<p>A differenza di HTML e CSS, <strong>Javscript è un vero e proprio linguaggio di programmazione</strong>, e non dei più semplici.</p>
<p>Come ogni linguaggio di prograammazione è possibile <strong>utilizzare delle variabili per memorizzare i dati e fare calcoli.</strong></p>
<p>Inserire una variabile è molto semplice, basta inserire “<strong>var</strong>” prima della variabile, in questo modo:</p>
<pre tabindex="0"><code>var anni = 30;
</code></pre><p>È fondamentale <strong>inserire il punto e virgola</strong> alla fine della variabile, per indicare che la regola finisce in quel punto. Senza il punto e virgola verranno generati degli errori.</p>
<p>Ora possiamo <strong>richiamare la variabile dentro il console.log</strong> oppure in un <strong>alert</strong>, in questo modo:</p>
<pre tabindex="0"><code>console.log(anni);
</code></pre><p>oppure:</p>
<pre tabindex="0"><code>alert(anni);
</code></pre><p><strong>Salviamo</strong> e <strong>aggiorniamo</strong> e vedremo il numero “<strong>30</strong>” apparire nel popup oppure nella cosole.</p>
<p><strong>Ma possiamo fare di più!</strong></p>
<p>Impostiamo <strong>una serie di variabili:</strong></p>
<pre tabindex="0"><code>var nome = &#34;Marco&#34;;
var altezza = &#34;1.83&#34;;
var anni = 30;
</code></pre><p>Adesso possiamo c<strong>reare una frase ed inserire al suo interno le nostre variabili,</strong> oltre che utilizzarle per fare dei calcoli.</p>
<p>I <strong>valori testuali devono essere inseriti fra virgolette</strong>, mentre i <strong>valori numerici senza</strong>. In questo modo possiamo fare anche delle <strong>operazioni aritmetiche.</strong></p>
<p><strong>Ecco un esempio:</strong></p>
<pre tabindex="0"><code>console.log(&#39;Ciao, mi chiamo &#39; + nome + &#39; e sono alto &#39; + altezza + &#39; metri. In questo momento ho &#39; + anni + &#39; anni. Fra 5 anni avrò &#39; + (anni + 5) + &#39; anni.&#39;); &lt;/script&gt;
</code></pre><p>Per inserire una <strong>variabile in un testo</strong> occorre <strong>concatenarla</strong>, metterla insieme.</p>
<p>Per fare questo abbiamo utilizzato il segno <strong>‘+’.</strong></p>
<h3 id="funzioni">Funzioni</h3>
<p>Le funzioni sono delle <strong>parti di codice che svolgono una determinata azione</strong>.</p>
<p>Isolando una parte di codice in una funzione, questa potrà essere <strong>richiamata</strong> più volte all’interno del progetto.</p>
<p>Le funzioni possono avere dei <strong>parametri</strong>, che ne personalizzano l’azione.</p>
<p><strong>Esempio:</strong></p>
<p>Andiamo sul file <em><strong>scripts.js</strong></em> e scriviamo:</p>
<pre tabindex="0"><code>function ciao() {
   alert (&#34;CIAO&#34;);
}
</code></pre><p>Ora andiamo sul file _<strong>index.htm</strong>_l e aggiungiamo un bottone, in questo modo:</p>
<pre tabindex="0"><code>&lt;button onclick=&#34;ciao()&#34;&gt;Salutami&lt;/button&gt;
</code></pre><p><strong>Salviamo</strong> e <strong>aggiorniamo</strong> e vedremo che <strong>cliccando sul nuovo bottone apparirà il popup con scritto “CIAO”.</strong></p>
<h3 id="parametri">Parametri</h3>
<p>Adesso aggiungiamo un <strong>parametro</strong>. Andiamo nella funzione a la modifichiamo così:</p>
<pre tabindex="0"><code>function ciao(nome) {
    alert (&#34;CIAO &#34;+nome);
 }
</code></pre><p>e sul file <em><strong>index.html</strong></em> modifichiamo così il bottone:</p>
<pre tabindex="0"><code>&lt;button onclick=&#34;ciao(&#39;Marco&#39;)&#34;&gt;Salutami&lt;/button&gt;
</code></pre><p><strong>Salviamo</strong> e <strong>aggiorniamo</strong> e possiamo vedere che ora il saluto è rivolto al nome inserito nel parametro della funzione!</p>
<p>“Marco” è il nostro parametro</p>
<h3 id="if-else">If Else</h3>
<p>Gli “If” sono <strong>alla base di tutta la programmazione</strong>. Ogni azione è fatta come conseguenza di un’altra. Vediamo cosa significa.</p>
<p>Utilizziamo sempre il bottone del saluto. Possiamo prevedere che se il nome è “Marco” allora il popup dirà “Ciao Marco”, se invece il nome è “Mark”, possiamo far apparire “Hello Mark”.</p>
<p><strong>Vediamo come fare:</strong></p>
<p>Sostituiamo la funzione con questa:</p>
<pre tabindex="0"><code>function ciao(nome) {
    if(nome==&#34;Marco&#34;){
        alert (&#34;CIAO &#34;+nome);
    }else if(nome==&#34;Mark&#34;){
        alert (&#34;Hello &#34;+nome);
    }else{
        alert (&#34;Buongiorno &#34;+nome);
    }
 }
</code></pre><p>Ora possiamo andare a <strong>modificare il parametro nel bottone</strong>, da “Marco” a “Mark”, oppure inserire un nome totalmente diverso.</p>
<p>Se il nome è Marco allora il popup sarà “Ciao Marco”, se Mark allora “Hello Mark”, se altro sarà “Buongiorno + nome”.</p>
<p>Da notare come <strong>ci siano due segni uguale</strong>, questo perché nel Javascript un uguale assegna il valore, per confrontarli invece occorre usarne 2 o 3 a seconda dei casi. Per il momento ci basta sapere che quando dobbiamo connfrontare più valori bisogna inserire 2 segni uguale.</p>
<h3 id="eventi">Eventi</h3>
<p><strong>Il Javascript può essere richiamato all’interno dell’HTML all’accadere di determinati eventi,</strong> per esempio al click, al passaggio con il mouse etc.</p>
<p>Oggi esistono anche molti altri modi, ma per iniziare questi sono i più semplici ed immediati.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>&lt;button onclick=&#34;alert(&#39;CIAO!&#39;)&#34;&gt;Salutami&lt;/button&gt;
</code></pre><p>In questo caso al click del bottone apparirà il <strong>popup di saluto.</strong></p>
<h2 id="creiamo-il-nostro-primo-effetto">Creiamo il nostro primo effetto</h2>
<p>Al di là della teoria, <strong>a noi interessa soprattutto vedere come possiamo utilizzare Javascript per creare gli effetti per le nostre pagine web.</strong></p>
<p>Quindi ora andremo a <strong>creare un semplice effetto che cambierà lo sfondo del body al click di un bottone.</strong></p>
<p><strong>Vediamo come fare:</strong></p>
<p>Iniziamo con il creare un bottone nella nostra <em><strong>index.html:</strong></em></p>
<pre tabindex="0"><code>&lt;button onclick=&#34;cambiaSfondo()&#34;&gt; Cambia sfondo! &lt;/button&gt;
</code></pre><p>Ora andiamo nel nostro <strong><em>scripts.js</em></strong> e creiamo la funzione <strong>cambiaSfondo()</strong>:</p>
<pre tabindex="0"><code>function cambiaSfondo(){
   document.body.style.backgroundColor=&#39;#000&#39;;
}
</code></pre><p>Se <strong>salviamo</strong> e <strong>aggiorniamo</strong> vedremo che ora <strong>al click del bottone lo sfondo diventerà nero.</strong></p>
<p>Abbiamo detto al browser che al click del bottone deve selezionare il colore di sfondo del body (body.style.backgroundcolor) e impostarlo a nero.</p>
<p>Notiamo però che <strong>è un’unica azione</strong>, una volta che lo sfondo è nero non possiamo più tornare al bianco…</p>
<p><strong>Andiamo ad aggiungere ancora qualche linea di codice:</strong></p>
<pre tabindex="0"><code>function cambiaSfondo(){
    var sfondo = document.body.style.backgroundColor;
    if(sfondo==&#34;rgb(0, 0, 0)&#34;){
        document.body.style.backgroundColor=&#39;#fff&#39;;
    }else{
        document.body.style.backgroundColor=&#39;#000&#39;;

    }
}
</code></pre><p>In questo modo facciamo un <strong>controllo del colore di sfond</strong>o. Se è nero lo impostiamo bianco, altrimento sarà nero.</p>
<p>Così facendo possiamo <strong>cambiare colore di sfondo ogni volta che clicchiamo sul bottone.</strong></p>
<p><strong>Congratulazioni! Hai appena creato il tuo primo effetto Javascript!!!</strong></p>
<h2 id="animazione-di-un-componente">Animazione di un componente</h2>
<p>Se al posto dello sfondo intero volessimo modificare solamente un <strong>componente</strong>, possiamo farlo utilizzando gli <strong>id</strong> (<a href="/blog/le-basi-del-css/">Le basi di CSS</a>).</p>
<p>Iniziamo con il creare un <strong>div con id=”box”</strong></p>
<pre tabindex="0"><code>&lt;div id=&#34;box&#34; onmouseover=&#34;cambiaBoxOver()&#34; onmouseout=&#34;cambiaBoxOut()&#34;&gt;
   Questo contenitore cambiarà colore al passaggio del mouse
&lt;/div&gt;
</code></pre><p>Ora <strong>creiamo le due funzioni in scripts.js:</strong></p>
<pre tabindex="0"><code> function cambiaBoxOver(){
    document.getElementById(&#39;box&#39;).style.backgroundColor=&#34;coral&#34;;
    document.getElementById(&#39;box&#39;).style.color=&#34;blue&#34;;
}

 function cambiaBoxOut(){
    document.getElementById(&#39;box&#39;).style.backgroundColor=&#34;white&#34;;
    document.getElementById(&#39;box&#39;).style.color=&#34;black&#34;;

}
</code></pre><p><strong>Salviamo</strong> e <strong>aggiorniamo</strong> e vediamo che <strong>il contenitore cambia colore e sfondo al passaggio del mouse.</strong></p>
<p>Molto bene, <strong>queste sono le basi per iniziare a smanettare un po’ con il Javascript.</strong></p>
<p><strong>Cercando online potrai trovare moltissime guide e tutorial sull’argomento.</strong></p>
<p><strong>È però bene conoscere anche un po’ di Javascript</strong> e soprattutto JQuery, per poter <strong>evitare di installare un’infinità di plugin e crearci da soli tutti gli effetti e le funzioni che vogliamo!</strong></p>
<h3 id="codice-completo">CODICE COMPLETO:</h3>
<p><strong>index.html</strong></p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;La mia prima pagina web&lt;/title&gt;&lt;!-- Il titolo della pagina che appare nella scheda del browser --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;style.css&#34;&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div class=&#34;container&#34;&gt;

        &lt;!-- Javascript --&gt;
        &lt;button onclick=&#34;ciao(&#39;Ugo&#39;)&#34;&gt;Salutami&lt;/button&gt;
        &lt;!-- Titolo --&gt;
        &lt;button onclick=&#34;cambiaSfondo()&#34;&gt;
            Cambia sfondo!
        &lt;/button&gt;
        &lt;div id=&#34;box&#34; onmouseover=&#34;cambiaBoxOver()&#34; onmouseout=&#34;cambiaBoxOut()&#34;&gt;
            Questo contenitore cambiarà colore al passaggio del mouse
        &lt;/div&gt;
        &lt;!-- /Javascript--&gt;

        &lt;h1&gt;La mia prima pagina web&lt;/h1&gt;

        &lt;!-- Paragrafo --&gt;
        &lt;p&gt;Benvenuto nella mia prima pagina web!&lt;/p&gt;

        &lt;br&gt;&lt;!-- questo è un a capo--&gt;

        &lt;!-- Sottotitolo --&gt;
        &lt;h2&gt;Sottotitolo&lt;/h2&gt;

        &lt;p&gt;Questo è il secondo paragrafo della mia prima pagina web&lt;/p&gt;

        &lt;br&gt;

        &lt;h2&gt;Elenco&lt;/h2&gt;
        &lt;!-- Elenco --&gt;
        &lt;ul&gt;
            &lt;li&gt;Primo Item&lt;/li&gt;&lt;!-- Item di un elenco --&gt;
            &lt;li&gt;Secondo Item&lt;/li&gt;
        &lt;/ul&gt;

        &lt;!-- Immagine
    &lt;img src=&#34;img/immagine.jpg&#34; width=&#34;200&#34;&gt; --&gt;

        &lt;!-- DIV: block element --&gt;
        &lt;div style=&#34;background-color: green;&#34;&gt;
            Questo è un contenitore con sfondo verde
        &lt;/div&gt;

        &lt;!-- SPAN: inline element --&gt;
        &lt;p&gt;
            Questo è un paragrafo con del testo inserito a caso. In questo testo voglio
            &lt;span style=&#34;color:red&#34;&gt;colorare&lt;/span&gt; una parola di rosso
        &lt;/p&gt;

        &lt;!-- FORM --&gt;
        &lt;form&gt;
            &lt;!-- Casella di testo --&gt;
            &lt;input type=&#34;text&#34; placeholder=&#34;Nome&#34;&gt;
            &lt;br&gt;&lt;br&gt;
            &lt;input type=&#34;text&#34; placeholder=&#34;Cognome&#34;&gt;
            &lt;br&gt;&lt;br&gt;
            &lt;!-- Menù a tendina --&gt;
            &lt;select name=&#34;select&#34; id=&#34;&#34;&gt;
                &lt;option value=&#34;0&#34;&gt;Opzione 1&lt;/option&gt;
                &lt;option value=&#34;1&#34;&gt;Opzione 2&lt;/option&gt;
                &lt;option value=&#34;2&#34;&gt;Opzione 3&lt;/option&gt;
            &lt;/select&gt;
            &lt;br&gt;&lt;br&gt;
            &lt;!-- Area di testo --&gt;
            &lt;textarea name=&#34;&#34; id=&#34;&#34; cols=&#34;30&#34; rows=&#34;10&#34; placeholder=&#34;Inserisci il testo qui.&#34;&gt;&lt;/textarea&gt;
            &lt;br&gt;&lt;br&gt;
            &lt;!-- Checkbox--&gt;
            &lt;input type=&#34;checkbox&#34; name=&#34;privacy&#34; value=&#34;0&#34;&gt;Accetto la Privacy Policy
            &lt;br&gt;&lt;br&gt;
            &lt;!-- Bottone --&gt;
            &lt;button&gt;Invia&lt;/button&gt;
        &lt;/form&gt;

        &lt;h2&gt;Margin e Padding&lt;/h2&gt;
        &lt;h3&gt;Margin:&lt;/h3&gt;
        &lt;div class=&#34;box-margin&#34;&gt;
            Questo è un box con del margine
        &lt;/div&gt;

        &lt;div class=&#34;box-margin-top&#34;&gt;
            Questo box ha solo il margine superiore
        &lt;/div&gt;

        &lt;h3&gt;Padding&lt;/h3&gt;
        &lt;div class=&#34;box-padding&#34;&gt;
            Questo è un box con del padding
        &lt;/div&gt;

        &lt;!--
&lt;div class=&#34;immagine-sfondo&#34;&gt;
    Questo div ha un&#39;immagine di sfondo!
&lt;/div&gt;
--&gt;

    &lt;/div&gt;

    &lt;script src=&#34;scripts.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><strong>scripts.js</strong></p>
<pre tabindex="0"><code>function cambiaSfondo(){
    var sfondo = document.body.style.backgroundColor;
    if(sfondo==&#34;rgb(0, 0, 0)&#34;){
        document.body.style.backgroundColor=&#39;#fff&#39;;
    }else{
        document.body.style.backgroundColor=&#39;#000&#39;;

    }
}

function ciao(nome) {
    if(nome==&#34;Marco&#34;){
        alert (&#34;CIAO &#34;+nome);
    }else if(nome==&#34;Mark&#34;){
        alert (&#34;Hello &#34;+nome);
    }else{
        alert (&#34;Buongiorno &#34;+nome);
    }

 }

 function cambiaBoxOver(){
    document.getElementById(&#39;box&#39;).style.backgroundColor=&#34;coral&#34;;
    document.getElementById(&#39;box&#39;).style.color=&#34;blue&#34;;
}

 function cambiaBoxOut(){
    document.getElementById(&#39;box&#39;).style.backgroundColor=&#34;white&#34;;
    document.getElementById(&#39;box&#39;).style.color=&#34;black&#34;;

}
</code></pre><p><em><a href="/blog/le-basi-dellhtml/">&laquo; Le basi di CSS</a></em></p>
<p><em><a href="/blog/le-basi-di-bootstrap/">Le basi di Bootstrap &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>4. Le basi di Bootstrap</title>
			<link>https://albertoreineri.it/blog/4.-le-basi-di-bootstrap/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/4.-le-basi-di-bootstrap/</guid>
			<description>Questa guida fa riferimento a Bootstrap 4, ora è uscita la versione 5&amp;hellip; Appena avrò un attimo di tempo la aggiornerò!
Se vuoi diventare uno sviluppatore web oggi non puoi fare a meno che scontrarti con bootstrap.
Come dice il sito web uffiliale, Bootstrap è il framework HTML, CSS e JS più popolare al mondo!
Una vastissima parte dei layout web sono create attraverso Bootstrap, perché rende lo sviluppo responsive semplice e veloce.</description>
			<content type="html"><![CDATA[<p><em>Questa guida fa riferimento a Bootstrap 4, ora è uscita la versione 5&hellip; Appena avrò un attimo di tempo la aggiornerò!</em></p>
<hr>
<p>Se vuoi diventare uno <strong>sviluppatore web</strong> oggi non puoi fare a meno che scontrarti con <strong>bootstrap</strong>.</p>
<p>Come dice il <a href="https://getbootstrap.com/">sito web uffiliale</a>, <strong>Bootstrap è il framework HTML, CSS e JS più popolare al mondo!</strong></p>
<p>Una vastissima parte dei layout web sono create attraverso <strong>Bootstrap</strong>, perché rende lo sviluppo responsive <strong>semplice e veloce.</strong></p>
<p>Sebbene esisteno anche altre alternative, Bootstrap rimane un fondamento nei <strong>layout del web</strong>.</p>
<h2 id="cosè-bootstrap">Cos’è Bootstrap</h2>
<p>Ma che cos’è praticamente <strong>Bootstrap</strong>?</p>
<p>Bootstrap è un insieme di <strong>librerie css e js</strong> che velocizzano la realizzazione dei layout delle pagine web.</p>
<p>È stato sviluppato da <strong>Twitter</strong> ed è un progetto <strong>open source.</strong></p>
<h2 id="come-includere-bootstrap">Come includere Bootstrap</h2>
<p>Per poter utilizzare Bootstrap occorre includerlo nel progetto, <strong>inserendo</strong> le librerie css e js nella pagina web.</p>
<p>Questo può essere fatto in <strong>2 modi:</strong></p>
<ul>
<li>Tramite CDN</li>
<li>Scaricando i file</li>
</ul>
<h3 id="cdn">CDN</h3>
<p>Questo metodo consiste nel <strong>richiamare Bootstrap dalla CDN</strong>. È facile e veloce, non occorre scaricare nulla, basta inserire questo codice nell’<strong><em><head></em></strong>:</p>
<pre tabindex="0"><code>&lt;link rel=&#34;stylesheet&#34; href=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; integrity=&#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&#34; crossorigin=&#34;anonymous&#34;&gt;
</code></pre><p>e questo prima della fine del <strong><em><body></em></strong>:</p>
<pre tabindex="0"><code>&lt;script src=&#34;https://code.jquery.com/jquery-3.3.1.slim.min.js&#34; integrity=&#34;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&#34; integrity=&#34;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&#34; integrity=&#34;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
</code></pre><p><strong><em>E voilà!</em></strong> Bootstrap è inserito sul sito ed è pronto a funzionare!</p>
<h3 id="scaricando-i-file">Scaricando i file</h3>
<p>Questo metodo consiste nello <strong>scaricare i file di bootstrap</strong>, inserirli nella cartella del sito web e <strong>richiamarli</strong>.</p>
<p>I file di Bootstrap sono <strong>scaricabili</strong> a questa pagina:</p>
<p><a href="https://getbootstrap.com/docs/4.0/getting-started/download/">https://getbootstrap.com/docs/4.0/getting-started/download/</a></p>
<p>Una volta scaricati occorrerà inserire il file <strong>css nell&rsquo;<head></strong> e il <strong>js prima del </body>.</strong></p>
<p>Nel download saranno presenti <strong>molte versioni</strong> dei file, a noi interessano quelli minizzati:</p>
<ul>
<li>bootstrap.min.css</li>
<li>bootstrap.min.js</li>
</ul>
<p>Inseriamo quindi questo codice nell’<em><strong><head></strong></em>:</p>
<pre tabindex="0"><code>&lt;link rel=&#34;stylesheet&#34; href=&#34;css/bootstrap.min.css&#34;&gt;
</code></pre><p>E questo prima del <strong><em></body></em></strong>:</p>
<pre tabindex="0"><code>&lt;script src=&#34;js/bootstrap.min.css&#34;&gt;&lt;/script&gt;
</code></pre><p>Proseguendo <strong>utilizzeremo il metodo CDN</strong>, per semplicità e velocità di configurazione.</p>
<p><strong>Ecco il template di base da cui partiremo:</strong></p>
<pre tabindex="0"><code>&lt;!doctype html&gt;
&lt;html lang=&#34;it&#34;&gt;
  &lt;head&gt;
    &lt;!-- Required meta tags --&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1, shrink-to-fit=no&#34;&gt;

    &lt;!-- Bootstrap CSS --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; integrity=&#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&#34; crossorigin=&#34;anonymous&#34;&gt;

    &lt;!-- Ulteriore CSS --&gt;

    &lt;title&gt;Corso intensivo Bootstrap!&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Corso intensivo Bootstrap!&lt;/h1&gt;

    &lt;!-- Ulteriore Javascript --&gt;

    &lt;!-- jQuery, Popper.js e Bootstrap JS **L&#39;ordine è molto importante, non modificarlo** --&gt;
    &lt;script src=&#34;https://code.jquery.com/jquery-3.3.1.slim.min.js&#34; integrity=&#34;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&#34; integrity=&#34;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&#34; integrity=&#34;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre><h2 id="la-griglia-di-bootstrap">La griglia di Bootstrap</h2>
<p>La <strong>parte fondamentale</strong> di Bootstrap è la sua griglia.</p>
<p>Bootstrap utilizza un sistema basato su <strong>12 colonne</strong>, che si <strong>adattano</strong> alla dimensione dello <strong>schermo</strong>.</p>
<p>La griglia è composta da un <strong>contenitore</strong> (<em>container</em>), al cui interno vengono inserite delle <strong>righe</strong> (<em>row</em>), al cui interno possono essere inserite delle <strong>colonne</strong> (<em>col</em>).</p>
<p>Le colonne possono essere configurate in modo che la loro <strong>larghezza si adatti e cambi</strong> a seconda della dimensione dello schermo.</p>
<p><strong>Ma è tutto più facile a farsi che a dirsi, quindi iniziamo!</strong></p>
<p>Creiamo un <strong>layout</strong> suddiviso su <strong>2 colonne</strong> che diventeranno 1 se lo schermo è più piccolo di un laptop!</p>
<p>Sotto l&rsquo;<h1> del nostro file inseriamo questo:</p>
<pre tabindex="0"><code>    &lt;!-- Layout 2 colonne Laptop, 1 colonna da tablet in giù --&gt;
    &lt;div class=&#34;container bg-secondary&#34;&gt;
        &lt;div class=&#34;row&#34;&gt;
            &lt;div class=&#34;col-lg-6 bg-success&#34;&gt;
                Colonna 1
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 bg-warning&#34;&gt;
                Colonna 2
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre><p>Il codice si spiega da solo!</p>
<p>Ecco che abbiamo un layout con 2 colonne su <strong>desktop</strong>:</p>
<p><img src="images/image-15-1024x76.png" alt=""></p>
<p>E di 1 colonna da <strong>tablet</strong> in giù:</p>
<p><img src="images/image-17.png" alt=""></p>
<p>Vedrai che la larghezza è minore dell’intero schermo del desktop.</p>
<p>Se vuoi una larghezza del layout al 100% sostituisci “<strong>container</strong>” con “<strong>container-fluid</strong>“.</p>
<h2 id="come-visualizzare-la-modalità-mobile-da-pc">Come visualizzare la modalità mobile da pc</h2>
<p>Per avere un’idea di come il sito sarà sui vari <strong>dispositivi</strong> puoi utilizzare la funzione “<strong>Toggle Device</strong>” di Chrome.</p>
<p>Su google chrome premi <strong>f12</strong> e poi questa <strong>icona</strong> sulla sinistra:</p>
<p><img src="images/image-18.png" alt=""></p>
<p>Dopodiché in alto potrai scegliere un dispositivo mobile oppure selezionare le <strong>dimensioni</strong> che preferisci attraverso l’opzione “<strong>Responsive</strong>“</p>
<p><img src="images/image-20.png" alt=""></p>
<h2 id="breakpoints">Breakpoints</h2>
<p>Bootstrap ha già preimpostati vari <strong>breakpoints</strong>, dal <strong>desktop</strong> al <strong>mobile</strong>.</p>
<p>Indicando <strong>col-lg-6</strong> significa che il contenuto occuperà <strong>6 colonne delle 12</strong> disponibili finché la larghezza è maggiore di lg, dopodiché il contenuto occuperà l’intera larghezza dello schermo.</p>
<p>Ecco una tabella delle <strong>dimensioni</strong> e delle colonne di bootstrap:</p>
<p>|   | Extra small
&lt;576px | Small
≥576px | Medium
≥768px | Large
≥992px | Extra large</p>
<table>
<thead>
<tr>
<th>≥1200px</th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Max container width</td>
<td>None (auto)</td>
<td>540px</td>
<td>720px</td>
<td>960px</td>
<td>1140px</td>
</tr>
<tr>
<td>Class prefix</td>
<td><code>.col-</code></td>
<td><code>.col-sm-</code></td>
<td><code>.col-md-</code></td>
<td><code>.col-lg-</code></td>
<td><code>.col-xl-</code></td>
</tr>
</tbody>
</table>
<p>È possibile creare <strong>layout complessi in modo semplice</strong>, grazie a questo sistema di suddivisione delle colonne.</p>
<p>Ecco un <strong>esempio</strong>:</p>
<pre tabindex="0"><code>    &lt;!-- Layout 2 colonne Laptop, 3 colonna da tablet, 1 colonna da smartphone --&gt;
    &lt;div class=&#34;container bg-secondary&#34;&gt;
        &lt;div class=&#34;row&#34;&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-success&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-warning&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-success&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-warning&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-success&#34;&gt;
                Colonna
            &lt;/div&gt;
            &lt;div class=&#34;col-lg-6 col-md-4 bg-warning&#34;&gt;
                Colonna
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre><p>In questo caso abbiamo 2 colonne da desktop, 3 da tablet e 1 da smartphone.</p>
<p>Ora <strong>prova anche tu</strong> a creare dei layout utilizzando la tabella qua sopra! Il modo migliore per imparare è <strong>provare, provare e provare!</strong></p>
<h2 id="componenti">Componenti</h2>
<p>Bootstrap, oltre alla griglia, comprende una serie di <strong>componenti già belli e pronti</strong> da utilizzare sui nostri siti, basta copiare il componente, <strong>incollarlo</strong> nel nostro sito e poi andarlo a modificare come più ci piace!</p>
<p>Tutti i componenti sono visibili a questo <strong>link</strong>:</p>
<p><a href="https://getbootstrap.com/docs/4.3/components/alerts/">https://getbootstrap.com/docs/4.3/components/alerts/</a></p>
<p>Sulla sinistra vedrai un menù con l’elenco dei componenti.</p>
<p><strong>Vediamo adesso quelli più utilizzati!</strong></p>
<h3 id="navbar">Navbar</h3>
<p>Andiamo a creare una <strong>navbar</strong> per il nostro sito!</p>
<p>Nulla di più semplice con Bootstrap, ci basterà andare a cercare “<strong>Navbar</strong>” fra i vari componenti (<a href="https://getbootstrap.com/docs/4.3/components/navbar/">https://getbootstrap.com/docs/4.3/components/navbar/</a>) e <strong>copiare il codice</strong> per inserirla, nel nostro caso questo:</p>
<pre tabindex="0"><code>&lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
  &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Navbar&lt;/a&gt;
  &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
    &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
  &lt;/button&gt;

  &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
    &lt;ul class=&#34;navbar-nav mr-auto&#34;&gt;
      &lt;li class=&#34;nav-item active&#34;&gt;
        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
      &lt;/li&gt;
      &lt;li class=&#34;nav-item&#34;&gt;
        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Link&lt;/a&gt;
      &lt;/li&gt;
      &lt;li class=&#34;nav-item dropdown&#34;&gt;
        &lt;a class=&#34;nav-link dropdown-toggle&#34; href=&#34;#&#34; id=&#34;navbarDropdown&#34; role=&#34;button&#34; data-toggle=&#34;dropdown&#34; aria-haspopup=&#34;true&#34; aria-expanded=&#34;false&#34;&gt;
          Dropdown
        &lt;/a&gt;
        &lt;div class=&#34;dropdown-menu&#34; aria-labelledby=&#34;navbarDropdown&#34;&gt;
          &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Action&lt;/a&gt;
          &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Another action&lt;/a&gt;
          &lt;div class=&#34;dropdown-divider&#34;&gt;&lt;/div&gt;
          &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Something else here&lt;/a&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li class=&#34;nav-item&#34;&gt;
        &lt;a class=&#34;nav-link disabled&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Disabled&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;form class=&#34;form-inline my-2 my-lg-0&#34;&gt;
      &lt;input class=&#34;form-control mr-sm-2&#34; type=&#34;search&#34; placeholder=&#34;Search&#34; aria-label=&#34;Search&#34;&gt;
      &lt;button class=&#34;btn btn-outline-success my-2 my-sm-0&#34; type=&#34;submit&#34;&gt;Search&lt;/button&gt;
    &lt;/form&gt;
  &lt;/div&gt;
&lt;/nav&gt;
</code></pre><p>Vogliamo però apportare qualche <strong>modifica</strong>, per esempio non ci serve la ricerca sulla navbar, ma vogliamo che il nome del sito sia a sinistra, mente il menù a destra.</p>
<p>Ci basterà quindi <strong>eliminare il form</strong> di ricerca e modificare il margine del menù, da “<strong>mr-auto</strong>” a “<strong>ml-auto</strong>“, nell’ul “navbar-nav”:</p>
<pre tabindex="0"><code>    &lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
        &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Navbar&lt;/a&gt;
        &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
          &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
        &lt;/button&gt;

        &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
          &lt;ul class=&#34;navbar-nav ml-auto&#34;&gt;
            &lt;li class=&#34;nav-item active&#34;&gt;
              &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
            &lt;/li&gt;
            &lt;li class=&#34;nav-item&#34;&gt;
              &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Link&lt;/a&gt;
            &lt;/li&gt;
            &lt;li class=&#34;nav-item dropdown&#34;&gt;
              &lt;a class=&#34;nav-link dropdown-toggle&#34; href=&#34;#&#34; id=&#34;navbarDropdown&#34; role=&#34;button&#34; data-toggle=&#34;dropdown&#34; aria-haspopup=&#34;true&#34; aria-expanded=&#34;false&#34;&gt;
                Dropdown
              &lt;/a&gt;
              &lt;div class=&#34;dropdown-menu&#34; aria-labelledby=&#34;navbarDropdown&#34;&gt;
                &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Action&lt;/a&gt;
                &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Another action&lt;/a&gt;
                &lt;div class=&#34;dropdown-divider&#34;&gt;&lt;/div&gt;
                &lt;a class=&#34;dropdown-item&#34; href=&#34;#&#34;&gt;Something else here&lt;/a&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li class=&#34;nav-item&#34;&gt;
              &lt;a class=&#34;nav-link disabled&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Disabled&lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/nav&gt;
</code></pre><p>Vediamo che abbiamo la nostra bella <strong>navbar pronta e responsiva!</strong></p>
<p>Prova a visualizzare in modalità smartphone, vedrai che il menù scompare e apparirà <strong>l’hamburgher</strong> che mostrerà il menù al click:</p>
<p><strong>Desktop:</strong></p>
<p><img src="images/image-21-1536x495-1-1024x330.png" alt=""></p>
<p><strong>Mobile:</strong></p>
<p><img src="images/image-22.png" alt=""></p>
<h3 id="bottoni">Bottoni</h3>
<p>Un altro componente utilissimo sono i <strong>bottoni</strong>! Bootstrap fornisce un insieme di bottoni già pronti e <strong>ben formattati</strong>, disponibili nei colori più utilizzati, eccoli qui:</p>
<pre tabindex="0"><code>&lt;button type=&#34;button&#34; class=&#34;btn btn-primary&#34;&gt;Primary&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-secondary&#34;&gt;Secondary&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-success&#34;&gt;Success&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-danger&#34;&gt;Danger&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-warning&#34;&gt;Warning&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-info&#34;&gt;Info&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-light&#34;&gt;Light&lt;/button&gt;
&lt;button type=&#34;button&#34; class=&#34;btn btn-dark&#34;&gt;Dark&lt;/button&gt;

&lt;button type=&#34;button&#34; class=&#34;btn btn-link&#34;&gt;Link&lt;/button&gt;
</code></pre><p><img src="images/image-24.png" alt=""></p>
<p>La classe “<strong>btn</strong>” indica il bottone, mentre “<strong>btn-primary</strong>” indica la tipologia del bottone.</p>
<h3 id="caroselli">Caroselli</h3>
<p>Inserire dei caroselli non è mai stato così semplice! Anche qua basta andare a cercare il componente “<strong>Carousel</strong>” sul sito di bootstrap ed inserire il codice!</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>&lt;div id=&#34;carouselExampleIndicators&#34; class=&#34;carousel slide&#34; data-ride=&#34;carousel&#34;&gt;
  &lt;ol class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carouselExampleIndicators&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carouselExampleIndicators&#34; data-slide-to=&#34;1&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carouselExampleIndicators&#34; data-slide-to=&#34;2&#34;&gt;&lt;/li&gt;
  &lt;/ol&gt;
  &lt;div class=&#34;carousel-inner&#34;&gt;
    &lt;div class=&#34;carousel-item active&#34;&gt;
      &lt;img src=&#34;...&#34; class=&#34;d-block w-100&#34; alt=&#34;...&#34;&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
      &lt;img src=&#34;...&#34; class=&#34;d-block w-100&#34; alt=&#34;...&#34;&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
      &lt;img src=&#34;...&#34; class=&#34;d-block w-100&#34; alt=&#34;...&#34;&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;a class=&#34;carousel-control-prev&#34; href=&#34;#carouselExampleIndicators&#34; role=&#34;button&#34; data-slide=&#34;prev&#34;&gt;
    &lt;span class=&#34;carousel-control-prev-icon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Previous&lt;/span&gt;
  &lt;/a&gt;
  &lt;a class=&#34;carousel-control-next&#34; href=&#34;#carouselExampleIndicators&#34; role=&#34;button&#34; data-slide=&#34;next&#34;&gt;
    &lt;span class=&#34;carousel-control-next-icon&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Next&lt;/span&gt;
  &lt;/a&gt;
&lt;/div&gt;
</code></pre><p>Logicamente dobbiamo <strong>inserire un “src” alle immagini</strong> per farle visualizzare, ma il carosello funziona fina da subito!</p>
<h3 id="form">Form</h3>
<p>Anche creare <strong>form graficamente accettabili</strong> è velocissimo! Bootstrap consente di creare degli input carini e ben stilizzati senza perdere il minimo tempo!</p>
<p>Ecco un <strong>esempio</strong>:</p>
<pre tabindex="0"><code>&lt;form&gt;
  &lt;div class=&#34;form-group&#34;&gt;
    &lt;label for=&#34;exampleInputEmail1&#34;&gt;Email address&lt;/label&gt;
    &lt;input type=&#34;email&#34; class=&#34;form-control&#34; id=&#34;exampleInputEmail1&#34; aria-describedby=&#34;emailHelp&#34; placeholder=&#34;Enter email&#34;&gt;
    &lt;small id=&#34;emailHelp&#34; class=&#34;form-text text-muted&#34;&gt;We&#39;ll never share your email with anyone else.&lt;/small&gt;
  &lt;/div&gt;
  &lt;div class=&#34;form-group&#34;&gt;
    &lt;label for=&#34;exampleInputPassword1&#34;&gt;Password&lt;/label&gt;
    &lt;input type=&#34;password&#34; class=&#34;form-control&#34; id=&#34;exampleInputPassword1&#34; placeholder=&#34;Password&#34;&gt;
  &lt;/div&gt;
  &lt;div class=&#34;form-group form-check&#34;&gt;
    &lt;input type=&#34;checkbox&#34; class=&#34;form-check-input&#34; id=&#34;exampleCheck1&#34;&gt;
    &lt;label class=&#34;form-check-label&#34; for=&#34;exampleCheck1&#34;&gt;Check me out&lt;/label&gt;
  &lt;/div&gt;
  &lt;button type=&#34;submit&#34; class=&#34;btn btn-primary&#34;&gt;Submit&lt;/button&gt;
&lt;/form&gt;
</code></pre><p><img src="images/image-26-1024x254.png" alt=""></p>
<p>Questi sono solo <strong>alcuni</strong> dei <strong>componenti</strong> disponibili! Naviga un po’ fra la lista dei componenti e <strong>prova ad inserirli per vedere come funzionano!</strong></p>
<p>Una volta che ti sarai impadronito della griglia potrai cerare siti web responsive in maniera rapida e veloce!</p>
<p>E non dimenticare che <strong>Bootstrap è cross-browser</strong>, cioè funziona sempre e ovunque senza problemi!</p>
<h2 id="modificare-bootstrap">Modificare Bootstrap</h2>
<p>Puoi anche <strong>aggiungere un tuo file css</strong> personale per andare a sovrascrivere alcune classi di bootstrap e personalizzarle come vuoi!</p>
<p>Se per esempio vogliamo che il btn-primary sia arancione, possiamo creare un nostro file css con questo al suo interno:</p>
<pre tabindex="0"><code>.btn-primary{
   background-color:orange !important;
}
</code></pre><p>Ricordati solamente di <strong>inserire questo css dopo bootstrap</strong>, in modo che vada a sovrascriverlo!</p>
<p>Così tutti i btn-primary saranno <strong>arancione</strong> anziché blu!</p>
<h2 id="layout-di-esempio">Layout di esempio</h2>
<p>Creiamo ora una <strong>home page semplice utilizzando solo bootstrap!</strong></p>
<h3 id="template-di-base"><strong>Template di base:</strong></h3>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;IE=edge&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&gt;
    &lt;!-- I 3 meta tags qua sopra DEVONO essere inseriti come primi --&gt;
    &lt;meta name=&#34;description&#34; content=&#34;Corso intensivo di Bootstrap&#34;&gt;
    &lt;meta name=&#34;author&#34; content=&#34;Specialista WP!&#34;&gt;

    &lt;title&gt;Corso intensivo di Bootstrap&lt;/title&gt;

    &lt;!-- Bootstrap CSS --&gt;
    &lt;link href=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; rel=&#34;stylesheet&#34;&gt;

&lt;/head&gt;

&lt;body&gt;

    &lt;!-- JQuery e Bootstrap JavaScript  --&gt;
    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><h3 id="navbar-1">Navbar:</h3>
<p>Ora inseriamo una <strong>navbar con il menù allineato a destra</strong>, come abbiamo visto prima:</p>
<pre tabindex="0"><code>    &lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
        &lt;div class=&#34;container&#34;&gt;
            &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Corso intensivo di Bootstrap&lt;/a&gt;
            &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
                &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
            &lt;/button&gt;

            &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
                &lt;ul class=&#34;navbar-nav ml-auto&#34;&gt;
                    &lt;li class=&#34;nav-item active&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Chi sono&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Blog&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Contatti&lt;/a&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/nav&gt;
</code></pre><h3 id="contenuto">Contenuto</h3>
<p>Ora creiamo il classico layout con il <strong>contenuto sulla sinistra</strong> e una <strong>sidebar sulla destra</strong>. Da smartphone invece la sidebar sarà sotto il contenuto.</p>
<pre tabindex="0"><code>    &lt;div class=&#34;container mt-5&#34;&gt;

        &lt;div class=&#34;row&#34;&gt;
            &lt;!-- CONTENUTO --&gt;
            &lt;div class=&#34;col-sm-8&#34;&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;15 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 2&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;16 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 3&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;17 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- NAVIGATION LINKS --&gt;
                &lt;nav aria-label=&#34;Page navigation example&#34;&gt;
                    &lt;ul class=&#34;pagination justify-content-center mb-5&#34;&gt;
                        &lt;li class=&#34;page-item disabled&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Precedente&lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;2&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;3&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;Successivo&lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/nav&gt;
                &lt;!-- /NAVIGATION LINKS --&gt;
            &lt;/div&gt;
            &lt;!-- /CONTENUTO --&gt;

            &lt;!-- SIDEBAR --&gt;
            &lt;div class=&#34;col-sm-3 col-sm-offset-1&#34;&gt;
                &lt;div&gt;
                    &lt;h4&gt;Chi sono&lt;/h4&gt;
                    &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Ultimi articoli&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 1&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 2&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 3&lt;/a&gt;&lt;/li&gt;

                    &lt;/ol&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Social&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
                    &lt;/ol&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;!-- /SIDEBAR --&gt;

        &lt;/div&gt;&lt;!-- /.row --&gt;

    &lt;/div&gt;&lt;!-- /.container --&gt;
</code></pre><p>Particolarità:</p>
<ul>
<li><strong>mt-5</strong> sta per “margin-top:5rem”.</li>
<li><strong>offset</strong> serve per lasciare colonne vuote prima del contenuto</li>
</ul>
<h3 id="footer">Footer</h3>
<p>Infine inseriamo il footer:</p>
<pre tabindex="0"><code>    &lt;footer&gt;
        &lt;div class=&#34;container text-center mb-5&#34;&gt;
            &lt;p&gt;Sito realizzato da &lt;a href=&#34;&#34;&gt;Specialista WP!&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/footer&gt;
</code></pre><p>Ed ecco un <strong>layout classico semplice realizzato interamente con Bootstrap!</strong></p>
<p><img src="images/image-29-1024x834.png" alt=""></p>
<p>Come vedi <strong>Bootstrap è uno strumento fantastico</strong> per creare layout web in pochissimo tempo!</p>
<p><strong>Prova ad utilizzarlo</strong> modificando la pagina che abbiamo creato per <strong>renderla più tua</strong>, aggiungi un css esterno, cambia i colori, <strong>crea una pagina “chi sono”</strong> da linkare e utilizza lo stesso layout, insomma sbizzarrisciti come meglio credi!</p>
<p><strong>Il miglior modo per imparare è provare, provare, provare!</strong></p>
<p>Come avrai potuto capire <strong>Bootstrap utilizza JQuery</strong>, una libreria Javascript!</p>
<p>Vuoi sapere come funziona?</p>
<p><a href="/blog/le-basi-di-jquery/">Vai alla guida Le basi di JQuery &raquo;</a></p>
<p>Per maggior chiarezza ecco il <strong>codice completo</strong> del layout base con Bootstrap!</p>
<p>I <strong>commenti</strong> ti aiuteranno a capire le varie sezioni!</p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;

&lt;head&gt;
    &lt;meta charset=&#34;utf-8&#34;&gt;
    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;IE=edge&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&gt;
    &lt;!-- I 3 meta tags qua sopra DEVONO essere inseriti come primi --&gt;
    &lt;meta name=&#34;description&#34; content=&#34;Corso intensivo di Bootstrap&#34;&gt;
    &lt;meta name=&#34;author&#34; content=&#34;Specialista WP!&#34;&gt;

    &lt;title&gt;Corso intensivo di Bootstrap&lt;/title&gt;

    &lt;!-- Bootstrap CSS --&gt;
    &lt;link href=&#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&#34; rel=&#34;stylesheet&#34;&gt;

&lt;/head&gt;

&lt;body&gt;

    &lt;nav class=&#34;navbar navbar-expand-lg navbar-light bg-light&#34;&gt;
        &lt;div class=&#34;container&#34;&gt;
            &lt;a class=&#34;navbar-brand&#34; href=&#34;#&#34;&gt;Il mio primo tema&lt;/a&gt;
            &lt;button class=&#34;navbar-toggler&#34; type=&#34;button&#34; data-toggle=&#34;collapse&#34; data-target=&#34;#navbarSupportedContent&#34; aria-controls=&#34;navbarSupportedContent&#34; aria-expanded=&#34;false&#34; aria-label=&#34;Toggle navigation&#34;&gt;
                &lt;span class=&#34;navbar-toggler-icon&#34;&gt;&lt;/span&gt;
            &lt;/button&gt;

            &lt;div class=&#34;collapse navbar-collapse&#34; id=&#34;navbarSupportedContent&#34;&gt;
                &lt;ul class=&#34;navbar-nav ml-auto&#34;&gt;
                    &lt;li class=&#34;nav-item active&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Home &lt;span class=&#34;sr-only&#34;&gt;(current)&lt;/span&gt;&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Chi sono&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Blog&lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li class=&#34;nav-item&#34;&gt;
                        &lt;a class=&#34;nav-link&#34; href=&#34;#&#34;&gt;Contatti&lt;/a&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/nav&gt;


    &lt;div class=&#34;container mt-5&#34;&gt;

        &lt;div class=&#34;row&#34;&gt;
            &lt;!-- CONTENUTO --&gt;
            &lt;div class=&#34;col-sm-8&#34;&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;15 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 2&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;16 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- ARTICOLO --&gt;
                &lt;div class=&#34;mt-5&#34;&gt;
                    &lt;!-- TITOLO --&gt;
                    &lt;h2 class=&#34;&#34;&gt;Il mio articolo 3&lt;/h2&gt;
                    &lt;!-- META --&gt;
                    &lt;p&gt;17 luglio 2020 - Scritto da &lt;a href=&#34;#&#34;&gt;Alberto&lt;/a&gt;&lt;/p&gt;
                    &lt;!-- CONTENT --&gt;
                    &lt;p&gt;
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque et justo ultrices, blandit nulla in, convallis metus. Nullam et mollis orci.
                        Nulla magna augue, accumsan in metus ut, pulvinar facilisis libero. Aliquam erat volutpat. Nulla lectus tortor, lacinia id imperdiet ut, sagittis
                        consectetur magna. Maecenas laoreet sodales tristique. [...]
                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;!-- /ARTICOLO --&gt;

                &lt;!-- NAVIGATION LINKS --&gt;
                &lt;nav aria-label=&#34;Page navigation example&#34;&gt;
                    &lt;ul class=&#34;pagination justify-content-center mb-5&#34;&gt;
                        &lt;li class=&#34;page-item disabled&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34; tabindex=&#34;-1&#34; aria-disabled=&#34;true&#34;&gt;Precedente&lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;2&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;&lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;3&lt;/a&gt;&lt;/li&gt;
                        &lt;li class=&#34;page-item&#34;&gt;
                            &lt;a class=&#34;page-link&#34; href=&#34;#&#34;&gt;Successivo&lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/nav&gt;
                &lt;!-- /NAVIGATION LINKS --&gt;
            &lt;/div&gt;
            &lt;!-- /CONTENUTO --&gt;

            &lt;!-- SIDEBAR --&gt;
            &lt;div class=&#34;col-sm-3 col-sm-offset-1&#34;&gt;
                &lt;div&gt;
                    &lt;h4&gt;Chi sono&lt;/h4&gt;
                    &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Ultimi articoli&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 1&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 2&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Il mio articolo 3&lt;/a&gt;&lt;/li&gt;

                    &lt;/ol&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;h4&gt;Social&lt;/h4&gt;
                    &lt;ol class=&#34;list-unstyled&#34;&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=&#34;#&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
                    &lt;/ol&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;!-- /SIDEBAR --&gt;

        &lt;/div&gt;&lt;!-- /.row --&gt;

    &lt;/div&gt;&lt;!-- /.container --&gt;

    &lt;footer&gt;
        &lt;div class=&#34;container text-center mb-5&#34;&gt;
            &lt;p&gt;Sito realizzato da &lt;a href=&#34;&#34;&gt;Specialista WP!&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/footer&gt;


    &lt;!-- JQuery e Bootstrap JavaScript  --&gt;
    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&#34;&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre><p><em><a href="/blog/le-basi-di-javascript/">&laquo; Le basi di Javascript</a></em></p>
<p><em><a href="/blog/le-basi-di-jquery/">Le basi di jQuery &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>5. Le basi di jQuery</title>
			<link>https://albertoreineri.it/blog/5.-le-basi-di-jquery/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/5.-le-basi-di-jquery/</guid>
			<description>Se hai letto le nostre guide precedenti, ormai saprai bene che HTML, CSS e Javascript sono i tre linguaggi fondamentali del web.
Con l’HTML strutturiamo i nostri siti, con il CSS li modelliamo e li formattiamo e con il Javascript aggiungiamo funzionalità interattive e animazioni.
JQuery è una libreria Javascript che consente di ottenere grandi risultati scrivendo meno codice. In pratica si potrebbe utilizzare il vanilla Javascript (Javascript puro) per fare le stesse cose che si fanno con JQuery, però con questa libreria è più semplice e veloce!</description>
			<content type="html"><![CDATA[<p>Se hai letto le nostre <a href="/guide">guide precedenti</a>, ormai saprai bene che <strong>HTML</strong>, <strong>CSS</strong> e <strong>Javascript</strong> sono i tre <strong>linguaggi fondamentali</strong> del web.</p>
<p>Con <strong>l’HTML</strong> strutturiamo i nostri siti, con il <strong>CSS</strong> li modelliamo e li formattiamo e con il <strong>Javascript</strong> aggiungiamo funzionalità interattive e animazioni.</p>
<p><strong><a href="https://jquery.com/">JQuery</a></strong> è una libreria Javascript che consente di <strong>ottenere grandi risultati scrivendo meno codice</strong>. In pratica si potrebbe utilizzare il vanilla Javascript (Javascript puro) per fare le stesse cose che si fanno con JQuery, però con questa libreria è più <strong>semplice</strong> e <strong>veloce</strong>!</p>
<p>Inoltre JQuery <strong>è compatibile con la maggior parte dei browser,</strong> il che significa che non dobbiamo preoccuparci di testare gli effettu su tutti i browser presenti, ma possiamo stare tranquilli che tutto funzionerà ovunque!</p>
<p>Vuoi <strong>vedere</strong> come <strong>JQuery è più semplice</strong> rispetto a Javascript?</p>
<p><strong>Ecco un esempio!</strong></p>
<p>In questo esempio andremo ad inserire la stringa “<strong>Ciao mondo!</strong>” in un div con id #ciao, guarda la differenza fra i due codici:</p>
<p><strong>Javascript:</strong></p>
<pre tabindex="0"><code>document.getElementById(&#39;ciao&#39;).innerHTML = &#39;Ciao mondo!&#39;
</code></pre><p><strong>JQuery:</strong></p>
<pre tabindex="0"><code>$(&#39;#ciao&#39;).html(&#39;Ciao mondo!&#39;)
</code></pre><p><strong>Visto?</strong> Già da una cosa semplicissima come questa si può vedere che il codice è molto più semplice con JQuery!</p>
<p><strong>Ti sei convinto</strong> che può valere la pena imparare ad utilizzare questa libreria? Molto bene!</p>
<p><strong>Iniziamo!</strong></p>
<h2 id="installazione-di-jquery">Installazione di JQuery</h2>
<p><strong>JQuery</strong> è semplicemente un <strong>file Javascript</strong> da inserire nel nostro HTML.</p>
<p>Questo inserimento può essere fatto in <strong>due modi:</strong> tramite <strong>CDN</strong> oppure <strong>scaricando</strong> i file in locale.</p>
<p>Puoi <strong>scaricare</strong> i file di JQuery dal sito ufficiale a questo link:</p>
<p><a href="https://jquery.com/download/">https://jquery.com/download/</a></p>
<p>Oppure puoi utilizzare una <strong>CDN</strong>, come faremo in questa guida. Utilizzeremo infatti una CDN di google:</p>
<p><a href="https://developers.google.com/speed/libraries/">https://developers.google.com/speed/libraries/</a></p>
<h3 id="template-html">Template HTML</h3>
<p>Iniziamo con il creare un file <strong>HTML</strong> di base in cui installare JQuery. Ecco il nostro <strong>scheletro</strong> HTML:</p>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;
  &lt;head&gt;
    &lt;title&gt;Corso intensivo jQuery&lt;/title&gt;
    &lt;!-- CSS --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;css/styles.css&#34; /&gt;
  &lt;/head&gt;

  &lt;body&gt;


    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;js/scripts.js&#34;&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Ecco il nostro scheletro. Insieme al file html creiamo anche una cartella “<strong>css</strong>” con al suo interno un file “<em>style.css</em>” e una cartella “<strong>js</strong>” con al suo interno un file “<em>scripts.js</em>“.</p>
<p>Ricordati di inserire il file “scripts.js” sotto a JQuery, altrimenti non funzionerà!</p>
<p>Molto bene, abbiamo un progetto web configurato per poter utilizzare <strong>JQuery</strong>, vediamo ora come usare questa libreria!</p>
<h2 id="le-basi">Le basi</h2>
<p><strong>JQuery</strong> è utilizzato per <strong>connettersi con gli elementi HTML</strong> nel browser tramite <strong>DOM</strong>.</p>
<p>Il <strong>DOM</strong> (Document Object Model) è il metodo con cui <strong>Javascript</strong> (e quindi anche JQuery) <strong>interagisce con l’HTML</strong> nel browser.</p>
<p>Per visualizzare esattamente qual è il DOM, facciamo clic con il tasto destro sulla pagina nel browser e selezioniamo <strong>Ispeziona</strong>. Il codice HTML che vediamo nel riquadro di ispezione è il DOM. Ogni elemento HTML è considerato un oggetto che JavaScript può utilizzare. JavaScript può aggiungere, rimuovere e modificare ognuno di questi elementi.</p>
<p>Il livello più esterno del DOM è l’oggetto <strong>document</strong>. Per iniziare a manipolare la pagina con jQuery, dobbiamo prima assicurarci che il document sia pronto, “<em>ready</em>“.</p>
<p>Apriamo quindi il nostro file <em>scripts.js</em> e inseriamo questo codice:</p>
<pre tabindex="0"><code>$(document).ready(function() {
  // Tutte le funzioni di JQuery vanno inserite qui!
})
</code></pre><p>Qualsiasi jQuery personalizzato che scriveremo sarà contenuto all’interno di questa <strong>funzione</strong>. </p>
<p>Nell’introduzione di questo articolo, abbiamo visto un semplice script “<strong>Ciao mondo!</strong>“. Per avviare questo script e stampare il testo sul browser con jQuery, per prima cosa creiamo un elemento vuoto a cui applichiamo un id “ciao”.</p>
<p>Torniamo quindi nel nostro <em>index.html</em> e inseriamo questo nel <em><body>:</em></p>
<pre tabindex="0"><code>&lt;p id=&#34;ciao&#34;&gt;&lt;/p&gt;
</code></pre><p><strong>jQuery</strong> viene chiamato con e rappresentato dal <strong>simbolo del dollaro</strong> ( <code>$</code>). Accediamo al DOM con jQuery utilizzando principalmente la <strong>sintassi CSS</strong> e applichiamo un’azione con un metodo. Un esempio di base di jQuery segue questo formato:</p>
<pre tabindex="0"><code>$(&#39;selector&#39;).method()
</code></pre><p>Poiché un ID è rappresentato da un simbolo hash (#) nei CSS, accederemo all’ID ciao con il selettore <em>#ciao</em> <em>#ciao</em>. <em>html()</em> è un metodo che modifica l’HTML all’interno di un elemento.</p>
<pre tabindex="0"><code>$(&#39;#ciao&#39;).html(&#39;Ciao mondo!&#39;)
</code></pre><p>Il codice viene eseguito non <strong>appena il documento è pronto.</strong></p>
<p><strong>Salviamo</strong> tutto e apriamo index.html nel browser, <strong>vedremo apparire l</strong>a scritta “Ciao mondo”. Questa scritta è stata inserita da JQuery!</p>
<h2 id="i-selettori">I selettori</h2>
<p>La maggior parte dei <strong>selettori jQuery s</strong>ono gli stessi di quelli che utilizziamo nei <a href="/blog/le-basi-del-css/">CSS</a>, con alcune aggiunte specifiche di jQuery. L’elenco completo dei selettori jQuery <a href="https://api.jquery.com/category/selectors/">è disponibile qui</a> .</p>
<p>Di seguito una breve panoramica di alcuni dei selettori più comunemente usati.</p>
<ul>
<li><em>$(“*”)</em>– <strong>Carattere jolly:</strong> seleziona ogni elemento.</li>
<li><em>$(this)</em>– <strong>Corrente:</strong> seleziona l’elemento corrente su cui operare all’interno di una funzione.</li>
<li><em>$(“p”)</em>– <strong>Elemento:</strong> seleziona ogni istanza del _<p>_tag.</li>
<li><em>$(“.esempio”)</em>– <strong>Classe:</strong> seleziona ogni elemento a cui è applicata la classe “esempio”.</li>
<li><em>$(“#esempio”)</em>– <strong>Id:</strong> seleziona una singola istanza dell’ID univoco “esempio”.</li>
<li><em>$(“[type=’text’]”)</em>– <strong>Attributo:</strong> seleziona qualsiasi elemento con _text_applicato _type_all’attributo.</li>
<li><em>$(“p:first-of-type”)</em>– <strong>Pseudo Element:</strong> seleziona il primo <em><p></em>.</li>
</ul>
<p>Generalmente, le <strong>classi</strong> e gli <strong>ID</strong> sono ciò che verrà utilizzato maggiormente: le classi quando si vogliono selezionare più elementi e gli id â€‹â€‹quando si vuole selezionarne solo uno.</p>
<h2 id="eventi-jquery">Eventi jQuery</h2>
<p>Nell’esempio “Ciao mondo!”, il codice è stato eseguito non appena la pagina è stata caricata e il documento era pronto, e quindi non richiedeva l’interazione dell’utente. Chiaramente in questo caso, avremmo potuto facilmente scrivere il testo direttamente nell’HTML senza preoccuparci di jQuery.</p>
<p>Tuttavia, dovremo utilizzare jQuery se vogliamo <strong>far apparire il testo sulla pagina con il clic di un pulsante</strong>. Possiamo aggiungere un pulsante al nostro HTML per attivare l’evento.</p>
<pre tabindex="0"><code>&lt;button id=&#34;trigger&#34;&gt;Cliccami!&lt;/button&gt;
&lt;p id=&#34;ciao&#34;&gt;&lt;/p&gt;
</code></pre><p>Ora possiamo usare il metodo <em>click()</em> per inserire il nostro testo “Ciao mondo!”:</p>
<pre tabindex="0"><code>$(&#39;#trigger&#39;).click(function() {
  $(&#39;#ciao&#39;).html(&#39;Ciao mondo!&#39;)
})
</code></pre><p>Salva e aggiorna e se tutto è andato liscio, facendo clic sul pulsante vedrai apparire il testo.</p>
<p>Un elenco completo dei metodi degli eventi jQuery <a href="https://api.jquery.com/category/events/">è disponibile qui</a> . Un <strong>evento</strong> avviene ogni volta che l’utente interagisce con il browser. Abbiamo appena appreso <a href="https://api.jquery.com/click/">click ()</a> , che viene eseguito con un solo clic del mouse.</p>
<p>Di seguito ti lascio una breve panoramica di alcuni dei metodi di eventi più comunemente utilizzati.</p>
<ul>
<li><a href="https://api.jquery.com/hover/">hover ()</a> – <strong>Hover</strong> viene eseguito quando il mouse viene spostato su un elemento. <a href="https://api.jquery.com/mouseenter/">mouseenter ()</a> e <a href="https://api.jquery.com/mouseleave/">mouseleave () si</a> applicano solo al mouse che entra o esce da un elemento, rispettivamente.</li>
<li><a href="https://api.jquery.com/submit/">submit ()</a> – <strong>Submit</strong> viene eseguito quando viene inviato un modulo.</li>
<li><a href="https://api.jquery.com/scroll/">scroll ()</a> – Lo <strong>scorrimento</strong> viene eseguito quando si <a href="https://api.jquery.com/scroll/">scorre</a> lo schermo.</li>
<li><a href="https://api.jquery.com/keydown/">keydown ()</a> – <strong>Keydown</strong> viene eseguito quando si preme un tasto sulla tastiera.</li>
</ul>
<h2 id="effetti-jquery">Effetti jQuery</h2>
<p><a href="https://api.jquery.com/category/effects/">Gli effetti jQuery</a> lavorano di pari passo con gli eventi consentendo di aggiungere facilmente animazioni e manipolare in altro modo gli elementi della pagina.</p>
<p>Faremo un esempio in cui <strong>apriamo e chiudiamo un overlay / popup modale.</strong> Mentre potremmo usare <strong>due id</strong>: uno per aprire la modal e un altro per chiuderla. Utilizzeremo una classe per aprire e chiudere facilmente la modal con la stessa funzione.</p>
<p><strong>index.html</strong></p>
<pre tabindex="0"><code>&lt;button class=&#34;trigger&#34;&gt;Apri&lt;/button&gt;

&lt;section class=&#34;overlay&#34;&gt;
  &lt;button class=&#34;trigger&#34;&gt;Chiudi&lt;/button&gt;
&lt;/section&gt;
</code></pre><p>Useremo una minima quantità di CSS per nascondere il <em>overlay</em> con <em>display: none</em> e centrarlo sullo schermo.</p>
<p><strong>style.css</strong></p>
<pre tabindex="0"><code>.overlay {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 200px;
  width: 200px;
  background: gray;
}
</code></pre><p>Infine, useremo il metodo <em>toggle()</em>, che commuterà la proprietà  <em>display</em> CSS tra <em>none</em> e <em>block</em>, nascondendo e mostrando l’overlay quando si fa clic.</p>
<pre tabindex="0"><code>$(&#39;.trigger&#39;).click(function() {
  $(&#39;.overlay&#39;).toggle()
})
</code></pre><p>Ora potrai <strong>attivare / disattivare la visibilità del modale facendo clic sui pulsanti.</strong></p>
<p>Puoi anche provare a modificare <em>toggle()</em> per <em>fadeToggle()</em> o <em>slideToggle()</em> per vedere un paio di altri effetti incorporati jQuery.</p>
<p>Di seguito una breve panoramica di alcuni dei metodi di effetto più comunemente usati.</p>
<ul>
<li><a href="https://api.jquery.com/toggle/">toggle ()</a> – <strong>Attiva</strong> / <strong>disattiva</strong> la visibilità di uno o più elementi. <a href="https://api.jquery.com/show/">show ()</a> e <a href="https://api.jquery.com/hide/">hide ()</a> sono gli effetti unidirezionali correlati.</li>
<li><a href="https://api.jquery.com/fadetoggle/">fadeToggle ()</a> – <strong>Fade Toggle</strong> attiva / <strong>disattiva</strong> la visibilità e anima l’opacità di uno o più elementi. <a href="https://api.jquery.com/fadein/">fadeIn ()</a> e <a href="https://api.jquery.com/fadeout/">fadeOut ()</a> sono i relativi effetti unidirezionali.</li>
<li><a href="https://api.jquery.com/slidetoggle/">slideToggle ()</a> – <strong>Slide Toggle</strong> attiva o <strong>disattiva</strong> la visibilità di uno o più elementi con un effetto scorrevole. <a href="https://api.jquery.com/slidedown/">slideDown ()</a> e <a href="https://api.jquery.com/slideup">slideup ()</a> sono i relativi effetti unidirezionali.</li>
<li><a href="https://api.jquery.com/animate/">animate ()</a> – <strong>Animate</strong> esegue effetti di animazione personalizzati sulla proprietà CSS di un elemento.</li>
</ul>
<h2 id="conclusione">Conclusione</h2>
<p>Ora che hai imparato le basi di JQuery puoi <strong>sbizzarrirti</strong> e provare a realizzare gli effetti che vuoi!</p>
<p>Prova quindi a <strong>creare qualche effetto</strong> all’hover del mouse, al click, allo scroll, andando a modificare le <strong>classi CSS</strong> come il colore, lo sfondo o anche l’immagine!</p>
<p><strong>Con JQuery si può fare veramente di tutto</strong>, basta mettersi sotto e studiare un pochino!</p>
<p>Ora che hai capito le basi dei linguaggi <strong>front-end</strong> è ora di dedicare un po’ di tempo anche al <strong>linguaggio principale di WordPress:</strong></p>
<p><em><a href="/blog/le-basi-di-bootstrap/">&laquo; Le basi di Bootstrap</a></em></p>
<p><em><a href="/blog/le-basi-di-php/">Le basi di PHP &raquo;</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>6. Le basi di PHP</title>
			<link>https://albertoreineri.it/blog/6.-le-basi-di-php/</link>
			<pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/6.-le-basi-di-php/</guid>
			<description>PHP è uno dei linguaggi di programmazione più utilizzati al mondo in ambito web.
Moltissime grandi aziende lo utilizzano per i loro progetti, tra cui
Facebook Wikipedia Yahoo Mailchimp Slack Dailymotion Etsy Fra queste c’è anche Automattic, l’azienda che ha realizzato e gestisce WordPress.
Il nostro CMS è infatti realizzato utilizzando il PHP.
Come per ogni Framework è sempre bene conoscere, almeno in linea generale, il linugaggio su cui è costruito.</description>
			<content type="html"><![CDATA[<p><strong>PHP</strong> è uno dei linguaggi di programmazione <strong>più utilizzati al mondo</strong> in ambito web.</p>
<p>Moltissime <strong>grandi aziende</strong> lo utilizzano per i loro progetti, tra cui</p>
<ul>
<li>Facebook</li>
<li>Wikipedia</li>
<li>Yahoo</li>
<li>Mailchimp</li>
<li>Slack</li>
<li>Dailymotion</li>
<li>Etsy</li>
</ul>
<p>Fra queste c’è anche Automattic, l’azienda che ha realizzato e gestisce <strong>WordPress</strong>.</p>
<p>Il nostro <strong>CMS</strong> è infatti realizzato utilizzando il <strong>PHP</strong>.</p>
<p>Come per ogni Framework è sempre bene conoscere, almeno in linea generale, il linugaggio su cui è costruito. In questo caso a noi interessa <strong>WordPress</strong>, perciò <strong>è bene sapere un po’ di PHP</strong> per riuscire a comprenderlo a fondo.</p>
<p>Vediamo quindi <strong>come funziona il PHP</strong></p>
<h2 id="il-php">Il PHP</h2>
<p>Il php è un linguaggio <strong>lato server,</strong> cioè non può funzionare semplicemente sul browser, come avviene per HTML, CSS e Javascript, ma <strong>ha bisogno di un server</strong> per poter funzionare.</p>
<p>La particolarità del PHP è che <strong>può essere eseguito all’interno delle pagine HTML,</strong> può essere inserito direttamente in mezzo ai vari tag html.</p>
<p><strong>Esempio:</strong></p>
<pre tabindex="0"><code>&lt;html&gt;
   &lt;head&gt;&lt;/head&gt;
   &lt;body&gt;
      &lt;?php echo &#34;CIAO&#34;; ?&gt;
   &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>In questo caso puoi notare come <strong>il PHP sia inserito direttamente nel body della pagina HTML.</strong></p>
<p>Questo rende il suo utilizzo molto <strong>semplice</strong> ed immediato.</p>
<h3 id="server-locale">Server locale</h3>
<p>Per poter iniziare a utilizzare PHP sul nostro computer dobbiamo <strong>utilizzare un server locale.</strong></p>
<p>Come già detto prima, se HTML, CSS e Javascript possono girare nel browser, il PHP ha bisogno di un server.</p>
<p>Esistono molti server locali. In questa guida utilizzeremo <a href="/blog/come-funziona-xampp/">XAMPP</a>, perché è semplice e disponibile per tutti i sistemi operativi.</p>
<p>Se vuoi sapere come installare XAMPP guarda <a href="/blog/come-funziona-xampp/">qui</a>.</p>
<h3 id="sintassi-di-base">Sintassi di base</h3>
<p>Come già detto il PHP viene eseguito nelle pagine HTML, ma occorre <strong>separare ciò che è PHP da ciò che non lo è.</strong></p>
<p>Il codice PHP va inserito all’interno di questi tag: <code>&lt;?php</code> e <code>?&gt;</code></p>
<pre tabindex="0"><code>&lt;?php
    //Codice php
?&gt;
</code></pre><p>Tutto ciò inserito fra questi tag sarà php, il resto sarà HTML.</p>
<h3 id="fine-riga">Fine riga</h3>
<p>Come per il Javascript, anche il PHP necessita del <strong>punto e virgola</strong> alla fine di ogni riga, per poter capire dove termina una regola e ne inizia un’altra. Ricordati perciò semprio di inserire il punto e virgola dopo ogni riga</p>
<pre tabindex="0"><code>echo &#34;CIAO&#34;;
</code></pre><h3 id="commenti">Commenti</h3>
<p>I commenti possono essere di <strong>due tipi:</strong></p>
<p><strong>Una riga:</strong> Se si vuole commentare l’intera riga basta inserire un <strong>doppio slash</strong> all’inizio della riga</p>
<pre tabindex="0"><code>// Commento di una riga
</code></pre><p><strong>Più righe:</strong> Per commentare più righe occorre utilizzare <strong><em>/* commento */.</em></strong></p>
<pre tabindex="0"><code>/* Commento su
più righe
Commento
Commento*/
</code></pre><h3 id="variabili">Variabili</h3>
<p>Le variabili in PHP sono precedute da <strong>$</strong>, in questo modo:</p>
<pre tabindex="0"><code>$saluto = &#34;CIAO&#34;;
echo $saluto;
</code></pre><p><strong>Iniziamo!</strong></p>
<p>Per prima cosa andando nella cartella <strong>htdocs</strong> di XAMPP e creando una nuova cartella “<strong>php_test</strong>“.</p>
<h2 id="stampare-testo-in-html">Stampare testo in HTML</h2>
<p>Iniziamo con un semplice esercizio: stampiamo il classico “<strong>Ciao mondo!</strong>” su una pagina HTML.</p>
<p>Creiamo un file <strong>“index.php</strong>” e apriamolo con <strong>VS Code.</strong></p>
<p>Ora possiamo premere <strong>Punto esclamativo</strong> seguito da <strong>tab</strong>, in questo modo <strong>VS Code</strong> ci fornirà lo <strong>scheletro</strong> html di base.</p>
<p>Ora procediamo a <strong>stampare la nostra scritta.</strong></p>
<p>La funzione PHP per stampare del testo è <strong>echo();</strong></p>
<p>Scriviamo quindi questo nel body:</p>
<pre tabindex="0"><code>&lt;?php
   echo(&#34;Ciao mondo!&#34;);
?&gt;
</code></pre><p>Ora <strong>salviamo</strong>, apriamo il browser e <strong>andiamo a questo link:</strong></p>
<p><a href="http://localhost/php_test">http://localhost/php_test</a></p>
<p>Se tutto è andato liscio dovremmo vedere scritto “<strong>Ciao mondo!</strong>“.</p>
<p><strong>Perfetto</strong>! Hai iniziato ad usare il PHP. Ma ora andiamo un po’ più a fondo.</p>
<h2 id="variabili-1">Variabili</h2>
<p>In php possiamo <strong>definire una variabile</strong> con questa sintassi:</p>
<pre tabindex="0"><code>$x = 1;
$y = &#34;ciao&#34;;
$z = True;
</code></pre><p>Abbiamo appena definito una variabile denominata <em>x</em> con il numero 1, una variabile denominata <em>y</em> con la stringa “ciao” e un nome variabile <em>z</em> con il valore booleano True. Una volta definiti, possiamo usarli nel codice.</p>
<p>PHP ha molti tipi di variabili, ma i tipi di variabili più basilari sono numeri interi (numeri interi), float (numeri decimali), stringhe e valori booleani.</p>
<p>PHP può utilizzare anche <strong>array</strong> e oggetti che spiegheremo più avanti.</p>
<p>Le variabili possono anche essere impostate su <strong>NULL</strong>, il che significa che le variabili esistono, ma non contengono alcun valore.</p>
<h2 id="operatori-aritmetici">Operatori aritmetici</h2>
<p>Possiamo usare semplici operatori aritmetici per <strong>aggiungere</strong>, <strong>sottrarre</strong> o <strong>concatenare</strong> le variabili.</p>
<p>Possiamo anche <strong>stampare</strong> le variabili PHP usando il comando <em>echo</em> (come abbiamo visto poco fa).</p>
<p>Proviamo per esempio a sommare due numeri, inserire il risultato in una nuova variabile e stamparla.</p>
<pre tabindex="0"><code>$x = 1;
$y = 2;
$somma = $x + $y;
echo $somma;       // Stampa 3
</code></pre><h2 id="concatenare-stringhe">Concatenare stringhe</h2>
<p>In PHP è possibile concatenare variabili e stringhe utilizzando il pungo (<em>.</em>), in questo modo:</p>
<pre tabindex="0"><code>$anni = 30;
$nome = &#34;Marco&#34;;
echo $nome . &#34; ha &#34; . $anni . &#34; anni!&#34;;
</code></pre><h2 id="stringhe">Stringhe</h2>
<p>Le stringhe sono <strong>variabili che contengono testo</strong>. Ad esempio, una stringa che contiene un nome è definita come segue:</p>
<pre tabindex="0"><code>$nome = &#34;Marco&#34;;
echo $nome;
</code></pre><p>Possiamo <strong>formattare facilmente le stringhe usando le variabili</strong>. Per esempio:</p>
<pre tabindex="0"><code>$nome = &#34;Marco&#34;;
$frase = &#34;Ciao $nome&#34;;
echo $frase;
</code></pre><p>Possiamo anche <strong>concatenare</strong> le stringhe usando l’ <em>.</em> operatore punto . Per esempio:</p>
<pre tabindex="0"><code>$nome = &#34;Marco&#34;;
$cognome = &#34;Rossi&#34;;
$nome_completo = $nome . &#34; &#34; . $cognome;
echo $nome_completo;
</code></pre><p>Per misurare la <strong>lunghezza</strong> di una stringa, utilizziamo la funzione <em>strlen</em>:</p>
<pre tabindex="0"><code>$string = &#34;Misuriamo quanti caratteri ha questa stringa&#34;;
echo strlen($string);
</code></pre><p>Per tagliare una parte di una stringa e restituirla come nuova stringa, possiamo usare la funzione <em>substr</em>:</p>
<pre tabindex="0"><code>$filename = &#34;image.png&#34;;
$extension = substr($filename, strlen($filename) - 3);
echo &#34;L&#39;estensione di questo file è $extension&#34;;
</code></pre><h2 id="matrici-semplici">Matrici semplici</h2>
<p>Le matrici sono un tipo speciale di v<strong>ariabile che può contenere molte variabili</strong> e tenerle in un elenco.</p>
<p>Ad esempio, supponiamo di voler creare un elenco di tutti i numeri dispari tra 1 e 10. Una volta creato l’elenco, possiamo assegnare nuove variabili che faranno riferimento a una variabile nell’array, utilizzando l’indice della variabile.</p>
<p>Per utilizzare la prima variabile nell’elenco (in questo caso il numero 1), dovremo fornire <strong>il primo indice</strong>, che è <strong>0</strong>, poiché PHP utilizza indici basati su zero, come quasi tutti i linguaggi di programmazione oggi.</p>
<pre tabindex="0"><code>$numeri_dispari = [1,3,5,7,9];
$primo_numero_dispari = $numeri_dispari[0];
$secondo_numero_dispari = $numeri_dispari[1];

echo &#34;Il primo numero dispari è $primo_numero_dispari\n&#34;;
echo &#34;Il secondo numero dispari è $secondo_numero_dispari\n&#34;;
</code></pre><p>Ora possiamo aggiungere nuove variabili usando un indice. Per aggiungere un elemento alla fine dell’elenco, possiamo assegnare l’array con l’indice 5 (la sesta variabile):</p>
<pre tabindex="0"><code>$numeri_dispari = [1,3,5,7,9];
$numeri_dispari[5] = 11;
print_r($numeri_dispari);
</code></pre><h2 id="loop">Loop</h2>
<p>I loop ci aiutano a scorrere su una variabile utilizzando un indice. Esistono <strong>due tipi di loop</strong>: <strong>semplice</strong> (stile C) e un loop <strong>foreach</strong>.</p>
<h3 id="loop-semplice">Loop semplice</h3>
<p>I loop sono molto utili quando dobbiamo <strong>scorrere su un array e fare riferimento al membro dell’array usando un indice che cambia</strong>. Ad esempio, supponiamo di avere un elenco di numeri dispari. Per stamparli, dobbiamo fare riferimento a ciascun articolo singolarmente. Il codice che scriviamo nel ciclo for può usare l’indice <em>i</em>, che cambia in ogni iterazione del ciclo for.</p>
<pre tabindex="0"><code>$numeri = [1,3,5,7,9];
for ($i = 0; $i &lt; count($numeri); $i=$i+1) {
    $numero = $numeri[$i];
    echo $numero . &#34;\n&#34;;
}
</code></pre><p><strong>La prima riga del ciclo for definisce 3 parti:</strong></p>
<ul>
<li>La dichiarazione di inizializzazione – nel nostro caso, inizializziamo la variabile <em>$i</em> su 0.</li>
<li>L’istruzione condizionale – questa istruzione viene valutata in ogni ciclo. Il loop si interrompe quando questa condizione non è soddisfatta. Questo accadrà quando la variabile <em>$i</em> sarà più grande della lunghezza dell’array.</li>
<li>L’istruzione incrementale: questa istruzione viene eseguita ogni volta per aumentare la variabile indice della quantità necessaria. Di solito aumenteremo <em>$i</em> di 1. Esistono anche due modi più brevi per aumentare una variabile di 1. </li>
</ul>
<h3 id="ciclo-foreach">Ciclo foreach</h3>
<p>Il ciclo <strong>foreach</strong> esegue il loop su un elemento come una matrice o un oggetto, fornendo i membri in una specifica variabile uno alla volta.</p>
<p>Ad esempio, supponiamo di voler creare un elenco di tutti i numeri dispari tra 1 e 10 e stamparli uno per uno, come nell’esempio precedente. Questa volta, useremo il <em>foreach</em>   invece di un <em>for</em>  regolare con una variabile. Invece di utilizzare la variabile come indice dell’array, otteniamo l’elemento dall’array direttamente nella variabile <em>$numeri_dispari</em> .</p>
<pre tabindex="0"><code>$numeri_dispari = [1,3,5,7,9];
foreach ($numeri_dispari as $numero) {
  echo $numero . &#34;\n&#34;;
}
</code></pre><h2 id="ciclo-di-while">Ciclo di While</h2>
<p>I cicli <strong>While</strong> sono semplici blocchi che vengono eseguiti ripetutamente fino a quando non viene soddisfatta la condizione del ciclo while.</p>
<p>Ecco un esempio di un ciclo che viene eseguito per un totale di 10 volte:</p>
<pre tabindex="0"><code>$counter = 0;

while ($counter &lt; 10) {
    $counter += 1;
    echo &#34;Funzione eseguita $counter\n volte.&lt;br&gt;&#34;;
}
</code></pre><h2 id="funzioni">funzioni</h2>
<p>Le funzioni sono semplici <strong>blocchi di codice che possiamo chiamare da qualsiasi luogo</strong>. Ad esempio, possiamo creare una funzione che somma un elenco di numeri e restituisce il risultato. Chiamiamo questa funzione <em>somma</em>.</p>
<p>Una funzione riceve un elenco di argomenti separati da virgole. Ogni argomento esiste solo nel contesto della funzione, nel senso che diventano variabili all’interno del blocco funzione, ma non sono definiti al di fuori di quel blocco funzione.</p>
<pre tabindex="0"><code>// Definiamo una funzione chiamata &#34;somma&#34; che farà la somma di una lista di numeri
function somma($numeri) {
    // inizializziamo la variabile somma
    $somma = 0;

    // Sommiamo i numero
    foreach ($numeri as $numero) {
        $somma += $numero;
    }

    // restituiamo la somma
    return $somma;
}

// Esempio di utilizzo della funzione
echo somma([1,2,3,4,5,6,7,8,9,10]);
</code></pre><p>In questo caso abbiamo la funzione “<em><strong>somma</strong></em>” che sommerà tutti i numeri che passeremo al loro interno.</p>
<p><strong>Richiamiamo</strong> quindi la funzione in un <em>echo</em>, in questo modo stamperemo la somma dei numeri inseriti nel’array dentro la funzione.</p>
<p>Come per ogni cosa il metodo migliore è sempre quello di <strong>provare, provare e riprovare!</strong></p>
<p><strong>Prenditi quindi il tuo tempo</strong> e prova a smanettare un po’ con le funzioni che hai imparato qui sopra!</p>
<p>Il PHP consente di fare ben altre cose, ma <strong>per iniziare con WordPress questo può bastare!</strong></p>
<p><strong>Quando ti senti pronto prova</strong> adare un’occhiata alle nostre guide per <strong><a href="/blog/creare-un-tema-wordpress-da-zero-parte-1/">creare un tema WordPress da zero</a></strong>, così potra imettere in pratica quello che hai imparato</p>
<p><em><a href="/blog/le-basi-di-jquery/">&laquo; Le basi di jQuery</a></em></p>
]]></content>
		</item>
		
		<item>
			<title>Organizzare il lavoro con Python</title>
			<link>https://albertoreineri.it/blog/organizzare-il-lavoro-con-python/</link>
			<pubDate>Sun, 26 Jan 2020 21:46:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/organizzare-il-lavoro-con-python/</guid>
			<description>Da qualche tempo sto sviluppando piccoli progettini in Python. Non per lavoro, ma perché nella community degli sviluppatori online se ne parla molto spesso e sembra che questo linguaggio sia veramente fantastico.
Così ho deciso di dedicarci qualche oretta alla settimana, in modo da avere un’infarinatura generale casomai dovessi realizzare qualcosa in questo linguaggio in futuro.
Mentre studiavo e sviluppavo, mi è venuta in mente un’idea per un piccolo software realizzabile molto semplicemente proprio con Python.</description>
			<content type="html"><![CDATA[<p>Da qualche tempo sto sviluppando <strong>piccoli progettini in Python</strong>. Non per lavoro, ma perché nella <strong>community degli sviluppatori</strong> online se ne parla molto spesso e sembra che questo linguaggio sia veramente fantastico.</p>
<p>Così ho deciso di dedicarci qualche oretta alla settimana, in modo da avere un’<strong>infarinatura generale</strong> casomai dovessi realizzare qualcosa in questo linguaggio in futuro.</p>
<p>Mentre studiavo e sviluppavo, mi è venuta in mente un’idea per un <strong>piccolo software realizzabile</strong> molto semplicemente proprio <strong>con Python.</strong></p>
<p><strong>Tutte le mattine</strong> quando inizio a lavorare <strong>lancio una serie di software</strong> e pagine web, sempre le stesse, tutti i giorni…</p>
<p>Così ho pensato di <strong>automatizzare questo passaggio</strong>, creando uno script che mi permetta di organizzarmi il computer appena acceso, aprendo tutto ciò di cui ho bisogno con un solo click.</p>
<h2 id="aprire-browser-web-con-python">Aprire browser web con Python</h2>
<p>Per prima cosa apro <strong>google chrome</strong> (o Microsoft Edge, dalla nuova versione è veramente migliorato).</p>
<p>Per prima cosa occorre importare il modulo <em>webbrowser</em></p>
<pre class="wp-block-code"><code>import webbrowser</code></pre>
<p>Dopodiché è sufficiente indicare quali siti vogliamo visualizzare. Io per esempio apro <strong>Gmail</strong> e poi Google <strong>Calendar</strong> e Google <strong>Keep</strong> in due tab separate, in questo modo:</p>
<pre class="wp-block-code"><code># Apro una nuova finestra del browser
webbrowser.open_new("https://mail.google.com/mail/u/0/#inbox")

# Apro url in nuovo tab
webbrowser.open_new_tab("https://keep.google.com/u/0/#home")
webbrowser.open_new_tab("https://calendar.google.com/calendar/r")</code></pre>
<p>E’ anche possibile raggruppare gli url in variabili da richiamare successivamente, in questo modo:</p>
<pre class="wp-block-code"><code># Variabili
website1 = "https://mail.google.com/mail/u/0/#inbox"
website2 = "https://calendar.google.com/calendar/r"
website3 = "https://keep.google.com/u/0/#home"

# Apro una nuova finestra del browser
webbrowser.open_new(website1)

# Apro url in nuovo tab
webbrowser.open_new_tab(website2)
webbrowser.open_new_tab(website3)
</code></pre>
<p>In questo modo il codice è più semplice da capire e più pulito.</p>
<h2 id="aprire-software-esterni-con-python">Aprire software esterni con Python</h2>
<p>Oltre al browser solitamente apro anche alcuni software. Uno in particolare è <strong>XAMPP</strong>, per poter lavorare comodamente in locale con i miei progetti in <strong>PHP</strong>.</p>
<p>Per aprire un software con <strong>Python</strong> è necessario importare il modulo <em>os</em> in questo modo:</p>
<pre class="wp-block-code"><code>import os</code></pre>
<p>E successivamente richiamare il percorso nel quale risiede il file eseguibile del programma.</p>
<p>Io lavoro su Windows quindi sarà un file .exe</p>
<p>Ecco il codice:</p>
<pre class="wp-block-code"><code>path = "C:/xampp/xampp-control.exe"
os.system(path)</code></pre>
<h2 id="aprire-una-cartella-con-python">Aprire una cartella con Python</h2>
<p>Infine voglio aprire anche la cartella <em>htdocs</em>, nella quale risiedono tutti i miei progetti. Per questa operazione utilizzeremo sempre il modulo os, quindi non sarà più necessario importarlo.</p>
<p>Basterà indicare il percorso della cartella e utilizzare il metodo <em>startfile</em>, in questo modo:</p>
<pre class="wp-block-code"><code>path = "C:/xampp/htdocs"
path = os.path.realpath(path)
os.startfile(path)</code></pre>
<h2 id="nascondere-la-console-di-python">Nascondere la console di Python</h2>
<p>Questo è lo script. Ma c’è ancora una cosa che non mi piace: <strong>la console di python che rimane aperta</strong> sotto i software appena lanciati.</p>
<p>Fortunatamente si può nascondere in maniera molto semplice, basta inserire il seguente codice per <strong>Windows</strong>:</p>
<pre class="wp-block-code"><code># Nascondere python console
import win32gui, win32con

The_program_to_hide = win32gui.GetForegroundWindow()
win32gui.ShowWindow(The_program_to_hide , win32con.SW_HIDE)</code></pre>
<p>Ecco qua, lo script è terminato.</p>
<p>Se volete poi lanciarlo semplicemente cliccando su un’icona sarà sufficiente trasformarlo in .exe tramite pyinstaller.</p>
<p>Per fare ciò installate pyinstaller sul pc e poi lanciate questo comando da terminale:</p>
<pre class="wp-block-code"><code>pyinstaller nomefile.py</code></pre>
<p>In questo modo potrete avere un link sul desktop che lancerà il vostro script, che aprirà tutti i software necessari per realizzare i vostri lavori.</p>
<p>Spero che questo articolo possa esserti stato utile. Se hai consigli o suggerimenti per migliorarlo o eventuali bug da segnalare fammelo sapere nei commenti!</p>
<h3 id="codice-completo">Codice completo:</h3>
<pre class="wp-block-code"><code>import win32gui, win32con # Nascondere python console
import webbrowser #Aprire browser
import os #Aprire Software e Cartelle

# Nascondere python console
The_program_to_hide = win32gui.GetForegroundWindow()
win32gui.ShowWindow(The_program_to_hide , win32con.SW_HIDE)


#Aprire browser
# Variabili
website1 = "https://mail.google.com/mail/u/0/#inbox"
website2 = "https://calendar.google.com/calendar/r"
website3 = "https://keep.google.com/u/0/#home"

# Apro una nuova finestra del browser
webbrowser.open_new(website1)

# Apro url in nuovo tab
webbrowser.open_new_tab(website2)
webbrowser.open_new_tab(website3)


#Aprire Cartella
path = "C:/xampp/htdocs"
path = os.path.realpath(path)
os.startfile(path)

#Aprire Software
xamppPath= "C:/xampp/xampp-control.exe"
os.system(xamppPath)

</code></pre>]]></content>
		</item>
		
		<item>
			<title>Nascondere l’estensione alla fine dell’URL</title>
			<link>https://albertoreineri.it/blog/nascondere-lestensione-alla-fine-dellurl/</link>
			<pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/nascondere-lestensione-alla-fine-dellurl/</guid>
			<description>Oggi vedere l’estensione alla fine dell’URL non è il massimo, sia per quanto riguarda la SEO che per la “figura” che il sito fa con l’utente finale, sarebbe meglio nasconderla.
La possibilità di sceglierci gli URL è fondamentale per creare un buon sito. Utilizzando nel modo corretto le pagine PHP si può arrivare semplicemente a questo risultato nascondendo solamente l’estensione dall’URL
In questa guida vedremo come “cancellare” il .php alla fine dell’URL.</description>
			<content type="html"><![CDATA[<p>Oggi vedere l’estensione alla fine dell’URL non è il massimo, sia per quanto riguarda la SEO che per la “figura” che il sito fa con l’utente finale, sarebbe meglio nasconderla.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/VWqwsKL2-mM" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>La <strong>possibilità di sceglierci gli URL</strong> è fondamentale per creare un buon sito. Utilizzando nel modo corretto le pagine PHP si può arrivare semplicemente a questo risultato nascondendo solamente l’estensione dall’URL</p>
<p>In questa guida vedremo come <strong>“cancellare” il .php</strong> alla fine dell’URL.</p>
<p>Per fare questo è sufficiente <strong>inserire il seguente codice nel file .htaccess</strong> nella root del sito. Se il file .htaccess non esiste createlo utilizzando un editor di testo.</p>
<pre tabindex="0"><code>RewriteEngine on

RewriteCond %{THE_REQUEST} /([^.]+)\.php [NC]

RewriteRule ^ /%1 [NC,L,R]

RewriteCond %{REQUEST_FILENAME}.php -f

RewriteRule ^ %{REQUEST_URI}.php [NC,L]
</code></pre><p>In questo modo tutti i vostri file “.php” verranno visualizzati senza estensione.</p>
<p>Così facendo tutto il sito risulta migliore. Gli indirizzi saranno molto più “<em>seo friendly</em>” e ne gioverà anche la sicurezza del sito web.</p>
<p>Se guardi i siti moderni delle grandi aziende ormai nessuno utilizza più l’estensione alla fine dell’URL.</p>
<p>Oggi possiamo utilizzare anche framework che ci permettono di gestire gli URL in maniera completamente personalizzata e ottimale, ma non sempre si ha bisogno di un intero framework. Spesso per piccoli progetti conviene fare le cose da zero, e in questi casi basta qualche riga di codice nel file .htaccess e si può facilmente nascondere l’estensione dall’URL.</p>
<p>Se vuoi imparare ad utilizzare un semplice sistema di routing, per organizzare il sito web nel modo migliore e gestire al meglio i tuoi URL, leggi questo <a href="https://albydev.net/blog/semplice-sistema-di-routing-in-php/">articolo</a>. È molto basico e semplice ma può essere utilizzato per piccoli progetti senza grandi pretese. Certo non ha nulla a che vedere con il routing di <a href="https://laravel.com/">Laravel</a> per esempio, ma può essere un buon punto di partenza per migliorare le proprie skills.</p>
]]></content>
		</item>
		
		<item>
			<title>Starter Theme per WordPress</title>
			<link>https://albertoreineri.it/blog/starter-theme-per-wordpress/</link>
			<pubDate>Wed, 18 Dec 2019 21:44:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/starter-theme-per-wordpress/</guid>
			<description>Dopo aver utilizzato WordPress per vari progetti ho deciso di creare e condividere il mio starter theme.
Con questo progetto è possibile partire da una base pre-fatta e velocizzare i tempi di creazione di un nuovo tema da zero.
Il tema comprende già:
bootstrap font awesome back on top Sviluppare temi da zero consente di ottenere risultati molto elevati, permettendo una personalizzazione praticamente totale, un’ottimizzazione dei caricamenti e aumentando la sicurezza del sito, a patto che ci sappia cosa si sta facendo.</description>
			<content type="html"><![CDATA[<p>Dopo aver utilizzato WordPress per vari progetti ho deciso di creare e condividere il mio starter theme.</p>
<p>Con questo progetto è possibile partire da una base pre-fatta e velocizzare i tempi di creazione di un nuovo tema da zero.</p>
<p>Il tema comprende già:</p>
<ul>
<li>bootstrap</li>
<li>font awesome</li>
<li>back on top</li>
</ul>
<p>Sviluppare temi da zero consente di ottenere risultati molto elevati, permettendo una personalizzazione praticamente totale, un’ottimizzazione dei caricamenti e aumentando la sicurezza del sito, a patto che ci sappia cosa si sta facendo.</p>
<h2 id="no-ai-temi-pre-fatti">No ai temi pre fatti</h2>
<p>Questa è una mia opinione del tutto personale, può essere condivisa o meno.</p>
<p>Personalmente non mi sono mai trovato bene con i temi prefatti acquistabili su themeforest o altre piattaforme simili. C’è sempre qualcosa che vorrei fare ma che non posso…</p>
<p>Preferisco fare da zero e avere la completa gestione di tutto, potermi muovere come voglio, prendermi carico dei problemi e risolverli in quello che penso sia il modo migliore.</p>
<p>In fondo sono uno sviluppatore, il drag and drop non mi piace molto… Preferisco i codici!</p>
<p>Ma partire da zero ogni volta può essere pesante, noioso nonché una perdita di tempo. Perciò ho realizzato uno starter theme, cioè un tema base per WordPress comprendente già tutti i layout necessari, alcune librerie, il form di ricerca e altre piccole cose che mi permettono di poter iniziare subito a realizzare la parte divertente del sito.</p>
<p>In questo modo non devo ogni volta dipartire proprio da zero, ho già lo scheletro funzionante pronto per essere utilizzato.</p>
<h2 id="starter-theme-per-wordpress-open-source">Starter Theme per WordPress Open Source</h2>
<p>Dopo aver realizzato Orange Starter Theme per WordPress ed averlo utilizzato con successo in molti siti web, ho deciso di renderlo <a href="https://github.com/albertoreineri/orange-starter-theme" target="_blank" rel="noreferrer noopener">open source</a>, in questo modo potrà essere utilizzato e ampliato da chiunque.</p>
<p>Ogni eventuale bug potrà essermi segnalato tramite <a href="https://github.com/albertoreineri/orange-starter-theme" target="_blank" rel="noreferrer noopener">github</a> o direttamente dal modulo contatti di questo sito, prenderò in carico il problema e lo risolverò nel più breve tempo possibile.</p>
]]></content>
		</item>
		
		<item>
			<title>Come usare GIT</title>
			<link>https://albertoreineri.it/blog/come-usare-git/</link>
			<pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-usare-git/</guid>
			<description>Poco tempo fa ho scritto un articolo elogiando Git, questo software di controllo versione del quale ormai non posso più fare a meno, quindi ho pensato di scrivere una guida per spiegare come usare GIT!
MA COME SI USA CONCRETAMENTE GIT? E’ DIFFICILE DA USARE? Partiamo dal fatto che “Git” può essere tradotto con “idiota“, questo quasi a dirci che è un software a prova di scemo…
Scherzi a parte no, è molto semplice da utilizzare, inoltre può essere un buon punto di inizio per imparare ad utilizzare la CLI, l’interfaccia a riga di comando!</description>
			<content type="html"><![CDATA[<p>Poco tempo fa ho scritto un <a href="/blog/che-cose-git/">articolo</a> elogiando <strong>Git</strong>, questo software di controllo versione del quale ormai <strong>non posso più fare a meno</strong>, quindi ho pensato di scrivere una guida per spiegare come usare GIT!</p>
<h2 id="ma-come-si-usa-concretamente-git-e-difficile-da-usare">MA COME SI USA CONCRETAMENTE GIT? E’ DIFFICILE DA USARE?</h2>
<p>Partiamo dal fatto che “Git” può essere tradotto con “<em>idiota</em>“, questo quasi a dirci che è un software a prova di scemo…</p>
<p>Scherzi a parte no, è <strong>molto semplice</strong> da utilizzare, inoltre può essere un buon <strong>punto di inizio per imparare ad utilizzare la CLI,</strong> l’interfaccia a riga di comando!</p>
<h2 id="installazione">INSTALLAZIONE</h2>
<p>Per <strong>scaricare</strong> Git è sufficiente andare su questo sito: <a href="https://git-scm.com/">https://git-scm.com/</a></p>
<p>Una volta aperto il link cliccate su “Download”, selezionate il vostro sistema operativo ed effettuate l’installazione.</p>
<p>Se utilizzate Windows vi consiglio di installare anche Git Bash, una CLI molto carina che utilizzo anche per molto altro.</p>
<h2 id="utilizzo">UTILIZZO</h2>
<p>Una volta installato git potete aprire Git Bash e spostarvi nella cartella di un vostro progetto (tramite il comando <em>cd</em>. Es: <em>cd C:/Users/alby/progetti/app</em>)</p>
<p>Qui inserite il comando</p>
<pre tabindex="0"><code>git init
</code></pre><p>e git sarà presente nel vostro progetto con una cartella nascosta chiamata .git. Non aprite mai questa cartella, lasciatela semplicemente lì dove si trova, non vi farà del male.</p>
<p>Ora potete digitare, sempre su Git Bash, il seguente comando:</p>
<pre tabindex="0"><code>git add .
</code></pre><p>Questo <strong>caricherà</strong> tutti i file del progetto nella staging area, in attesa di essere approvati.</p>
<p>Dopodiché basterà scrivere</p>
<pre tabindex="0"><code>git commit -m “nome del commit”
</code></pre><p>Questo comando <em>committerà</em> i vostri file, creerà cioè una versione del vostro progetto. Fra virgolette potete scrivere ad esempio “Primo commit”, nei successivi andrete ad indicare le modifiche effettuate (Es: Inserito login)</p>
<h2 id="git-hub">GIT HUB</h2>
<p>E’ anche possibile salvare i commit su github, in modo da poterli consultare e scaricare ovunque e permettere ad altri sviluppatori di consultare il nostro codice e migliorarlo!</p>
<p>Per fare questo bisogna avere un account GitHub e creare un nuovo Repository.</p>
<p>Dopo aver creato un nuovo repository GitHub vi indica già i comandi da eseguire per “riempirlo” con il vostro progetto in locale.</p>
<p>Per fare questo dovere inserire:</p>
<pre tabindex="0"><code>git remote add origin https://github.com[link al repository]
</code></pre><pre tabindex="0"><code>git push -u origin master
</code></pre><p>In questo modo avete il vostro progetto anche su GitHub. Per scaricarlo basterà usare il comando</p>
<pre tabindex="0"><code>git pull https://github.com[link al repository]
</code></pre><p>Questi sono i <strong>comandi base</strong>. Una volta creato il commit si possono fare altre modifiche al progetto e ridare i comandi add e commit.</p>
<p>Esistono <strong>molti altri comandi</strong> per utilizzare questo software. <strong>Il modo migliore per impararli tutti è utilizzarli</strong>, quindi inizia a sporcarti le mani e provali! <strong>Non potrai più farne a meno</strong>.</p>
<p>Qua di seguito inserisco una lista dei <strong>comandi più utilizzat</strong>i spiegati rapidamente.</p>
<h2 id="comandi-per-git">COMANDI PER GIT</h2>
<h3 id="git-config">git config</h3>
<p><em>Utilizzo:</em> git config –global user.name “[name]”  </p>
<p><em>Utilizzo:</em> git config –global user.email “[email address]”  </p>
<p>Questo comando imposta rispettivamente il nome dell’autore e l’indirizzo e-mail da utilizzare per i tuoi commit.</p>
<pre tabindex="0"><code>git config –global user.name &#34;alberto&#34;
git config -global user.email &#34;alberto@alberto.it&#34;
</code></pre><h3 id="git-init">git init</h3>
<p><em>Utilizzo:</em> git init [repository name]</p>
<p>Questo comando viene utilizzato per avviare un nuovo repository (progetto).</p>
<pre tabindex="0"><code>git init DEMO
</code></pre><h3 id="git-clone">git clone</h3>
<p><em>Utilizzo:</em> git clone [url]  </p>
<p>Questo comando viene utilizzato per clonare un repository da un URL esistente.</p>
<pre tabindex="0"><code>git clone https://github.com/albertoreineri/Simple-Header-and-Footer.git
</code></pre><h3 id="git-add">git add</h3>
<p><em>Utilizzo:</em> git add [file]  </p>
<p>Questo comando aggiunge un file all’area di gestione temporanea.</p>
<pre tabindex="0"><code>git add file.php
</code></pre><p><em>Utilizzo:</em> git add *  </p>
<p>Questo comando aggiunge uno o più file all’area di gestione temporanea.</p>
<pre tabindex="0"><code>git add *
</code></pre><h3 id="git-commit">git commit</h3>
<p><em>Utilizzo:</em> git commit -m “[ Type in the commit message]”  </p>
<p>Questo comando registra o l’istantanea dei file in modo permanente nella cronologia delle versioni.</p>
<pre tabindex="0"><code>git commit -m &#34;Modificato file.php&#34;
</code></pre><h3 id="git-status">git status</h3>
<p><em>Utilizzo:</em> git status  </p>
<p>Questo comando elenca tutti i file che devono essere committati.</p>
<pre tabindex="0"><code>git status
</code></pre><h3 id="git-rm">git rm</h3>
<p><em>Utilizzo:</em> git rm [file]  </p>
<p>Questo comando cancella il file dalla directory di lavoro e mette in scena l’eliminazione.</p>
<pre tabindex="0"><code>git rm file.php
</code></pre><h3 id="git-log">git log</h3>
<p><em>Utilizzo:</em> git log  </p>
<p>Questo comando viene utilizzato per elencare la cronologia delle versioni per il ramo corrente.</p>
<pre tabindex="0"><code>git log
</code></pre><h3 id="git-branch">git branch</h3>
<p><em>Utilizzo:</em> git branch  </p>
<p>Questo comando elenca tutti i branch locali nel repository corrente.</p>
<pre tabindex="0"><code>git branch
</code></pre><p><em>Utilizzo:</em> git branch [branch name]  </p>
<p>Questo comando crea un nuovo branch.</p>
<pre tabindex="0"><code>git branch nome-del-branch
</code></pre><p><em>Utilizzo:</em> git branch -d [branch name]  </p>
<p>Questo comando elimina il branch.</p>
<pre tabindex="0"><code>git branch -d nome-del-branch
</code></pre><h3 id="git-checkout">git checkout</h3>
<p><em>Utilizzo:</em> git checkout [branch name]  </p>
<p>Questo comando viene utilizzato per passare da un branch all’altro.</p>
<pre tabindex="0"><code>git checkoug nome-del-branch
</code></pre><p><em>Utilizzo:</em> git checkout -b [branch name]  </p>
<p>Questo comando crea un nuovo branch e passa anche a esso.</p>
<pre tabindex="0"><code>git checkout -b nome-del-branch
</code></pre><h3 id="git-merge">git merge</h3>
<p><em>Utilizzo:</em> git merge [branch name]  </p>
<p>Questo comando unisce la cronologia del branch specificato nel branch corrente.</p>
<pre tabindex="0"><code>git merge nome-del-branch
</code></pre><h3 id="git-remote">git remote</h3>
<p><em>Utilizzo:</em> git remote add [variable name] [Remote Server Link]  </p>
<p>Questo comando viene utilizzato per connettere il repository locale al server remoto.</p>
<pre tabindex="0"><code>git remove add origin https://github.com/githubUser/repoName.git
</code></pre><h3 id="git-push">git push</h3>
<p><em>Utilizzo:</em> git push [variable name] master  </p>
<p>Questo comando invia le modifiche da locale al repository remoto.</p>
<pre tabindex="0"><code>git push origin master
</code></pre><p><em>Utilizzo:</em> git push [variable name] [branch]  </p>
<p>Questo comando invia i commit dei branch al repository remoto.</p>
<pre tabindex="0"><code>git push origin nome-del-branch
</code></pre><p><em>Utilizzo:</em> git push –all [variable name]  </p>
<p>Questo comando invia tutti i branch al repository remoto.</p>
<pre tabindex="0"><code>git push -all origin
</code></pre><p><em>Utilizzo:</em> git push [variable name] :[branch name]  </p>
<p>Questo comando elimina un branch sul repository remoto.</p>
<pre tabindex="0"><code>git push -all origin : nome-del-branch
</code></pre><h3 id="git-pull">git pull</h3>
<p><em>Utilizzo:</em> git pull [Repository Link]  </p>
<p>Questo comando recupera e unisce le modifiche sul server remoto alla directory di lavoro.</p>
<pre tabindex="0"><code>git pull https://github.com/GitHubUser/GitHubRepo.git
</code></pre>]]></content>
		</item>
		
		<item>
			<title>Windows VS Mac per Sviluppo Web: la mia esperienza</title>
			<link>https://albertoreineri.it/blog/windows-vs-mac-per-sviluppo-web-la-mia-esperienza/</link>
			<pubDate>Sun, 08 Dec 2019 21:40:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/windows-vs-mac-per-sviluppo-web-la-mia-esperienza/</guid>
			<description>Oggi voglio raccontarvi la mia esperienza nell’utilizzo di questi due sistemi operativi, dell’eterna lotta Windows vs Mac.
Lo farò dal punto di vista di uno sviluppatore ma anche di un utente normale, perché utilizzo il pc sia al lavoro che a casa, sia per programmare che per rispondere a email, scrivere documenti, segnare appuntamenti etc…
Durante i miei dieci anni di programmazione ho avuto modo di utilizzare sia Windows che Mac, ognuno per più anni, e sono giunto ad una mia conclusione, che è un po’ controcorrente rispetto a quello che si legge di solito sui vari forum e social del settore.</description>
			<content type="html"><![CDATA[<p>Oggi voglio raccontarvi <strong>la mia esperienza</strong> nell’utilizzo di questi due sistemi operativi, dell’eterna lotta Windows vs Mac.</p>
<p>Lo farò dal punto di vista di uno sviluppatore ma anche di un utente normale, perché utilizzo il pc sia al lavoro che a casa, sia per programmare che per rispondere a email, scrivere documenti, segnare appuntamenti etc…</p>
<p>Durante i miei dieci anni di programmazione ho avuto modo di utilizzare <strong>sia Windows che Mac</strong>, ognuno per più anni, e sono giunto ad una <strong>mia conclusione</strong>, che è <strong><em>un po’ controcorrente</em></strong> rispetto a quello che si legge di solito sui vari forum e social del settore.</p>
<h2 id="i-miei-primi-anni">I MIEI PRIMI ANNI</h2>
<p>Ho <strong>iniziato</strong> la mia carriera come <strong>programmatore vb.net</strong>, quindi utilizzavo per forza di cose un pc <strong>windows</strong>. Era un fisso mezzo scassato con Windows <strong>xp</strong>. Devo dire che <strong>non mi trovavo affatto male</strong>. Sviluppando software gestionali i clienti nel 99,9% dei casi avevano un pc windows (all’epoca c’erano veramente pochi prodotto apple in giro…almeno dalle mie parti) e quindi il programma doveva girare su quel sistema operativo. Quei primi quattro anni di programmazione mi hanno fatto apprezzare il sistema operativo del buon Bill Gates, arrivando a <strong>conoscere <strong>praticamente</strong> tutte le scorciatoie da tastiera</strong> e tutte le personalizzazioni disponibili, riuscivo ad essere veramente <strong>molto veloce</strong> con il mio PC e <strong>conoscevo alla perfezione il mio ambiente di lavoro</strong>.</p>
<h2 id="macbook-white">MACBOOK WHITE</h2>
<p>Poi, più che altro per curiosità, mi <strong>comprai</strong> un mac, in particolare il <strong>macbook white</strong>. Bellissimo!</p>
<p><strong>Esteticamente non aveva paragoni</strong> con la concorrenza. Un pc completamente bianco, senza disegni, stampini, senza nulla di superfluo.</p>
<p><strong>Così iniziò il mio viaggio nel mondo apple</strong>. Ed andò bene.</p>
<p>Dal punto di vista del design Mac vinceva a mani basse, inoltre aveva un programma che ho amato ed utilizzato moltissimo: Garageband!</p>
<p>La semplicità di quel software era grandiosa! Potevo registrare in maniera decente anche senza scheda audio, senza lag di alcun tipo, e gli effetti già presenti di default erano fantastici! Non ho mai trovato niente del genere in Windows purtroppo…</p>
<p>Ma c’era sempre <strong>qualcosa che non mi andava giù….</strong></p>
<p>Era <strong>bello</strong>, la <strong>batteria</strong> era <strong>infinita</strong>, era <strong>fluido</strong> e <strong>veloce</strong>, ma <strong>troppo chiuso</strong>!</p>
<p>Sarà anche scontato, ma proprio il fatto di essere un sistema chiuso non mi piaceva per niente!</p>
<p><strong>Sono sempre stato uno smanettone</strong>. Appena prendo fra le mani una macchina di qualunque tipo devo capire come funziona, come farla funzionare meglio e come “<em>pacioccarci</em>” un po’, e con il mac non potevo fare granché…</p>
<h2 id="problemi">PROBLEMI</h2>
<p>E qua veniamo al vivo della battaglia Windows VS Mac.</p>
<p>Il primo problema era la <strong>suite office</strong>. All’epoca l’unica alternativa era open office, ma la compatibilità non era al 100%, capitava talvolta di aprire un file di word e vedere la formattazione completamente sballata… E questo mi infastidiva parecchio. Certo avrei potuto comprare Office per Mac, ma non mi andava…_(ok?:))</p>
<p>Poi lato <strong>programmazione</strong> mi sentivo un po’ bloccato. E’ vero che Visual Basic è un linguaggio appunto molto <em>basic</em>, ma all’epoca quello conoscevo e non potevo fare nulla con il mio pc. Avevo installato windows su macchina virtuale ma era molto molto lento e non riuscivo a lavorare come si deve…</p>
<p>Anche lo sviluppo web non era così semplice per me! Io utilizzavo <strong>XAMPP</strong> e all’epoca ricordo che non c’era per Mac, così avevo scaricato MAMP ma non mi piaceva molto…</p>
<p>Infine <strong>non potevo giocarci</strong>… e sebbene non sia mai stato un gamer incallito, ogni tanto poter lanciare qualche semplice giochino per rilassarsi un attimo non era male.</p>
<p>Diciamo che mi sentivo bloccato. Se con Windows potevo fare tutto ciò che mi pareva, installare di tutto, modificare, provare fino a dover formattare il computer a causa di tutti i pasticci che avevo creato, con il mac non potevo fare quasi nulla… Certo evitavo di creare pasticci, ma a me piaceva!!!</p>
<h2 id="ritorno-a-windows">RITORNO A WINDOWS</h2>
<p>Dopo 6 anni ho dovuto cambiare il pc, <strong>il piccolo macbook white non ne poteva veramente più</strong>, e sono tornato a Windows.</p>
<p>Quella volta nella lotta Windows Vs Mac ha vinto Windows.</p>
<p>Oggi <strong>i prezzi dei mac sono veramente inavviciabili</strong>… Il mio macbook white partiva da un prezzo di 1000 € e ricordo di averlo preso in offerta all’euronics a 800€, erano ancora cifre accettabili per un pc con 500Gb di HDD e 4 Gb di RAM all’epoca.</p>
<p>Ora se si vuole un modello base bisogna tirare fuori <strong>quasi in doppio</strong>, per avere 128Gb di memoria, veramente un taglio ridicolo, e senza avere a disposizione porte USB, SD e HDMI, che trovo ancora di fondamentale importanza.</p>
<p><strong>Così ho ripreso Windows e devo dire che mi trovo benissimo!</strong></p>
<p><strong>Posso fare veramente di tutto!</strong> Ho subito ripreso a pasticciare e dopo due settimane ho già dovuto formattare il pc perché avevo installato un sacco di cavolate, però ero contento! E’ così che mi piace vivere il pc, voglio essere io a decidere come farlo funzionare!</p>
<p>Ora posso <strong>programmare</strong>, <strong>registrare</strong> musica,  <strong>giocare</strong>,  <strong>scrivere</strong>,  <strong>montare</strong> video, utilizzare <strong>macchine virtuali</strong> etc. senza rallentamenti. Spendendo meno di un Macbook ho preso un Core i7 con 16Gb di RAM, 128Gb di SSD e 1Tb di HDD e 4Gb di scheda video! Praticamente una bomba, spendendo meno di 1000€!!!</p>
<p>Ci sono solamente due cose che non posso utilizzare con Windows: il già citato Garageband e XCode. Certo questo mi preclude la possibilità di sviluppare app ios, ma al momento non lavoro in quell’ambito quindi non mi interessa particolarmente!</p>
<p>Per tutto il resto sono veramente <strong>contento</strong>! Posso passare la giornata a programmare, utilizzare editor di testo, chrome con il solito migliaio di schede aperte, photoshop, figma, XAMPP e tutti i programmi che mi servono e tutto gira alla perfezione! Inoltre se voglio fare una breve pausa e farmi una partita a qualche gioco me li carica senza alcun problema, senza nemmeno dover preoccuparmi di chiudere photoshop!</p>
<h2 id="conclusione">CONCLUSIONE</h2>
<p>Questa è stata la mia storia con questi sistemi operativi! Certo <strong>la perfezione non esiste</strong> e si può sempre trovare di meglio, ma per il momento sono felice del mio notebook Windows.</p>
<p>Se non dovessi fare attenzione ai soldi allora sicuramente propenderei per un macbook pro con 512 di SSD per programmare, e poi un bel pc fisso per tutto il resto, in modo da avere una macchina pulita e dedicata allo sviluppo e l’altra per fare i miei esperimenti, ma non avendo la possibilità di spendere 5000€ in computer ho scelto una macchina versatile, che mi consente di fare un po’ tutto ciò che voglio!</p>
<h2 id="tra-i-due-litiganti-il-terzo-gode-linux">TRA I DUE LITIGANTI IL TERZO GODE: LINUX!!!</h2>
<p>Voglio terminare questo articolo citando <strong>la soluzione perfetta</strong> per gli smanettoni come me: <strong>Linux</strong>! Ho sempre amato <strong>Ubuntu</strong> e lo utilizzo tutt’ora in macchina virtuale, insieme a <strong>Manjaro</strong> (non ho ancora capito quale preferisco…), ma non ho ancora avuto il coraggio di installarlo al posto di windows. Il problema più grande è la <strong>suite di adobe</strong>, che utilizzo tutti i giorni e della quale non posso ancora fare a meno. Se non fosse per questo penso che sarei già passato al Pinguino da tempo!</p>
<p>Se un giorno saltasse fuori un’alternativa seria a photoshop installabile su Linux allora sicuramente sarei pronto ad abbandonare il buon vecchio Windows per <strong>il fantastico mondo dell’open source!!!</strong></p>
<p>Windows Vs Mac? Perché non <a href="/blog/perche-dovremmo-tutti-passare-a-linux-e-perche-non-lo-facciamo/">Linux</a>???</p>
]]></content>
		</item>
		
		<item>
			<title>Mai smettere di imparare…</title>
			<link>https://albertoreineri.it/blog/mai-smettere-di-imparare/</link>
			<pubDate>Sun, 01 Dec 2019 21:35:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/mai-smettere-di-imparare/</guid>
			<description>Ho iniziato a scrivere codice quasi dieci anni fa, ho utilizzato linguaggi, librerie e framework diversi, ma la voglia di imparare sempre qualcosa di nuovo non mi è ancora passata, fortunatamente.
Da un paio di anni nella mia mente vaga una parolina che non riesco a far andare via: Python.
Se si fa una breve ricerca in rete circa i linguaggi di programmazione non si può non trovare una marea di articoli riguardanti questo programma.</description>
			<content type="html"><![CDATA[<p>Ho iniziato a scrivere codice <strong>quasi dieci anni fa</strong>, ho utilizzato linguaggi, librerie e framework diversi, ma la voglia di imparare sempre qualcosa di nuovo non mi è ancora passata, fortunatamente.</p>
<p>Da un paio di anni nella mia mente vaga una parolina che non riesco a far andare via: <strong><a href="/blog/organizzare-il-lavoro-con-python/">Python</a></strong>.</p>
<p>Se si fa una breve ricerca in rete circa i linguaggi di programmazione non si può non trovare una marea di articoli riguardanti questo programma. Le discussioni e gli articoli vertono tutti praticamente solo su Python e Javascript.</p>
<p>Ad attirare le persone verso questo linguaggio sono sicuramente la sua sintassi semplice ed il fatto che è utlizzato per l’intelligenza artificliale ed il machine learning. E allora penso sia giunta l’ora di buttarci un occhio.</p>
<p><strong>Non ho mai sviluppato niente in Python</strong> e quindi non lo so utilizzare. Ho letto un po’ di cose sulla documentazione, ho imparato la sintassi, ma non posso dire di saperlo usare finché non creerò qualcosa con questo linguaggio.</p>
<p>Ho iniziato tutto con il buon vecchio Visual Basic, per passare poi ad ASP, PHP e Javascript (html e css non li contiamo va…), e ora credo sia giunta l’ora di imparare a creare anche qualcosa con Python.</p>
<h2 id="da-dove-iniziare">DA DOVE INIZIARE?</h2>
<p>Come ogni volta che ci si avvicina ad un nuovo linguaggio, non si sa mai da dove <strong>iniziare</strong>… E con Python le possibilità sono veramente <strong>infinite</strong>.</p>
<p>Si possono creare siti <strong>web</strong> e web app, ma anche applicazioni <strong>desktop e mobile</strong>! Praticamente di tutto.</p>
<p>In teoria dovrei essere portato verso lo sviluppo web, quindi verso l’utilizzo di <strong><a href="https://www.djangoproject.com/#:~:text=Django%20is%20a%20high%2Dlevel,It's%20free%20and%20open%20source." target="_blank" rel="noreferrer noopener">Django</a></strong>, ma devo dire che anche i framework desktop e mobile mi attirano abbastanza.</p>
<p>Ho già installato django e da quel poco che ho visto devo dire che mi piace molto, ma anche <strong>Kivy</strong> mi attira molto…</p>
<h2 id="sono-in-balia-dellindecisione">SONO IN BALIA DELL’INDECISIONE…</h2>
<p>Per il momento ho già creato <strong>un paio di script</strong> con Python e <strong>Selenium</strong> ed è stato veramente semplice e veloce. Sono rimasto impressionato dalle <strong>poche righe</strong> di codice e dalla <strong>community</strong> online. Ho trovato in breve tempo tutto quello che cercavo e sono riuscito a fare ciò che volevo! <strong>Cosa chiedere di più?</strong></p>
<p>Spero che nella prossima settimana potrò decidermi e scegliere il framework al quale affidarmi, che probabilmente sarà django. Forse potrei provare a portare qualche mio provetto in PHP su <strong>Django</strong> e vedere come funziona.</p>
<p>Se avete qualche suggerimento sarà sicuramente ben accetto.</p>
<p>A presto</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Certificato SSL: come reindirizzare http a https</title>
			<link>https://albertoreineri.it/blog/certificato-ssl-come-reindirizzare-http-a-https/</link>
			<pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/certificato-ssl-come-reindirizzare-http-a-https/</guid>
			<description>Vediamo come installare un certificato SSL sul nostro sito e passare da http a https.
Vuoi rimuovere la scritta “non sicuro” che compare vicino all’URL del tuo sito? Allora questo articolo fa al caso tuo!
Non andremo ad approfondire che cos’è l’HTTPS, ma vedremo semplicemente come far funzionare il tuo sito in modo che sia sicuro.
La procedura è molto semplice, ti basterà seguire questi due passaggi:
1. Attivare l’SSL sul tuo spazio web Entra nel pannello di controllo del tuo servizio di Hosting e cerca “Attiva HTTPS“, “Attiva SSL” o qualcosa di simile (varia a seconda del servizio).</description>
			<content type="html"><![CDATA[<p>Vediamo come installare un certificato SSL sul nostro sito e passare da http a https.</p>
<p>Vuoi rimuovere la scritta “<strong>non sicuro</strong>” che compare <strong>vicino all’URL</strong> del tuo sito? Allora questo articolo fa al caso tuo!</p>
<p><strong>Non</strong> andremo ad approfondire che cos’è <strong>l’HTTPS</strong>, ma vedremo semplicemente come far funzionare il tuo sito in modo che sia sicuro.</p>
<p>La procedura è molto semplice, ti basterà seguire questi due passaggi:</p>
<h2 id="1-attivare-lssl-sul-tuo-spazio-web">1. Attivare l’SSL sul tuo spazio web</h2>
<p>Entra nel <strong>pannello di controllo</strong> del tuo servizio di Hosting e cerca “<strong>Attiva HTTPS</strong>“, “<strong>Attiva SSL</strong>” o qualcosa di simile (varia a seconda del servizio).</p>
<p>Una volta trovata la sezione giusta <strong>attiva il servizio</strong>. <strong>Può volerci qualche ora</strong> prima che sia attivo.</p>
<p>Dopo qualche ora prova a collegarti al tuo sito digitando <a href="https://www.nomesito.it">https://www.nomesito.it</a>. Se tutto funziona correttamente vai al passaggio 2.</p>
<p>Se visualizzi degli <strong>errori</strong> probabilmente è perché hai dei link http per fogli di stile, immagini e file js. Prova a <strong>sostituire l’http con https</strong> in tutti i riferimenti a immagini, css e js, dovrebbe sistemarsi tutto.</p>
<p>Se utilizzi <strong><a href="/blog/come-installare-e-personalizzare-un-tema-wordpress-2/">WordPress</a></strong> puoi utilizzare dei <strong>plugin</strong> che si occupano del problema, ad esempio <a href="https://it.wordpress.org/plugins/really-simple-ssl/">Really Simple SSL</a> oppure <a href="https://it.wordpress.org/plugins/wp-force-ssl/">WP Force SSL</a>. Utilizzando questi plugin puoi saltare il punto 2, i plugin si occupano di tutto da soli</p>
<h2 id="2-redirigere-il-traffico-verso-https">2. REDIRIGERE IL TRAFFICO VERSO HTTPS</h2>
<p>Se hai effettuato correttamente il punto uno ora puoi aprire il file <strong>.htaccess</strong> presente nella root del tuo sito (se non c’è crealo) e inserire questo codice:</p>
<pre tabindex="0"><code>RewriteEngine on

RewriteCond %{HTTP:X-Forwarded-Proto} !https

RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]
</code></pre><p>In questo modo tutte le chiamate al server verranno redirette verso <strong>l’https</strong>.</p>
<p>Se questo codice crea un errore circa i reindirizzamenti puoi sostituire </p>
<pre tabindex="0"><code>RewriteCond %{HTTP:X-Forwarded-Proto} !https
</code></pre><p>con</p>
<pre tabindex="0"><code>RewriteCond %{HTTPS}  !=on.
</code></pre><p>Con questi semplici passaggi puoi installare un certificato SSL e redirigere il traffico da http a https, ottenendo un sito web più sicuro.</p>
]]></content>
		</item>
		
		<item>
			<title>Reindirizzare http a https</title>
			<link>https://albertoreineri.it/blog/reindirizzare-http-a-https/</link>
			<pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/reindirizzare-http-a-https/</guid>
			<description>Vediamo come installare un certificato SSL sul nostro sito e passare da http a https.
Vuoi rimuovere la scritta “non sicuro” che compare vicino all’URL del tuo sito? Allora questo articolo fa al caso tuo!
Non andremo ad approfondire che cos’è l’HTTPS, ma vedremo semplicemente come far funzionare il tuo sito in modo che sia sicuro.
La procedura è molto semplice, ti basterà seguire questi due passaggi:
1. Attivare l’SSL sul tuo spazio web Entra nel pannello di controllo del tuo servizio di Hosting e cerca “Attiva HTTPS“, “Attiva SSL” o qualcosa di simile (varia a seconda del servizio).</description>
			<content type="html"><![CDATA[<p>Vediamo come installare un certificato SSL sul nostro sito e passare da http a https.</p>
<p>Vuoi rimuovere la scritta “<strong>non sicuro</strong>” che compare <strong>vicino all’URL</strong> del tuo sito? Allora questo articolo fa al caso tuo!</p>
<p><strong>Non</strong> andremo ad approfondire che cos’è <strong>l’HTTPS</strong>, ma vedremo semplicemente come far funzionare il tuo sito in modo che sia sicuro.</p>
<p>La procedura è molto semplice, ti basterà seguire questi due passaggi:</p>
<h2 id="1-attivare-lssl-sul-tuo-spazio-web">1. Attivare l’SSL sul tuo spazio web</h2>
<p>Entra nel <strong>pannello di controllo</strong> del tuo servizio di Hosting e cerca “<strong>Attiva HTTPS</strong>“, “<strong>Attiva SSL</strong>” o qualcosa di simile (varia a seconda del servizio).</p>
<p>Una volta trovata la sezione giusta <strong>attiva il servizio</strong>. <strong>Può volerci qualche ora</strong> prima che sia attivo.</p>
<p>Dopo qualche ora prova a collegarti al tuo sito digitando <a href="https://www.nomesito.it">https://www.nomesito.it</a>. Se tutto funziona correttamente vai al passaggio 2.</p>
<p>Se visualizzi degli <strong>errori</strong> probabilmente è perché hai dei link http per fogli di stile, immagini e file js. Prova a <strong>sostituire l’http con https</strong> in tutti i riferimenti a immagini, css e js, dovrebbe sistemarsi tutto.</p>
<p>Se utilizzi <strong><a href="/blog/come-installare-e-personalizzare-un-tema-wordpress-2/">WordPress</a></strong> puoi utilizzare dei <strong>plugin</strong> che si occupano del problema, ad esempio <a href="https://it.wordpress.org/plugins/really-simple-ssl/">Really Simple SSL</a> oppure <a href="https://it.wordpress.org/plugins/wp-force-ssl/">WP Force SSL</a>. Utilizzando questi plugin puoi saltare il punto 2, i plugin si occupano di tutto da soli</p>
<h2 id="2-redirigere-il-traffico-verso-https">2. REDIRIGERE IL TRAFFICO VERSO HTTPS</h2>
<p>Se hai effettuato correttamente il punto uno ora puoi aprire il file <strong>.htaccess</strong> presente nella root del tuo sito (se non c’è crealo) e inserire questo codice:</p>
<pre tabindex="0"><code>RewriteEngine on

RewriteCond %{HTTP:X-Forwarded-Proto} !https

RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]
</code></pre><p>In questo modo tutte le chiamate al server verranno redirette verso <strong>l’https</strong>.</p>
<p>Se questo codice crea un errore circa i reindirizzamenti puoi sostituire </p>
<pre tabindex="0"><code>RewriteCond %{HTTP:X-Forwarded-Proto} !https
</code></pre><p>con</p>
<pre tabindex="0"><code>RewriteCond %{HTTPS}  !=on.
</code></pre><p>Con questi semplici passaggi puoi installare un certificato SSL e redirigere il traffico da http a https, ottenendo un sito web più sicuro.</p>
]]></content>
		</item>
		
		<item>
			<title>SASS Tutorial - Che cos’è e perché non potrai più farne a meno</title>
			<link>https://albertoreineri.it/blog/sass-tutorial-che-cos%C3%A8-e-perch%C3%A9-non-potrai-pi%C3%B9-farne-a-meno/</link>
			<pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/sass-tutorial-che-cos%C3%A8-e-perch%C3%A9-non-potrai-pi%C3%B9-farne-a-meno/</guid>
			<description>Se vivi nel mondo dello sviluppo web allora sicuramente avrai già sentito parlare di SASS, il preprocessore di CSS più famoso! Questo è uno strumento fantastico che consente di estendere di molto le possibilità del CSS e creare e gestire i fogli di stile in maniera veloce e ben organizzata.
SASS è un preprocessore CSS, che aggiunge funzionalità speciali come variabili, annidamenti, mixin e molto altro ai normali CSS. L’obiettivo è rendere il processo di creazione del CSS semplice ed efficace, sia da scrivere che da leggere in futuro.</description>
			<content type="html"><![CDATA[<p>Se vivi nel mondo dello <strong>sviluppo web</strong> allora sicuramente avrai già sentito parlare di <strong>SASS</strong>, il preprocessore di CSS più famoso! Questo è uno <strong>strumento fantastico</strong> che consente di <strong>estendere di molto le possibilità del CSS</strong> e creare e gestire i fogli di stile in maniera <strong>veloce</strong> e ben <strong>organizzata</strong>.</p>
<p><strong>SASS</strong> è un <strong>preprocessore CSS</strong>, che aggiunge funzionalità speciali come <strong>variabili</strong>, <strong>annidamenti</strong>, <strong>mixin</strong> e molto altro ai normali CSS. L’obiettivo è rendere il processo di creazione del C<strong>SS semplice ed efficace</strong>, sia da scrivere che da leggere in futuro.</p>
<blockquote>
<p><em>Ma andiamo un po’ più nel dettaglio!</em></p>
</blockquote>
<h2 id="che-cosè-un-preprocessore-css">Che cos’è un preprocessore CSS?</h2>
<p>Un preprocessore CSS è un <strong>linguaggio di scripting</strong> che estende i CSS, consentendo agli sviluppatori di scrivere codice in un determinato linguaggio e quindi <strong>compilarlo</strong> in CSS. <a href="https://sass-lang.com/">Sass</a> è forse il preprocessore più popolare in circolazione in questo momento, ma altri esempi ben noti includono <a href="http://lesscss.org/">Less</a> e <a href="http://stylus-lang.com/">Stylus</a>.</p>
<p><strong>Prima di proseguire, è necessaria una rapida premessa:</strong> <em>la maggior parte dei web designer direbbe che se sei nuovo nel mondo del CSS, è meglio evitare Sass (o eventuali preprocessori, estensioni o framework) mentre sei ancora in fase di apprendimento. Sebbene questi tool offrono molti vantaggi in termini di velocità ed efficienza, è importante che conoscere a fondo le basi del CSS prima di affacciarsi ai preprocessori. Assicurati quindi di apprendere i concetti chiave prima di iniziare ad esplorare i vari tool a disposizione. Questo vale per ogni tecnologia ed ogni framework, prima è sempre buona norma imparare a dovere il linguaggio base e poi i vari strumenti su esso costruiti!</em></p>
<blockquote>
<p><em>Finito il predicozzo torniamo a Sass!</em></p>
</blockquote>
<h2 id="che-cosè-sass">Che cos’è Sass?</h2>
<p><strong>Sass</strong> (che sta per “Syntactically awesome style sheets”) è un’<strong>estensione del CSS</strong> che consente di usare cose come variabili, regole nidificate, importazioni in linea e altro. Aiuta anche a mantenere il <strong>codice organizzato</strong> e consente di <strong>creare fogli di stile molto più velocemente.</strong></p>
<p><strong>Sass è compatibile con tutte le versioni di CSS</strong>. L’unico requisito per usarlo è avere installato Ruby. Gli sviluppatori che lo utilizzano sono inoltre invitati a seguire le <a href="https://sass-lang.com/community-guidelines">Linee guida della community di Sass</a>, è sempre un bene darci un’occhiata.</p>
<h2 id="come-usare-sass">Come usare Sass?</h2>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/cM6UQxF9PSA" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>Nella sezione seguente, vedremo alcuni suggerimenti di base per l’utilizzo di Sass, usando esempi tratti dal sito Web ufficiale di Sass. Dai un’occhiata alla <a href="https://sass-lang.com/documentation">documentazione ufficiale</a> per ulteriori riferimenti ed esempi.</p>
<h3 id="sintassi">Sintassi</h3>
<p>Sass include <strong>due opzioni di sintassi</strong>:</p>
<ul>
<li><strong>SCSS</strong> (Sassy CSS): utilizza l’estensione del file .scss ed è pienamente conforme alla sintassi CSS. (la mia preferita!)</li>
<li><strong>SASS</strong>: utilizza l’indentazione al posto delle parentesi ed ha estensione .sass; non è completamente conforme alla sintassi CSS, ma è più veloce da scrivere. (Per gli amanti di Python)</li>
</ul>
<p>I file possono comunque essere convertiti da una sintassi all’altra utilizzando il comando <strong>sass-convert</strong>.</p>
<h3 id="variabili">Variabili</h3>
<p>Proprio come altri linguaggi di programmazione, <strong>Sass consente l’uso di variabili</strong> che possono memorizzare informazioni che è possibile utilizzare in tutto il foglio di stile.</p>
<p>Ad esempio, <strong>è possibile memorizzare un valore di colore in una variabile</strong> nella parte superiore del file e quindi utilizzare questa variabile quando si imposta il colore dei propri elementi. Ciò consente di <strong>cambiare rapidamente i colori senza dover modificare ciascuna riga separatamente</strong>.</p>
<p><em>Per esempio:</em></p>
<pre tabindex="0"><code>$font-stack:    Helvetica, sans-serif;
$primary-color: #333;

body {
  font: 100% $font-stack;
  color: $primary-color;
}
</code></pre><p><strong>Questo codice genererà il seguente CSS:</strong></p>
<pre tabindex="0"><code>body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}
</code></pre><h3 id="annidamento">Annidamento</h3>
<p><em>L’annidamento è un’arma a doppio taglio.</em> Sebbene fornisca un metodo eccellente per ridurre la quantità di codice da scrivere, può anche portare a CSS troppo “incasinati” se non eseguito con cura.</p>
<p>L’idea è di annidare i selettori CSS in modo tale da <strong>imitare la gerarchia HTML.</strong></p>
<p>Ecco un <strong>esempio</strong> di menù di navigazione che utilizza l’annidamento:</p>
<pre tabindex="0"><code>nav {
  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  li { display: inline-block; }

  a {
    display: block;
    padding: 6px 12px;
    text-decoration: none;
  }
}
</code></pre><p><strong>L’output CSS sarà il seguente:</strong></p>
<pre tabindex="0"><code>nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

nav li {
  display: inline-block;
}

nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}
</code></pre><h3 id="parzializzazione">Parzializzazione</h3>
<p>I <strong>parziali</strong> sono <strong>file Sass più piccoli</strong> che possono essere importati (vedi la sezione successiva) in altri file Sass. Sono come <strong>frammenti di codice</strong>. Con questi frammenti il CSS può essere <strong>modulare</strong> e più <strong>facile da mantenere</strong>. Un parziale è designato come tale nominandolo con un carattere di underscore iniziale: <strong>_partial.scss</strong>.</p>
<h3 id="importazione">Importazione</h3>
<p>Utilizzatato con i parziali (vedere la sezione precedente), il comando @import consente di <strong>importare i file parziali nel file corrente</strong>, per <strong>creare un singolo file CSS.</strong> In questo modo in fase di sviluppo è possibile <strong>suddividere il codice per sezioni</strong>, mentre in fase di caricamento del sito ci sarà solamente <strong>un file .css</strong> da caricare, <strong>riducendo la richiesta al server</strong>.</p>
<p><em>Ecco un esempio:</em></p>
<p><strong>_reset.scss</strong></p>
<pre tabindex="0"><code>html,
body,
ul,
ol {
   margin: 0;
  padding: 0;
}
</code></pre><p><strong>basefile.scss</strong></p>
<pre tabindex="0"><code>@import &#39;reset&#39;;

body {
  font: 100% Helvetica, sans-serif;
  background-color: #efefef;
}
</code></pre><p><strong>Output CSS:</strong></p>
<pre tabindex="0"><code>html, body, ul, ol {
  margin: 0;
  padding: 0;
}

body {
  font: 100% Helvetica, sans-serif;
  background-color: #efefef;
}
</code></pre><p><strong>Importante</strong>: quando si importano i parziali, non è necessario includere l’estensione del file o l’underscore.</p>
<h3 id="mixins">Mixins</h3>
<p>Uno dei vantaggi dell’utilizzo dei preprocessori è la capacità di <strong>prendere codice complesso e complicato e semplificarlo</strong>. È qui che i mixin ci vengono in aiuto!</p>
<p>Ad esempio, se è necessario includere i <strong>vendor prefixes</strong>, è possibile utilizzare un mixin. Dai un’occhiata a questo esempio per border-radius:</p>
<pre tabindex="0"><code>@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

.box { @include border-radius(10px); }
</code></pre><p>Da notare: il comando @mixin è in alto. È stato dato il nome “border-radius” e la variabile “$radius” come parametro. Questa variabile viene utilizzata per impostare il valore del raggio per ciascun elemento.</p>
<p>Successivamente, viene chiamato il comando @include, insieme al nome del mixin (“border-radius”) e un parametro (10px). Pertanto .box {@include border-radius (10px); }.</p>
<p><strong>Viene prodotto il seguente CSS:</strong></p>
<pre tabindex="0"><code>.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}
</code></pre><h3 id="extend">Extend</h3>
<p>Il comando @extend è stato definito una delle <strong>funzionalità più potenti</strong> di Sass. Dopo averlo visto in azione, è chiaro il perché.</p>
<p>L’idea è che con questa direttiva non dovrai includere più nomi di classe nei tuoi elementi HTML e puoi <strong>mantenere il tuo codice DRY</strong> (Don’t repeat yourself). I selettori possono ereditare gli stili di altri selettori e quindi essere facilmente estesi quando necessario.</p>
<h3 id="operatori">Operatori</h3>
<p>La possibilità di e<strong>seguire calcoli nel CSS</strong> consente consente di ampliare le possibilità, come convertire i valori dei pixel in percentuali. Si può avere accesso a funzioni matematiche standard come <strong>addizione, sottrazione, moltiplicazione e divisione</strong>. Naturalmente, queste funzioni possono essere combinate per creare calcoli complessi.</p>
<p>Inoltre, Sass include alcune funzioni integrate per aiutare a manipolare i numeri. Funzioni come <strong>percentage()</strong>, <strong>floor()</strong> e <strong>round()</strong> per citarne alcuni.</p>
<p>Se ancora non conoscevi questo strumento inizia subito ad utilizzarlo nel progetto in corso, sicuramente non te ne pentirai!</p>
<p>Se invece lo conoscevi già spero di averti magari rivelato qualche caratteristica ulteriore di questo fantastico tool!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Ho creato un mio CMS</title>
			<link>https://albertoreineri.it/blog/ho-creato-un-mio-cms/</link>
			<pubDate>Sat, 02 Nov 2019 21:29:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/ho-creato-un-mio-cms/</guid>
			<description>WordPress è una piattaforma fantastica, un gran CMS, permette di gestire i contenuti dei siti web in maniera relativamente semplice e veloce, offre una vastissima gamma di plugin e consente di realizzare progetti in maniera rapida ed efficace.
Però ci sono alcune cose in WordPress che non mi sono mai piaciute… Due in particolare:
1. LA LENTEZZA In primo luogo la lentezza. Anche sviluppando un tema custom Wordpress inserisce delle dipendenze delle quali non si può fare a meno e che vanno a rallentare il caricamento della pagina.</description>
			<content type="html"><![CDATA[<p><strong>WordPress</strong> è una piattaforma fantastica, un gran CMS, permette di gestire i contenuti dei siti web in maniera relativamente semplice e veloce, offre una vastissima gamma di plugin e consente di realizzare progetti in maniera rapida ed efficace.</p>
<p>Però ci sono alcune cose in WordPress che <strong>non mi sono mai piaciute</strong>… Due in particolare:</p>
<h2 id="1-la-lentezza">1. LA LENTEZZA</h2>
<p>In primo luogo la lentezza. Anche sviluppando un <strong>tema custom</strong> Wordpress inserisce delle <strong>dipendenze</strong> delle quali <strong>non si può fare a meno</strong> e che vanno a rallentare il caricamento della pagina.</p>
<p>Inoltre ogni plugin inserisce i propri file CSS e JS in tutte le pagine del sito, a prescindere dal fatto che mi servano solamente in home page o in una singola pagina interna. (Questo su può ovviare rinunciando ai plugin e utilizzando una soluzione completamente custom, ma in questo caso i tempi di sviluppo si allungano…).</p>
<p>Lo stesso sito creato con WordPress oppure senza ha tempi di caricamento molto minori! Se vuoi fare alcune prove utilizza questi due servizi, vedrai che i siti sviluppati in WordPress saranno più lenti, anche utilizzando hosting più costosi e performanti:</p>
<ul>
<li><a href="https://tools.pingdom.com/">https://tools.pingdom.com/</a></li>
<li><a href="https://developers.google.com/speed/pagespeed/insights/?hl=IT">https://developers.google.com/speed/pagespeed/insights/?hl=IT</a></li>
</ul>
<p>Per un test del sito web più completo puoi utilizzare il tool sviluppato da <a href="https://www.digitale.co/">Digitale.co</a> che permette di scansionare più pagine in un colpo solo. In questo modo si può risparmiare tempo e avere una panoramica migliore e più ampia sulle performance di un sito web! Ecco il link al tool!</p>
<ul>
<li><a href="https://www.digitale.co/pagespeed" target="_blank" rel="noreferrer noopener nofollow"><a href="https://www.digitale.co/pagespeed">https://www.digitale.co/pagespeed</a></a></li>
</ul>
<h2 id="2-il-backend">2. IL BACKEND</h2>
<p>In secondo luogo il backend è molto bello e semplice, ma non sempre. <strong>L’impossibilità di intervenire in maniera invasiva</strong> sul backend mi ha sempre frustrato parecchio.</p>
<p>Certo, possiamo creare dei Custom post, dei campi personalizzati con Advanced Custom Fields, possiamo anche cambiare lo schema colori del back-end, creare una login personalizzata etc, ma non abbiamo le libertà di una piattaforma creata completamente da zero, nella quale possiamo decidere tutto ciò che vogliamo.</p>
<p>Non mi è mai piaciuto sentirmi “schiavo” di un software, dover obbedire alle sue leggi senza possibilità di intervenire ovunque io voglia.</p>
<p>Ho sempre voluto creare una piattaforma completamente mia, da poter gestire in completa autonomia, adattabile al 100% a tutte le soluzioni.</p>
<h2 id="il-mio-cms">IL MIO CMS</h2>
<p>Per questo ho creato <strong><a href="/orange" target="_blank" rel="noreferrer noopener">Orange CMS</a>.</strong></p>
<p>Ho sempre amato la programmazione, ed utilizzare sempre codice scritto da altri non mi è mai piaciuto. Sono uno sviluppatore e voglio sviluppare, solo così si può imparare ed andare sempre avanti!</p>
<p>Sia ben chiaro, <strong>non ho reinventato la ruota</strong>. Ho usato una serie di script sviluppati in passato e alcune librerie online e poco per volta ho creato questa piattaforma.</p>
<p>Ho utilizzato:</p>
<ul>
<li><a href="https://getbootstrap.com/" target="_blank" rel="noreferrer noopener">Bootstrap</a></li>
<li><a href="https://ckeditor.com/" target="_blank" rel="noreferrer noopener">CKEditor</a></li>
<li><a href="https://ckeditor.com/ckfinder/" target="_blank" rel="noreferrer noopener">CKFinder</a></li>
<li><a href="https://datatables.net/" target="_blank" rel="noreferrer noopener">DataTables</a></li>
<li><a href="https://fengyuanchen.github.io/datepicker/" target="_blank" rel="noreferrer noopener">DatePicker</a></li>
</ul>
<p>Se con WordPress riuscivo ad essere efficace, con Orange CMS posso dire di essere efficiente!</p>
<p>I tempi di sviluppo sono più o meno gli stessi, ma con Orange CMS posso:</p>
<ul>
<li>creare un sistema di caricamento dati sviluppato apposta per le esigenze del progetto, andando a ridurre notevolmente i tempi di caricamento dei contenuti</li>
<li>creare url completamente customizzabilie e SEO friendly grazie ad un pratico <a href="/blog/semplice-sistema-di-routing-in-php">sistema di routing</a></li>
<li>creare sezioni specifiche per i contenuti del sito</li>
<li>avere tempi di caricamento brevissimi</li>
<li>avere un login sicuro, con passwork codificate</li>
</ul>
<p><strong>Alcuni siti</strong> realizzati con Orange CMS:</p>
<ul>
<li><a href="http://danzeoccitane.altervista.org/" target="_blank" rel="noreferrer noopener">danzeoccitane.altervista.org</a></li>
<li><a href="http://eventicuneo.it/" target="_blank" rel="noreferrer noopener">eventicuneo.it</a></li>
<li><a href="http://studiomacdesign.it/" target="_blank" rel="noreferrer noopener">studiomacdesign.it</a></li>
<li><a href="http://associazionefedercasa.it/" target="_blank" rel="noreferrer noopener">associazionefedercasa.it</a></li>
</ul>
<p>Questo <strong>non significa che smetterò di utilizzare WordPress</strong>, per un blog sono convinto che sia sempre la soluzione migliore, ma credo che lo utilizzerò sempre meno.</p>
<p>Grazie per aver letto questo articolo.</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Sito WordPress lento? Ecco come aumentare le performance!</title>
			<link>https://albertoreineri.it/blog/sito-wordpress-lento-ecco-come-aumentare-le-performance/</link>
			<pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/sito-wordpress-lento-ecco-come-aumentare-le-performance/</guid>
			<description>Hai un sito WordPress lento? Si blocca spesso e ti viene il nervoso solamente a guardarlo? Vediamo come migliorarlo!
WordPress è la piattaforma più utilizzata al mondo per la creazione di siti web, ma spesso capita che venga utilizzata in maniera non ottimale.
Questo può causare gravi rallentamenti nel sito.
WordPress, sebbene sia fantastico, porta con sè un core già pesantuccio di suo, e se si installano temi e plugin a gogo diventerà presto lentissimo, andando a danneggiare non solo l’esperienza utente ma anche l’indicizzazione SEO.</description>
			<content type="html"><![CDATA[<p>Hai un sito WordPress lento? Si blocca spesso e ti viene il nervoso solamente a guardarlo? Vediamo come migliorarlo!</p>
<p>WordPress è <strong>la piattaforma più utilizzata al mondo</strong> per la creazione di siti web, ma spesso capita che venga <strong>utilizzata in maniera non ottimale</strong>.</p>
<p>Questo può causare <strong>gravi rallentamenti</strong> nel sito.</p>
<p>WordPress, sebbene sia fantastico, porta con sè un core già <em>pesantuccio</em> di suo, e se si installano temi e plugin <em>a gogo</em> diventerà presto <strong>lentissimo</strong>, andando a <strong>danneggiare non solo l’esperienza utente ma anche l’indicizzazione SEO.</strong></p>
<h2 id="cosa-rallenta-il-tuo-sito-wordpress">Cosa rallenta il tuo sito WordPress?</h2>
<p>I motivi per cui il tuo sito WordPress è lento possono essere <strong>molteplici</strong>, ecco qua elencate le cause principali:</p>
<ul>
<li><strong>Web hosting</strong>: se il server di web hosting non è configurato correttamente oppure è di scarsa qualità, sicuramente il sito ne risentirà. Si può avere un sito sviluppato a regola d’arte, ma se il server su cui gira non è ottimizzato i risultati saranno scadenti.</li>
<li><strong>Configurazione di WordPress</strong>: se il tuo sito non offre la memorizzazione della cache, può sovraccaricare il server causando rallentamenti o arresti del sito</li>
<li><strong>Dimensioni immagini</strong>: una delle maggiori cause dei rallentamenti sono le immagini enormi. Tante immagini grandi sulla stessa pagina rallenteranno moltissimo i tempi di caricamento.</li>
<li><strong>Plugin di scarsa qualità</strong>: se si utilizzano plugin con errori, codici errati o inutili, sicuramente si otterranno rallentamenti se non addirittura problemi di sicurezza.</li>
<li><strong>Script esterni</strong>: tutti i vari script esterni al sito, come gli annunci, i font, i sistemi di tracciamento etc. vanno a rallentare il sito.</li>
</ul>
<p>Ma andiamo un po’ più nel dettaglio</p>
<h2 id="avere-un-buon-hosting-fa-la-differenza">Avere un buon hosting fa la differenza</h2>
<p>L’hosting sono <strong>le fondamenta su cui si costruisce il proprio sito</strong>, se le fondamenta non sono di qualità non importa quando possa essere perfetto ciò che ci si costruisce sopra, sarà sicuramente destinato a <strong>crollare</strong>.</p>
<p>Avere un buon servizio di hosting, con <strong>funzionalità al passo con i tempi</strong> e assistenza 24/7 consente di dormire sonni tranquilli, avere tutto sotto controllo e essere <strong>sicuri</strong> che il sito <em>girerà</em> in maniera corretta sempre.</p>
<p>Come già accennato in precedenza, si può avere un sito sviluppato a regola d’arte, completamente ottimizzato, con immagini delle dimensioni giuste, script caricati nella maniera corretta, tutto perfetto insomma. <strong>Ma se l’hosting non è buono questo sito <em>farà schifo</em> lo stesso.</strong></p>
<p>Mi è già capitato di realizzare un tema ad hoc partendo da zero, impegare molte ore per ottimizzare ogni singola richiesta dal server in modo da sovraccaricarlo il meno possibile, e poi ottenere risultati pessimi nei test di performance. Questo è molto frustrante e <strong>dannoso</strong> per il sito web.</p>
<p>Occorre affidarsi a professionisti veri in grado di <strong>scegliere il miglior servizio in base alle esigenze.</strong></p>
<p>Non esiste l’hosting perfetto sempre, bisogna <strong>valutare le necessità</strong> e scegliere di conseguenza.</p>
<h2 id="configurazione-di-wordpress">Configurazione di WordPress</h2>
<h3 id="cache">Cache</h3>
<p>È possibile velocizzare un sito WordPress lento in maniera semplice e veloce installando un plugin per la <strong>gestione della cache.</strong></p>
<p>Ne esistono molti anche gratuiti, ma occorre saperli <strong>configurare correttamente.</strong></p>
<p>Si possono ottenere già buoni risultati utilizzando le configurazioni di default del plugin, ma andando a <strong>settare ogni singolo parametro</strong> in funzione del sito le <strong>performance aumenteranno notevolmente.</strong></p>
<h3 id="aggiornamenti">Aggiornamenti</h3>
<p>Un’altra best practice è quella di mantenere sempre aggiornato il sito. Non effettuare gli aggiornamenti è rischioso anche dal punto di vista della sicurezza, quindi <strong>assicurati sempre che il tuo sito sia aggiornato all’ultima versione, così come i vari plugin.</strong></p>
<h2 id="ottimizzare-le-immagini">Ottimizzare le immagini</h2>
<p>Avere tante immagini è una delle prime cause di un sito WordPress lento.</p>
<p>La soluzione non è però rimuoverle tutte e avere pagine con solo testo. Fortunatamente oggi esistono molti tool in grado di <strong>ottimizzare le immagini</strong> per il web.</p>
<p>Il software migliore per ottimizzare un’immagine per il web è <strong><a href="https://www.adobe.com/it/products/photoshop.html">Photoshop</a></strong>, ma è possibile anche farlo gratuitamente con tool online come <strong><a href="https://pixlr.com/e/">Pixlr</a></strong>.</p>
<p>Le immagini devono essere salvate delle <strong>dimensioni corrette</strong>, è inutile avere un’immagine 5000×5000, superare i 1920 px di larghezza è quasi sempre inutile, quindi assicurati di caricare le immagini nel formato corretto e <strong>meno pesante possibile.</strong></p>
<h3 id="i-formati">I formati</h3>
<p>Utilizza solamente due tipi di formati: <strong>JPG e PNG.</strong></p>
<p>Il <strong>PNG</strong> dovrebbe essere utilizzato solamente quando l’immagine ha delle <strong>trasparenze</strong>, per esempio un logo.</p>
<p>Per tutte le <strong>foto</strong> consiglio di utilizzare il <strong>JPG</strong> perché è più leggero.</p>
<h2 id="attenzione-ai-plugin">Attenzione ai plugin</h2>
<p>I plugin sono molto utili per un sito in WordPress, ma <strong>non bisogna mai installarli con troppa leggerezza.</strong></p>
<p>Prima di installare un nuovo plugin occorre sempre controllare il log degli <strong>aggiornamenti</strong>, vedere se è ancora <strong>mantenuto</strong> dagli sviluppatori e dare un’occhiata alle <strong>recensioni</strong>.</p>
<p>Inoltre è importante <strong>aggiornarli</strong> sempre all’ultima versione.</p>
<p>Avere troppi plugin o plugin sviluppati male causa <strong>enormi problemi</strong> ai siti in WordPress, sia per le <strong>performance</strong> che per la <strong>sicurezza</strong>.</p>
<h2 id="script-esterni">Script esterni</h2>
<p>Molte volte è fondamentale inserire script esterni, quali le inserzioni di google ads. Queste però hanno un <strong>impatto negativo sulle performance.</strong> Occorre tenerne conto e <strong>se proprio non se ne può fare a meno andare ad ottimizzare da altre parti.</strong></p>
<h2 id="conclusione">Conclusione</h2>
<p><strong>Avere un sito in WordPress prestante e performante si può, basta svilupparlo come si deve.</strong></p>
<p>La soluzione migliore è sempre quella di <strong>utilizzare un tema realizzato in maniera professionale da zero</strong>, costruito sulle necessità del sito.</p>
<p>I <strong>temi generici</strong>, gratis o a pagamenti, sono creati per essere utilizzati da svariate tipologie di siti web e per questo hanno moltissime <strong>funzionalità che spesso si rivelano inutili</strong> e rallentano il sito.</p>
<p>Lo stesso vale per i <strong>plugin</strong>. Dove è possibile è sempre meglio utilizzare un <strong>plugin sviluppato da zero</strong> apposta per la funzionalità che deve compiere.</p>
<p>La soluzione migliore per avere un sito in WordPress performante è quindi quella di <strong>appoggiarsi ad un esperto in WordPress</strong> in grado di capire le esigenze del sito e <strong>realizzare la soluzione migliore</strong>, questo garantisce <strong>preformance elevate e anche un maggior livello disicurezza.</strong></p>
]]></content>
		</item>
		
		<item>
			<title>Come scegliere la tecnologia giusta per il proprio sito web?</title>
			<link>https://albertoreineri.it/blog/come-scegliere-la-tecnologia-giusta-per-il-proprio-sito-web/</link>
			<pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-scegliere-la-tecnologia-giusta-per-il-proprio-sito-web/</guid>
			<description>Scegliere la giusta tecnologia per il proprio sito web è un passo molto importante.
Oggi essere online è fondamentale!
Un sito web permette di essere trovati facilmente da tutti in tutto il mondo, crea l’immagine aziendale, permette di comunicare velocemente con i propri clienti e molto altro… Insomma, porta sicuramente vantaggi alle aziende di ogni tipo, grandi o piccole che siano.
Ma i siti web non sono tutti uguali!
Ci sono varie tipologie di siti (vetrina, blog, e-commerce etc.</description>
			<content type="html"><![CDATA[<p>Scegliere la giusta tecnologia per il proprio sito web è un passo molto importante.</p>
<p><strong>Oggi essere online è fondamentale</strong>!</p>
<p>Un <strong>sito web</strong> permette di essere <strong>trovati facilmente</strong> da tutti in tutto il mondo, crea <strong>l’immagine aziendale</strong>, permette di <strong>comunicare</strong> velocemente con i propri clienti e molto altro… Insomma, porta sicuramente <strong>vantaggi</strong> alle aziende <strong>di ogni tipo</strong>, grandi o piccole che siano.</p>
<p><strong><em>Ma i siti web non sono tutti uguali!</em></strong></p>
<p>Ci sono varie <strong>tipologie di siti</strong> (vetrina, blog, e-commerce etc.) ma soprattutto esistono <strong>molte tecnologie con le quali realizzarli.</strong></p>
<p><strong>Ai non addetti ai lavori</strong> spesso non interessa sapere come è stato creato il proprio sito, l’importante è che funzioni! <strong>Ma in realtà saperne un po’ di più può fare una grande differenza.</strong></p>
<p><em>Se si fa costruire una casa ci si accerta sempre che vengano utilizzati i materiali migliori!</em></p>
<p>Così dovrebbe essere anche per i siti web. <strong>È bene affidarsi a degli esperti</strong> in materia, web developer o web Agency, ma <strong>è meglio non fidarsi ad occhi chiusi</strong> e insistere per sapere come verrà realizzato il progetto.</p>
<p>Per esempio si parla moltissimo di <strong>WordPress</strong>, una piattaforma fantastica (questo sito è realizzato in WordPress) se utilizzata bene, ma non è l’unica né sempre la migliore.</p>
<h2 id="wordpress-si-ma-come-viene-usato">WordPress si, ma come viene usato?</h2>
<p>WordPress è la <strong>piattaforma più diffusa al mondo</strong> per lo sviluppo di siti web. Consente di ottenere risultati molto buoni con dispendio di tempo molto basso, quindi anche con <strong>un costo minore</strong> ad altre soluzioni.</p>
<p><strong><em>Però c’è modo e modo di usarlo.</em></strong></p>
<p>WordPress è talmente diffuso che <strong>esistono migliaia di temi gratis</strong> e a pagamento per creare un sito internet, e molte volte gli sviluppatori ne approfittano.</p>
<p>Vendere a 2.000 € un sito in WordPress “<em>sviluppato</em>” acquistando un tema da 50 € e configurandolo leggermente è al limite della truffa… Eppure succede, e spesso.</p>
<p>Per questo <strong>è meglio indagare un pochino</strong> su ciò che si sta facendo costruire, chiedere, <em>rompere le scatole</em> per sapere come verrà realizzato il prodotto finale.</p>
<p>Io personalmente quando scelgo di utilizzare WordPress <strong>sviluppo il tema e i plugin dedicati al progetto completamente da zero</strong>. Questo permette di avere <strong>un sito unico, performante e sicuro</strong>, senza andare ad incidere molto sul costo finale. Uno sviluppatore esperto, con le opportune basi, può creare un tema WordPress completo da zero in qualche settimana, non più.</p>
<p>Oltre a questo sito che stai leggendo, posso farti l’esempio di <a href="http://bikeitalia.it/">Bikeitalia.it</a>, un sito veramente enorme, con picchi di <strong>utenti che superano i 4000 nello stesso istante.</strong> Bene, quel sito è basato su <strong>WordPress</strong>, ma il tema l’ho costruito <strong>partendo da zero.</strong></p>
<p><strong>Perciò WordPress non è affatto un male, a patto che venga utilizzato nel modo corretto.</strong> Questo permetterà di avere brutte sorprese, come cali di performance o peggio buchi di sicurezza.</p>
<h2 id="javascript">Javascript</h2>
<p>Oggi esistono anche moltissimi <strong>framework Javascript</strong> che permettono di creare siti web moderni, <strong>leggeri e velocissimi!</strong></p>
<p>Si possono usare React, Angular o Vue, oppure <strong>Gatsby</strong>, un framework basato su React che consente la creazione di siti web meravigliosi in poco tempo. In questo caso però <strong>la gestione dei contenuti sarà completamente diversa, spesso più complicata.</strong></p>
<p>Se però si vuole <strong>puntare tutto sulle performance</strong> allora questa è sicuramente la scelta migliore.</p>
<h2 id="cms-proprietari">CMS Proprietari</h2>
<p>Una terza via è quella dei CMS proprietari. Moltissime web Agency e sviluppatori <strong>hanno i propri sistemi di creazione di siti web.</strong></p>
<p>Queste possono essere <strong>buone</strong> soluzioni o <strong>pessime</strong>, a seconda degli sviluppatori. In ogni caso <strong>essendo sviluppate da zero solitamente permettono un livello di configurazione massimo.</strong></p>
<p>Si può fare tutto ciò che si vuole, senza dover sottostare alle leggi dei CMS e dei Framework.</p>
<p>Occorre però <strong>controllare che questi framework siano al passo con i tempi</strong>, non fermi a 20 anni fa.</p>
<p>Ecco <strong>alcuni consigli</strong> per capire se sono all’altezza dei giorni nostri:</p>
<p>URL SEO Friendly</p>
<p>Se <strong>l’URL della pagina finisce con “.php”, “.asp”, “.html”</strong> o qualcosa del genere significa che non c’è un vero e proprio sistema di routing nel sito, e questo non permette di ottenere buoni URL, apprezzati maggiormente da google.</p>
<p><strong>Esempio di URL buono</strong>: “http://www.nomesito.it/contatti/”</p>
<p><strong>Esempio di URL non buono:</strong> “http://www.nomesito.it/contatti.asp”</p>
<p>Indici negli URL</p>
<p>Se nell’URL vedi codici e simboli matematici, <strong>la sicurezza del sito può essere a rischio</strong>. Molti sistemi “<em>passano</em>” gli indici del database nell’URL, ma questo può essere <strong>usato dagli hacker per fare un attacco direttamente sul db.</strong> Se quindi vedi un url tipo “http://www.nomesito.it/articolo.php?id=45”, allora il sistema <strong>non è molto sicuro.</strong></p>
<h2 id="errori-404">Errori 404</h2>
<p>Un’altra caratteristica dei sistemi sviluppati da zero è che spesso non hanno una <strong>gestione per gli errori,</strong> per esempio il classico 404 Page Not Found. Per scoprirlo è semplice, basta andare su un sito e inserire del testo a caso dopo il dominio, per esempio “http://nomesito.it/ciaociao”. Se c’è una pagina 404 inserita nel sito bene, se si veder l’errore del server, su una pagina bianca e brutta, allora non è il massimo.</p>
<p>Tutte queste piccole cose possono <strong>far fallire i tuoi sforzi per creare un sito web funzionante</strong>, incidendo sull’<strong>indicizzazione di Google</strong>, sulle <strong>performance</strong> e sulla <strong>sicurezza</strong>.</p>
<h2 id="orange-cms">Orange CMS</h2>
<p>Un esempio di CMS proprietario è <strong><a href="/orange">Orange CMS</a></strong>, la mia soluzione sviluppata completamente da zero.</p>
<p>Se vuoi <strong><a href="/orange">puoi darci un’occhiata</a></strong>, entrare nel backend e <strong>creare e visualizzare articoli e pagine</strong>. L’ho già utilizzato per molti siti e i risultati sono stati sempre molto buoni, superiori a WordPress come <strong>performance</strong>, ma tutto dipende dalle funzionalità che si vogliono avere.</p>
<p>Spero che questo articolo ti sia stato d’aiuto per <strong>capire come approcciarti alla creazione del tuo nuovo sito</strong>. Ricorda che la scelta della tecnologia è fondamentale e <strong>ce la si porterà dietro per molto tempo</strong>, quindi occorre farla con metodo e professionalità.</p>
]]></content>
		</item>
		
		<item>
			<title>Sviluppo web su Linux</title>
			<link>https://albertoreineri.it/blog/sviluppo-web-su-linux/</link>
			<pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/sviluppo-web-su-linux/</guid>
			<description>Sviluppo software e siti web da più di dieci anni ormai (con una pausa di riflessione in mezzo), ed ho avuto modo di utilizzare sia Windows che Mac che Linux.
Come sistema primario ho quasi sempre utilizzato Windows e MAC, ma durante l’ultimo periodo nel quale ho lavorato a stretto contatto con sistemisti e fatto molto più sviluppo backend che frontend, ho sentito la necessità di passare a qualcosa di più performante per queste attività.</description>
			<content type="html"><![CDATA[<p>Sviluppo software e siti web <strong>da più di dieci anni</strong> ormai (con una pausa di riflessione in mezzo), ed ho avuto modo di utilizzare sia <a href="/blog/miglior-pc-per-sviluppatori-la-mia-esperienza/"><strong>Windows</strong> che <strong>Mac</strong></a> che <strong>Linux</strong>.</p>
<p>Come sistema primario ho quasi sempre utilizzato <strong>Windows</strong> e <strong>MAC</strong>, ma durante l’ultimo periodo nel quale ho lavorato a stretto contatto con <strong>sistemisti</strong> e fatto molto più <strong>sviluppo backend</strong> che frontend, ho sentito la necessità di passare a qualcosa di più <strong>performante</strong> per queste attività.</p>
<h2 id="gli-inizi">Gli inizi</h2>
<p>Ho iniziato la mia carriera come <strong>sviluppatore .net.</strong> Utilizzavo un pc con il meraviglioso <strong>Windows XP</strong>.</p>
<p><strong>Meraviglioso</strong> lo era veramente. <strong>Stabile</strong>, veloce, in grado di fare veramente di tutto.</p>
<p>All’epoca utilizzato Visual Studio e sviluppavo <strong>Gestionali e CRM</strong> per piattaforma <strong>Windows</strong>, quindi ero obbligato a rimanere in ambiente <strong>Microsoft</strong>.</p>
<p>Poi ho iniziato a sviluppare qualche <strong>sito web</strong>, sempre per la stessa azienda. Essendo pratici di .net iniziammo a sviluppare con <strong>ASP</strong>, un linguaggio molto simile al visual basic.</p>
<p>Ricordo che all’epoca <strong>non mi veniva nemmeno in mente l’idea di cambiare sistema operativo</strong>. Linux era ancora alquanto ostico, Mac era carissimo e nessuno dei due permetteva di sviluppare per software per Windows, quindi la questione finiva lì.</p>
<h2 id="il-mio-primo-mac">Il mio primo MAC</h2>
<p>Con i primi soldi risparmiati però decisi di acquistare il mio primo mac: un <strong>macbook white.</strong></p>
<p>Rimasi <strong>affascinato</strong> dall’ambiente apple.</p>
<p>Feci l’acquisto più che altro per utilizzarlo per <strong>registrare musica</strong>, non avevo assolutamente in mente di usarlo per sviluppare.</p>
<p>Ci provai anche all’inizio, ma tutto ciò che ero abituato ad utilizzare non esisteva per MAC. Visaul Studio non era disponibile per MAC e i nostri siti giravano su server Windows, quindi niente da fare.</p>
<p>Mi accontentavo del fantastico <strong>reparto artistico</strong> della mela morsicata. Qua non c’era paragone, i software di disegno, video e musica erano decisamente di un altro livello.</p>
<h2 id="un-periodo-di-pausa">Un periodo di pausa</h2>
<p><strong>Poi ho smesso di programmare per qualche anno.</strong> Ho fatto tutt’altro, mi sono laureato in una materia umanistica ed ho completamente staccato dai computer.</p>
<p>Continuavo ad utilizzare il <strong>MAC come laptop personal</strong>e, ma lo utilizzavo solamente per <strong>università</strong> e <strong>tempo libero,</strong> e qui ho iniziato a <strong>sentire la mancanza di Windows.</strong></p>
<p>La suite di <strong>Office</strong>, la possibilità di trovare migliaia di software per qualsiasi tipo di problema, i <strong>giochi</strong> e molto altro mancavano sul MAC…</p>
<p>Così quando alla fine il Macbook White è morto di vecchiaia (7 anni di buon servizio), <strong>ho acquistato un laptop Windows.</strong></p>
<h2 id="ritorno-a-windows">Ritorno a Windows</h2>
<p>Quando ho comprato il mio attuale laptop <strong>stavo ancora studiando</strong> e non avevo ancora ripreso la carriera da sviluppatore, ma <strong>avevo voglia di tornare a programmare,</strong> a scrivere un po’ di codice, a sviluppare qualcosa da zero.</p>
<p>Così sono andato all’unieuro ed ho acquistato <strong>il laptop con il miglior rapporto qualità prezzo.</strong></p>
<h2 id="riprendere-a-sviluppare">Riprendere a sviluppare</h2>
<p><strong>Un anno dopo ho ricominciato a sviluppare seriamente,</strong> e mi sono trovato benissimo in <strong>Windows</strong>, daltronde era lì che avevo iniziato e mi sentivo a casa.</p>
<p>Grazie a <strong>XAMPP</strong> ho potuto crearmi una mia lamp stack in 5 minuti e iniziare a pacioccare con <strong>WordPress</strong>, <strong>Laravel</strong> e a creare i miei progetti nel modo che preferisco: il <strong>core php</strong>.</p>
<p>Man mano che mi rimettevo al passo con i tempi e imparavo ad utilizzare i nuovi strumenti, mi rendevo sempre più conto che <strong>Windows non era più la scelta ideale per me.</strong></p>
<p>Ormai non creavo più software gestionali, ma applicativi web, e <strong>il web gira su linux.</strong></p>
<p>Ho iniziato ad utilizzare <strong>node js</strong> e svariati tool <strong>javascript</strong> che funzionano da riga di comando, e pian piano ho iniziato a scoprire quanto sia <strong>limitante la PowerShell…</strong></p>
<p>Poi ho ampliato le mie skills da backend developer e qua ho dovuto fare il salto verso un <strong>terminale più performante</strong>, e qua ho scoperto Linux.</p>
<p>Ho iniziato con l’utilizzare <strong>WSL</strong>, ma era tutto un po’ troppo <em><strong>pasticciato</strong></em> per i miei gusti, quindi sono passato a Linux vero e proprio.</p>
<h2 id="larrivo-a-linux">L’arrivo a Linux</h2>
<p><strong>Non è stato un colpo di fulminie.</strong></p>
<p>Ho iniziato a installare ubuntu come macchina virtuale con <strong>Virtualbox</strong> per provare a <strong>smanettare</strong> un pochino con il pinguino.</p>
<p>Il <strong>primo impatto</strong>, forse dovuto anche da tutta una vita passata su altri sistemi, è stato <strong>abbastanza tragico</strong>…</p>
<p>Ogni cosa che volevo fare dovevo <strong>configurarla</strong>, c’era ben poco che funzionava da subito, e per un po’ ho abbandonato l’idea di linux.</p>
<p>Poi un poco per volta mi ci sono <strong>riavvicinato</strong>, cercando di <strong>adattare il mio modo di pensare a questo sistema</strong>, e tutto è cambiato.</p>
<p>Il trucco sta nello <strong>smettere di volere che Linux assomiglia Windows o a Mac Os,</strong> ma cercare di capire ciò che realmente è, allora si possono apprezzare le sue infinite qualità.</p>
<p>Installare librerie, gestire componenti, utilizzare software da riga di comando, <strong>è tutto molto più <em>easy</em> su linux</strong>, tutto funziona al primo colpo.</p>
<p>Configurare correttamente Vagrant su Windows ha richiesto molto più tempo che su Ubuntu, e così molto altro.</p>
<p>Il più delle volte basta <strong>lanciare un comando da terminale e <em>voilà</em>, tutto funziona alla perfezione</strong>.</p>
<p>Come sviluppatore da ora in avanti penso che <strong>utilizzerò solamente più distro linux</strong>, lasciandomi una partizione con Windows nel caso dovessi fare lavori particolari con Photoshop (per il momento sostituito felicemente con pixlr) o con altro software disponibile solo per Windows.</p>
<p>Oltre all’essere migliore dal punto di vista di uno sviluppatore c’è anche tutta la questione dell’<strong>open source</strong> dietro, del più grande progetto comunitario della storia, della <strong>contrapposizione alle multinazionali,</strong> della <strong>lotta all’obsolescenza programmata dei laptop</strong>, e motlo altro, ma non è questo il momento di trattare questi temi.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Da sviluppatore suggerirei a chiunque di <strong>passare a Linux</strong> (tranne a chi sviluppa per iOs o specificatamente per Windows). Certo <strong>l’inizio non è facile,</strong> occorre smanettarci un po’, sbatterci la testa qualche volta, ma una volta entrati nel giusto <em>mood</em> <strong>tutto scorre semplicemente e velocemente.</strong></p>
<p>Per il momento mi sto trovando molto bene con <strong><a href="https://www.ubuntu-it.org/">Ubuntu</a></strong>, perché mi piace <strong>Gnome</strong>. Ho provato altre distro ma alla fine non c’è molta differenza, tutto può essere installato su ogni distro, perciò sono andato per Ubuntu per la sua <strong>stabilità</strong>.</p>
<p>Lo sto utilizzando come <strong>sistema primario da un paio di mesi</strong> e penso che rimarrà tale per molto tempo. Così potrò <strong>finalmente sentirmi libero dal marketing pressante di Apple,</strong> che se devo essere sincero è una tentazione continua, ma finirebbe per farmi diventare schiavo della mela… Si sa che se compri un Mac poi vuoi un iPhone, poi un iPad e un Apple Watch e alla fine usi sempre le solite 3 app…</p>
<p>Anche i <strong>Laptop Windows</strong> ormai diventano sempre più <strong>belli</strong> e tentatori, con hardware che sembra invecchiare sempre più velocemente. Certo se metti un i7 in un ultrabook senza sistema di raffreddamento o fondi il pc o lo castri e lo fai diventare un i3, alla fine è tutto marketing…</p>
<p>Con <strong>Linux</strong> invece puoi prendere un <strong>i5</strong> di qualsiasi generazione, buttarci sopra un <strong>SSD</strong> e <strong>8Gb</strong> di RAM e vai tranquillo per anni, senza problemi di cali di prestazioni e altro.</p>
<p>Certo c’è il problema dell’<strong>autonomia della batteria</strong>, che su linux non è così ben ottimizzata… Ma alla fine uso <strong>Linux per lavoro</strong>, collegato alla corrente, quando voglio chillare sul divano posso utilizzare Windows e godermi qualche ora in più lontano dai cavi.</p>
]]></content>
		</item>
		
		<item>
			<title>CMS, Framework o Core Language?</title>
			<link>https://albertoreineri.it/blog/cms-framework-o-core-language/</link>
			<pubDate>Wed, 09 Oct 2019 21:26:11 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/cms-framework-o-core-language/</guid>
			<description>CMS, Framework, Core Language… Al giorno d’oggi quando ci si approccia ad un nuovo progetto abbiamo la possibilità di utilizzare degli strumenti molto avanzati che ci permettono di velocizzare e facilitare il lavoro.
I CMS hanno sempre più successo, pensa che si dice che la metà dei siti mondiali sono creati con WordPress (ma è un dato che cambia spesso…). Anche i framework oggi vanno alla grande e sono sempre più avanzati e sofisticati.</description>
			<content type="html"><![CDATA[<p>CMS, Framework, Core Language… Al giorno d’oggi quando ci si approccia ad un nuovo progetto abbiamo la possibilità di utilizzare degli <strong>strumenti molto avanzati</strong> che ci permettono di <strong>velocizzare e facilitare il lavoro</strong>.</p>
<p>I <strong>CMS</strong> hanno sempre più successo, pensa che si dice che la metà dei siti mondiali sono creati con WordPress (ma è un dato che cambia spesso…). Anche i <strong>framework</strong> oggi vanno alla grande e sono sempre più avanzati e sofisticati.</p>
<p>E il buon vecchio <strong>codice scritto a mano</strong>? Esiste ancora?</p>
<p>Ma andiamo con ordine. Proverò ad analizzare una per una queste tre opzioni evidenziando pregi e diffetti, e infine vi dirò la mia a riguardo.</p>
<h2 id="1-cms">1. CMS</h2>
<p>I <strong>Content Management System</strong> (<strong>CMS</strong>) consentono di gestire i contenuti di un sito<strong>senza possedere conoscenze di programmazione</strong>. In pratica offrono un’interfaccia tramite la quale scrivere articoli e pagine quasi come se si stesse scrivendo su Word. Il CMS si occuperà di tradurre questa pagina in linguaggio <strong>HTML</strong> in modo che possa essere visibile da un browser.</p>
<p>I CMS di oggi, in particolare <strong><a href="https://it.wordpress.org/">WordPress</a></strong>, possono <strong>velocizzare moltissimo</strong> la creazione di un sito web. Esistono addirittura <strong>plugin</strong> per creare la grafica del sito <strong>senza dover mai scrivere nemmen una riga di HTML</strong>.</p>
<p>Sono la soluzione perfetta per <strong>creare blog</strong> (il motivo per cui sono stati cerati), ma possono essere utilizzati anche per siti vetrina, landing page e progetti a <strong>basso budget</strong>.</p>
<p>Possono contare su un <strong>numero enorme di plugin</strong>, che semplificano la vita agli sviluppatori fornendo dei servizi già confezionati, solamente da configurare.</p>
<p>Di contro, si potrano dietro un sacco di <strong>dipendenze non sempre utili.<strong>Specialmente nell’utilizzo di</strong> plugin occorre stare molto attenti</strong> oppure si rischia di rendere la pagina molto pesante e <strong>rallentare</strong> notevolmente le prestazioni del sito.</p>
<p><em>Personalmente non sono un grandissimo fan dei CMS, ma riconosco che se utilizzati per il motivo per il quale sono stati creati allora sono fantastici. Per <strong>un blog <strong>a mio avviso</strong> non c’è soluzione migliore</strong>. <a href="/blog/creare-un-tema-wordpress-da-zero-parte-1/">Creare un tema da zero</a> non è molto difficile e in breve tempo si può costruire una piattaforma aggiornabile molto velocemente.</em></p>
<h2 id="2-framework">2. FRAMEWORK</h2>
<p>I Framework sono molto diversi dai CMS e non vanno mai accostati. <strong>Se un CMS ci consegna la pappa pronta, un framework si limita ad apparecchiarci tavola.</strong></p>
<p>I Framework<strong>offrono una serie di librerie</strong> che permettono di velocizzare lo sviluppo di un progetto, ma <strong>non sostituiscono il lavoro del programmatore</strong>. Per poter utilizzare un framework sono <strong>richieste conoscenze approfondite</strong> del linguaggio con cui il framework è scritto.</p>
<p>Questa è un’ottima soluzione per <strong>progetti medio/grandi</strong>. Tutti i framework offrono un <strong>ambiente di lavoro ben organizzat</strong>o, riducendo la possibilità di scrivere brutto codice e aumentando la velocità con cui il codice è scritto.</p>
<p>Inoltre <strong>gestiscono molte questioni legate alla sicurezza</strong>, togliendole dal pensiero dello sviluppatore, che potrà impegnarsi solemente nello sviluppo del progetto.</p>
<p>Personalmente mi piace molto <strong>Laravel</strong>. Veloce, sicuro e ordinato. Poi è scritto in PHP, che è il linguaggio che uso maggiormente al momento.</p>
<p>Nel prossimo futuro però ho intenzione di studiarmi approfonditamente <strong>Django</strong>, che sembra andare alla grande ed essere molto più veloce di Laravel, ma vedremo cosa mi riserverà il futuro…</p>
<h2 id="3-linguaggio-puro">3. LINGUAGGIO PURO</h2>
<p>Una terza via per realizzare i propri progetti online è quella di <strong>fare tutto da zero.</strong></p>
<p>Certo <strong>può sembrare stupido</strong> partire da zero quando esistono già gli strumenti sopra elencati, <strong>ma può avere i suoi vantaggi.</strong></p>
<p>Se uno sviluppatore conosce <strong>molto bene</strong> un linguaggio, può <strong>costruirsi un suo framework e un suo CMS personale</strong>. Non si tratta quindi di “<em>reinventare la ruota</em>” ogni volta, ma di farlo una volta sola e riutilizzarla in seguito. Cerco questo <strong>ha sicuramente degli svantaggi, in termini di sicurezza e si scalabilità, ma ha anche molti vantaggi, primo su tutti la velocità.</strong></p>
<p>Il core PHP, se ben scritto, è molto più veloce di Laravel.</p>
<p>Certo in questo modo <strong>occorrerà gestire tutti i problemi da soli,</strong> senza pensare che ci pensi un programma già fatto, ma uno sviluppatore è pur sempre uno sviluppatore, e questo è il suo mestiere.</p>
<p>Tempi e budget sono sempre un problema, per questo il linguaggio puro è spesso bistrattato a favore di CMS o framework, ma laddove è possibile può essere anche questa una soluzione.</p>
<h2 id="la-mia-opinione">LA MIA OPINIONE</h2>
<p>Fra CMS, Framework e Core language io utilizzo tutti e tre i metodi. Negli anni ho creato un mio framework e un mio CMS personale, che mi permettono di <strong>gestire i progetti al 100%</strong>, <strong>potendo personalizzare ogni minima parte di back-end, front-end e UX in maniera molto veloce.</strong> Certo però <strong>ci è voluto del te</strong>mpo per realizzarli e ce ne vuole di tanto in tanto per <strong>aggiornarli</strong> e restare al passo con i tempi, ma in questo modo sono in grado di gestire tutto quello che faccio, <strong>sono il vero “padrone” del mio progetto.</strong></p>
<p>A volte però è più semplice utilizzare un CMS o un framework, <strong>dipende sempre dal tipo di progetto che vogliarmo realizzare.</strong></p>
<p>In termini di <strong>velocità</strong>, se si scive buon codice, nulla batte il <strong>linguaggio core</strong>. In temini di <strong>scalabilità</strong>, se molte persone lavorano ad uno stesso progetto, se è necessario avere un alto livello di sicurezza e se si devono gestire relazioni di database complicate, allora una giusta soluzione può essere l’utilizzo di un <strong>framework</strong>.</p>
<p>Infine per un <strong>blog</strong> o per semplici siti con basso budget può essere utilizzato un <strong>CMS</strong>, che sarà però sicuramente più lento delle soluzioni precedenti, ma che si occuperà lui di molte problematiche togliendo un peso allo sviluppatore.</p>
<p>Questo è quello che ho notato utilizzando questi strumenti. Voi cosa ne pensate? Siete super fan di WordPress e quindi snobbate alla grande le altre opzioni o scrivete ancora codice?</p>
<p>Come scegliete fra CMS, Framework e core language?</p>
<p>Fatemelo sapere nei commenti</p>
<p>Buon codice a tutti</p>
]]></content>
		</item>
		
		<item>
			<title>Gulp.js in un tema WordPress</title>
			<link>https://albertoreineri.it/blog/gulp.js-in-un-tema-wordpress/</link>
			<pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/gulp.js-in-un-tema-wordpress/</guid>
			<description>Da qualche tempo sto lavorando su progetti abbastanza grandi e non è sempre facile riuscire a gestire il tutto senza perdersi nei migliaia di file e cartelle contenuti nel progetto.
L’organizzazione del codice è una parte fondamentale per lo sviluppo di software, che sia web, desktop o mobile.
Fortunatamente oggi possiamo utilizzare degli strumenti in grado di aiutarci nel processo di sviluppo e gestione del progetto.
Uno di questi è Gulp.</description>
			<content type="html"><![CDATA[<p>Da qualche tempo sto lavorando su <strong>progetti abbastanza grandi</strong> e non è sempre facile riuscire a gestire il tutto senza perdersi nei <strong>migliaia di file e cartelle</strong> contenuti nel progetto.</p>
<p><strong>L’organizzazione del codice</strong> è una parte fondamentale per lo sviluppo di software, che sia web, desktop o mobile.</p>
<p>Fortunatamente oggi possiamo utilizzare degli strumenti in grado di <strong>aiutarci nel processo di sviluppo</strong> e gestione del progetto.</p>
<p>Uno di questi è <strong>Gulp.js!</strong></p>
<h2 id="cosè-gulpjs">Cos’è Gulp.js</h2>
<p>Gulp è un <strong>task runner</strong>, cioè un programma che permette di <strong>automatizzare una serie di operazioni</strong> ripetitive e costanti, come minificare codice CSS e JS, effettuare refresh ad ogni salvataggio, sincronizzare pagine web, ottimizzare le immagini e molto altro.</p>
<p><em><strong>Per semplificare</strong></em> una volta impostato correttamente Gulp all’interno del mio progetto, ogni volta che salvo un file in automatico Gulp fa un check sull’operazione appena effettuata (il salvataggio) ed agisce di conseguenza, in questo caso fa un refresh del browser.</p>
<p>Se invece modifico un file CSS, al salvataggio Gulp minimizzerà il file e farà il refresh del browser!</p>
<p>Prova a pensare in un progetto che richiede mesi di sviluppo, poter evitare di <em>refresshare</em> il browser ogni volta, compilare i file SASS, ottimizzare le immagini etc. permette agli sviluppatori di <strong>risparmiare moltissimo tempo</strong>, o perlomeno concentrarsi su altro piuttosto che su azioni banali e ripetitive!</p>
<h2 id="gulp-e-wordpress">Gulp e WordPress</h2>
<p>Il bello di Gulp è che può essere utilizzato in <strong>qualsiasi tipo di progetto</strong>, anche durante lo sviluppo di un <strong>tema</strong> o <strong>plugin</strong> per <strong>WordPress</strong>, andando a <strong>velocizzare</strong> molto i tempi di programmazione!</p>
<p>Se vuoi installare ed <strong>iniziare</strong> ad utilizzare Gulp ti consiglio questo articolo: <a href="https://css-tricks.com/gulp-for-beginners/">https://css-tricks.com/gulp-for-beginners/</a> . Io ho iniziato da qui!</p>
<h2 id="il-mio-gulp-per-wordpress">Il mio Gulp per WordPress!</h2>
<p>Se vuoi una <strong>base di partenza</strong> per configurare <strong>Gulp</strong> nel tuo progetto puoi guardare sul <a href="https://github.com/albertoreineri/">mio profilo github</a>, ho inserito <a href="https://github.com/albertoreineri/gulp-for-wordpress">il mio file</a> di <strong>configurazione base per Gulp in WordPress.</strong></p>
<p>Nel mio ultimo progetto tramite <strong>Gulp</strong> ho effettuato queste <strong>automazioni</strong>:</p>
<ul>
<li>Effettuare un <strong>refresh</strong> ad ogni modifica di qualsiasi file</li>
<li>Ottimizzare le <strong>immagini</strong></li>
<li>Unire tutti i file <strong>SCSS</strong> in uno solo, compilarlo e minificarlo</li>
<li>Unire tutti i file <strong>JS</strong> in uno solo e minificarlo</li>
</ul>
<p>Per poter utilizzare <strong>Gulp</strong> occorre sdoppiare la cartella con le risorse del sito. Una sarà la cartella di sviluppo, solidamente chiamata “<strong>src</strong>“, l’altra sarà quella che verrà pubblicata, chiamata “<strong>assets</strong>“</p>
<p>Su github puoi trovare il mio file di configurazione per gestire i task <strong>Gulp all’interno di un tema WordPress.</strong></p>
<p>Per <strong>iniziare</strong> ad utilizzarlo devi solamente copiare il mio gulpfile.js all’interno del tuo tema e dare questo comando dalla CLI:</p>
<pre tabindex="0"><code>npm install --save-dev gulp gulp-imagemin gulp-uglify gulp-sass browser-sync del gulp-concat gulp-clean
</code></pre><p>Ora non ti resta che <strong>modificare la riga 3</strong> del file inserendo il path del tuo progetto WordPress.</p>
<p>Spero di essere riuscito ad invogliarti a <strong>utilizzare questo strumento.</strong> Sebbene sia un po’ complicato da configurare, sono sicuro che una volta che l’avrai capito a fondo <strong>non potrai più farne a meno!</strong></p>
<p>Fammi sapere cosa ne pensi nei <strong>commenti</strong> e <strong>buon codice!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>Come scegliere un Framework</title>
			<link>https://albertoreineri.it/blog/come-scegliere-un-framework/</link>
			<pubDate>Sat, 14 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/come-scegliere-un-framework/</guid>
			<description>Oggi lo sviluppo “from scratch” è sempre meno utilizzato.
Budget più bassi e tempi di lavoro più stretti hanno costretto la maggior parte degli sviluppatori a partire da una base già disponibile per iniziare a creare i loro progetti.
Io personalmente amo ancora sviluppare from scratch, ma vivendo nel mondo di oggi e non potendo passare le notti a scriver codice ho dovuto adattarmi al mondo attuale e iniziare ad utilizzare anch’io alcuni framework.</description>
			<content type="html"><![CDATA[<p>Oggi lo sviluppo “<em>from scratch</em>” è sempre meno utilizzato.</p>
<p><strong>Budget più bassi e tempi di lavoro più stretti</strong> hanno costretto la maggior parte degli sviluppatori a <strong>partire da una base già disponibile</strong> per iniziare a creare i loro progetti.</p>
<p>Io personalmente amo ancora sviluppare <em>from scratch</em>, ma vivendo nel mondo di oggi e non potendo passare le notti a scriver codice ho dovuto adattarmi al mondo attuale e iniziare ad utilizzare anch’io alcuni framework.</p>
<p>Per alcuni potrebbero essere consigli banali, ma molte volte quando ci si trova davanti alla scelta fra <strong><a href="https://angular.io/">angular</a></strong>, <a href="https://vuejs.org/"><strong>vue</strong></a> o <a href="https://it.reactjs.org/"><strong>react</strong></a> oppure <a href="https://laravel.com/"><strong>laravel</strong></a> o <a href="https://codeigniter.com/"><strong>codeigniter</strong></a> etc. la decisione può essere ardua.</p>
<h2 id="premessa">Premessa</h2>
<p>Prima di iniziare a sviluppare i vari punti dell’articolo vi ricordo una massima generale: <strong>non si può utilizzare bene un framework senza conoscere il linguaggio in cui è scritto</strong>.</p>
<p>Non potrò usare bene bootstrap se non conosco il CSS, nè laravel se non conosco il php nè react senza javascript. In questo mestiere <strong>avere solide basi</strong> fa veramente la differenza fra il copiare codice da stackoverflow e scriverlo sapendo esattamente cosa si sta facendo, il perché e le ripercussioni generali sul progetto.</p>
<h2 id="a-cosa-serve-un-framework">A cosa serve un framework?</h2>
<p>La prima e più ovvia domanda dovrebbe essere: “<strong><em>Cosa dovrebbe fare il framework?</em></strong>“. Purtroppo sovente questa domanda viene ignorata.</p>
<p>L’utilizzo di un <strong>framework creato per soddisfare uno scopo specifico</strong> è più semplice rispetto all’adattarne un altro alle nostre esigenze.
Utilizzare jQuery per manipolare le strutture di dati non è sicuramente la scelta migliore da fare.
Pertanto devi avere ben chiaro in mente l’obiettivo finale per poter effettuare la scelta giusta.</p>
<h2 id="4-caratteristiche-per-scegliere-un-framework">4 caratteristiche per scegliere un framework</h2>
<p>Voglio provare ad indicare <strong>4 caratteristiche importanti</strong> da tenere presente quando ci si appresta alla scelta di un nuovo framework:</p>
<ul>
<li>Tempo</li>
<li>Proprietà e caratteristiche tecniche</li>
<li>Il coinvolgimento della community</li>
<li>Conseguenze della scelta</li>
</ul>
<p>Queste sono <strong>le quattro chiavi</strong> per poter effettuare una buona scelta.</p>
<p>Ovviamente esistono <strong>pregi e difetti</strong> per ogni framework, ma tenendo a mente questi quattro punti si può prendere una decisione corretta.</p>
<h3 id="tempo">Tempo</h3>
<p><em>In un mondo sempre di corsa, il tempo è cruciale.</em></p>
<p>Il <strong>fattore tempo</strong> è molto importante nella scelta di un framework. Perché? Perché senza <strong>tempo per studiarlo, testarlo e svilupparlo</strong> è inutile pensare di poterlo utilizzare.</p>
<p>Spesso abbiamo <strong>poco tempo per consegnare un progetto</strong> e introdurre un nuovo framework causerà quasi sicuramente dei ritardi. Pertanto, in termini di pianificazione anticipata sui tempi, dobbiamo verificare la <strong>quantità di codice</strong> che questo framework ci farà scrivere. Non solo il <strong>tempo effettivo</strong> che impiegheremo per scriverlo, ma anche <strong>quanto sarà complesso</strong> il codice che tu e il tuo team dovrete scrivere in quanto causerà anche una perdita non minima di tempo.</p>
<p>Il livello di complessità influisce anche su quanto sarà <strong>gestibile</strong>.
Quindi <strong>più scrivi codice, più diventa difficile supportarlo</strong> in seguito.</p>
<p>Ho trovato online questa simpatica regola di base della programmazione:</p>
<p><em>e = mc² (</em> <em>errors</em> <em>= more code ^ 2)</em></p>
<h3 id="proprietà-e-caratteristiche-tecniche">Proprietà e caratteristiche tecniche</h3>
<p>La scelta di un framework può essere influenzata da <strong>aspetti tecnici</strong>, dalle parole della <strong>community</strong> e da ciò che è possibile trovare sulla <strong>documentazione</strong> del framework.</p>
<p>Non lasciarti ingannare da quel che leggi nei forum. Il modo migliore per sapere se ciò di cui si parla è reale è semplice: <strong>testare</strong>.</p>
<p>Tuttavia, come sottolineato in precedenza, a causa del <strong>tempo limitato</strong>, testare un framework potrebbe essere un lusso che non possiamo permetterci, quindi cerchiamo di <strong>estapolare la caratteristica tecnica più importante</strong> dalle informazioni disponibili.</p>
<p>Il framework è adatto alla struttura del progetto che abbiamo o che vorremmo implementare? <strong>L’uso di un framework progettato per un compito specifico è più semplice dell’adattamento di uno ai nostri bisogni.</strong></p>
<p>Sarà meglio in termini di <strong>performance</strong>? Inutile orientarsi verso un framework lento sai da sviluppare che poi in esecuzione.</p>
<p>Se stiamo scegliendo un framework front-end, è importante verificare la <strong>compatibilità</strong> tra browser.</p>
<p>Infine come hi detto già nella premessa di quest’articolo devi <strong>conoscere le basi</strong>: per essere in grado di scegliere correttamente una struttura devi conoscere le basi e i requisiti per comprenderla appieno.
Quando scegli un framework ovviamente devi <strong>sapere di cosa stai parlando</strong>. Con questo intendo che devi sapere qual è lo scopo di un framework. Se non disponi delle conoscenze di base, sarà inutile apprendere un framework poiché non sarai in grado di capirlo completamente.</p>
<p><strong><em>Se non sei preparato, impara prima le basi.</em></strong></p>
<h3 id="il-coinvolgimento-della-comunità">Il coinvolgimento della comunità</h3>
<p>Cosa rende degno di considerazione un framework? <strong>Le persone che lo usano</strong>. Ok, ma come possiamo <strong>capire se un framework ha una community attiva?</strong></p>
<p>Esistono <strong>diversi fattori</strong> che possono farci comprendere il coinvolgimento della community per una determinata tecnologia:</p>
<ul>
<li>Quante persone ne parlano sul web?</li>
<li>Quante persone continuano a usarlo?</li>
<li>Con quale frequenza lo sviluppatore risponde alle segnalazioni di problemi?</li>
<li>Quante richieste pull?</li>
</ul>
<p>Queste sono solo alcune delle domande che possono darti alcune informazioni sul coinvolgimento della comunità.</p>
<h3 id="quali-sono-i-vantaggi-di-un-framework-affollato">Quali sono i vantaggi di un framework “affollato”?</h3>
<p>Una comunità attiva aumenta considerevolmente la <strong>documentazione</strong> su una determinata tecnologia, <strong>riducendo così il tempo</strong> necessario per la ricerca e l’apprendimento.</p>
<p>Inoltre, se l’azienda in cui lavori sta crescendo, sarà molto più facile <strong>trovare collaboratori</strong> che abbiano familiarità con il framework data la sua popolarità.</p>
<p><strong>Non sempre però una community attiva è abbastanza</strong> per dirigere la nostra scelta. Dopo aver appurato l’esistenza di una buona community occorre controllare <strong>quante di queste persone</strong> (meglio se grandi aziende) <strong>utilizzato effettivamente questa tecnologia in ambiente di produzione!</strong></p>
<p>Scoprire chi utilizza una determinata tecnologia è tutt’altro che facile, ma spesso i creatori stessi <strong>menzionano le aziende</strong> che utilizzano il framework e, nel caso, controllano come implementano questa tecnologia e per quale scopo.</p>
<p>Di solito i team di sviluppo di queste tecnologie rilasciano una <strong>tabella di marcia sui loro piani futuri</strong>, quindi controlla cosa <strong>hanno in mente</strong>.</p>
<h3 id="conseguenze-della-scelta">Conseguenze della scelta</h3>
<p>Prima di finalizzare la scelta, dovremmo prenderci un momento per pensare alle <strong>possibili conseguenze</strong> di ciò che la scelta del nuovo framework potrebbe comportare nell’ambiente di sviluppo.</p>
<p>Ricorda che <strong>se lavori in gruppo,</strong> per altri potrebbe essere più difficile imparare un nuovo framework.</p>
<p><strong>Quanto pensi che potrebbero impiegare per familiarizzarsi con esso</strong> e quanto tempo pensi che possano dedicare all’apprendimento? Dovrebbero sapere qualcos’altro prima di studiare?</p>
<p><strong>La scelta deve essere ponderata e discussa</strong> più volte per vedere soprattutto cosa pensa <strong>la squadra</strong> al riguardo.</p>
<h2 id="conclusioni">Conclusioni</h2>
<p>Non esiste una regola aurea che garantisce al cento per cento la scelta giusta. Solo la pratica e il tempo potrà farcelo capire.</p>
<p>In questo articolo spero di essere riuscito a darti spunti dai quali partire per affrontare la tua scelta, <strong>ma ricorda</strong>:</p>
<p><em>Non si tratta di trovare il framework migliore, si tratta di trovare il framework <strong>giusto</strong>.</em></p>
]]></content>
		</item>
		
		<item>
			<title>Configurare il PC per Sviluppo Web con Software Free</title>
			<link>https://albertoreineri.it/blog/configurare-il-pc-per-sviluppo-web-con-software-free/</link>
			<pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/configurare-il-pc-per-sviluppo-web-con-software-free/</guid>
			<description>Vediamo quali software free possiamo utilizzare per lo sviluppo web.
Ti stai appassionando al mondo della programmazione e vuoi iniziare a sviluppare qualche sito web o una piccola web app? Complimenti! Benvenuto nel fantastico mondo del Web Development!
Per cominciare dovrai installare i programmi necessari per scrivere i tuoi primi codici e riuscire a “far girare” ciò che hai scritto. In questo articolo vedremo rapidamente di quali software avremo bisogno.</description>
			<content type="html"><![CDATA[<p>Vediamo quali software free possiamo utilizzare per lo sviluppo web.</p>
<p>Ti stai appassionando al mondo della programmazione e vuoi iniziare a <strong>sviluppare qualche sito web o una piccola web app</strong>? Complimenti! Benvenuto nel fantastico mondo del <strong>Web Development</strong>!</p>
<p>Per cominciare dovrai installare i <strong>programmi necessari</strong> per scrivere i tuoi primi codici e riuscire a “far girare” ciò che hai scritto. In questo articolo vedremo rapidamente di quali software avremo bisogno.</p>
<p>Lasciamo da parte l’eterna discussione su quale sistema operativo sia migliore per una determinata cosa, sulle mode che portano a scegliere un pc rispetto ad un altro e cose di questo genere. Tutti i software presenti in questo articolo sono disponibili sia per <strong>Windows</strong> che per <strong>Mac</strong> che per <strong>Linux</strong>.</p>
<p>Vediamo allora <strong>cosa ci serve</strong> per poter sviluppare siti web e web app</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/243UeRVMtFI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="1-browser">1. BROWSER</h2>
<p>Se abbiamo intenzione di fare un po’ di sviluppo web, il <strong>software fondamentale</strong> che dobbiamo avere è un browser. Tutti i sistemi operativi posseggono un browser pre-installato, ma il mio consiglio è quello di utilizzare <a href="https://www.google.com/intl/it/chrome/"><strong>Google Chrome</strong></a>. Questo browser è molto rapido ed offre una serie di <strong>strumenti per sviluppatori</strong> molto utile.</p>
<p>Non mi dilungo su questo punto perché probablimente stai già utilizzando Chrome oppure sai perfettamente cos’è, quindi andiamo oltre e vediamo altri software free per sviluppo web.</p>
<h2 id="2-editor-di-testo">2. EDITOR DI TESTO</h2>
<p>Per poter fare sviluppo web è necessario <strong>scrivere del codice</strong>, e per scrivere il codice occorre avere un <strong>editor di testo</strong>. E’ possibile scrivere codice anche con il blocco note, ma non è certo una soluzione ottimale.</p>
<p>Il mio consiglio è di utilizzare <strong><a href="https://code.visualstudio.com/">Visual Studio Code</a></strong>, un software gratuito della Microsoft veramente fantastico!</p>
<p>Ricco di funzionalità ed estensioni, permette di gestire molto bene i progetti, anche grazie al <strong>terminale</strong> interno all’interfaccia. </p>
<p>Questo è sicuramente il <strong>programma esseziale</strong> per qualsiasi programmatore</p>
<h2 id="3-server-locale">3. SERVER LOCALE</h2>
<p>Per poter “<strong><em>far girare</em></strong>” i nostri progetti sul nostro pc, è nevessario installare un server locale per far sì che funzionino.</p>
<p>Io utilizzo da anni <a href="https://www.apachefriends.org/it/index.html"><strong>XAMPP</strong></a>, un software anch’esso gratuito che contiene in sè anche <strong>MySQL</strong>. Software utilissimo e semplice da utilizzare, permette in pochi minuti di configurare un server locale e iniziare il proprio progetto in <strong>PHP</strong>.</p>
<p>Fondamentale per la creazione di siti in <strong>WordPress</strong>, per progetti in framework PHP come <strong>Laravel</strong> o <strong>CodeIgniter</strong> oppure anche per un lavori in <strong>Core PHP</strong>.</p>
<h2 id="4-ftp-client">4. FTP CLIENT</h2>
<p>Una volta terminato il nostro sito dobbiamo <strong>caricarlo online</strong>! </p>
<p>Per fare questo è possibile utilizzare un <strong>Client FTP</strong> che ci permette di <strong>connetterci all’hosting</strong> e caricare i file del sito.</p>
<p>Il software più utilizzato per questo compito è sicuramente <a href="https://filezilla-project.org/"><strong>FileZilla</strong></a>. Gratis, semplice ed intuitivo, è la scelta giusta per “tirare su” il tuo sito in maniera semplice, rapida e veloce.</p>
<h2 id="5-grafica">5. GRAFICA</h2>
<p>Infine non dimentichiamo che ogni progetto ha in sè anche una parte grafica! </p>
<p>Per <strong>sviluppare i layout</strong> dei vostri progetti vi consiglio l’utilizzo di <a href="https://www.figma.com/"><strong>Figma</strong></a>. Uso da un po’ di tempo questo software e sono veramente soddisfatto, in più è <strong>completamente gratuito</strong>! Basterà inscriversi con l’account google e voilà! Potete iniziare a creare fantastici layout web ma non solo!</p>
<p>Tutti questi software sono <strong>free</strong> e <strong>cross platform</strong>, il prossimo purtroppo no.</p>
<p>Sto parlando di <a href="https://www.adobe.com/it/products/photoshop.html?gclid=CjwKCAjwtajrBRBVEiwA8w2Q8PvEfIWtLKBGk-wtMLSQEQ1slHQCulhlLxYEG-ScQVPToYcZ2qNQQRoCVa0QAvD_BwE&amp;sdid=8DN85NTV&amp;mv=search&amp;ef_id=CjwKCAjwtajrBRBVEiwA8w2Q8PvEfIWtLKBGk-wtMLSQEQ1slHQCulhlLxYEG-ScQVPToYcZ2qNQQRoCVa0QAvD_BwE:G:s&amp;s_kwcid=AL!3085!3!340641313438!e!!g!!photoshop"><strong>Photoshop</strong></a>, un favoloso software di Adobe che permette di fare tutto ciò che desideriamo con foto e immagini. Sebbene molte di queste cose si possano fare anche con Figma, <strong>non riesco ancora a staccarmi totalmente da questo software</strong>, che rimane l’unico della mia configurazione <strong>a pagamento</strong>…</p>
<p>Se volete provare una valida alternativa esiste <a href="https://www.gimp.org/"><strong>Gimp</strong></a>, che a quanto dicono dovrebbe essere molto potente. Purtroppo avendo iniziato con Photoshop e conoscendolo ormai discretamente bene non mi va di ricominciare da zero ad imparare un nuovo programma… Lascio a voi giudicare!</p>
<p>Questo è <strong>tutto ciò che vi serve</strong>! Ora potete inizare a sbizzarrirvi fra <a href="https://open.spotify.com/show/546eUw3PsRI1HUGbBUeghC"><strong>codice e design</strong></a> e creare i vostri primi progetti!</p>
<p>Grazie per aver letto questo articolo</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Rimuovere Virus da WordPress</title>
			<link>https://albertoreineri.it/blog/rimuovere-virus-da-wordpress/</link>
			<pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/rimuovere-virus-da-wordpress/</guid>
			<description>WordPress è una delle piattaforme più utilizzate la mondo per la creazione di siti web ma a volte può essere facile imbattersi in un virus, ma come si possono rimuovere?
WordPRess permette a chiunque di tirar su un sito internet funzionante in pochissimo tempo e con costi molto bassi.
Questo però significa anche avere moltissimi siti web creati da estranei ai lavori che installato temi e plugin a caso senza sapere realmente cosa stanno facendo… Finché il sito è piccolino e con un numero esigui di utenti non c’è problema, quando invece raggiunge una audience più alta allora la probabilità di essere bersagliati da qualche hacker diventa elevata.</description>
			<content type="html"><![CDATA[<p>WordPress è una delle piattaforme <strong>più utilizzate la mondo</strong> per la <strong>creazione di siti web ma a volte può essere facile imbattersi in un virus, ma come si possono rimuovere?</strong></p>
<p>WordPRess permette a chiunque di <strong>tirar su un sito internet</strong> funzionante <strong>in pochissimo tempo</strong> e con <strong>costi molto bassi.</strong></p>
<p>Questo però significa anche avere <strong>moltissimi siti web creati da estranei ai lavori</strong> che installato temi e plugin <em>a caso</em> senza sapere realmente cosa stanno facendo… Finché il sito è piccolino e con un numero esigui di utenti non c’è problema, quando invece raggiunge una audience più alta allora <strong>la probabilità di essere bersagliati da qualche hacker diventa elevata.</strong></p>
<p>Si stima che almeno <strong>il 30% dei siti web in WordPress abbia delle vulnerabilità.</strong> Se pensiamo che <strong>più di 75 milioni di siti web utilizzano questa piattaforma</strong> allora le vulnerabilità sono moltissime.</p>
<p>Vedremo ora come <strong>mantenere al sicuro il proprio sito WordPress e come eliminare eventuali virus.</strong></p>
<h2 id="mettere-in-sicurezza-wordpress">Mettere in sicurezza WordPress</h2>
<p>WordPress utilizza un sistema molto intelligente di <strong>temi e plugin</strong>, ma occorre <strong>fare attenzione a ciò che si installa.</strong></p>
<p>Esistono alcune <strong>regole fondamentali:</strong></p>
<ul>
<li><strong>Controllo sulla provenienza di temi e plugin</strong></li>
<li><strong>Installare il minor numero di plugin possibili</strong></li>
<li><strong>Avere un buon hosting</strong></li>
</ul>
<h3 id="1-controllo-sulla-provenienza-di-temi-e-plugin">1. Controllo sulla provenienza di temi e plugin</h3>
<p>Ogni volta che si installa qualcosa su un sito in WordPress si va ad inserire del codice sul proprio progetto. Questo codice se ben scritto porterà funzionalità utili e migliorerà il sito, se invece è scritto male o contiene <strong>bug</strong> può causare molti problemi.</p>
<p>Quando si installa qualcosa su WordPress bisogna fare <strong>molta molta attenzione alla fonte.</strong></p>
<p><strong>MAI</strong> installare plugin o temi scaricati da <strong>fonti non chiare.</strong></p>
<p>La cosa migliore è attenersi alla <strong>repository ufficiale di WordPress</strong> oppure ai grandi store garantiti.</p>
<h3 id="2-installare-il-minor-numero-di-plugin-possibili">2. Installare il minor numero di plugin possibili</h3>
<p>Esistono plugin per ogni cosa ormai, ma <strong>ogni plugin è un oggetto in più da gestire e mantenere.</strong></p>
<p>Avere plugin specifici per funzionalità pressoché inutili rischia di portarci <strong>falle nel sistema</strong>, oltre che appesantire inutilmente il sito.</p>
<p>Installare 20 plugin gestiti da sviluppatori diversi aumenta notevolmente il rischio di attacchi. Se uno di questi sviluppatori non corregge un bug oppure viene scoperta una falla, allora è a rischio l’intero sito.</p>
<p><strong><em>Il trucco è questo: “Pochi ma buoni”.</em></strong></p>
<h3 id="3-avere-un-buon-hosting">3. Avere un buon hosting</h3>
<p>Parliamo di hosting e non di server perché la stragrande maggioranza dei siti web è ospitata su hosting condiviso.</p>
<p>Questi servizi sono <strong>migliorati moltissimo</strong> e offrono servizi che in passato erano disponibili solamente sui server dedicati, come accessi <strong>SSH</strong>, <strong>cache</strong> e <strong>sicurezza</strong>.</p>
<p>Poter contare su un buon servizio è molto importante per <strong>proteggersi dagli attacchi e gestirli</strong> nel malaugurato caso in cui si venga infettati.</p>
<h2 id="rimuovere-un-virus-da-un-sito-wordpress">Rimuovere un virus da un sito WordPress</h2>
<p><strong>Non c’è un modo unico per rimuovere un virus,</strong> perché questi agiscono in maniera molto diversa gli uni dagli altri.</p>
<p>Questo complica un pochino le cose… È difficile quindi spiegare come rimuovere un virus in un semplice articolo, ma cercherò di <strong>indicare alcune vie per gestire il problema</strong></p>
<h3 id="1-cercare-backup-precedenti-allattacco">1. Cercare backup precedenti all’attacco</h3>
<p>Se avete un buon hosting sicuramente avrete anche dei <strong>backup giornalieri o almeno settimanali</strong>. La prima cosa da fare è scaricarsi uno si questi backup e tenerlo da parte, per <strong>avere una situazione “</strong><em><strong>pre-virus</strong></em><strong>“.</strong></p>
<p>Se il sito è <strong>statico</strong>, senza sezioni aggiornabili come blog o portfolio allora si può semplicemente ripristinare il backup alla versione pre-attacco e il gioco è fatto.</p>
<p>Se invece il sito ha subito <strong>aggiornamenti</strong> che non si vogliono perdere allora conviene tenersi una copia pre-virus per sicurezza e andare a cercare i file infetti.</p>
<h3 id="2-scansionare-sito-web-con-tool-online">2. Scansionare sito web con tool online</h3>
<p>Esistono molti tool online in grado di analizzare il sito e individuare le criticità.</p>
<p>Si possono anche utilizzare alcuni plugin sviluppati per gestire la sicurezza, come <strong>WordFence</strong> o <strong>Sucuri</strong> e utilizzare il loro scan per analizzare tutti i file sul sito.</p>
<p>Questi non garantiscono un risultato ottimale al 100%, ma è comunque un buon punto di partenza.</p>
<p>Ecco una serie di link utili per effettuare le scansioni:</p>
<ul>
<li><a href="https://wpsec.com/">https://wpsec.com/</a></li>
<li><a href="https://sitecheck.sucuri.net/%E2%80%A8">https://sitecheck.sucuri.net/</a></li>
<li><a href="https://hackertarget.com/wordpress-security-scan/%E2%80%A8">https://hackertarget.com/wordpress-security-scan/</a></li>
<li><a href="https://wprecon.com/%E2%80%A8">https://wprecon.com/</a></li>
<li><a href="https://firstsiteguide.com/tools/free-fsg/wordpress-security-online-scanner/">https://firstsiteguide.com/tools/free-fsg/wordpress-security-online-scanner/</a></li>
</ul>
<p>Se ve la cavate con la CLI potete anche utilizzare <a href="https://wpscan.org/">WP Scan</a>, il software per eccellenza per testare la sicurezza di un sito in WordPress.</p>
<h3 id="disattivare-temi-e-plugin">Disattivare Temi e Plugin</h3>
<p>Per cercare di <strong>isolare</strong> il <strong>virus</strong> può essere utile procedere con la <strong>disattivazione</strong> di temi a plugin.</p>
<p>Se il sito senza plugin e con il tema di default di WordPress funziona allora si possono riattivare uno ad uno e capire dove si trova l’infezione.</p>
<h3 id="copiare-i-file-originali-di-temi-e-plugin">Copiare i file originali di temi e plugin</h3>
<p><strong>ATTENZIONE!!!</strong> Fai molta attenzione nel mettere in pratica questo punto, se non sei esperto potresti fare più danni di quelli già presenti!Se un tema o un plugin è stato infettato una soluzione per rimuovere il virus dal sito WordPress è quella di <strong>sovrascrivere le cartelle contenenti il tema e i plugin</strong> con le versioni scaricate dalle fonti ufficiali.</p>
<p>In questo caso se il virus era presente nella cartella verrà sovrascritto.</p>
<h3 id="analizzare-struttura-wordpress">Analizzare struttura WordPress</h3>
<p>In ultima battuta si può <strong>analizzare la struttura di file e cartelle di WordPress</strong> per controllare che non ci siano file strani, non presenti nell’installazione originale.</p>
<p>Se si trovano file <strong>strani</strong> allora bisogna cancellarli, sempre prestando molta attenzione a ciò che si sta facendo.</p>
<h2 id="conclusione"><strong>Conclusione</strong></h2>
<p>Questi sono alcuni passaggi <strong>generici</strong> da effettuare per controllare lo stato di un sito web.</p>
<p>Purtroppo <strong>ogni virus è differente</strong>, alcuni agiscono sul database, altri direttaemnte nei file di sistema, altri ancora in modi che non ci immaginiamo nemmeno.</p>
<p>In questo articolo ho provato a darti <strong>alcuni consigli di base</strong> da mettere in pratica per provare a rimuovere un virus da un <strong>sito in WordPress.</strong></p>
<p>Se nessuno di questi ha funzionato ti consiglio di <strong>rivolgerti ad un professionista.</strong></p>
<p>Se <strong>hai un sito web hackerato e vuoi una consulenza o un intervento professionale</strong> volto alla rimozione e alla messa in sicurezza del suo sito contattami tramite la pagina <a href="/contatti">contatti</a></p>
]]></content>
		</item>
		
		<item>
			<title>Che cos&#39;è GIT?</title>
			<link>https://albertoreineri.it/blog/che-cos%C3%A8-git/</link>
			<pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/blog/che-cos%C3%A8-git/</guid>
			<description>Git è un fantastico software di controllo versione creato da un programmatore niente male: Linus Torvalds.
CHI È LINUS TORVALDS? Per i pochi che non sanno chi sia questa persona (mi auguro che siano veramente molto pochi…) è il creatore di Linux. Se pensiamo che più della metà del web e la maggioranza degli smartphone funzionano grazie a codice scritto da lui, dobbiamo tutti essergli grati per il suo genio e la sua generosità.</description>
			<content type="html"><![CDATA[<p><strong>Git</strong> è un fantastico software di controllo versione creato da un programmatore niente male: <strong>Linus Torvalds.</strong></p>
<h2 id="chi-è-linus-torvalds">CHI È LINUS TORVALDS?</h2>
<p>Per i pochi che non sanno chi sia questa persona (mi auguro che siano veramente molto pochi…) è il creatore di <strong>Linux</strong>. Se pensiamo che più della metà del <strong>web</strong> e la maggioranza degli <strong>smartphone</strong> funzionano grazie a codice scritto da lui, dobbiamo tutti <strong>essergli grati</strong> per il suo genio e la sua generosità.</p>
<h2 id="ma-torniamo-a-git">MA TORNIAMO A GIT!</h2>
<p>In rete si trovano migliaia di articoli su questo software, ma capire veramente cosa fa per un “<strong>newbie</strong>” non è così semplice.</p>
<p>Proverò a farlo in maniera facile e veloce.</p>
<h2 id="cosè-git">COS’È GIT?</h2>
<p>Git è un software che permette di <strong>tenere traccia</strong> delle modifiche effettuate su un progetto.</p>
<p>La funzione più semplice è quella che permette di <strong>tornare indietro</strong> a una versione precedente del progetto che stiamo realizzando.</p>
<p>Mettiamo caso che stiamo implementando una funzionalità, magari scriviamo un paio d’ore di codice ma ci accorgiamo di aver preso una strada sbagliata. A questo punto, senza un software di controllo versione, dovremmo fare <strong>ctrl+z</strong> all’infinito per cercare il punto esatto a cui vogliamo tornare. E se per caso la cache del nostro IDE si è impallata per qualche motivo e ci troviamo bloccati in un punto nel quale non possiamo andare nè avanti nè indietro?</p>
<p>Anche se fossimo programmatori previdenti e avessimo creato una cartella di backup del software dovremmo comunque nagivare nel file manager, trovare la cartella, rinominarla, spostare e cancellare file etc…</p>
<p><strong>Con Git basta inserire un comando</strong> e il nostro progetto tornerà magicamente come era prima! Fantastico!</p>
<p>Inoltre è possibile tenere aperte <strong>diverse strade di sviluppo</strong>, magari testare una funzionalità da una base e un’altra dalla stessa base per poi decidere qual è la migliore, tutto questo senza creare migliaia di cartelle e sottocartelle che finiranno sicuramente per rendere il tutto molto confusionario.</p>
<p>Con Git è inoltre possibile <strong>caricare il nostro progetto online</strong>, su <strong>GitHub</strong>, una meravigliosa piattaforma di condivisione di codice.</p>
<p>In questo modo possiamo scaricarci il nostro codice da qualsiasi computer in qualsiasi parte del mondo.</p>
<h2 id="git-per-piccoli-progetti">GIT PER PICCOLI PROGETTI</h2>
<p>Certo Git è stato sviluppato per progetti molto grandi, ma è un software talmente<strong>veloce e semplice</strong> (git in USA significa <em>idiota</em>…) che può anche essere utilizzato per piccole cose, per tenere traccia del nostro lavoro, effettuare piccole modifiche oppure fare dei test. Inoltre la possibilità di “spedire” tutto online è molto utile nel caso dovessimo accedere al codice da una nuova postazione!</p>
<h2 id="la-riga-di-comando">LA RIGA DI COMANDO</h2>
<p>Git è un software che funziona tramite <strong>CLI</strong>, la riga di comando.</p>
<p>Se non hai dimestichezza con questo strumento <strong>è l’ora di iniziare</strong> ad impratichirsi. <strong>Non lasciarti spaventare</strong> dall’assenza di icone, grafiche e mouse, in realtà è molto più veloce delle interfacce a cui siamo stati abituati negli utlimi anni!</p>
<p>E poi sei un programmatore no? Il mouse è più che altro un abbellimento per la scrivania, <strong>il lavoro si fa tutto con dieci dita sulla tastiera</strong>!!!</p>
<p>Esiste anche una versione Desktop del software ma quella classica funziona talmente bene che non mi è mai venuto in mente di testarla.</p>
<p>Se lavori in <strong>Windows</strong> (come me!!!) allora puoi scaricare anche <strong>Git Bash</strong>, una riga di comando molto bella creata per facilitare le operazioni di Git.</p>
<p>Prossimamente <a href="/blog/come-usare-git/">scriverò una breve guida dei comandi basilari di Git</a>, così potrai iniziare ad utilizzarlo.</p>
<p>Sono sicuro che non riuscirai più a farne a meno!</p>
<p><em>Buon codice! Ciau!!!</em></p>
]]></content>
		</item>
		
	</channel>
</rss>
