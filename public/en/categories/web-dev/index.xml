<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Web Dev on Alberto Reineri</title>
		<link>https://albertoreineri.it/en/categories/web-dev/</link>
		<description>Recent content in Web Dev on Alberto Reineri</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en</language>
		<lastBuildDate>Sat, 20 Jan 2024 05:00:00 +0000</lastBuildDate>
		<atom:link href="https://albertoreineri.it/en/categories/web-dev/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>New Website</title>
			<link>https://albertoreineri.it/en/blog/new-website/</link>
			<pubDate>Sat, 20 Jan 2024 05:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/new-website/</guid>
			<description>Here&amp;rsquo;s my New Website!
I know, it might seem unconventional. There&amp;rsquo;s no WOW effect as one would expect, at least not in the form of flashy or extravagant animations. It&amp;rsquo;s a simple website, primarily text-based. It might seem like it doesn&amp;rsquo;t fully comply with Google&amp;rsquo;s rules, but in reality, there&amp;rsquo;s more than meets the eye.
Why Such an SEO-Unfriendly Website I decided to make a radical change! Originally, this site was the showcase of my Freelance Web Developer business.</description>
			<content type="html"><![CDATA[<p>Here&rsquo;s my New Website!</p>
<p>I know, it might seem unconventional. <strong>There&rsquo;s no WOW effect</strong> as one would expect, at least not in the form of flashy or extravagant animations. It&rsquo;s a simple website, primarily text-based. It might seem like <strong>it doesn&rsquo;t fully comply with Google&rsquo;s rules</strong>, but in reality, there&rsquo;s more than meets the eye.</p>
<h2 id="why-such-an-seo-unfriendly-website">Why Such an SEO-Unfriendly Website</h2>
<p>I decided to make a radical change! Originally, this site was the <strong>showcase of my Freelance Web Developer business</strong>. In the past, it had vibrant colors, animations, and effects to showcase my skills and attract new clients.</p>
<p>Fortunately, I no longer need to <em>show off</em> that much. This is for various reasons:</p>
<h3 id="no-economic-need-to-find-new-clients">No economic need to find new clients</h3>
<p>At the moment, I find myself in a rather stable situation (<em>as stable as a VAT business can be&hellip;</em>). I have satisfying long-term collaborations and fill my days with programming. I always welcome new clients and projects, even though I recently had to decline some and direct potential clients to other entities! Being a solo Freelancer, I don&rsquo;t have the structure to expand indefinitely, and honestly, I don&rsquo;t want to create it at the moment. For now, I&rsquo;m content with staying solo. However, this means I have to turn down some work. Days have a limited number of hours, and my mind has a limited number of projects it can handle, so for now, I can say I&rsquo;m saturated.</p>
<p>Perhaps in a few years, I&rsquo;ll open up to new possibilities, or I&rsquo;ll strengthen current collaborations even more and quit freelancing altogether&hellip; Who knows&hellip; We&rsquo;ll see how things evolve! There&rsquo;s no point in looking too far ahead; the world is constantly changing, and we must always be ready to adapt!</p>
<h3 id="i-want-a-website-that-represents-me">I want a website that represents me</h3>
<p>My site must be first and foremost <strong>mine</strong>! It may seem obvious, but today, to <em>attract</em> the audience, you have to appear cool, modern, lively, joyful, and then some! In the past, I did it because it was necessary, but in reality, I&rsquo;m not like that&hellip;
I&rsquo;m a rather serious, calm, and composed person. I love silence and tranquility; I don&rsquo;t like things that are too flashy&hellip;</p>
<p>I wouldn&rsquo;t call myself boxed in; I&rsquo;ve always had long hair, dressed casually, and I&rsquo;m quite liberal, but I tend to take things seriously, perhaps too much.</p>
<h3 id="showcase">Showcase</h3>
<p>This site is no longer my showcase, or better to say, its being a showcase is no longer a central factor.
For now, the promotional pages <a href="/services">Services</a> and <a href="/portfolio">Portfolio</a> are still active, but I don&rsquo;t exclude the possibility of removing them in the future and keeping only the blog. Also, I plan to create an Extra section to include what I do outside the web world.</p>
<h3 id="seo">SEO</h3>
<p>However, SEO is indeed present on this site. The Lighthouse tests are very positive, and I expect the indexing to improve. It&rsquo;s true that there are no images, but the content is already widely read, and now the loading times have greatly improved. Only time will tell if all this can work.</p>
<h3 id="exiting-social-media">Exiting Social Media</h3>
<p>As a long-term goal, I would like to use this site as my only online presence.
I&rsquo;ve been fed up with social networks for a long time. They are becoming more and more invasive, and every time I think about what they bring to my life, there are more things they take away from me than what they give me. Therefore, I hope to get out of them soon. I&rsquo;m forced to keep them active because I sometimes use them for work, but I hope to close them shortly and be present online only through this site. If it happens, I&rsquo;ll also create an &ldquo;Extra&rdquo; section to gather some of my curiosities outside of programming.</p>
<h2 id="how-this-site-works">How This Site Works</h2>
<p>I&rsquo;ll start by saying that this site is developed with Hugo, an open-source framework for creating static sites. This allows me to manage it entirely through GitHub. So, I gave up my personal domain and am using <a href="https://albertoreineri.github.io/">albertoreineri.github.io</a>. The only thing I had to give up is the email associated with my personal domain, so I use Gmail. This has never been a problem for my clients over the years, and it saves me from managing domain, DNS, and server for this site. One less job for me!</p>
<p>But how does this particular site work? Well, it&rsquo;s not actually difficult&hellip;
The main thing is that the navbar is moved down, not at the top like on all other sites. This is to make the site more convenient to use, more app-style. If you open it from mobile, you can use the navbar simply with your thumb without stretching it to the top of the screen, but by clicking comfortably at the bottom.</p>
<p>This site is oriented towards a pleasant reading experience. That&rsquo;s why there&rsquo;s only a dark mode. Reading white text on a dark background is more relaxing for the eyes and stresses the mind less.
Also, the structure presents only text without a sidebar or anything else. Sometimes the table of contents is on the right, always to improve content readability. Finally, on scroll, the navbar disappears completely, and the text becomes the only thing on the page to ensure the best possible reading experience.</p>
<p>Scrolling up or reaching the bottom of the page will make the navbar visible again, and you can change pages.</p>
<p>As additional features, there&rsquo;s the possibility to search the site&rsquo;s content and multilingual support, which is still in development but will be online soon.</p>
<h2 id="conclusion">Conclusion</h2>
<p>This is my new site. I don&rsquo;t know how long it will last! As a web developer, I&rsquo;m always looking for new challenges, and the best way to understand a technology is to try it directly. It could be completely different in two months, or I could remain faithful to this approach for years.</p>
<p>In any case, I&rsquo;ll keep you informed on this blog!</p>
<p>See you soon!</p>
<p><em>Alberto</em></p>
]]></content>
		</item>
		
		<item>
			<title>The 9 Best Visual Studio Code Extensions</title>
			<link>https://albertoreineri.it/en/blog/the-9-best-visual-studio-code-extensions/</link>
			<pubDate>Sun, 29 Oct 2023 09:12:22 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/the-9-best-visual-studio-code-extensions/</guid>
			<description>Visual Studio Code (VS Code) has become one of the most popular code editors among developers due to its flexibility and a wide range of available extensions. VS Code extensions offer additional features that can significantly enhance a developer&amp;rsquo;s workflow. In this article, we will explore the top 10 Visual Studio Code extensions that will empower your development environment, making your programming experience even more efficient and productive.
ESLint ESLint is an essential ally for any developer aiming to write clean and error-free JavaScript code.</description>
			<content type="html"><![CDATA[<p>Visual Studio Code (VS Code) has become one of the most popular code editors among developers due to its flexibility and a wide range of available extensions. VS Code extensions offer additional features that can significantly enhance a developer&rsquo;s workflow. In this article, we will explore the top 10 Visual Studio Code extensions that will empower your development environment, making your programming experience even more efficient and productive.</p>
<h2 id="eslint">ESLint</h2>
<p>ESLint is an essential ally for any developer aiming to write clean and error-free JavaScript code. This powerful Visual Studio Code extension seamlessly integrates ESLint into your development environment, providing real-time suggestions and warnings as you code. With ESLint, you can maintain a consistent coding standard, identify and fix common errors, improve the quality of your software, and save valuable time during debugging. Don&rsquo;t compromise the quality of your JavaScript code: install ESLint for Visual Studio Code today and simplify the process of writing clean and error-free code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">Link Â»</a></p>
<h2 id="bracket-pair-colorizer">Bracket Pair Colorizer</h2>
<p>Well-structured code is the key to efficient programming, and the &ldquo;Bracket Pair Colorizer&rdquo; extension for Visual Studio Code is your ideal companion for keeping your code organized and easily readable. This extension assigns distinct and intuitive colors to pairs of parentheses, curly braces, and square brackets in your code, making it easy to visualize the relationships between open and closed brackets. You will never lose track of your code structure again, eliminating bracketization errors and simplifying debugging. With &ldquo;Bracket Pair Colorizer,&rdquo; you can focus on coding without worrying about formatting or bracketization errors. Make your development experience more efficient and visually clear: install Bracket Pair Colorizer today and bring a touch of color to your code organization.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2">Link Â»</a></p>
<h2 id="prettier">Prettier</h2>
<p>Consistency in code formatting is crucial for effective collaboration and maintaining project organization. The &ldquo;Prettier&rdquo; extension for Visual Studio Code is an indispensable tool to ensure that your JavaScript, TypeScript, HTML, CSS, and many other language codes are always impeccably formatted. Prettier seamlessly integrates into your workflow, automatically applying predefined or customized formatting rules to your code with a simple click or upon file save. With Prettier, forget lengthy discussions about code formatting in development teams and focus on writing high-quality code. Install Prettier â Code Formatter today and discover how to make code formatting an effortless and consistent process in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode">Link Â»</a></p>
<h2 id="gitlens">GitLens</h2>
<p>If you are a Git enthusiast looking to maximize your productivity in software development, the &ldquo;GitLens&rdquo; extension for Visual Studio Code is a must-have tool. GitLens brings the power and transparency of Git directly into your development environment. This extension clearly highlights key information on each line of code: who made the changes, when they were made, and even why the changes were made with Git Blame annotations and commits.</p>
<p>With GitLens, you can effortlessly explore your project&rsquo;s history, compare branches, easily retrieve previous versions, and much more. Your understanding of Git workflow will deepen, resulting in increased development efficiency and better collaboration within the team. If you want to take your code management to the next level, look no further: install GitLens today and discover how this extension can make version control with Git more powerful and accessible than ever directly in Visual Studio Code.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens">Link Â»</a></p>
<h2 id="live-server">Live Server</h2>
<p>&ldquo;Live Server&rdquo; is the perfect ally for any web developer looking to streamline and enhance the front-end development process. This Visual Studio Code extension gives you the ability to launch a local web server directly from your workspace, transforming your development environment into a dynamic and interactive experience.</p>
<p>With &ldquo;Live Server,&rdquo; you can instantly view changes made to your HTML, CSS, or JavaScript code in the browser without manually reloading the page. This means you can focus on coding and immediately see how your changes affect your web page.</p>
<p>Additionally, &ldquo;Live Server&rdquo; offers additional features such as page auto-refresh, the ability to view your website on mobile devices, and intelligent port management. This makes the extension an ideal companion for responsive web development and debugging.</p>
<p>If you want to make your web development workflow smoother, install &ldquo;Live Server&rdquo; today and discover how this extension simplifies your development process, saving valuable time and improving your efficiency in front-end development.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer">Link Â»</a></p>
<h2 id="material-icon-theme">Material Icon Theme</h2>
<p>Add a touch of style and visual organization to your development environment with the &ldquo;Material Icon Theme&rdquo; extension for Visual Studio Code. This extension transforms standard file and folder icons into vibrant and well-designed icons based on Google&rsquo;s popular &ldquo;Material Design.&rdquo;</p>
<p>With &ldquo;Material Icon Theme,&rdquo; you can immediately identify the type of file or folder you are looking for thanks to a complete set of clearly recognizable icons. Whether you are working on JavaScript files, HTML, CSS, images, or documentation, this extension provides an enhanced visual experience that helps you quickly find what you need in your project.</p>
<p>Furthermore, &ldquo;Material Icon Theme&rdquo; is highly customizable, allowing you to choose from different icon variants and adjust settings to suit your personal style. It&rsquo;s a simple yet powerful way to improve the look of your development environment and make it more intuitive and appealing.</p>
<p>If you want a fresh and modern view of your workspace in Visual Studio Code, install &ldquo;Material Icon Theme&rdquo; today and discover how this extension can make your development environment</p>
]]></content>
		</item>
		
		<item>
			<title>8 consigli sulla produttivitÃ  per sviluppatori e programmatori</title>
			<link>https://albertoreineri.it/en/blog/8-consigli-sulla-produttivit%C3%A0-per-sviluppatori-e-programmatori/</link>
			<pubDate>Fri, 22 Jul 2022 07:42:48 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/8-consigli-sulla-produttivit%C3%A0-per-sviluppatori-e-programmatori/</guid>
			<description>Non Ã¨ facile mantenere la produttivitÃ  da sviluppatori. Ã un lavoro mentalmente stressante che puÃ² esaurire rapidamente la mente e richiede molta attenzione. Capire come puoi concentrarti sul tuo lavoro, prendere scorciatoie usando l&amp;rsquo;automazione e gestire le distrazioni puÃ² aiutarti molto a ottenere il massimo dal tuo orario di lavoro. In questa raccolta, puoi trovare i migliori suggerimenti sulla produttivitÃ  per sviluppatori e programmatori, dalla ricerca dei migliori strumenti per sviluppatori alle pause regolari fino all&amp;rsquo;eliminazione delle distrazioni durante il lavoro.</description>
			<content type="html"><![CDATA[<p>Non Ã¨ facile mantenere la produttivitÃ  da sviluppatori. Ã un lavoro mentalmente stressante che puÃ² esaurire rapidamente la mente e richiede molta attenzione. Capire come puoi concentrarti sul tuo lavoro, prendere scorciatoie usando l&rsquo;automazione e gestire le distrazioni puÃ² aiutarti molto a ottenere il massimo dal tuo orario di lavoro. In questa raccolta, puoi trovare i migliori suggerimenti sulla produttivitÃ  per sviluppatori e programmatori, dalla ricerca dei migliori strumenti per sviluppatori alle pause regolari fino all&rsquo;eliminazione delle distrazioni durante il lavoro.</p>
<h3 id="1-trova-il-miglior-editor-di-codice">1. TROVA IL MIGLIOR EDITOR DI CODICE</h3>
<p>La produttivitÃ  degli sviluppatori inizia con un buon editor di codice.Â Sebbene ci siano molte ottime opzioni sul mercato, Ã¨ difficile dire quale sia la migliore: tutto dipende dai tuoi obiettivi e dalle tue esigenze.Â Vale la pena provareÂ <a href="/blog/5-migliori-editor-di-testo-per-sviluppatori">diversi editor di testo</a>Â per vedere quale si adatta meglio al tuo flusso di lavoro.Â Ecco alcune cose importanti da tenere in considerazione:</p>
<ul>
<li>Quale/i linguaggio/i di programmazione stai utilizzando. Hai bisogno di un editor di codice che offra l&rsquo;evidenziazione della sintassi per i linguaggi di cui hai bisogno (almeno come plug-in). Alcuni editor di codice sono inoltre dotati di evidenziatori di sintassi per tecnologie popolari come React, non solo per linguaggi di programmazione.</li>
<li>Se l&rsquo;editor di codice scelto ha un tema adeguato e un ecosistema di plug-in che fornisce le funzionalitÃ  di cui hai bisogno (ad esempio, un tema ad alto contrasto se hai problemi di vista).</li>
<li>Se affidi il tuo lavoro a una piattaforma di condivisione del codice, come GitHub o Bitbucket, potresti trovare utile la funzionalitÃ  <a href="/blog/come-usare-git/">Git integrata</a>. Ad esempio, Visual Studio Code ti consente di eseguire il commit direttamente del tuo lavoro su GitHub senza uscire dall&rsquo;editor.</li>
<li>Se desideri utilizzare i tuoi frammenti di codice e/o le scorciatoie da tastiera, Ã¨ anche una buona idea scegliere un editor di codice che ti consenta di aggiungerli o importarli.</li>
</ul>
<h3 id="2-inizia-ogni-giorno-con-il-compito-piÃ¹-difficile">2. INIZIA OGNI GIORNO CON IL COMPITO PIÃ DIFFICILE</h3>
<p>Ã facile perdersi nelle attivitÃ  quotidiane e anche la procrastinazione Ã¨ un&rsquo;abitudine comune degli sviluppatori, soprattutto seÂ <a href="/10-consigli-per-freelance-e-liberi-professionisti/">lavori come libero professionista</a>e devi gestire le tue scadenze.Â Pertanto, capita spesso di lavorare tutto il giorno e alla fine della giornata ti rendi conto di aver fatto a malapena qualcosa.Â Puoi evitarlo se, invece del multitasking, crei una gerarchia di attivitÃ  quotidiane e inizi con l&rsquo;attivitÃ  piÃ¹ difficile ogni giorno.</p>
<p>Sebbene il multitasking sia stato visto come una cosa positiva per molti anni, si Ã¨ scoperto che non Ã¨ adatto alla maggior parte delle persone. <a href="https://www.forbes.com/sites/lisaquast/2017/02/06/want-to-be-more-productive-stop-multi-tasking">La ricerca ha dimostrato</a> che solo il 2% della popolazione Ã¨ bravo nel multitasking, mentre il resto puÃ² subire una perdita di produttivitÃ  fino al 40%. Quindi, se sei nel 2% continua con il multitasking, altrimenti dai la prioritÃ  alle tue attivitÃ  e concentrati solo su una cosa alla volta.</p>
<h3 id="3-fai-delle-pause-regolarmente">3. FAI DELLE PAUSE REGOLARMENTE</h3>
<p>Gli esseri umani non possono concentrarsi sulla stessa cosa per un tempo illimitato e questo Ã¨ particolarmente vero per il duro lavoro mentale della programmazione. Puoi trovare diversi studi sul limite di tempo in cui le persone possono concentrarsi su un&rsquo;attivitÃ  senza che la loro mente si allontani da qualcos&rsquo;altro. Ad esempio, <a href="http://naturalhealthcare.ca/glossaries.phtml?term=sustained+attention#.XgqCCPx7nIU">questo studio</a> afferma che l&rsquo;attenzione prolungata Ã¨ possibile per circa 45 minuti, mentre <a href="https://www.theatlantic.com/business/archive/2014/09/science-tells-you-how-many-minutes-should-you-take-a-break-for-work-17/380369/">un altro</a> menziona 52 minuti consecutivi seguiti da una pausa di 17 minuti.</p>
<p>Poi, abbiamo la famosa <a href="https://en.wikipedia.org/wiki/Pomodoro_Technique">Tecnica del Pomodoro</a> che utilizza un timer da cucina a forma di pomodoro per misurare il tempo. Funziona con intervalli di tempo di 25 minuti con pause brevi di 5 minuti e pause lunghe di 10 minuti. La tecnica Pomodoro Ã¨ diventata cosÃ¬ popolare tra la comunitÃ  degli sviluppatori che ci sono persino <a href="https://tomato-timer.com/">app Pomodoro</a> che puoi usare mentre lavori.</p>
<p>Tutto sommato, non esiste una regola d&rsquo;oro qui e ognuno ha un limite di tempo diverso, quindi dovrai sperimentare un po&rsquo; per scoprire cosa funziona meglio per te. Inoltre, non vale la pena seguire una regola molto rigida: se sei giÃ  nel flusso, non interrompere il tuo lavoro solo perchÃ© Ã¨ arrivato il momento della pausa.</p>
<p>Tuttavia, c&rsquo;Ã¨ una cosa importante da ricordare. La pausa deve essere una vera pausa quando ti alzi dalla scrivania. Controllare e-mail, notifiche Slack, social media, blog o semplicemente fissare qualsiasi tipo di schermo non conta come una pausa per il tuo cervello: ogni singola ricerca sull&rsquo;argomento lo afferma come un dato di fatto.</p>
<h3 id="4-pianifica-le-tue-attivitÃ -in-anticipo">4. PIANIFICA LE TUE ATTIVITÃ IN ANTICIPO</h3>
<p>La pianificazione delle attivitÃ  in anticipo puÃ² anche aumentare notevolmente la produttivitÃ . Puoi creare elenchi di attivitÃ  e controllare le attivitÃ  completate utilizzando <a href="https://www.developerdrive.com/creating-a-simple-to-do-application-part-1/">To Do app</a> come <a href="https://www.wunderlist.com/">Wunderlist</a> e <a href="https://todoist.com/">Todoist</a> o impostare flussi di lavoro con un&rsquo;app come <a href="https://trello.com/">Trello</a> . Al giorno d&rsquo;oggi, ci sono anche molte fantastiche opzioni che ti consentono di integrare diversi strumenti di produttivitÃ , come <a href="https://zapier.com/">Zapier</a> e <a href="https://ifttt.com/">IFTTT</a> (If This Then That).</p>
<p>Con la pianificazione delle attivitÃ , dovrai anche condurre alcuni esperimenti e pensare al tipo di strumenti di cui avrai veramente bisogno. Puoi sicuramente utilizzare piÃ¹ di un&rsquo;app per gestire le attivitÃ , tuttavia puÃ² diventare dispersivo utilizzare troppi strumenti contemporaneamente. In alcuni casi, un&rsquo;eccessiva complessitÃ  puÃ² persino portare a una perdita di produttivitÃ .</p>
<h3 id="5-tieni-traccia-delle-tue-ore-di-lavoro">5. TIENI TRACCIA DELLE TUE ORE DI LAVORO</h3>
<p>Sebbene non a tutti piaccia tenere traccia delle proprie ore di lavoro, utilizzareÂ un&rsquo;app di monitoraggio del tempoÂ puÃ² aiutare molto in caso di problemi con la gestione del tempo.Â Il monitoraggio del tempo puÃ² aumentare la tua produttivitÃ  principalmente perchÃ© puoi vedere come hai trascorso le ore durante il giorno in modo da poter escludere possibili distrazioni.Â I cronometri possono anche essere una manna dal cielo se sei un libero professionista, poichÃ© ti aiutano a fatturare i tuoi clienti su base oraria.</p>
<h3 id="6-automatizza-le-attivitÃ -ripetitive">6. AUTOMATIZZA LE ATTIVITÃ RIPETITIVE</h3>
<p>L&rsquo;automazione delle attivitÃ  ripetitive Ã¨ un must in questi giorni come sviluppatore. Non Ã¨ una coincidenza che DevOps (l&rsquo;intersezione di sviluppo e operazioni) sia di gran moda di recente. Non avrai bisogno di molta automazione nella fase di sviluppo, tuttavia, rendere il tuo codice di sviluppo pronto per la produzione comporta molte attivitÃ  ripetitive.</p>
<p>Ad esempio, come sviluppatore frontend, puoi utilizzare un task runner per eseguire automaticamente attivitÃ  di routine sul tuo codice, come minimizzazione, ottimizzazione delle immagini e altro.Â Abbiamo un articolo recente suiÂ <a href="/blog/6-migliori-tool-per-sviluppo-frontend">migliori strumenti di compilazione per sviluppatori frontend</a>Â , ma ci sono anche molte ottime opzioni per la programmazione backend che vale la pena dare un&rsquo;occhiata.</p>
<h3 id="7-utilizzare-la-riga-di-comando">7. UTILIZZARE LA RIGA DI COMANDO</h3>
<p>Oltre ad automatizzare le attivitÃ , Ã¨ anche una buona idea prendere l&rsquo;abitudine di utilizzare la riga di comando nel flusso di lavoro quotidiano.Â Innanzitutto, puoi velocizzare notevolmente il tuo flusso di lavoro se utilizzi una CLI (Command Line Interface) invece di una GUI (Graphical User Interface).Â Ad esempio, ecco un tutorial su comeÂ <a href="/blog/usare-la-riga-di-comando-con-wordpress-grazie-a-wp-cli">configurare la CLI di WordPress</a>Â per accelerare lo sviluppo e la manutenzione di WordPress.Â In secondo luogo, l&rsquo;uso sicuro dei comandi CLI Ã¨ un&rsquo;abilitÃ  di programmazione importante che puoi utilizzare in molte altre aree del tuo lavoro.</p>
<h3 id="8-elimina-le-distrazioni">8. ELIMINA LE DISTRAZIONI</h3>
<p>Le distrazioni sono il piÃ¹ grande nemico della produttivitÃ , quindi Ã¨ necessario trovare un modo per eliminarle il piÃ¹ possibile. Sfortunatamente, hanno una natura subdola, quindi non Ã¨ affatto facile catturarli. CiÃ² Ã¨ dovuto principalmente al fatto che molte volte non sembrano prima una distrazione.</p>
<p>Ad esempio, controllare la posta elettronica ogni ora, guardare un nuovo tutorial video su YouTube o chattare con i colleghi su Slack possono essere visti come attivitÃ  legate al lavoro, ma se ci dedichi troppo tempo, potresti scoprire che non hai ottenuto cosÃ¬ tanto entro la fine della giornata.</p>
<p>Quindi, devi stare molto attento alle distrazioni e prendere precauzioni ovunque puoi. Ad esempio, puoi decidere di controllare le tue e-mail solo due volte al giorno, disattivare le notifiche Slack mentre lavori o bloccare i siti Web che distraggono frequentemente durante il lavoro.</p>
<h3 id="conclusione">CONCLUSIONE</h3>
<p>Se segui questsi suggerimenti sulla produttivitÃ  o almeno alcuni di essi, puoi utilizzare il tuo orario di lavoro in modo piÃ¹ efficiente e allo stesso tempo migliorare il tuo flusso di lavoro e di sviluppo. Sebbene prendere una nuova abitudine all&rsquo;inizio possa essere difficile, diventa rapidamente una seconda natura.</p>
<p>Ricorda che la sperimentazione Ã¨ l&rsquo;elemento chiave della produttivitÃ . Se provi una tecnica o uno strumento che non funziona per te, abbandonalo e passa a quello successivo, finchÃ© non trovi quello che si adatta meglio al tuo flusso di lavoro e alla tua personalitÃ .</p>
<p>E, se hai bisogno di altri suggerimenti unici per sviluppatori e programmatori, non perdere il nostro articolo suÂ <a href="/blog/come-scegliere-quale-linguaggio-di-programmazione-imparare">come scegliere quale linguaggio di programmazione imparare</a>Â .</p>
<p>{{- /* This comment removes trailing newlines. */ -}}</p>
]]></content>
		</item>
		
		<item>
			<title>The 5 Best Cross-Platform Code Editors for Web Developers</title>
			<link>https://albertoreineri.it/en/blog/the-5-best-cross-platform-code-editors-for-web-developers/</link>
			<pubDate>Mon, 18 Jul 2022 12:37:13 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/the-5-best-cross-platform-code-editors-for-web-developers/</guid>
			<description>Text editors are arguably the most crucial tools for web developers. Finding one that fits your workflow, aligns with your goals, and provides all the features you need can save you a lot of time and significantly enhance the quality of your code.
In this article, I&amp;rsquo;ll showcase the five best cross-platform code editors for web developers. All of them work on the three major operating systemsâWindows, Linux, and macOS. The features you need will largely depend on your working style, coding expertise, and the type of work you need to accomplish.</description>
			<content type="html"><![CDATA[<p>Text editors are arguably the most crucial tools for web developers. Finding one that fits your workflow, aligns with your goals, and provides all the features you need can save you a lot of time and significantly enhance the quality of your code.</p>
<p>In this article, I&rsquo;ll showcase the five best cross-platform code editors for web developers. All of them work on the three major operating systemsâWindows, Linux, and macOS. The features you need will largely depend on your working style, coding expertise, and the type of work you need to accomplish. You might have one go-to editor for everything, but many developers use different code editors for different tasks.</p>
<p>Now, let&rsquo;s explore the five best cross-platform code editors for web developers.</p>
<h2 id="1-atom1">1. <a href="https://atom.io/">ATOM</a></h2>
<p><img src="https://example.com/path/to/atom.jpeg" alt="Atom"></p>
<p>Atom is a free and open-source code editor created by GitHub. Originally GitHub&rsquo;s in-house text editor, Atom was released to the public in 2014. With many advanced features, it quickly became one of the most popular code editors.</p>
<p>Its exceptionally well-designed user interface allows you to split the interface into different panes for easy comparison of different files. Atom includes essential features that can significantly enhance your development workflow, such as a built-in package manager, intelligent autocomplete, file system navigation, an easy-to-use find-and-replace function, and more.</p>
<p>Atom also boasts thousands of <a href="https://atom.io/packages">packages</a> and <a href="https://atom.io/themes">themes</a>, many of which are created by third-party developers. For instance, <a href="https://teletype.atom.io/">Teletype</a>, its latest package developed by the core team, enables real-time collaboration for developers needing a reliable tool for pair programming or social coding.</p>
<p><strong>Pros:</strong></p>
<ul>
<li>Diverse customization options</li>
<li>Built-in package manager</li>
<li>Easy-to-install packages</li>
<li>Git integration</li>
<li>Open source and free</li>
</ul>
<p><strong>Cons:</strong></p>
<ul>
<li>Startup time can be slow at times</li>
<li>Occasional performance issues (may slow down the system)</li>
</ul>
<h2 id="2-visual-studio-code5">2. <a href="https://code.visualstudio.com/">VISUAL STUDIO CODE</a></h2>
<p><img src="https://example.com/path/to/visual-studio-code.jpeg" alt="Visual Studio Code"></p>
<p>Visual Studio Code is Microsoft&rsquo;s cross-platform source code editor that works on all major operating systems. Interestingly, Visual Studio Code was built on the open-source components of Atom, but Microsoft removed some features and added new ones. It&rsquo;s also faster than Atom, both at startup and during execution. Visual Studio Code is fully customizable, and you can find many different themes and plugins in the <a href="https://marketplace.visualstudio.com/vscode">official marketplace</a>. You can easily install them from the editor and start using them right away.</p>
<p>Visual Studio Code has many fantastic features that can significantly improve your development workflow. Probably the most notable is the <em>IntelliSense</em> autocomplete feature, providing a list of intelligent suggestions as you code. Visual Studio Code also has an excellent built-in debugger that allows you to debug directly from the editor. Additionally, it supports Git by default, with a separate Git view where you can execute various Git commands.</p>
<p><strong>Pros:</strong></p>
<ul>
<li>User-friendly marketplace and pleasant extension ecosystem</li>
<li>Integrated Git support</li>
<li>IntelliSense autocomplete feature</li>
<li>Built-in debugger</li>
<li>Highly customizable</li>
<li>Free and open source</li>
</ul>
<p><strong>Cons:</strong></p>
<ul>
<li>Confusing branding (unrelated to Visual Studio)</li>
</ul>
<h2 id="3-brackets7">3. <a href="http://brackets.io/">BRACKETS</a></h2>
<p><img src="https://example.com/path/to/brackets.jpeg" alt="Brackets"></p>
<p>Brackets was specifically created for web designers and front-end developers by Adobe Systems. It can be the ideal source code editor for you if you primarily work on front-end tasks (HTML, CSS, JavaScript). One of its most outstanding features is that it allows you to establish a real-time connection with Google Chrome. This means you can immediately see the changes you&rsquo;re making in the browser.</p>
<p>While you can split the editor into vertical or horizontal panes for side-by-side coding, Brackets also introduces the practical <em>inline editing</em> feature. For example, if you select a specific CSS ID with the cursor, you can open the inline editor by pressing Ctrl + E (on Windows) or Cmd + E (on Mac). Brackets will then show you all selectors belonging to that ID within an inline window. Brackets also supports Sass and LESS, allowing you to use them alongside inline editing and live preview features.</p>
<p><strong>Pros:</strong></p>
<ul>
<li>Preprocessor support</li>
<li>Visual tools for front-end development</li>
<li>Lightweight (only 40 MB)</li>
<li>Syncs with the browser (via Live Preview feature)</li>
<li>Open source and free</li>
</ul>
<p><strong>Cons:</strong></p>
<ul>
<li>Confusing extension management (e.g., no filtering option in the registry)</li>
<li>Fewer extensions and themes compared to other code editors</li>
<li>Not suitable for working with backend languages (e.g., PHP, Python, Ruby, or WordPress)</li>
</ul>
<h2 id="4-sublime-text8">4. <a href="https://www.sublimetext.com/">SUBLIME TEXT</a></h2>
<p><img src="https://example.com/path/to/sublime-text.jpeg" alt="Sublime Text"></p>
<p>Sublime Text is currently in its third major version (Sublime Text 3) and is a rather popular text editor within the web developer community. It&rsquo;s not free, but it comes with a free trial. For continued use, you need to purchase a license for $80. However, Sublime Text doesn&rsquo;t restrict you if you don&rsquo;t, it just occasionally displays a pop-up prompt asking you to buy the license.</p>
<p>One of Sublime Text&rsquo;s most interesting features is the <strong>Goto Anything</strong> command, which you can activate by pressing the keyboard shortcut <kbd>Ctrl</kbd>+<kbd>P</kbd>. You can quickly open files or jump to specific words, lines, or symbols. Sublime Text also provides you with a sophisticated command palette through which you can easily access various features like checking key bindings or switching to another color scheme.</p>
<p>Moreover, it allows multiple selections and split edits and has an extensive <a href="https://packagecontrol.io/">package ecosystem</a>. Packages can be installed using the Sublime Text package manager via the command palette.</p>
<p><strong>Pros:</strong></p>
<ul>
<li>Goto Anything and Multiple Selection features</li>
<li>Distraction-free mode</li>
<li>Instant project switch</li>
<li>Advanced package ecosystem</li>
<li>Excellent performance on any platform (outperforms all other source code editors)</li>
</ul>
<p><strong>Cons:</strong></p>
<ul>
<li>Not free</li>
<li>Not easy to integrate with Git</li>
</ul>
<h2 id="5-light-table10">5. <a href="http://lighttable.com/">LIGHT TABLE</a></h2>
<p><img src="https://example.com/path/to/light-table.jpeg" alt="Light Table"></p>
<p>Light Table started as a <a href="https://www.kickstarter.com/projects/ibdknox/light-table">Kickstarter campaign</a> in 2012 and managed to raise over $300,000. It works on all major operating</p>
<p>systems, including Windows, Linux, and macOS, although the installation process currently requires <a href="https://github.com/LightTable/LightTable/blob/master/README.md#downloads">some additional steps</a> for OS X users. Light Table has a sleek and minimalist user interface that removes all clutter but still provides a command palette and a blurred-out seeker. It&rsquo;s written in ClojureScript and currently supports HTML, CSS, JavaScript, Python, Clojure, and ClojureScript.</p>
<p>With Light Table, you can easily perform inline evaluation within your code, meaning you don&rsquo;t have to use the console when you want to see results. The <strong>watches</strong> feature allows you to track any important values within your code. Additionally, Light Table also lets you embed anything your project needs, such as charts, games, and visualizations. Light Table has a built-in plugin manager (accessible from the <em>View &gt; Plugin Manager</em> menu), with a good selection of plugins.</p>
<p><strong>Pros:</strong></p>
<ul>
<li>Inline evaluation and watches</li>
<li>Embed any functionality</li>
<li>Powerful plugin manager</li>
<li>Highly customizable</li>
<li>Fast and tidy interface</li>
<li>Free and open source</li>
</ul>
<p><strong>Cons:</strong></p>
<ul>
<li>Currently no built-in PHP support, so WordPress development requires some additional steps (you can use this <a href="https://github.com/thierrymarianne/LightTable-PHP">PHP plugin</a>, for example)</li>
</ul>
<h2 id="next-steps">Next Steps</h2>
<p>In addition to choosing the code editor that best suits your needs, you might also want to explore other web development tools. In that case, check out our article on <a href="http://www.developerdrive.com/2018/01/9-best-free-cloud-ides/">the best cloud IDEs</a> or take a look at our <a href="http://www.developerdrive.com/2015/02/essential-tools-for-modern-web-development/">collection of essential tools</a> recommended for modern web development.</p>
]]></content>
		</item>
		
		<item>
			<title>I migliori temi per Visual Studio Code</title>
			<link>https://albertoreineri.it/en/blog/i-migliori-temi-per-visual-studio-code/</link>
			<pubDate>Mon, 04 Jul 2022 21:26:57 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/i-migliori-temi-per-visual-studio-code/</guid>
			<description>Lavorare in un ambiente piacevole Ã¨ fondamentale per la produttivitÃ . Visual Studio code ultimamente sta guadagnando sempre piÃ¹ popolaritÃ , e se mi segui saprai giÃ  che Ã¨ il mio editor preferito! Vediamo oggi quali sono i miei temi preferiti per Visual Studio Code, sia chiari che scuri!
Nel 2019 Visual Studio CodeÂ (VSCode) Ã¨ stato l&amp;rsquo;editor di testo piÃ¹ utilizzato dagli sviluppatori secondo, con il 50% degli 87.317 intervistati che lo utilizzano.</description>
			<content type="html"><![CDATA[<p>Lavorare in un ambiente piacevole Ã¨ fondamentale per la produttivitÃ . Visual Studio code ultimamente sta guadagnando sempre piÃ¹ popolaritÃ , e se mi segui saprai giÃ  che Ã¨ il mio editor preferito! Vediamo oggi quali sono i miei temi <a href="/blog/software-per-sviluppo-web/">preferiti</a> per Visual Studio Code, sia chiari che scuri!</p>
<p>Nel 2019 <a href="https://code.visualstudio.com/">Visual Studio Code</a>Â (VSCode) Ã¨ stato l&rsquo;editor di testo piÃ¹ utilizzato dagli sviluppatori secondo, con il 50% degli 87.317 intervistati che lo utilizzano.Â Questo Ã¨ stato un grande passo avanti dopo essere stato classificato al 13Â° posto tra gli strumenti di sviluppo popolari su Stackoverflow.</p>
<p>VSCode dispone di un velocissimo editor di codice sorgente, ideale per l&rsquo;uso quotidiano.Â Con il supporto per centinaia di linguaggi di programmazione diversi, tra cui C++, Java, Javascript, JSON, Julia, PHP etc. migliora la tua produttivitÃ  con la corrispondenza delle parentesi, la selezione dei riquadri, l&rsquo;evidenziazione della sintassi, l&rsquo;indentazione automatica e altro ancora.</p>
<p>Tuttavia, con oltre 5.000 temi tra cui scegliere, puÃ² essere scoraggiante trovare il migliore per te.Â Se stai cercando i migliori temi VSCode da provare, ecco a te i miei preferiti!</p>
<h2 id="anc-0.wp-block-heading"><strong>Come installare temi in Visual Studio Code</strong></h2>
<p>Puoi installare temi in Visual Studio Code in due modi principali.Â Puoi visitare il Marketplace e selezionare il tema che desideri scaricare, oppure puoi cercare in VSCode IDE.</p>
<h3 id="metodo-1-marketplace">Metodo 1: <strong>Marketplace</strong></h3>
<p>1: Visita il <a href="https://marketplace.visualstudio.com/vscode" target="_blank" rel="noreferrer noopener">Marketplace</a> e seleziona il tema che desideri scaricare.Â In VSCode, fai clic su File&gt;Preferenze&gt;Tema colore per aprire il selettore Tema colore sul tuo PC Windows.Â Se sei su macOS, fai clic su Code&gt;Preferenze&gt;Tema colore</p>
<p>Puoi anche aprire il selettore usando la scorciatoia da tastiera âCtrl+K Ctrl+Tâ.</p>
<p>2: Usa i tasti cursore per scorrere e visualizzare in anteprima i colori del tema</p>
<p>3: Seleziona il tema che desideri e premi âInvioâ sulla tastiera<figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/1-how-to-install-vscode-themes-from-marketplace.png" alt="" class="wp-image-1588" /> </figure></p>
<h3 id="metodo-2-ricerca-in-vscode">Metodo 2: ricerca in VSCode</h3>
<p>In alternativa, puoi installare un tema cercandolo dentro VSCode.Â Dall&rsquo;iconaÂ <a href="https://www.tabnine.com/blog/top-42-free-vscode-extensions/" target="_blank" rel="noreferrer noopener">Estensioni</a>Â sul lato sinistro di VSCode, cerca il tema richiesto e fai clic su Installa.<figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/2-how-to-install-vscode-themes-in-ide-1024x576.jfif" alt="" class="wp-image-1590" /> </figure></p>
<h2 id="anc-1.wp-block-heading"><strong>I migliori temi scuri per VSCode</strong></h2>
<p>Se non vuoi farti male agli occhi usando un tema chiaroÂ tutto il giorno, un tema scuro Ã¨ sicuramente consigliato per la tua vista.Â Sebbene VSCode abbia un tema Dark+ predefinito, potrebbe non essere il tuo preferitoâ¦ Magari desideri un mix di colori e sfumature diversi.Â </p>
<p>Ecco i migliori temi oscuri per VSCode:</p>
<h3 id="one-dark-profigure-classwp-block-image"><strong>One Dark Pro</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/3-one-dark-pro-1024x861.png" alt="" class="wp-image-1591" /> </figure></p>
<p>One Dark Pro Ã¨ il tema VSCode piÃ¹ popolare e ampiamente scaricato con quasi 4 milioni di installazioni.Â Si basa sul tema One Dark di Atom ed Ã¨ adatto per gli sviluppatori che amano i temi in modalitÃ  oscura.Â Ha combinazioni ben miscelate e colori di evidenziazione della sintassi molto <em>cool</em> che lo rendono visivamente accattivante.Â </p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme">Scarica One Dark pro</a></p>
<h3 id="dracula-officialfigure-classwp-block-image"><strong>Dracula Official</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/4-dracula-official-screenshot-989x1024.png" alt="" class="wp-image-1592" /> </figure></p>
<p>Creato da Zeno Rocha, Dracula Official Ã¨ un tema scuro per VSCode e altre oltre 181 app.Â Ha download in tutto il mondo con oltre 2 milioni di utenti e ha ricevuto una valutazione media di 4,9 da 81 revisori.Â Vanta fantastiche combinazioni di colori e contrasti per migliorare la tua produttivitÃ .</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula">Scarica Dracula ufficiale</a></p>
<h3 id="darculafigure-classwp-block-image"><strong>Darcula</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/5-darcula-screenshot-1024x760.png" alt="" class="wp-image-1594" /> </figure></p>
<p>Se hai utilizzato gli IDE Jetbrains eÂ Android Studio, ti sei sicuramente imbattuto nel tema Darcula.Â Sebbene sia facile confondere Dracula Official con il Darcula, quest&rsquo;ultimo offre una combinazione di colori accuratamente scuri per oltre 195+ app, editor di codice ed emulatori di terminale, incluso VSCode.Â </p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=rokoroku.vscode-theme-darcula">Scarica il tema Darcula</a></p>
<p>###Â <strong>Synthwave &lsquo;84</strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/6-synthwave-theme-1024x672.jpg" alt="" class="wp-image-1595" /> </figure></p>
<p>Il tema Synthwave &lsquo;84 Ã¨ un semplice tema CSS che celebra l&rsquo;estetica degli anni &lsquo;80 nello sviluppo web moderno. Ã influenzato dalla musica e dalle copertine dei moderni marchi Synthwave come Timecop 1893, The Midnight e FM-84. Ti consente di sperimentare l&rsquo;effetto bagliore dei sogni al neon degli anni &lsquo;80 con colori ben miscelati, rendendolo uno dei temi piÃ¹ eleganti e di classe.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode">Scarica Synthwave &lsquo;84</a></p>
<h3 id="tema-atom-one-darkfigure-classwp-block-image"><strong>Tema Atom One Dark</strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/7-atom-one-dark-preview-1024x617.png" alt="" class="wp-image-1596" /> </figure></p>
<p>Creato da Mahmoud Ali, Ã¨ stato l&rsquo;ispirazione per il tema One Dark e si basa sul tema dell&rsquo;Atom IDE.Â A differenza di altri temi dark, ha solo una variante: oscuro.Â Ã un&rsquo;opzione eccellente se ti manca Atom ma non vuoi tornarci.Â Vanta quasi 2 milioni di installazioni in tutto il mondo con una valutazione di 5/5.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=akamud.vscode-theme-onedark">Scarica Atom One Dark</a></p>
<p>###Â <strong><strong>Night Owl</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/8-nightowl-first-screen.jpg" alt="" class="wp-image-1597" /> </figure></p>
<p>Sei un nottambulo a cui piace programmare di notte quando il resto del mondo dorme? Lo sono anche io!Â Il tema Night Owl puÃ² fare per te.Â Presenta un tema chiaro e uno scuro, che aiuta le persone daltoniche e garantisce una facile visualizzazione alla luce del giorno.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=sdras.night-owl">Scarica Night Owl</a></p>
<h2 id="anc-2.wp-block-heading"><strong>I migliori temi chiari per VSCode</strong></h2>
<p>I temi chiari sono consigliati per la codifica della luce diurna.Â PoichÃ© i programmatori trascorrono la maggior parte del lavoro di giorno, spesso si puÃ² avere bisogno di un tema luminoso elegante che aiuti a programmare con facilitÃ .Â Personalmente li utilizzo quando lavoro all&rsquo;aperto sotto al sole.</p>
<p>Ecco i migliori temi di luce per VSCode:</p>
<p>###Â <strong><strong>Quie t Light</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/9-quiet-light.png" alt="" class="wp-image-1598" /> </figure></p>
<p>Creato inizialmente per l&rsquo;editor di testo Espresso su Mac, Quiet Light Ã¨ un porting ufficiale del tema Quiet Light. Sebbene VSCode venga fornito con un tema Quiet Light predefinito, questo ha piÃ¹ modifiche per soddisfare i tuoi gusti e le tue preferenze. Supporta diversi linguaggi, inclusi JavaScript, PHP, HTML, CSS, Python e altri.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=onecrayon.theme-quietlight-vsc">Scarica Quiet Light</a></p>
<p>###Â <strong><strong>Bracket Lights Pro</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/10-brackets-light-pro-1024x597.png" alt="" class="wp-image-1599" /> </figure></p>
<p>Bracket Lights Pro Ã¨ un tema accattivante grazie alla sua bellissima tavolozza di colori.Â Incanala il tema chiaro dell&rsquo;editor di codice Brackets di Adobe su VSCode.Â Sebbene Adobe abbia terminato il suo supporto per Brackets il 1Â° settembre 2021, ti piacerÃ  usare Bracket Lights Pro per il suo aspetto pulito.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=fehey.brackets-light-pro">Scarica Bracket Lights Pro</a></p>
<p>###Â <strong><strong>Bluloco Light</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/11-blulocojs-1024x926.png" alt="" class="wp-image-1600" /> </figure></p>
<p>Se desideri un tema con raffinatezza e un&rsquo;ampia gamma di colori nella tavolozza, non sbaglierai con Bluloco Light.Â Biforcato inizialmente da One Light Theme, presenta un uso piÃ¹ ampio della coerenza del colore e degli ambiti della sintassi per quanto riguarda leggibilitÃ , contrasto ed estetica.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=uloco.theme-bluloco-light">Scarica Bluloco Light</a></p>
<p>###Â ## <strong>I migliori temi per VSCode</strong> {#anc-3.wp-block-heading}</p>
<p>VSCode Ã¨ senza dubbio uno dei migliori editor di codice, con una vasta gamma di estensioni supportate dalla comunitÃ .Â Disponibile su macOS, Windows e Linux, puoi soddisfare quasi tutte le tue esigenze di programmazione indipendentemente dal sistema operativo.Â </p>
<p>Ecco i migliori temi per VSCode:</p>
<p>###Â <strong><strong>Tokyo Night</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_night-1024x713.png" alt="Notte di Tokio" class="wp-image-1605" /> <figcaption>Tokyo Night</figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_night_storm-1-1024x713.png" alt="Tempesta notturna di Tokyo" class="wp-image-1602" /><figcaption>Tokyo Night Storm</figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/12-ss_tokyo_day-1024x712.png" alt="Giornata di Tokyo" class="wp-image-1603" /><figcaption>Tokyo Day</figcaption></figure></p>
<p>Questo tema Ã¨ pulito, fresco e rilassante con colori calmi.Â Celebra le luci del centro di Tokyo di notte ed Ã¨ disponibile sia in versione chiara che scura.Â La sua perfetta miscela e combinazione di colori aiutano a meditare mentre scrivi codici.</p>
<p>[Scarica <a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night">Tokyo Night</a>]<a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night">12</a></p>
<p>###Â <strong><strong>GitHub Theme</strong></strong><figure class="wp-block-image"></p>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/13-github-132220037-3cd3e777-55a6-445f-9a2e-da6020ebd78d-1024x640.png" alt="" class="wp-image-1604" /> <figcaption>Temi GitHub</figcaption></figure></p>
<p>Il tema GitHub porta l&rsquo;esperienza GitHub in VSCode.Â Ã simile ai temi ufficiali di GitHub.com ed Ã¨ popolare tra gli sviluppatori che preferiscono i temi classici.Â Ã disponibile sia in chiaro che in scuro</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme">Scarica GitHub Theme</a></p>
<h3 id="winter-is-comingfigure-classwp-block-image"><strong><strong>Winter is Coming</strong></strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-html-1024x605.png" alt="" class="wp-image-1608" /> <figcaption><strong><strong>Dark Blue HTML</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-js-1024x605.png" alt="" class="wp-image-1609" /><figcaption><strong><strong>Dark Blue JavaScript</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-dark-blue-ts-1024x605.png" alt="" class="wp-image-1610" /><figcaption><strong><strong>Dark Blue TypeScript</strong></strong></figcaption></figure> <figure class="wp-block-image"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/14-winteriscoming-1024x605.png" alt="JavaScript leggero" class="wp-image-1606" /><figcaption><strong><strong>Light JavaScript</strong></strong></figcaption></figure></p>
<p>Se sei un grande fan di Game of Thrones, avrai sicuramente sentito questa frase diverse volte!Â Ã stato creato da John Papa ed Ã¨ disponibile in diverse versioni, tra cui blu scuro, nero scuro e chiaro.Â Racchiude un equilibrio nelle sue combinazioni di colori, rendendolo perfetto per la codifica durante il giorno e la notte.</p>
<p>[Scarica <a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.winteriscoming">Winter is Coming</a>]<a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.winteriscoming">14</a></p>
<h3 id="firefox-themefigure-classwp-block-image"><strong><strong>Firefox Theme</strong></strong><figure class="wp-block-image"></h3>
<p><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/15-theme-preview-1-1024x576.gif" alt="Tema Firefox" class="wp-image-1612" /> </figure></p>
<p>Il tema Firefox Ã¨ basato sugli strumenti per sviluppatori di Mozilla Firefox. Il suo perfetto equilibrio di colori freddi gli conferisce un aspetto elegante con icone illuminate al neon. Per passare facilmente da una scheda all&rsquo;altra, fornisce una sottolineatura evidenziata sulle schede aperte per garantire una transizione rapida. Ã disponibile nelle versioni scura e chiara.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=Heron.firefox-devtools-theme">Scarica il tema Firefox</a></p>
<h3 id="nu-discofigure-classwp-block-image"><strong>Nu Disco</strong><figure class="wp-block-image"></h3>
<p><a href="https://www.tabnine.com/blog/wp-content/uploads/2021/11/17-discojs.png"><img decoding="async" src="https://www.tabnine.com/blog/wp-content/uploads/2021/11/17-discojs-1024x733.png" alt="Nu Disco" class="wp-image-1615" /></a><figcaption>Nu Disco</figcaption></figure></p>
<p>Nu Disco Ã¨ stato creato da Danny Banks ed Ã¨ alimentato da Style Dictionary. I suoi colori di sintassi sono posizionati magnificamente con colori contrastanti per semplificare la tua esperienza di codifica. Disponibile nelle versioni scura e chiara, Ã¨ perfettamente progettato per essere facile da usare in ambienti luminosi e scarsamente illuminati.</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dbanksdesign.nu-disco">Scarica il tema Nu Disco</a></p>
<h2 id="anc-4.wp-block-heading"><strong>Incartare</strong></h2>
<p>VSCode Ã¨ un ottimo editor di codice che supportaÂ centinaia di linguaggiÂ e funzionalitÃ  avanzate, tra cui l&rsquo;evidenziazione della sintassi, l&rsquo;indentazione automatica e gli snippet.Â Ã adatto per lo sviluppo Web moderno e dispone di un debugger interattivo per visualizzare gli stack di chiamate ed eseguire variabili.</p>
<p>Provare uno dei temi di Visual Studio Code che ho suggerito qua sopra puÃ² aiutarti molto durante le tue sessioni di coding.Â Sebbene i temi sopra riportati rendano il tuo IDE colorato e aiutino i tuoi occhi a pungere meno, non ti renderanno certo un programmatore miglioreâ¦ Ma lavorare in un ambiente piacevole Ã¨ sicuramente piÃ¹ motivante!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>The 6 Best Tools for Frontend Development</title>
			<link>https://albertoreineri.it/en/blog/the-6-best-tools-for-frontend-development/</link>
			<pubDate>Tue, 28 Jun 2022 12:03:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/the-6-best-tools-for-frontend-development/</guid>
			<description>Il codice utilizzato nella produzione Ã¨ diverso dal codice di sviluppo.Â In produzione, Ã¨ necessario creare pacchetti che funzionino velocemente, gestire le dipendenze, automatizzare le attivitÃ , caricare moduli esterni e altro ancora.Â Gli strumenti che consentono di trasformare il codice di sviluppo in codice di produzione sono chiamati tool di compilazione.Â Gli sviluppatori frontend lavorano principalmente con i seguenti tipi di strumenti di compilazione:
package managers, task runners, module loaders, module bundlers, etcâ¦ In questo articolo potrai trovare raccolto i migliori strumenti di build che puoi utilizzare nello sviluppo frontend.</description>
			<content type="html"><![CDATA[<p>Il codice utilizzato nella produzione Ã¨ diverso dal codice di sviluppo.Â In produzione, Ã¨ necessario creare pacchetti che funzionino velocemente, gestire le dipendenze, automatizzare le attivitÃ , caricare moduli esterni e altro ancora.Â Gli strumenti che consentono di trasformare il codice di sviluppo in codice di produzione sono chiamati tool di compilazione.Â Gli sviluppatori frontend lavorano principalmente con i seguenti tipi di strumenti di compilazione:</p>
<ul>
<li>package managers,</li>
<li>task runners,</li>
<li>module loaders,</li>
<li>module bundlers,</li>
<li>etcâ¦</li>
</ul>
<p>In questo articolo potrai trovare raccolto i migliori strumenti di build che puoi utilizzare nello sviluppo frontend.Â Nota che tutti questi strumenti vengono eseguiti da riga di comando, quindi non sono dotati di un&rsquo;interfaccia utente grafica.</p>
<h2 id="1-npm-package-manager">1. NPM (PACKAGE MANAGER)</h2>
<p>L&rsquo;acronimoÂ <a href="https://github.com/npm/cli">npm</a>Â sta per Node Package Maid che Ã¨ il gestore di pacchetti predefinito di Node.js.Â QuandoÂ <a href="https://nodejs.org/en/download/">installi Node.js</a>Â sul tuo sistema, anche npm viene installato automaticamente e puoi accedervi dall&rsquo;interfaccia da riga di comando.Â Con npm puoi installare qualsiasi pacchetto Node.js con un solo comando.</p>
<p>Puoi trovare tutti i pacchetti Node.js esistenti nel registro npm a cui puoi accedere tramite la barra di ricerca nella parte superiore della home page di npm. Devi solo digitare il nome del pacchetto che stai cercando (ad esempio <em>âpostcss&rsquo;</em> ) nella barra di ricerca e verrai indirizzato alla pagina del pacchetto che include tutto ciÃ² che devi sapere sul pacchetto, il suo processo di installazione e tutto delle sue dipendenze.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Facile processo di installazione.</li>
<li>Software multipiattaforma (Windows, Linux, macOS, SmarOS e altro).</li>
<li>Centinaia di migliaia di pacchetti.</li>
<li>Gestione efficiente delle dipendenze tramite il fileÂ <em>package.json</em>.</li>
<li>Molteplici opzioni di configurazione (tramite riga di comando).</li>
<li>Ampia documentazione e utile community.</li>
</ul>
<h2 id="2-yarn-package-manager">2. YARN (PACKAGE MANAGER)</h2>
<p><a href="https://yarnpkg.com/lang/en/">Yarn</a> Ã¨ un gestore di pacchetti frontend che puÃ² essere utilizzato come alternativa a npm. PoichÃ© Yarn stesso Ã¨ un pacchetto Node.js, devi installare Node.js prima di poter utilizzare Yarn sul tuo sistema. Quindi, devi solo seguire la <a href="https://yarnpkg.com/en/docs/install">guida all&rsquo;installazione</a> per utilizzarla per gestire le dipendenze del frontend.</p>
<p>Sebbene npm sia un ottimo strumento, scoprirai che la creazione di pacchetti con esso a volte richiede molto tempo.Â Questo non Ã¨ necessariamente un problema se non hai molte dipendenze da installare o non usi regolarmente un gestore di pacchetti.Â Tuttavia, se lavori su un progetto pesante, puÃ² essere una buona idea utilizzare Yarn permette tempi di costruzione ultraveloci.</p>
<p>Yarn velocizza il processo di compilazione memorizzando nella cache ogni pacchetto in modo da non dover scaricare le dipendenze piÃ¹ volte. Esegue anche operazioni parallele per ridurre ulteriormente i tempi di costruzione.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Strumento multipiattaforma (Windows, Linux, macOS) con guide di installazione separate per ciascuna piattaforma.</li>
<li>Compatibile con tutti i pacchetti Node.js.</li>
<li>Tempi di <em>build</em> rapidi.</li>
<li>ModalitÃ  offline.</li>
</ul>
<h2 id="3-grunt-task-runner">3. GRUNT (TASK RUNNER)</h2>
<p><a href="https://gruntjs.com/">Grunt</a> Ã¨ un task runner frontend che ti consente di automatizzare attivitÃ  ripetitive come minimizzazione, linting, test e altro. I task runner sono diversi dai gestori di pacchetti, poichÃ© non puoi usarli per gestire le dipendenze. Ne hai bisogno solo se desideri eseguire le stesse attivitÃ  durante ogni processo di compilazione.</p>
<p>PoichÃ© Grunt Ã¨ un pacchetto Node.js, puoi installarlo con npm, Yarn o un altro gestore di pacchetti Node.js.Â Grunt mantiene le dipendenze personalizzate necessarie per eseguire le attivitÃ  predefinite nel fileÂ <em>package.json</em>Â .Â Puoi definire le tue attivitÃ  nel Gruntfile (<a href="https://gruntjs.com/sample-gruntfile">vedi un esempio</a>) che viene eseguito durante ogni processo di compilazione ed esegue automaticamente ogni attivitÃ  che include.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Strumento da riga di comando multipiattaforma che funziona su qualsiasi sistema operativo.</li>
<li>Processo di configurazione semplice.</li>
<li>Enorme ecosistema con centinaia di plugin per aggiungere strumenti frontend (come Sass, Jade, JSHint, Handlebars, RequireJS e altri) che completano le attivitÃ  preconfigurate.</li>
<li>AttivitÃ  asincrone se necessario.</li>
<li>Ampia documentazione.</li>
<li>Ampiamente adottato.</li>
</ul>
<h3 id="4-gulp-task-runner">4. GULP (TASK RUNNER)</h3>
<p><a href="https://gulpjs.com/">Gulp</a>Â Ã¨ un altro task runner automatizzato e anche il piÃ¹ forte concorrente di Grunt.Â Simile a Grunt, puoi utilizzare Gulp per automatizzare attivitÃ  front-end ricorrenti come la preelaborazione CSS, l&rsquo;ottimizzazione delle immagini e molti altri.Â Ã anche un pacchetto Node.js che puoi installare con i gestori di pacchetti npm e Yarn.Â Puoi definire le tue attivitÃ  inÂ <a href="https://gulpjs.com/docs/en/getting-started/javascript-and-gulpfiles">Gulpfile</a>Â e configurare le tue dipendenze relative alle tue attivitÃ  nel fileÂ <em>package.json</em>Â .</p>
<p>La piÃ¹ grande differenza rispetto a Grunt Ã¨ che Gulp utilizza una tecnica di automazione piÃ¹ efficiente che consente tempi di costruzione piÃ¹ rapidi.Â Mentre Grunt utilizza i file temporanei per elaborare le attivitÃ , Gulp esegue operazioni in memoria senza scrivere in file temporanei.Â Queste operazioni in memoria sono chiamateÂ <a href="https://nodejs.org/api/stream.html#stream_stream">node streams</a>Â e possono farti risparmiare molto tempo, soprattutto se desideri elaborare piÃ¹ attivitÃ  in ogni build.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Task runner multipiattaforma che puÃ² essere installato come un normale pacchetto Node.js.</li>
<li>Utilizza i flussi Node per velocizzare le operazioni.</li>
<li>Enorme ecosistema con migliaia di plugin.</li>
<li>Base di codice di qualitÃ  utilizzando le best practice di Node.js.</li>
<li>Documentazione facile da seguire.</li>
<li>Superficie API minima per una semplice adozione.</li>
</ul>
<h2 id="5-browserify-module-loaderbundler">5. BROWSERIFY (MODULE LOADER/BUNDLER)</h2>
<p><a href="http://browserify.org/">Browserify</a> Ã¨ un caricatore di moduli Node.js che ti consente di raggruppare le tue dipendenze front-end e caricarle come un unico file JavaScript nel browser dell&rsquo;utente. I gestori di pacchetti come npm e Yarn caricano i moduli sul lato server utilizzando la funzione <em><a href="https://nodejs.org/api/modules.html#modules_require_id">require()</a></em> di Node.js progettata per caricare i moduli. Browserify porta il metodo <em>require()</em> sul lato client, il che puÃ² comportare un enorme aumento delle prestazioni.</p>
<p>Con Browserify, il browser del tuo utente deve caricare un solo file JavaScript statico che contiene tutte le dipendenze su cui si basa il tuo progetto. Puoi aggiungere il tuo JavaScript in bundle come tag script alla tua pagina e sei a posto. Tuttavia, tieni presente che poichÃ© Browserify Ã¨ un modulo Node.js e un&rsquo;implementazione dell&rsquo;API CommonJS (simile a npm), puoi utilizzarlo solo per caricare moduli Node.js ma non altri tipi di file JavaScript (o altri).</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Raggruppa tutte le dipendenze di Node.js in un unico file.</li>
<li>Velocizza le applicazioni modulari che si basano su piÃ¹ moduli Node.js.</li>
<li>Consente requisiti esterni (Ã¨ possibile richiedere moduli da altri tagÂ scriptÂ ).</li>
<li>Consente di dividere i pacchetti, se necessario.</li>
<li>Esclude, ignora e trasforma le funzionalitÃ .</li>
<li>Documentazione dettagliata e utileÂ <a href="https://github.com/browserify/browserify-handbook">manuale di Browserify</a>Â .</li>
</ul>
<h2 id="6-webpack-module-loaderbundler">6. WEBPACK (MODULE LOADER/BUNDLER)</h2>
<p><a href="https://webpack.js.org/">Webpack</a> Ã¨ un bundler di moduli avanzato che ti consente di raggruppare tutte le tue dipendenze e caricarle come risorse statiche nel browser dell&rsquo;utente. Mentre Browserify raggruppa solo i moduli Node.js, Webpack puÃ² gestire qualsiasi tipo di file front-end come file <em>.html</em> , <em>.css, .js, .scss</em> , immagini e altre risorse.</p>
<p>Oltre ai moduli CommonJS utilizzati nell&rsquo;ecosistema Node.js, Webpack puÃ² anche raggruppare moduli <a href="https://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMAScript</a> e <a href="https://github.com/amdjs/amdjs-api/wiki/AMD">AMD</a> nativi (altre specifiche del modulo JavaScript). Webpack analizza il tuo progetto e crea un grafico delle dipendenze. Quindi, in base al grafico delle dipendenze, raggruppa i tuoi file e moduli in uno o piÃ¹ file statici che puoi aggiungere alla tua pagina HTML.</p>
<p>PoichÃ© Webpack stesso Ã¨ anche un modulo Node.js, puoi installarlo con npm o con il gestore di pacchetti Yarn.</p>
<p>Per impostazione predefinita, la configurazione dei progetti Webpack richiede molto tempo a causa delle molteplici opzioni che consentono di perfezionare il progetto. Tuttavia, dal Webpack 4, include un&rsquo;opzione di configurazione zero che automatizza il processo di compilazione e richiede solo la definizione del file di immissione.</p>
<p><strong>Caratteristiche principali:</strong></p>
<ul>
<li>Molteplici opzioni di configurazione.</li>
<li>Codice suddiviso in blocchi piÃ¹ piccoli che possono essere caricati in modo asincrono.</li>
<li>Supporto per mappe di origine.</li>
<li>Opzione di configurazione zero (dal Webpack 4).</li>
<li>Enorme ecosistema con una ricca interfaccia di plugin.</li>
</ul>
<h2 id="conclusione">CONCLUSIONE</h2>
<p>Gli strumenti di compilazione frontend ti aiutano a trasformare il codice di sviluppo in codice pronto per la produzione che puÃ² essere eseguito su qualsiasi dispositivo o piattaforma senza problemi.Â In questa raccolta, abbiamo esaminato gli strumenti di compilazione piÃ¹ adottati che puoi utilizzare nel tuo progetto Web, inclusi gestori di pacchetti, task runner e caricatori/bundler di moduli.</p>
<p>Oltre alle soluzioni ampiamente adottate, ci sono anche (relativamente) nuovi strumenti sul mercato che stanno guadagnando costantemente terreno, come il gestore di pacchetti <a href="https://pnpm.js.org/">pnpm</a> (un&rsquo;alternativa a npm e Yarn), il bundle di moduli <a href="https://parceljs.org/">Parcel</a> (un&rsquo;alternativa a Webpack) e il bundler di moduli <a href="https://rollupjs.org/blog/en/">Rollup</a> ES (simile a Browserify ma raggruppa i moduli ECMAScript invece di quelli CommonJS). Se sei alla ricerca di nuove soluzioni, vale la pena dare un&rsquo;occhiata anche a questi nuovi strumenti.</p>
<p>L&rsquo;aggiunta di nuovi strumenti al tuo flusso di lavoro puÃ² portare il tuo processo di sviluppo a un livello superiore.Â </p>
<p>Come sempre, <em>Buon Codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Usare il browser senza mouse â Hacker Style</title>
			<link>https://albertoreineri.it/en/blog/usare-il-browser-senza-mouse-hacker-style/</link>
			<pubDate>Mon, 06 Jun 2022 09:34:22 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/usare-il-browser-senza-mouse-hacker-style/</guid>
			<description>Passiamo molto, moltissimo tempo sul browser ormai, e usare il mouse per la navigazione puÃ² essere frustranete per noi sviluppatoriâ¦ Ma Ã¨ possibile farne a meno e muoversi solamente utilizzando la tastiera, come un vero hacker! Vediamo come si fa.
Vimium Extension Per prima cosa devi scaricare l&amp;rsquo;estensione Vimium. Io uso Google Chrome, ma Ã¨ presente anche per Firefox e Safari (se usi Brave o Edge non preoccuparti, puoi installare l&amp;rsquo;estensione per Google Chrome, funzionerÃ  perfettamente perchÃ© questi browser condividono la stessa base).</description>
			<content type="html"><![CDATA[<p>Passiamo molto, moltissimo tempo sul browser ormai, e usare il mouse per la navigazione puÃ² essere frustranete per noi sviluppatoriâ¦ Ma Ã¨ possibile farne a meno e muoversi solamente utilizzando la tastiera, come un vero hacker! Vediamo come si fa.</p>
<h2 id="vimium-extension">Vimium Extension</h2>
<p>Per prima cosa devi scaricare l&rsquo;estensione <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noreferrer noopener">Vimium</a>. Io uso Google Chrome, ma Ã¨ presente anche per <a href="https://addons.mozilla.org/it/firefox/addon/vimium-ff/" target="_blank" rel="noreferrer noopener">Firefox</a> e <a href="https://apps.apple.com/us/app/vimari/id1480933944?mt=12" target="_blank" rel="noreferrer noopener">Safari</a> (se usi Brave o Edge non preoccuparti, puoi installare l&rsquo;estensione per Google Chrome, funzionerÃ  perfettamente perchÃ© questi browser condividono la stessa base).</p>
<p>Dopo averla installata potrete iniziare ad utilizzare il vostro browser direttamente dalla tasitera.</p>
<p>La base dei comandi Ã¨ quella del software Vim, quindi se siete su Linux probabilmente vi troverete giÃ  a vostro agio, altrimenti non preoccupatevi, basterÃ  qualche minuti di pratica per abbandonare il mouse per sempre!</p>
<p>Ecco i comandi principali per utilizzarlo:</p>
<h2 id="navigare-nella-pagina-corrente">Navigare nella pagina corrente:</h2>
<pre class="wp-block-code"><code>?       mostra l'elenco dei comandi disponibili (molto utile all'inizio)
h       scroll verso sinistra
j       scroll verso il basso
k       scroll verso l'alto
l       scroll verso destra
gg      scroll in cima alla pagina
G       scroll in fondo alla pagina
d       scroll in basso di metÃ  pagina
u       scroll in alto di metÃ  pagina
f       apri un link nella tab corrente
F       apri link in nuova tab
r       ricarica
gs      visualizza codice sorgente</code></pre>
<h2 id="navigare-in-altre-pagina">Navigare in altre pagina:</h2>
<pre class="wp-block-code"><code>o       Apri URL
O       Apri URL in nuova tab
b       Apri preferiti
B       Apri preferiti in nuova tab</code></pre>
<h2 id="cronologia">Cronologia:</h2>
<pre class="wp-block-code"><code>H       Vai a pagina precedente
L       Vai a pagina successiva</code></pre>
<h2 id="manipolazione-tabs">Manipolazione tabs:</h2>
<pre class="wp-block-code"><code>J, gT      Vai un tab verso sinistra
K, gt      Vai un tab verso destra
g0         Vai alla prima tab
g$         Vai all'ultima tab
t          Crea tab
x          Chiudi tab corrente
X          Riapri tab chiusa
T          Cerca fra le tab</code></pre>
<p>Ecco qua, questi sono solamente i comandi principali, ne esistono altri che puoi leggere qua: <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noreferrer noopener"><a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb">https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb</a></a></p>
<p>E questo Ã¨ tutto! Non ti resta che provare ad utilizzarli e vedrai che in breve tempo potrai usare il browser totalmente in hacker style ?â?</p>
<p>Come sempre <em>buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Come creare un effetto Overlay in CSS</title>
			<link>https://albertoreineri.it/en/blog/come-creare-un-effetto-overlay-in-css/</link>
			<pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/come-creare-un-effetto-overlay-in-css/</guid>
			<description>Personalmente utilizzo moltissimo gli overlay per migliorare la leggibilitÃ  del testo sopra un&amp;rsquo;immagine,Â ma che cos&amp;rsquo;Ã¨ questo overlay?
In poche parole non Ã¨ nient&amp;rsquo;altro che un livello intermedio fra l&amp;rsquo;immagine e il testo, un livello che va &amp;lsquo;opacizzare&amp;rsquo; l&amp;rsquo;immagine per rendere piÃ¹ leggibile il testo.
LogicamenteÂ con l&amp;rsquo;overlay il testo risulta molto piÃ¹ leggibile, e secondo me l&amp;rsquo;immagnie Ã¨ anche meno impattante, meno fastidiosa.
Farlo non Ã¨ affatto difficile.
Come si fa BasterÃ  recarci all&amp;rsquo;interno del contenitore dell&amp;rsquo;immagine, in questo caso nelÂ divÂ con classeÂ sidebar e aggiungere un elemento chiamato &amp;ldquo;overlay&amp;rdquo;</description>
			<content type="html"><![CDATA[<p>Personalmente utilizzo moltissimo gli overlay per migliorare la leggibilitÃ  del testo sopra un&rsquo;immagine,Â <strong>ma che cos&rsquo;Ã¨ questo overlay?</strong></p>
<p>In poche parole non Ã¨ nient&rsquo;altro che un <strong>livello intermedio fra l&rsquo;immagine e il testo</strong>, un livello che va &lsquo;opacizzare&rsquo; l&rsquo;immagine per rendere piÃ¹ leggibile il testo.</p>
<p>LogicamenteÂ <strong>con l&rsquo;overlay il testo risulta molto piÃ¹ leggibile</strong>, e secondo me l&rsquo;immagnie Ã¨ anche meno impattante, meno fastidiosa.</p>
<p>Farlo non Ã¨ affatto difficile.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/KiZMQCs0SSg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="come-si-fa">Come si fa</h2>
<p>BasterÃ  recarci all&rsquo;interno del contenitore dell&rsquo;immagine, in questo caso nelÂ <em>div</em>Â con classeÂ <em>sidebar</em> e aggiungere un elemento chiamato &ldquo;<em>overlay</em>&rdquo;</p>
<pre tabindex="0"><code>Â &lt;div class=&#34;sidebar&#34; style=&#34;background:url(&#39;https://images.unsplash.com/photo-1534067783941-51c9c23ecefd?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80&#39;)&#34;&gt;
Â  Â  Â  Â  &lt;div class=&#34;overlay&#34;&gt;&lt;/div&gt;
Â  Â  Â  Â  &lt;div class=&#34;sidebar-inner&#34;&gt;
Â  Â  Â  Â  Â  Â  &lt;div class=&#34;site-header&#34;&gt;
Â  Â  Â  Â  Â  Â  Â  Â  &lt;h2&gt;Nome Sito Web&lt;/h2&gt;
Â  Â  Â  Â  Â  Â  Â  Â  &lt;i&gt;Lorem ipsum dolor sit amet&lt;/i&gt;
Â  Â  Â  Â  Â  Â  &lt;/div&gt;
Â  Â  Â  Â  &lt;/div&gt;
Â  Â  &lt;/div&gt;
</code></pre><p>Con l&rsquo;html siamo a posto, ora spostiamoci nel nostro fileÂ <strong>CSS</strong>Â e dobbiamo solamente creare questa classe:</p>
<pre tabindex="0"><code>.overlay{
Â  Â  position: absolute;
Â  Â  top:0;
Â  Â  left: 0;
Â  Â  right: 0;
Â  Â  bottom:0;
Â  Â  background-color: rgba(0, 0, 0, 0.4);
Â  Â  z-index: 2;
Â  Â  width: 100%;
Â  Â  height: 100%;
}
</code></pre><p><em><strong>E VoilÃ ! Tutto finito!</strong></em></p>
<p>Ora non resta che personalizzarla a piacere, cambiando il colore e il livello di opacitÃ .</p>
<p><em>Buon codice!</em></p>
]]></content>
		</item>
		
		<item>
			<title>Hide the extension at the end of the URL</title>
			<link>https://albertoreineri.it/en/blog/hide-the-extension-at-the-end-of-the-url/</link>
			<pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/hide-the-extension-at-the-end-of-the-url/</guid>
			<description>Today, having the extension at the end of the URL is not ideal, both for SEO and for the overall impression the site makes on the end user. It would be better to hide it.
The ability to choose our URLs is crucial for creating a good website. By using PHP pages correctly, you can easily achieve this result by simply hiding the extension from the URL.
In this guide, we will see how to &amp;ldquo;remove&amp;rdquo; the .</description>
			<content type="html"><![CDATA[<p>Today, having the extension at the end of the URL is not ideal, both for SEO and for the overall impression the site makes on the end user. It would be better to hide it.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/VWqwsKL2-mM" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>The <strong>ability to choose our URLs</strong> is crucial for creating a good website. By using PHP pages correctly, you can easily achieve this result by simply hiding the extension from the URL.</p>
<p>In this guide, we will see how to <strong>&ldquo;remove&rdquo; the .php</strong> at the end of the URL.</p>
<p>To do this, simply <strong>insert the following code into the .htaccess file</strong> in the root of the site. If the .htaccess file does not exist, create it using a text editor.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-apache" data-lang="apache"><span style="display:flex;"><span>RewriteEngine <span style="color:#66d9ef">on</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>RewriteCond %{THE_REQUEST} /([^.]+)\.php [NC]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>RewriteRule ^ /%1 [NC,L,R]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>RewriteCond %{REQUEST_FILENAME}.php -f
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>RewriteRule ^ %{REQUEST_URI}.php [NC,L]
</span></span></code></pre></div><p>This way, all your &ldquo;.php&rdquo; files will be displayed without an extension.</p>
<p>By doing this, the entire site will be better. The addresses will be much more &ldquo;SEO friendly,&rdquo; and the website&rsquo;s security will also benefit.</p>
<p>If you look at the modern websites of large companies, hardly anyone uses the extension at the end of the URL anymore.</p>
<p>Today, we can also use frameworks that allow us to manage URLs in a completely customized and optimal way, but we don&rsquo;t always need an entire framework. Often, for small projects, it&rsquo;s worth doing things from scratch, and in these cases, just a few lines of code in the .htaccess file can easily hide the extension from the URL.</p>
<p>If you want to learn how to use a simple routing system to organize the website in the best way and manage your URLs effectively, read this <a href="/en/blog/simple-routing-system-in-php/">article</a>. It&rsquo;s very basic and simple but can be used for small projects without big demands. Of course, it has nothing to do with the routing of <a href="https://laravel.com/">Laravel</a>, for example, but it can be a good starting point to improve your skills.</p>
]]></content>
		</item>
		
		<item>
			<title>WordPress Starter Theme</title>
			<link>https://albertoreineri.it/en/blog/wordpress-starter-theme/</link>
			<pubDate>Wed, 18 Dec 2019 21:44:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/wordpress-starter-theme/</guid>
			<description>After using WordPress for various projects, I decided to create and share my starter theme.
With this project, you can start from a pre-made base and speed up the development time for a new theme from scratch.
The theme already includes:
bootstrap font awesome back on top Developing themes from scratch allows for highly customized results, providing almost total customization, optimization of loading times, and increased site security, provided you know what you&amp;rsquo;re doing.</description>
			<content type="html"><![CDATA[<p>After using WordPress for various projects, I decided to create and share my starter theme.</p>
<p>With this project, you can start from a pre-made base and speed up the development time for a new theme from scratch.</p>
<p>The theme already includes:</p>
<ul>
<li>bootstrap</li>
<li>font awesome</li>
<li>back on top</li>
</ul>
<p>Developing themes from scratch allows for highly customized results, providing almost total customization, optimization of loading times, and increased site security, provided you know what you&rsquo;re doing.</p>
<h2 id="no-pre-made-themes">No pre-made themes</h2>
<p>This is entirely my personal opinion, and it may be shared or not.</p>
<p>Personally, I have never felt comfortable with pre-made themes available on platforms like Themeforest or similar. There&rsquo;s always something I want to do but can&rsquo;t&hellip;</p>
<p>I prefer to start from scratch and have complete control over everything, be able to move as I want, take charge of problems, and solve them in what I think is the best way.</p>
<p>After all, I&rsquo;m a developer, and I don&rsquo;t like drag and drop much&hellip; I prefer code!</p>
<p>But starting from scratch every time can be heavy, boring, and a waste of time. So I created a starter theme, a basic WordPress theme that already includes all the necessary layouts, some libraries, the search form, and other small things that allow me to start working on the fun part of the site immediately.</p>
<p>This way, I don&rsquo;t have to start from scratch every time; I already have a working skeleton ready to be used.</p>
<h2 id="open-source-starter-theme-for-wordpress">Open Source Starter Theme for WordPress</h2>
<p>After creating the Orange Starter Theme for WordPress and successfully using it on many websites, I decided to make it <a href="https://github.com/albertoreineri/orange-starter-theme">open source</a>, so it can be used and expanded by anyone.</p>
<p>Any possible bugs can be reported to me via <a href="https://github.com/albertoreineri/orange-starter-theme">GitHub</a> or directly through the contact form on this site; I will take care of the problem and solve it as quickly as possible.</p>
]]></content>
		</item>
		
		<item>
			<title>How to use GIT</title>
			<link>https://albertoreineri.it/en/blog/how-to-use-git/</link>
			<pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/how-to-use-git/</guid>
			<description>Not long ago, I wrote an article praising Git, a version control software I can&amp;rsquo;t live without. So, I decided to create a guide to explain how to use GIT!
BUT HOW DO YOU ACTUALLY USE GIT? IS IT HARD TO USE? Let&amp;rsquo;s start with the fact that &amp;ldquo;Git&amp;rdquo; can be translated as &amp;ldquo;idiot,&amp;rdquo; almost suggesting that it&amp;rsquo;s foolproof&amp;hellip;
Jokes aside, it&amp;rsquo;s very simple to use, and it can also be a good starting point to learn the Command Line Interface (CLI)!</description>
			<content type="html"><![CDATA[<p>Not long ago, I wrote an <a href="/en/blog/git-what-is-it/">article</a> praising <strong>Git</strong>, a version control software I can&rsquo;t live without. So, I decided to create a guide to explain how to use GIT!</p>
<h2 id="but-how-do-you-actually-use-git-is-it-hard-to-use">BUT HOW DO YOU ACTUALLY USE GIT? IS IT HARD TO USE?</h2>
<p>Let&rsquo;s start with the fact that &ldquo;Git&rdquo; can be translated as &ldquo;<em>idiot</em>,&rdquo; almost suggesting that it&rsquo;s foolproof&hellip;</p>
<p>Jokes aside, it&rsquo;s <strong>very simple</strong> to use, and it can also be a good <strong>starting point to learn the Command Line Interface (CLI)</strong>!</p>
<h2 id="installation">INSTALLATION</h2>
<p>To <strong>download</strong> Git, simply visit this site: <a href="https://git-scm.com/">https://git-scm.com/</a></p>
<p>Once you open the link, click on &ldquo;Download,&rdquo; select your operating system, and proceed with the installation.</p>
<p>If you&rsquo;re using Windows, I recommend installing Git Bash, a nice CLI that I use for many tasks.</p>
<h2 id="usage">USAGE</h2>
<p>Once Git is installed, open Git Bash and navigate to your project folder (use the <code>cd</code> command. E.g., <code>cd C:/Users/alby/projects/app</code>).</p>
<p>Here, enter the command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git init
</span></span></code></pre></div><p>Git will now be present in your project with a hidden folder called .git. Never open this folder; just leave it where it is; it won&rsquo;t hurt.</p>
<p>Now, on Git Bash, type the following command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git add .
</span></span></code></pre></div><p>This <strong>adds</strong> all project files to the staging area, waiting to be approved.</p>
<p>Then, simply write:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git commit -m <span style="color:#e6db74">&#34;commit name&#34;</span>
</span></span></code></pre></div><p>This command <strong>commits</strong> your files, creating a version of your project. In quotes, you can write something like &ldquo;First commit,&rdquo; and in subsequent commits, you&rsquo;ll specify the changes made (e.g., &ldquo;Added login&rdquo;).</p>
<h2 id="github">GITHUB</h2>
<p>It&rsquo;s also possible to save commits on GitHub, allowing you to view and download them from anywhere. It also enables other developers to view and improve your code!</p>
<p>To do this, you need a GitHub account and create a new repository.</p>
<p>After creating a new GitHub repository, GitHub already provides the commands to &ldquo;fill&rdquo; it with your local project.</p>
<p>To do this, you need to enter:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git remote add origin https://github.com<span style="color:#f92672">[</span>repository link<span style="color:#f92672">]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git push -u origin master
</span></span></code></pre></div><p>This way, your project is now on GitHub. To download it, use the command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git pull https://github.com<span style="color:#f92672">[</span>repository link<span style="color:#f92672">]</span>
</span></span></code></pre></div><p>These are the <strong>basic commands</strong>. Once a commit is created, you can make further changes to the project and re-run the add and commit commands.</p>
<p>There are <strong>many other commands</strong> to use this software. <strong>The best way to learn them all is to use them</strong>, so get your hands dirty and try them! <strong>You won&rsquo;t be able to do without them</strong>.</p>
<p>Below, I list some of the <strong>most used commands</strong>, explained briefly.</p>
<h2 id="git-commands">GIT COMMANDS</h2>
<h3 id="git-config">git config</h3>
<p><em>Usage:</em> <code>git config --global user.name &quot;[name]&quot;</code></p>
<p><em>Usage:</em> <code>git config --global user.email &quot;[email address]&quot;</code></p>
<p>This command sets the author&rsquo;s name and email address to be used for your commits.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git config --global user.name <span style="color:#e6db74">&#34;alberto&#34;</span>
</span></span><span style="display:flex;"><span>git config --global user.email <span style="color:#e6db74">&#34;alberto@alberto.it&#34;</span>
</span></span></code></pre></div><h3 id="git-init">git init</h3>
<p><em>Usage:</em> <code>git init [repository name]</code></p>
<p>This command is used to start a new repository (project).</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git init DEMO
</span></span></code></pre></div><h3 id="git-clone">git clone</h3>
<p><em>Usage:</em> <code>git clone [url]</code></p>
<p>This command is used to clone a repository from an existing URL.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git clone https://github.com/albertoreineri/Simple-Header-and-Footer.git
</span></span></code></pre></div><h3 id="git-add">git add</h3>
<p><em>Usage:</em> <code>git add [file]</code></p>
<p>This command adds a file to the staging area.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git add file.php
</span></span></code></pre></div><p><em>Usage:</em> <code>git add *</code></p>
<p>This command adds one or more files to the staging area.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git add *
</span></span></code></pre></div><h3 id="git-commit">git commit</h3>
<p><em>Usage:</em> <code>git commit -m &quot;[Type in the commit message]&quot;</code></p>
<p>This command records or snapshots the file changes permanently in the version history.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git commit -m <span style="color:#e6db74">&#34;Modified file.php&#34;</span>
</span></span></code></pre></div><h3 id="git-status">git status</h3>
<p><em>Usage:</em> <code>git status</code></p>
<p>This command lists all the files that need to be committed.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git status
</span></span></code></pre></div><h3 id="git-rm">git rm</h3>
<p><em>Usage:</em> <code>git rm [file]</code></p>
<p>This command deletes the file from the working directory and stages the deletion.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git rm file.php
</span></span></code></pre></div><h3 id="git-log">git log</h3>
<p><em>Usage:</em> <code>git log</code></p>
<p>This command is used to list the version history for the current branch.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git log
</span></span></code></pre></div><h3 id="git-branch">git branch</h3>
<p><em>Usage:</em> <code>git branch</code></p>
<p>This command lists all local branches in the current repository.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git branch
</span></span></code></pre></div><p><em>Usage:</em> <code>git branch [branch name]</code></p>
<p>This command creates a new branch.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git branch branch-name
</span></span></code></pre></div><p><em>Usage:</em> <code>git branch -d [branch name]</code></p>
<p>This command deletes the branch.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git branch -d branch-name
</span></span></code></pre></div><h3 id="git-checkout">git checkout</h3>
<p><em>Usage:</em> <code>git checkout [branch name]</code></p>
<p>This command is used to switch from one branch to another.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git checkout branch-name
</span></span></code></pre></div><p><em>Usage:</em> <code>git checkout -b [branch name]</code></p>
<p>This command creates a new branch and also switches to it.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git checkout -b branch-name
</span></span></code></pre></div><h3 id="git-merge">git merge</h3>
<p><em>Usage:</em> <code>git merge [branch name]</code></p>
<p>This command merges the specified branch&rsquo;s history into the current branch.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git merge branch-name
</span></span></code></pre></div><h3 id="git-remote">git remote</h3>
<p><em>Usage:</em> <code>git remote add [variable name] [Remote Server Link]</code></p>
<p>This command is used to connect a local repository to a remote server.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git remote add origin https://github.com/githubUser/repoName.git
</span></span></code></pre></div><h3 id="git-push">git push</h3>
<p><em>Usage:</em> <code>git push [variable name] master</code></p>
<p>This command sends changes from local to the remote repository.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git push origin master
</span></span></code></pre></div><p><em>Usage:</em> <code>git push [variable name] [branch]</code></p>
<p>This command sends branch commits to the remote repository.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git push origin branch-name
</span></span></code></pre></div><p><em>Usage:</em> <code>git push --all [variable name]</code></p>
<p>This command sends all branches to the remote repository.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git push --all origin
</span></span></code></pre></div><p><em>Usage:</em> <code>git push [variable name] :[branch name]</code></p>
<p>This command deletes a branch on the remote repository.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git push --all origin : branch-name
</span></span></code></pre></div><h3 id="git-pull">git pull</h3>
<p><em>Usage:</em> <code>git pull [Repository Link]</code></p>
<p>This command retrieves and merges changes from the remote server into the working directory.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git pull https://github.com/GitHubUser/GitHubRepo.git
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Redirect http to https</title>
			<link>https://albertoreineri.it/en/blog/redirect-http-to-https/</link>
			<pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/redirect-http-to-https/</guid>
			<description>Let&amp;rsquo;s see how to install an SSL certificate on our website and switch from HTTP to HTTPS.
Do you want to remove the &amp;ldquo;not secure&amp;rdquo; label that appears next to your site&amp;rsquo;s URL? Then this article is for you!
We won&amp;rsquo;t delve into what HTTPS is, but we&amp;rsquo;ll simply see how to make your site work securely.
The procedure is very simple; you just need to follow these two steps:</description>
			<content type="html"><![CDATA[<p>Let&rsquo;s see how to install an SSL certificate on our website and switch from HTTP to HTTPS.</p>
<p>Do you want to remove the &ldquo;not secure&rdquo; label that appears next to your site&rsquo;s URL? Then this article is for you!</p>
<p>We won&rsquo;t delve into what HTTPS is, but we&rsquo;ll simply see how to make your site work securely.</p>
<p>The procedure is very simple; you just need to follow these two steps:</p>
<h2 id="1-enable-ssl-on-your-web-space">1. Enable SSL on your web space</h2>
<p>Access the control panel of your hosting service and look for &ldquo;Enable HTTPS,&rdquo; &ldquo;Enable SSL,&rdquo; or something similar (varies depending on the service).</p>
<p>Once you find the right section, activate the service. It may take a few hours before it becomes active.</p>
<p>After a few hours, try accessing your site by typing <a href="https://www.yourwebsite.com">https://www.yourwebsite.com</a>. If everything works correctly, proceed to step 2.</p>
<p>If you encounter any errors, it&rsquo;s likely because you have HTTP links for stylesheets, images, and JS files. Try replacing &ldquo;http&rdquo; with &ldquo;https&rdquo; in all references to images, CSS, and JS; this should fix everything.</p>
<p>If you use <a href="/blog/how-to-install-and-customize-a-wordpress-theme-2/">WordPress</a>, you can use plugins that address the issue, such as <a href="https://wordpress.org/plugins/really-simple-ssl/">Really Simple SSL</a> or <a href="https://wordpress.org/plugins/wp-force-ssl/">WP Force SSL</a>. By using these plugins, you can skip step 2, as the plugins handle everything automatically.</p>
<h2 id="2-redirect-traffic-to-https">2. REDIRECT TRAFFIC TO HTTPS</h2>
<p>If you have completed step one correctly, you can now open the .htaccess file in the root of your site (create it if it doesn&rsquo;t exist) and insert the following code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-apache" data-lang="apache"><span style="display:flex;"><span>RewriteEngine <span style="color:#66d9ef">on</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>RewriteCond %{HTTP:X-Forwarded-Proto} !https
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]
</span></span></code></pre></div><p>This way, all server calls will be redirected to HTTPS.</p>
<p>If this code creates an error regarding redirects, you can replace:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-apache" data-lang="apache"><span style="display:flex;"><span>RewriteCond %{HTTP:X-Forwarded-Proto} !https
</span></span></code></pre></div><p>with:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-apache" data-lang="apache"><span style="display:flex;"><span>RewriteCond %{HTTPS} !=on
</span></span></code></pre></div><p>With these simple steps, you can install an SSL certificate and redirect traffic from HTTP to HTTPS, making your website more secure.</p>
]]></content>
		</item>
		
		<item>
			<title>SSL Certificate: How to Redirect HTTP to HTTPS</title>
			<link>https://albertoreineri.it/en/blog/ssl-certificate-how-to-redirect-http-to-https/</link>
			<pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/ssl-certificate-how-to-redirect-http-to-https/</guid>
			<description>Let&amp;rsquo;s see how to install an SSL certificate on our website and switch from HTTP to HTTPS.
Do you want to remove the &amp;ldquo;not secure&amp;rdquo; label that appears next to the URL of your site? Then, this article is for you!
We won&amp;rsquo;t delve into what HTTPS is, but we will simply see how to make your site work securely.
The process is straightforward; just follow these two steps:
1. Activate SSL on Your Web Space Access the control panel of your hosting service and look for &amp;ldquo;Enable HTTPS,&amp;rdquo; &amp;ldquo;Enable SSL,&amp;rdquo; or something similar (varies depending on the service).</description>
			<content type="html"><![CDATA[<p>Let&rsquo;s see how to install an SSL certificate on our website and switch from HTTP to HTTPS.</p>
<p>Do you want to remove the &ldquo;<strong>not secure</strong>&rdquo; label that appears <strong>next to the URL</strong> of your site? Then, this article is for you!</p>
<p>We won&rsquo;t delve into what <strong>HTTPS</strong> is, but we will simply see how to make your site work securely.</p>
<p>The process is straightforward; just follow these two steps:</p>
<h2 id="1-activate-ssl-on-your-web-space">1. Activate SSL on Your Web Space</h2>
<p>Access the <strong>control panel</strong> of your hosting service and look for &ldquo;<strong>Enable HTTPS</strong>,&rdquo; &ldquo;<strong>Enable SSL</strong>,&rdquo; or something similar (varies depending on the service).</p>
<p>Once you find the right section, <strong>activate the service</strong>. It may take a few hours before it is active.</p>
<p>After a few hours, try to connect to your site by typing <a href="https://www.yourwebsite.com">https://www.yourwebsite.com</a>. If everything works correctly, proceed to step 2.</p>
<p>If you see any <strong>errors</strong>, it&rsquo;s probably because you have HTTP links for stylesheets, images, and JS files. Try to <strong>replace HTTP with HTTPS</strong> in all references to images, CSS, and JS; it should fix everything.</p>
<p>If you use <strong><a href="/blog/how-to-install-and-customize-a-wordpress-theme-2/">WordPress</a></strong>, you can use <strong>plugins</strong> that handle the issue, such as <a href="https://wordpress.org/plugins/really-simple-ssl/">Really Simple SSL</a> or <a href="https://wordpress.org/plugins/wp-force-ssl/">WP Force SSL</a>. By using these plugins, you can skip step 2; the plugins take care of everything.</p>
<h2 id="2-redirect-traffic-to-https">2. REDIRECT TRAFFIC TO HTTPS</h2>
<p>If you have successfully completed step one, you can now open the <strong>.htaccess</strong> file in the root of your site (create it if it doesn&rsquo;t exist) and insert this code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-apache" data-lang="apache"><span style="display:flex;"><span>RewriteEngine <span style="color:#66d9ef">on</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>RewriteCond %{HTTP:X-Forwarded-Proto} !https
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]
</span></span></code></pre></div><p>This way, all server calls will be redirected to HTTPS.</p>
<p>If this code produces an error regarding redirects, you can replace:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-apache" data-lang="apache"><span style="display:flex;"><span>RewriteCond %{HTTP:X-Forwarded-Proto} !https
</span></span></code></pre></div><p>with</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-apache" data-lang="apache"><span style="display:flex;"><span>RewriteCond %{HTTPS} !=on.
</span></span></code></pre></div><p>With these simple steps, you can install an SSL certificate and redirect traffic from HTTP to HTTPS, making your website more secure.</p>
]]></content>
		</item>
		
		<item>
			<title>SASS Tutorial - What is it and why you won&#39;t be able to do without it</title>
			<link>https://albertoreineri.it/en/blog/sass-tutorial-what-is-it-and-why-you-wont-be-able-to-do-without-it/</link>
			<pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/sass-tutorial-what-is-it-and-why-you-wont-be-able-to-do-without-it/</guid>
			<description>&amp;ldquo;If you live in the world of web development, then you have probably heard of SASS, the most famous CSS preprocessor! This is a fantastic tool that allows you to significantly extend the capabilities of CSS and create and manage stylesheets in a fast and organized manner.
SASS is a CSS preprocessor that adds special features such as variables, nesting, mixins, and much more to regular CSS. The goal is to make the process of creating CSS simple and effective, both to write and to read in the future.</description>
			<content type="html"><![CDATA[<p>&ldquo;If you live in the world of web development, then you have probably heard of SASS, the most famous CSS preprocessor! This is a fantastic tool that allows you to significantly extend the capabilities of CSS and create and manage stylesheets in a fast and organized manner.</p>
<p>SASS is a CSS preprocessor that adds special features such as variables, nesting, mixins, and much more to regular CSS. The goal is to make the process of creating CSS simple and effective, both to write and to read in the future.</p>
<p>But let&rsquo;s delve a bit deeper!</p>
<h2 id="what-is-a-css-preprocessor">What is a CSS Preprocessor?</h2>
<p>A CSS preprocessor is a scripting language that extends CSS, allowing developers to write code in a specific language and then compile it into CSS. Sass is perhaps the most popular preprocessor currently in use, but other well-known examples include Less and Stylus.</p>
<p>Before we proceed, a quick note is needed: most web designers would say that if you are new to CSS, it&rsquo;s better to avoid Sass (or any preprocessors, extensions, or frameworks) while you are still learning. Although these tools offer many advantages in terms of speed and efficiency, it&rsquo;s important to thoroughly understand the basics of CSS before exploring various tools. Make sure to learn the key concepts before delving into the available tools. This applies to every technology and framework; it&rsquo;s always a good practice to learn the base language thoroughly before moving on to the built tools!</p>
<p>Now, back to Sass!</p>
<h2 id="what-is-sass">What is Sass?</h2>
<p>Sass (which stands for &ldquo;Syntactically Awesome Stylesheets&rdquo;) is an extension of CSS that allows you to use things like variables, nested rules, inline imports, and more. It also helps keep code organized and enables you to create stylesheets much faster.</p>
<p>Sass is compatible with all versions of CSS. The only requirement to use it is to have Ruby installed. Developers using it are also encouraged to follow the <a href="https://sass-lang.com/community-guidelines">Sass Community Guidelines</a>, it&rsquo;s always good to take a look.</p>
<h2 id="how-to-use-sass">How to Use Sass?</h2>
<p>In the following section, we&rsquo;ll look at some basic tips for using Sass, using examples from the official Sass website. Check the <a href="https://sass-lang.com/documentation">official documentation</a> for further references and examples.</p>
<h3 id="syntax">Syntax</h3>
<p>Sass includes two syntax options:</p>
<ul>
<li><strong>SCSS (Sassy CSS):</strong> Uses the .scss file extension and is fully compliant with CSS syntax. (My favorite!)</li>
<li><strong>SASS:</strong> Uses indentation instead of braces and has the .sass extension; it&rsquo;s not entirely compliant with CSS syntax, but it&rsquo;s faster to write. (For Python lovers)</li>
</ul>
<p>Files can be converted from one syntax to another using the <code>sass-convert</code> command.</p>
<h3 id="variables">Variables</h3>
<p>Just like other programming languages, Sass allows the use of variables that can store information used throughout the stylesheet.</p>
<p>For example, you can store a color value in a variable at the top of the file and then use this variable when setting the color of your elements. This allows you to quickly change colors without modifying each line separately.</p>
<p>For example:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scss" data-lang="scss"><span style="display:flex;"><span>$font-stack<span style="color:#f92672">:</span> Helvetica<span style="color:#f92672">,</span> sans-serif;
</span></span><span style="display:flex;"><span>$primary-color<span style="color:#f92672">:</span> <span style="color:#ae81ff">#333</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">body</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">font</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">100</span><span style="color:#66d9ef">%</span> $font-stack;
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">color</span><span style="color:#f92672">:</span> $primary-color;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>This code will generate the following CSS:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-css" data-lang="css"><span style="display:flex;"><span><span style="color:#f92672">body</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">font</span>: <span style="color:#ae81ff">100</span><span style="color:#66d9ef">%</span> Helvetica, <span style="color:#66d9ef">sans-serif</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">color</span>: <span style="color:#ae81ff">#333</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="nesting">Nesting</h3>
<p>Nesting is a double-edged sword. While it provides an excellent method to reduce the amount of code to write, it can also lead to overly messy CSS if not done carefully.</p>
<p>The idea is to nest CSS selectors to mimic HTML hierarchy.</p>
<p>Here&rsquo;s an example of a navigation menu using nesting:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scss" data-lang="scss"><span style="display:flex;"><span><span style="color:#f92672">nav</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">ul</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">margin</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">padding</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">list-style</span><span style="color:#f92672">:</span> none;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">li</span> { <span style="color:#a6e22e">display</span><span style="color:#f92672">:</span> inline-block; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">a</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">display</span><span style="color:#f92672">:</span> block;
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">padding</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">6</span><span style="color:#66d9ef">px</span> <span style="color:#ae81ff">12</span><span style="color:#66d9ef">px</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">text-decoration</span><span style="color:#f92672">:</span> none;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The output CSS will be:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-css" data-lang="css"><span style="display:flex;"><span><span style="color:#f92672">nav</span> <span style="color:#f92672">ul</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">margin</span>: <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">padding</span>: <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">list-style</span>: <span style="color:#66d9ef">none</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">nav</span> <span style="color:#f92672">li</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">display</span>: <span style="color:#66d9ef">inline-block</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">nav</span> <span style="color:#f92672">a</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">display</span>: <span style="color:#66d9ef">block</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">padding</span>: <span style="color:#ae81ff">6</span><span style="color:#66d9ef">px</span> <span style="color:#ae81ff">12</span><span style="color:#66d9ef">px</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">text-decoration</span>: <span style="color:#66d9ef">none</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="partials">Partials</h3>
<p>Partials are smaller Sass files that can be imported (see the next section) into other Sass files. They act like code snippets. With these snippets, CSS can be modular and easier to maintain. A partial is designated as such by naming it with an initial underscore: <code>_partial.scss</code>.</p>
<h3 id="import">Import</h3>
<p>Used with partials (see the previous section), the <code>@import</code> command allows you to import partial files into the current file, creating a single CSS file. This way, during development, you can divide the code into sections, while during site loading, there will be only one CSS file to load, reducing the server request.</p>
<p>Here&rsquo;s an example:</p>
<p><strong>_reset.scss</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scss" data-lang="scss"><span style="display:flex;"><span><span style="color:#f92672">html</span><span style="color:#f92672">,</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">body</span><span style="color:#f92672">,</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">ul</span><span style="color:#f92672">,</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">ol</span> {
</span></span><span style="display:flex;"><span>   <span style="color:#a6e22e">margin</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">padding</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>basefile.scss</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scss" data-lang="scss"><span style="display:flex;"><span><span style="color:#66d9ef">@import</span> <span style="color:#e6db74">&#39;reset&#39;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">body</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">font</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">100</span><span style="color:#66d9ef">%</span> Helvetica<span style="color:#f92672">,</span> sans-serif;
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">background-color</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">#efefef</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>Output CSS:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-css" data-lang="css"><span style="display:flex;"><span><span style="color:#f92672">html</span><span style="color:#f92672">,</span> <span style="color:#f92672">body</span><span style="color:#f92672">,</span> <span style="color:#f92672">ul</span><span style="color:#f92672">,</span> <span style="color:#f92672">ol</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">margin</span>: <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">padding</span>: <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">body</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">font</span>: <span style="color:#ae81ff">100</span><span style="color:#66d9ef">%</span> Helvetica, <span style="color:#66d9ef">sans-serif</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">background-color</span>: <span style="color:#ae81ff">#efefef</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>Important:</strong> When importing partials, there is no need to include the file extension or the underscore.</p>
<h3 id="mixins">Mixins</h3>
<p>One of the advantages of using preprocessors is the ability to take complex and complicated code and simplify it. This is where</p>
<p>mixins come in handy!</p>
<p>For example, if you need to include vendor prefixes, you can use a mixin. Take a look at this example for border-radius:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-scss" data-lang="scss"><span style="display:flex;"><span><span style="color:#66d9ef">@mixin</span><span style="color:#a6e22e"> border-radius</span>($radius) {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">-webkit-border-radius</span><span style="color:#f92672">:</span> $radius;
</span></span><span style="display:flex;"><span>     <span style="color:#a6e22e">-moz-border-radius</span><span style="color:#f92672">:</span> $radius;
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">-ms-border-radius</span><span style="color:#f92672">:</span> $radius;
</span></span><span style="display:flex;"><span>          <span style="color:#a6e22e">border-radius</span><span style="color:#f92672">:</span> $radius;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">.box</span> { <span style="color:#66d9ef">@include</span><span style="color:#a6e22e"> border-radius</span>(<span style="color:#ae81ff">10</span><span style="color:#66d9ef">px</span>); }
</span></span></code></pre></div><p>Note: The <code>@mixin</code> command is at the top. It is named &ldquo;border-radius&rdquo; and the variable &ldquo;$radius&rdquo; is given as a parameter. This variable is used to set the radius value for each element.</p>
<p>Then, the <code>@include</code> command is called, along with the mixin name (&ldquo;border-radius&rdquo;) and a parameter (10px). Therefore, <code>.box {@include border-radius (10px);}</code>.</p>
<p><strong>It produces the following CSS:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-css" data-lang="css"><span style="display:flex;"><span>.<span style="color:#a6e22e">box</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">-webkit-</span><span style="color:#66d9ef">border-radius</span>: <span style="color:#ae81ff">10</span><span style="color:#66d9ef">px</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">-moz-</span><span style="color:#66d9ef">border-radius</span>: <span style="color:#ae81ff">10</span><span style="color:#66d9ef">px</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">-ms-</span><span style="color:#66d9ef">border-radius</span>: <span style="color:#ae81ff">10</span><span style="color:#66d9ef">px</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">border-radius</span>: <span style="color:#ae81ff">10</span><span style="color:#66d9ef">px</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="extend">Extend</h3>
<p>The <code>@extend</code> command has been defined as one of the most powerful features of Sass. After seeing it in action, it&rsquo;s clear why.</p>
<p>The idea is that with this directive, you won&rsquo;t have to include more class names in your HTML elements, and you can keep your code DRY (Don&rsquo;t repeat yourself). Selectors can inherit styles from other selectors and thus be easily extended when needed.</p>
<h3 id="operators">Operators</h3>
<p>The ability to perform calculations in CSS allows for expanded possibilities, such as converting pixel values to percentages. You can access standard mathematical functions such as addition, subtraction, multiplication, and division. Of course, these functions can be combined to create complex calculations.</p>
<p>Additionally, Sass includes some built-in functions to help manipulate numbers. Functions like <code>percentage()</code>, <code>floor()</code>, and <code>round()</code> to name a few.</p>
<p>If you didn&rsquo;t know about this tool before, start using it in your current project; you&rsquo;ll surely not regret it!</p>
<p>If you already knew about it, I hope I may have revealed some additional features of this fantastic tool!</p>
<p>Happy coding!&rdquo;</p>
]]></content>
		</item>
		
		<item>
			<title>Slow WordPress Site? Here&#39;s How to Increase Performance!</title>
			<link>https://albertoreineri.it/en/blog/slow-wordpress-site-heres-how-to-increase-performance/</link>
			<pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/slow-wordpress-site-heres-how-to-increase-performance/</guid>
			<description>&amp;ldquo;Do you have a slow WordPress site? Does it frequently freeze, leaving you frustrated just by looking at it? Let&amp;rsquo;s see how to improve it!
WordPress is the world&amp;rsquo;s most widely used platform for creating websites, but it often happens that it is used in a non-optimal way.
This can cause serious slowdowns on the site.
WordPress, while fantastic, comes with a somewhat heavy core of its own, and if you install themes and plugins left and right, it will soon become extremely slow, not only damaging the user experience but also affecting SEO indexing.</description>
			<content type="html"><![CDATA[<p>&ldquo;Do you have a slow WordPress site? Does it frequently freeze, leaving you frustrated just by looking at it? Let&rsquo;s see how to improve it!</p>
<p>WordPress is <strong>the world&rsquo;s most widely used platform</strong> for creating websites, but it often happens that it is used in a non-optimal way.</p>
<p>This can cause <strong>serious slowdowns</strong> on the site.</p>
<p>WordPress, while fantastic, comes with a somewhat <strong>heavy core</strong> of its own, and if you install themes and plugins <strong>left and right</strong>, it will soon become <strong>extremely slow</strong>, not only damaging the user experience but also affecting SEO indexing.</p>
<h2 id="what-slows-down-your-wordpress-site">What Slows Down Your WordPress Site?</h2>
<p>The reasons your WordPress site is slow can be <strong>varied</strong>. Here are the main causes listed:</p>
<ul>
<li><strong>Web Hosting</strong>: If the web hosting server is not configured correctly or is of poor quality, the site will undoubtedly be affected. You can have a perfectly developed site, but if the server it runs on is not optimized, the results will be poor.</li>
<li><strong>WordPress Configuration</strong>: If your site does not offer cache storage, it can overload the server, causing slowdowns or site crashes.</li>
<li><strong>Image Size</strong>: One of the major causes of slowdowns is huge images. Many large images on the same page will significantly slow down loading times.</li>
<li><strong>Low-Quality Plugins</strong>: Using plugins with errors, incorrect code, or unnecessary features will undoubtedly result in slowdowns, if not security issues.</li>
<li><strong>External Scripts</strong>: All various scripts external to the site, such as ads, fonts, tracking systems, etc., will slow down the site.</li>
</ul>
<p>But let&rsquo;s go into more detail.</p>
<h2 id="having-good-hosting-makes-a-difference">Having Good Hosting Makes a Difference</h2>
<p>Hosting is <strong>the foundation on which your site is built</strong>. If the foundations are not of quality, no matter how perfect what is built on them is, it will undoubtedly be destined to <strong>collapse</strong>.</p>
<p>Having good hosting service, with <strong>state-of-the-art features</strong> and 24/7 support, allows you to sleep soundly, have everything under control, and be <strong>sure</strong> that the site will run correctly at all times.</p>
<p>As mentioned earlier, you can have a perfectly developed site, fully optimized, with images of the right size, scripts loaded correctly, everything perfect. <strong>But if the hosting is not good, this site will still perform poorly.</strong></p>
<p>I have already created a custom theme from scratch, spending many hours optimizing each server request so as not to overload it as much as possible, and then get poor results in performance tests. This is very frustrating and <strong>harmful</strong> to the website.</p>
<p>You need to rely on true professionals who can <strong>choose the best service based on your needs</strong>.</p>
<p>There is no perfect hosting always; you need to <strong>evaluate the needs</strong> and choose accordingly.</p>
<h2 id="wordpress-configuration">WordPress Configuration</h2>
<h3 id="cache">Cache</h3>
<p>It is possible to speed up a slow WordPress site quickly and easily by installing a plugin for <strong>cache management</strong>.</p>
<p>There are many, even free ones, but it is necessary to know how to <strong>configure them correctly</strong>.</p>
<p>You can get good results by using the default configurations of the plugin, but by setting <strong>each parameter individually</strong> based on the site, <strong>performance will increase significantly</strong>.</p>
<h3 id="updates">Updates</h3>
<p>Another best practice is always to keep the site updated. Not updating is also risky from a security standpoint, so <strong>always ensure that your site is up to date, as well as various plugins.</strong></p>
<h2 id="optimize-images">Optimize Images</h2>
<p>Having many images is one of the first causes of a slow WordPress site.</p>
<p>However, the solution is not to remove them all and have pages with only text. Fortunately, there are many tools that can <strong>optimize images</strong> for the web.</p>
<p>The best software to optimize an image for the web is <strong><a href="https://www.adobe.com/it/products/photoshop.html">Photoshop</a></strong>, but you can also do it for free with online tools like <strong><a href="https://pixlr.com/e/">Pixlr</a></strong>.</p>
<p>Images must be saved in the <strong>correct dimensions</strong>; it is useless to have a 5000x5000 image. Exceeding 1920 px in width is almost always unnecessary, so make sure to load images in the correct and <strong>lightest possible format</strong>.</p>
<h3 id="formats">Formats</h3>
<p>Use only two types of formats: <strong>JPG and PNG</strong>.</p>
<p><strong>PNG</strong> should only be used when the image has <strong>transparencies</strong>, for example, a logo.</p>
<p>For all <strong>photos</strong>, I recommend using <strong>JPG</strong> because it is lighter.</p>
<h2 id="be-careful-with-plugins">Be Careful with Plugins</h2>
<p>Plugins are very useful for a WordPress site, but you should <strong>never install them too lightly</strong>.</p>
<p>Before installing a new plugin, always check the <strong>update log</strong>, see if it is still <strong>maintained</strong> by the developers, and take a look at the <strong>reviews</strong>.</p>
<p>Also, it is important to <strong>always update them</strong> to the latest version.</p>
<p>Having too many poorly developed plugins causes <strong>huge problems</strong> for WordPress sites, both for <strong>performance</strong> and <strong>security</strong>.</p>
<h2 id="external-scripts">External Scripts</h2>
<p>Many times it is essential to include external scripts, such as Google Ads. However, these have a <strong>negative impact on performance</strong>. It is necessary to take this into account and <strong>optimize elsewhere if absolutely necessary</strong>.</p>
<h2 id="conclusion">Conclusion</h2>
<p><strong>Having a fast and efficient WordPress site is possible; you just need to develop it properly.</strong></p>
<p>The best solution is always to <strong>use a professionally developed theme from scratch</strong>, built based on the site&rsquo;s needs.</p>
<p><strong>Generic themes</strong>, free or paid, are created to be used for various types of websites and therefore have many <strong>features that often prove useless</strong> and slow down the site.</p>
<p>The same goes for <strong>plugins</strong>. Where possible, it is always better to use a <strong>plugin developed from scratch</strong> specifically for the functionality it needs to perform.</p>
<p>The best solution for having a high-performance WordPress site is, therefore, to <strong>rely on a WordPress expert</strong> who can understand the site&rsquo;s needs and <strong>create the best solution</strong>. This ensures <strong>high performance</strong> and also a higher level of <strong>security</strong>.&rdquo;</p>
]]></content>
		</item>
		
		<item>
			<title>How to choose the right technology for your website?</title>
			<link>https://albertoreineri.it/en/blog/how-to-choose-the-right-technology-for-your-website/</link>
			<pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/how-to-choose-the-right-technology-for-your-website/</guid>
			<description>Choosing the right technology for your website is a crucial step.
Being online is essential today!
A website allows you to be easily found by everyone worldwide, creates a corporate image, enables fast communication with your customers, and much more&amp;hellip; In short, it undoubtedly brings benefits to businesses of all types, whether large or small.
But not all websites are the same!
There are various types of websites (showcase, blog, e-commerce, etc.</description>
			<content type="html"><![CDATA[<p>Choosing the right technology for your website is a crucial step.</p>
<p><strong>Being online is essential today</strong>!</p>
<p>A <strong>website</strong> allows you to be <strong>easily found</strong> by everyone worldwide, creates a <strong>corporate image</strong>, enables <strong>fast communication</strong> with your customers, and much more&hellip; In short, it undoubtedly brings <strong>benefits</strong> to businesses <strong>of all types</strong>, whether large or small.</p>
<p><strong><em>But not all websites are the same!</em></strong></p>
<p>There are various <strong>types of websites</strong> (showcase, blog, e-commerce, etc.), but, above all, there are <strong>many technologies with which to build them.</strong></p>
<p>For the <strong>non-professionals</strong>, knowing how their website was created might not matter; what&rsquo;s important is that it works! <strong>But knowing a bit more can make a big difference.</strong></p>
<p><em>When building a house, we always ensure that the best materials are used!</em></p>
<p>This should also be the case for websites. It&rsquo;s good to rely on experts in the field, web developers, or web agencies, but <strong>it&rsquo;s better not to blindly trust</strong> and insist on understanding how the project will be executed.</p>
<p>For example, much is said about <strong>WordPress</strong>, a fantastic platform (this site is built on WordPress) when used correctly, but it&rsquo;s not the only or always the best option.</p>
<h2 id="wordpress-yes-but-how-is-it-used">WordPress, yes, but how is it used?</h2>
<p>WordPress is the <strong>most widely used platform worldwide</strong> for website development. It allows for very good results with a low time investment, thus <strong>lower costs</strong> compared to other solutions.</p>
<p><strong><em>But there&rsquo;s a right and wrong way to use it.</em></strong></p>
<p>WordPress is so widespread that there are <strong>thousands of free and paid themes</strong> to create a website, and developers often take advantage of it.</p>
<p>Selling a WordPress site for â¬2,000 &ldquo;developed&rdquo; by purchasing a â¬50 theme and slightly configuring it is borderline fraud&hellip; Yet it happens, and quite often.</p>
<p>For this reason, it&rsquo;s <strong>better to investigate a bit</strong> about what you&rsquo;re having built, ask questions, and be persistent in knowing how the final product will be realized.</p>
<p>Personally, when I choose to use WordPress, I <strong>develop the theme and plugins dedicated to the project entirely from scratch</strong>. This allows for having a <strong>unique, performant, and secure</strong> site without significantly impacting the final cost. An experienced developer, with the right skills, can create a complete WordPress theme from scratch in a few weeks, not more.</p>
<p>In addition to this site you are reading, I can give you the example of <strong><a href="http://bikeitalia.it/">Bikeitalia.it</a></strong>, a truly enormous site, with peaks of <strong>users exceeding 4,000 at the same time.</strong> Well, that site is based on <strong>WordPress</strong>, but the theme was <strong>built from scratch.</strong></p>
<p><strong>So, WordPress is not bad at all, provided it&rsquo;s used correctly.</strong> This will prevent unpleasant surprises like performance drops or, worse, security vulnerabilities.</p>
<h2 id="javascript">Javascript</h2>
<p>Today there are also many <strong>Javascript frameworks</strong> that allow for creating modern, <strong>lightweight, and very fast websites!</strong></p>
<p>You can use React, Angular, or Vue, or even <strong>Gatsby</strong>, a framework based on React that allows for creating beautiful websites in a short time. In this case, however, the <strong>content management will be completely different, often more complicated.</strong></p>
<p>But if you want to <strong>focus on performance</strong>, this is undoubtedly the best choice.</p>
<h2 id="proprietary-cms">Proprietary CMS</h2>
<p>A third option is proprietary CMS. Many web agencies and developers <strong>have their own website creation systems.</strong></p>
<p>These can be <strong>good</strong> or <strong>bad</strong> solutions, depending on the developers. In any case, <strong>since they are developed from scratch, they usually allow for maximum configuration.</strong></p>
<p>You can do whatever you want without having to adhere to the laws of CMS and frameworks.</p>
<p>However, it&rsquo;s necessary to <strong>ensure that these frameworks are up-to-date</strong>, not stuck in the past.</p>
<p>Here are some <strong>tips</strong> to understand if they are up to today&rsquo;s standards:</p>
<h3 id="seo-friendly-urls">SEO-Friendly URLs</h3>
<p>If the <strong>page URL ends with &ldquo;.php&rdquo;, &ldquo;.asp&rdquo;, &ldquo;.html&rdquo;</strong>, or something similar, it means that there is no real routing system on the site, and this does not allow for good URLs, which are more appreciated by Google.</p>
<p><strong>Good URL example</strong>: &ldquo;<a href="http://www.yoursite.com/contact/%22">http://www.yoursite.com/contact/&quot;</a></p>
<p><strong>Not-so-good URL example</strong>: &ldquo;<a href="http://www.yoursite.com/contact.asp%22">http://www.yoursite.com/contact.asp&quot;</a></p>
<h3 id="indices-in-urls">Indices in URLs</h3>
<p>If you see codes and mathematical symbols in the URL, <strong>the security of the site may be at risk</strong>. Many systems &ldquo;pass&rdquo; database indices in the URL, but this can be <strong>used by hackers for a direct attack on the database.</strong> So, if you see a URL like &ldquo;<a href="http://www.yoursite.com/article.php?id=45%22">http://www.yoursite.com/article.php?id=45&quot;</a>, then the system is <strong>not very secure.</strong></p>
<h2 id="404-errors">404 Errors</h2>
<p>Another characteristic of systems developed from scratch is that they often don&rsquo;t have a <strong>management for errors</strong>, such as the classic 404 Page Not Found. To find out, simply go to a site and enter random text after the domain, for example, &ldquo;<a href="http://yoursite.com/goodbye%22">http://yoursite.com/goodbye&quot;</a>. If there is a 404 page in the site, great, if you see the server error on a blank and ugly page, then it&rsquo;s not ideal.</p>
<p>All these little things can <strong>make your efforts to create a functional website fail</strong>, affecting <strong>Google indexing</strong>, <strong>performance</strong>, and <strong>security</strong>.</p>
<h2 id="orange-cms">Orange CMS</h2>
<p>An example of a proprietary CMS is <strong><a href="/orange">Orange CMS</a></strong>, my solution developed entirely from scratch.</p>
<p>If you want, <strong><a href="/orange">you can take a look</a></strong>, enter the backend, and <strong>create and view articles and pages.</strong> I have already used it for many sites, and the results have always been very good, superior to WordPress in terms of <strong>performance</strong>, but it all depends on the features you</p>
<p>want.</p>
<p>I hope this article has helped you <strong>understand how to approach the creation of your new website.</strong> Remember that the choice of technology is crucial, and <strong>you will carry it with you for a long time</strong>, so it must be done with method and professionalism.</p>
]]></content>
		</item>
		
		<item>
			<title>CMS, Framework or Core Language?</title>
			<link>https://albertoreineri.it/en/blog/cms-framework-or-core-language/</link>
			<pubDate>Wed, 09 Oct 2019 21:26:11 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/cms-framework-or-core-language/</guid>
			<description>CMS, Framework, Core Languageâ¦ Nowadays, when approaching a new project, we have the opportunity to use highly advanced tools that allow us to speed up and facilitate the work.
CMS systems are increasingly successful; it is said that half of the world&amp;rsquo;s websites are created with WordPress (although this data changes frequently&amp;hellip;). Frameworks are also thriving today, becoming more advanced and sophisticated.
And what about good old handwritten code? Does it still exist?</description>
			<content type="html"><![CDATA[<p>CMS, Framework, Core Languageâ¦ Nowadays, when approaching a new project, we have the opportunity to use highly advanced tools that allow us to speed up and facilitate the work.</p>
<p><strong>CMS</strong> systems are increasingly successful; it is said that half of the world&rsquo;s websites are created with WordPress (although this data changes frequently&hellip;). <strong>Frameworks</strong> are also thriving today, becoming more advanced and sophisticated.</p>
<p>And what about good old <strong>handwritten code</strong>? Does it still exist?</p>
<p>But let&rsquo;s go step by step. I will try to analyze each of these three options, highlighting strengths and weaknesses, and finally, I will share my opinion.</p>
<h2 id="1-cms">1. CMS</h2>
<p><strong>Content Management Systems (CMS)</strong> allow managing a site&rsquo;s content without having programming knowledge. In practice, they offer an interface to write articles and pages almost as if you were using Word. The CMS translates this page into <strong>HTML</strong> so that it can be viewed by a browser.</p>
<p>Modern CMS, especially <strong><a href="https://en.wordpress.org/">WordPress</a></strong>, can greatly speed up website creation. There are even <strong>plugins</strong> to create the site&rsquo;s graphics without writing a single line of HTML.</p>
<p>They are the perfect solution for <strong>creating blogs</strong> (the reason they were created), but they can also be used for showcase sites, landing pages, and <strong>low-budget</strong> projects.</p>
<p>They boast a <strong>huge number of plugins</strong>, simplifying developers&rsquo; lives by providing pre-packaged services to configure.</p>
<p>On the downside, they may carry a lot of <strong>not always useful dependencies</strong>. Especially when using <strong>plugins, you need to be very careful</strong>; otherwise, you may make the page very heavy and significantly <strong>slow down</strong> the site&rsquo;s performance.</p>
<p><em>Personally, I&rsquo;m not a big fan of CMS, but I recognize that if used for the purpose for which they were created, they are fantastic. For a blog, in my opinion, there is no better solution. Creating a theme from scratch is not very difficult, and you can quickly build an updatable platform.</em></p>
<h2 id="2-framework">2. Framework</h2>
<p>Frameworks are very different from CMS and should never be compared. <strong>If a CMS delivers ready-made solutions, a framework just sets the table.</strong></p>
<p>Frameworks <strong>offer a series of libraries</strong> that speed up project development but <strong>do not replace the programmer&rsquo;s work</strong>. To use a framework, <strong>in-depth knowledge</strong> of the language it is written in is required.</p>
<p>This is an excellent solution for <strong>medium/large projects</strong>. All frameworks offer a <strong>well-organized working environment</strong>, reducing the chance of writing bad code and increasing the speed at which code is written.</p>
<p>They also <strong>manage many security issues</strong>, removing them from the developer&rsquo;s mind, who can focus solely on project development.</p>
<p>I personally really like <strong>Laravel</strong>. Fast, secure, and tidy. Plus, it&rsquo;s written in PHP, which is the language I use the most at the moment.</p>
<p>In the near future, however, I plan to thoroughly study <strong>Django</strong>, which seems to be doing great and is much faster than Laravel, but we&rsquo;ll see what the future holds&hellip;</p>
<h2 id="3-pure-language">3. Pure Language</h2>
<p>A third way to develop your projects online is to <strong>build everything from scratch.</strong></p>
<p>Of course, it may seem <strong>stupid</strong> to start from scratch when the above tools already exist, <strong>but it can have its advantages.</strong></p>
<p>If a developer knows a language <strong>very well</strong>, they can <strong>build their own framework and personal CMS.</strong> This is not about &ldquo;reinventing the wheel&rdquo; every time, but doing it only once and reusing it later. Of course, <strong>this has its disadvantages in terms of security and scalability, but it also has many advantages, especially speed.</strong></p>
<p>Well-written core PHP is much faster than Laravel.</p>
<p>Certainly, in this way, you will need to handle all the problems yourself, without thinking that there is already a ready-made program. But a developer is still a developer, and this is his job.</p>
<p>Time and budget are always a problem, which is why the pure language is often disparaged in favor of CMS or frameworks, but where possible, it can also be a solution.</p>
<h2 id="my-opinion">MY OPINION</h2>
<p>Among CMS, Framework, and Core language, I use all three methods. Over the years, I created my own framework and personal CMS, allowing me to <strong>manage projects 100%</strong>, <strong>customizing every tiny part of the back-end, front-end, and UX very quickly.</strong> Certainly, <strong>it took some time</strong> to create them, and it takes time from time to time to update them and keep up with the times, but this way, I can handle everything I do, <strong>I am the real &ldquo;owner&rdquo; of my project.</strong></p>
<p>Sometimes, however, it is simpler to use a CMS or a framework, <strong>depending on the type of project you want to create.</strong></p>
<p>In terms of <strong>speed</strong>, if you write good code, nothing beats the <strong>core language</strong>. In terms of <strong>scalability</strong>, if many people work on the same project, if a high level of security is required, and if complicated database relationships need to be managed, then a good solution may be to use a <strong>framework</strong>.</p>
<p>Finally, for a <strong>blog</strong> or for simple sites with a low budget, a <strong>CMS</strong> can be used, which will surely be slower than the previous solutions but will take care of many problems, removing a burden from the developer.</p>
<p>This is what I have noticed using these tools. What do you think? Are you a huge fan of WordPress and therefore snub the other options, or do you still write code?</p>
<p>How do you choose between CMS, Framework, and core language?</p>
<p>Let me know in the comments.</p>
<p>Happy coding to everyone!</p>
]]></content>
		</item>
		
		<item>
			<title>Gulp.js in WordPress Theme</title>
			<link>https://albertoreineri.it/en/blog/gulp.js-in-wordpress-theme/</link>
			<pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/gulp.js-in-wordpress-theme/</guid>
			<description>For some time, I&amp;rsquo;ve been working on fairly large projects, and it&amp;rsquo;s not always easy to manage everything without getting lost in the thousands of files and folders within the project.
Code organization is a fundamental part of software development, be it web, desktop, or mobile.
Fortunately, today we can use tools that help us in the development and project management process.
One of these tools is Gulp.js!
What is Gulp.</description>
			<content type="html"><![CDATA[<p>For some time, I&rsquo;ve been working on <strong>fairly large projects</strong>, and it&rsquo;s not always easy to manage everything without getting lost in the <strong>thousands of files and folders</strong> within the project.</p>
<p><strong>Code organization</strong> is a fundamental part of software development, be it web, desktop, or mobile.</p>
<p>Fortunately, today we can use tools that help us in the <strong>development and project management process</strong>.</p>
<p>One of these tools is <strong>Gulp.js!</strong></p>
<h2 id="what-is-gulpjs">What is Gulp.js</h2>
<p>Gulp is a <strong>task runner</strong>, a program that allows you to <strong>automate a series of repetitive and constant tasks</strong>, such as minifying CSS and JS code, refreshing on every save, synchronizing web pages, optimizing images, and much more.</p>
<p><em><strong>To simplify</strong></em>, once Gulp is correctly set up within my project, every time I save a file, Gulp automatically checks the operation just performed (saving) and acts accordingly. In this case, it refreshes the browser.</p>
<p>If I modify a CSS file, on saving, Gulp will minify the file and refresh the browser!</p>
<p>Imagine a project that takes months to develop; being able to avoid <strong>refreshing the browser every time</strong>, compiling SASS files, optimizing images, etc., allows developers to <strong>save a lot of time</strong> or, at the very least, focus on something other than mundane and repetitive actions!</p>
<h2 id="gulp-and-wordpress">Gulp and WordPress</h2>
<p>The beauty of Gulp is that it can be used in <strong>any type of project</strong>, even during the development of a <strong>theme</strong> or <strong>plugin</strong> for <strong>WordPress</strong>, greatly <strong>speeding up</strong> programming times!</p>
<p>If you want to install and <strong>start using</strong> Gulp, I recommend this article: <a href="https://css-tricks.com/gulp-for-beginners/">https://css-tricks.com/gulp-for-beginners/</a>. That&rsquo;s where I started!</p>
<h2 id="my-gulp-for-wordpress">My Gulp for WordPress!</h2>
<p>If you want a <strong>starting point</strong> to configure <strong>Gulp</strong> in your project, you can look on <a href="https://github.com/albertoreineri/">my GitHub profile</a>. I have included <a href="https://github.com/albertoreineri/gulp-for-wordpress">my file</a> for <strong>basic Gulp configuration in WordPress.</strong></p>
<p>In my latest project using <strong>Gulp</strong>, I automated the following tasks:</p>
<ul>
<li>Refresh on every modification of any file</li>
<li>Optimize <strong>images</strong></li>
<li>Combine all <strong>SCSS</strong> files into one, compile it, and minify it</li>
<li>Combine all <strong>JS</strong> files into one and minify it</li>
</ul>
<p>To use <strong>Gulp</strong>, you need to split the folder with the site&rsquo;s resources. One will be the development folder, aptly named &ldquo;<strong>src</strong>&rdquo;, and the other will be the one that will be published, called &ldquo;<strong>assets</strong>.&rdquo;</p>
<p>On GitHub, you can find my configuration file to handle <strong>Gulp tasks within a WordPress theme.</strong></p>
<p>To <strong>get started</strong>, you just need to copy my gulpfile.js into your theme and run this command from the CLI:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>npm install --save-dev gulp gulp-imagemin gulp-uglify gulp-sass browser-sync del gulp-concat gulp-clean
</span></span></code></pre></div><p>Now all you have to do is <strong>modify line 3</strong> of the file by entering the path to your WordPress project.</p>
<p>I hope I&rsquo;ve encouraged you to <strong>use this tool.</strong> Although it&rsquo;s a bit complicated to set up, I&rsquo;m sure that once you&rsquo;ve understood it thoroughly, you <strong>won&rsquo;t be able to do without it!</strong></p>
<p>Let me know what you think in the <strong>comments</strong>, and <strong>happy coding!</strong></p>
]]></content>
		</item>
		
		<item>
			<title>How to choose a Framework</title>
			<link>https://albertoreineri.it/en/blog/how-to-choose-a-framework/</link>
			<pubDate>Sat, 14 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/how-to-choose-a-framework/</guid>
			<description>Today, &amp;ldquo;from scratch&amp;rdquo; development is becoming less common. Lower budgets and tighter timelines have forced most developers to start from an existing foundation when creating their projects.
I still personally love developing &amp;ldquo;from scratch,&amp;rdquo; but living in today&amp;rsquo;s world and unable to spend nights writing code, I had to adapt to the current environment and start using some frameworks myself.
For some, these may be simple tips, but many times when faced with the choice between angular, vue, react, or laravel or codeigniter, the decision can be challenging.</description>
			<content type="html"><![CDATA[<p>Today, &ldquo;from scratch&rdquo; development is becoming less common. Lower budgets and tighter timelines have forced most developers to start from an existing foundation when creating their projects.</p>
<p>I still personally love developing &ldquo;from scratch,&rdquo; but living in today&rsquo;s world and unable to spend nights writing code, I had to adapt to the current environment and start using some frameworks myself.</p>
<p>For some, these may be simple tips, but many times when faced with the choice between <a href="https://angular.io/">angular</a>, <a href="https://vuejs.org/">vue</a>, <a href="https://reactjs.org/">react</a>, or <a href="https://laravel.com/">laravel</a> or <a href="https://codeigniter.com/">codeigniter</a>, the decision can be challenging.</p>
<h2 id="premise">Premise</h2>
<p>Before delving into the various points of the article, I&rsquo;d like to remind you of a general maxim: <strong>you cannot use a framework well without knowing the language in which it is written.</strong></p>
<p>You cannot use Bootstrap well without knowing CSS, Laravel without knowing PHP, or React without knowing JavaScript. In this profession, having solid foundations truly makes a difference between copying code from Stack Overflow and writing it knowing exactly what you are doing, why, and the general repercussions on the project.</p>
<h2 id="what-is-the-purpose-of-a-framework">What is the purpose of a framework?</h2>
<p>The first and most obvious question should be: &ldquo;<strong>What should the framework do?</strong>&rdquo; Unfortunately, this question is often ignored.</p>
<p>Using a <strong>framework created to fulfill a specific purpose</strong> is simpler than adapting another one to our needs. Using jQuery to manipulate data structures is certainly not the best choice. Therefore, you must have a clear goal in mind to make the right choice.</p>
<h2 id="4-characteristics-to-choose-a-framework">4 characteristics to choose a framework</h2>
<p>I want to highlight <strong>4 important characteristics</strong> to keep in mind when choosing a new framework:</p>
<ul>
<li>Time</li>
<li>Properties and technical features</li>
<li>Community involvement</li>
<li>Consequences of the choice</li>
</ul>
<p>These are <strong>the four keys</strong> to make a good choice.</p>
<p>Of course, there are <strong>advantages and disadvantages</strong> to each framework, but keeping these four points in mind can help make a correct decision.</p>
<h3 id="time">Time</h3>
<p><em>In a constantly rushing world, time is crucial.</em></p>
<p>The <strong>time factor</strong> is crucial in choosing a framework. Why? Because without <strong>time to study, test, and develop it,</strong> it is useless to think of using it.</p>
<p>Often we have <strong>little time to deliver a project,</strong> and introducing a new framework will almost certainly cause delays. Therefore, in terms of planning ahead, we need to check the <strong>amount of code</strong> that this framework will make us write. Not just the <strong>actual time</strong> it will take to write it, but also <strong>how complex</strong> the code you and your team will have to write will be, as it will also cause a significant loss of time.</p>
<p>The level of complexity also affects how <strong>manageable</strong> it will be. So, <strong>the more code you write, the more difficult it becomes to support it later.</strong> Thus, more code leads to more errors.</p>
<p>I found this simple programming rule online: <em>e = mcÂ² (errors = more code^2)</em></p>
<h3 id="properties-and-technical-features">Properties and technical features</h3>
<p>The choice of a framework can be influenced by <strong>technical aspects</strong>, community opinions, and what can be found in the framework&rsquo;s documentation.</p>
<p>Do not be deceived by what you read in forums. The best way to know if what is being talked about is real is simple: <strong>test it.</strong></p>
<p>However, as mentioned earlier, due to <strong>limited time</strong>, testing a framework might be a luxury we cannot afford. Therefore, try to <strong>extrapolate the most important technical feature</strong> from the available information.</p>
<p>Is the framework suitable for the structure of the project we have or want to implement? <strong>Using a framework designed for a specific task is easier than adapting one to our needs.</strong></p>
<p>Will it be better in terms of <strong>performance</strong>? There&rsquo;s no point in opting for a slow framework during development that will also be slow in execution.</p>
<p>If we are choosing a front-end framework, it is important to check <strong>browser compatibility.</strong></p>
<p>Lastly, as I mentioned in the introduction to this article, you must <strong>know the basics:</strong> to be able to correctly choose a structure, you need to have the basics and requirements to fully understand it. When you choose a framework, you must <strong>know what you are talking about.</strong> By this, I mean you need to know the purpose of a framework. If you do not have basic knowledge, learning a framework will be useless as you will not be able to fully understand it.</p>
<p><em>If you are not prepared, learn the basics first.</em></p>
<h3 id="community-involvement">Community involvement</h3>
<p>What makes a framework worth considering? <strong>The people who use it.</strong> Okay, but how can we <strong>understand if a framework has an active community?</strong></p>
<p>There are <strong>several factors</strong> that can help us understand the community involvement for a particular technology:</p>
<ul>
<li>How many people talk about it on the web?</li>
<li>How many people continue to use it?</li>
<li>How often do developers respond to bug reports?</li>
<li>How many pull requests?</li>
</ul>
<p>These are just some of the questions that can give you some information about community involvement.</p>
<h3 id="what-are-the-advantages-of-a-crowded-framework">What are the advantages of a &ldquo;crowded&rdquo; framework?</h3>
<p>An active community considerably increases <strong>documentation</strong> on a particular technology, thus <strong>reducing the time</strong> required for research and learning.</p>
<p>Moreover, if the company you work for is growing, it will be much easier to <strong>find collaborators</strong> familiar with the framework due to its popularity.</p>
<p>However, not always an active community is enough to direct our choice. After ascertaining the existence of a good community, you need to check <strong>how many of these people</strong> (preferably large companies) <strong>actually use this technology in a production environment!</strong></p>
<p>Discovering who uses a particular technology is far from easy, but creators often <strong>mention the companies</strong> that use the framework and, in that case, check how they implement this technology and for what purpose.</p>
<p>Usually, development teams of these technologies release a <strong>roadmap on their future plans,</strong> so check what <strong>they have in mind.</strong></p>
<h3 id="consequences-of-the-choice">Consequences of the choice</h3>
<p>Before finalizing the choice, we should take a moment to think about the <strong>possible consequences</strong> of what choosing the new framework could entail in the development environment.</p>
<p>Remember that if you work <strong>in a team,</strong> it might be more difficult for others to learn a new framework. <strong>How much do you think they could take to get familiar with it</strong> and how much time do you think they can dedicate to learning it? Should they know something else before studying?</p>
<p><strong>The choice must be weighed and discussed</strong> multiple times to see especially what <strong>the team thinks</strong> about it.</p>
<h2 id="conclusions">Conclusions</h2>
<p>There is no golden rule that guarantees a 100% right choice. Only practice and time will allow us to understand this.</p>
<p>In this article, I hope I managed to give you ideas to start facing your choice, <strong>but remember:</strong></p>
<p><em>It&rsquo;s not about finding the best framework; it&rsquo;s about finding the</em> <strong>right</strong> <em>framework.</em></p>
]]></content>
		</item>
		
		<item>
			<title>Configuring the PC for Web Development with Free Software</title>
			<link>https://albertoreineri.it/en/blog/configuring-the-pc-for-web-development-with-free-software/</link>
			<pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/configuring-the-pc-for-web-development-with-free-software/</guid>
			<description>Let&amp;rsquo;s see which free software we can use for web development.
Are you getting into the programming world and want to start developing some websites or a small web app? Congratulations! Welcome to the fantastic world of Web Development!
To start, you&amp;rsquo;ll need to install the necessary programs to write your first code and make what you&amp;rsquo;ve written &amp;ldquo;run.&amp;rdquo; In this article, we&amp;rsquo;ll quickly go over the software you&amp;rsquo;ll need.</description>
			<content type="html"><![CDATA[<p>Let&rsquo;s see which free software we can use for web development.</p>
<p>Are you getting into the programming world and want to start developing some websites or a small web app? Congratulations! Welcome to the fantastic world of Web Development!</p>
<p>To start, you&rsquo;ll need to install the necessary programs to write your first code and make what you&rsquo;ve written &ldquo;run.&rdquo; In this article, we&rsquo;ll quickly go over the software you&rsquo;ll need.</p>
<p>Let&rsquo;s set aside the eternal debate about which operating system is better for a particular thing, the trends that lead to choosing one PC over another, and things like that. All the software mentioned in this article is available for Windows, Mac, and Linux.</p>
<p>So, let&rsquo;s see what we need to develop websites and web apps.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/243UeRVMtFI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="1-browser">1. BROWSER</h2>
<p>If we intend to do some web development, the fundamental software we need is a browser. All operating systems come with a pre-installed browser, but my recommendation is to use <a href="https://www.google.com/intl/en/chrome/"><strong>Google Chrome</strong></a>. This browser is very fast and offers a set of very useful <strong>developer tools</strong>.</p>
<p>I won&rsquo;t dwell on this point because you&rsquo;re probably already using Chrome or know perfectly well what it is. Let&rsquo;s move on and see other free software for web development.</p>
<h2 id="2-text-editor">2. TEXT EDITOR</h2>
<p>To do web development, you need to write code, and to write code, you need a text editor. It&rsquo;s possible to write code even with Notepad, but it&rsquo;s certainly not an optimal solution.</p>
<p>My recommendation is to use <a href="https://code.visualstudio.com/">Visual Studio Code</a>, a fantastic free software from Microsoft!</p>
<p>Rich in features and extensions, it allows you to manage projects very well, also thanks to the internal <strong>terminal</strong> in the interface.</p>
<p>This is definitely the essential program for any programmer.</p>
<h2 id="3-local-server">3. LOCAL SERVER</h2>
<p>To &ldquo;make&rdquo; our projects run on our computer, it&rsquo;s necessary to install a local server to make them work.</p>
<p>I&rsquo;ve been using <a href="https://www.apachefriends.org/index.html">XAMPP</a> for years, also free software that includes <strong>MySQL</strong>. Incredibly useful and easy to use, it allows you to configure a local server and start your project in <strong>PHP</strong> in just a few minutes.</p>
<p>Essential for creating sites in <strong>WordPress</strong>, for projects in PHP frameworks like <strong>Laravel</strong> or <strong>CodeIgniter</strong>, or even for work in <strong>Core PHP</strong>.</p>
<h2 id="4-ftp-client">4. FTP CLIENT</h2>
<p>Once we&rsquo;ve finished our site, we need to <strong>upload it online</strong>!</p>
<p>To do this, you can use an <strong>FTP Client</strong> that allows you to <strong>connect to the hosting</strong> and upload the site&rsquo;s files.</p>
<p>The most commonly used software for this task is definitely <a href="https://filezilla-project.org/">FileZilla</a>. Free, simple, and intuitive, it&rsquo;s the right choice for setting up your site easily, quickly, and efficiently.</p>
<h2 id="5-graphics">5. GRAPHICS</h2>
<p>Finally, let&rsquo;s not forget that every project also has a graphic part!</p>
<p>To <strong>develop the layouts</strong> of your projects, I recommend using <a href="https://www.figma.com/">Figma</a>. I&rsquo;ve been using this software for a while, and I&rsquo;m really satisfied, plus it&rsquo;s <strong>completely free</strong>! Just sign up with your Google account, and voilÃ ! You can start creating fantastic web layouts and more!</p>
<p>All these software are <strong>free</strong> and <strong>cross-platform</strong>, except for the next one, unfortunately.</p>
<p>I&rsquo;m talking about <a href="https://www.adobe.com/products/photoshop.html">Photoshop</a>, a fabulous Adobe software that allows you to do everything you want with photos and images. Although many of these things can also be done with Figma, <strong>I still can&rsquo;t completely detach myself from this software</strong>, which remains the only paid one in my setup&hellip;</p>
<p>If you want to try a valid alternative, there&rsquo;s <a href="https://www.gimp.org/">Gimp</a>, which they say should be very powerful. Unfortunately, having started with Photoshop and knowing it quite well by now, I don&rsquo;t feel like starting from scratch to learn a new program&hellip; I&rsquo;ll leave it up to you to judge!</p>
<p>That&rsquo;s <strong>all you need</strong>! Now you can start getting creative with <a href="https://open.spotify.com/show/546eUw3PsRI1HUGbBUeghC">code and design</a> and create your first projects!</p>
<p>Thanks for reading this article.</p>
<p><em>Happy coding!</em></p>
]]></content>
		</item>
		
		<item>
			<title>GIT! What is it???</title>
			<link>https://albertoreineri.it/en/blog/git-what-is-it/</link>
			<pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/git-what-is-it/</guid>
			<description>Git is fantastic version control software created by a pretty good programmer: Linus Torvalds.
WHO IS LINUS TORVALDS? For the few who don&amp;rsquo;t know who this person is (I hope they are really very few&amp;hellip;), he is the creator of Linux. If we consider that more than half of the web and the majority of smartphones operate thanks to code written by him, we all owe him gratitude for his genius and generosity.</description>
			<content type="html"><![CDATA[<p><strong>Git</strong> is fantastic version control software created by a pretty good programmer: <strong>Linus Torvalds.</strong></p>
<h2 id="who-is-linus-torvalds">WHO IS LINUS TORVALDS?</h2>
<p>For the few who don&rsquo;t know who this person is (I hope they are really very few&hellip;), he is the creator of <strong>Linux</strong>. If we consider that more than half of the <strong>web</strong> and the majority of <strong>smartphones</strong> operate thanks to code written by him, we all <strong>owe him gratitude</strong> for his genius and generosity.</p>
<h2 id="but-lets-get-back-to-git">BUT LET&rsquo;S GET BACK TO GIT!</h2>
<p>There are thousands of articles about this software online, but truly understanding what it does for a <strong>newbie</strong> is not that simple.</p>
<p>I&rsquo;ll try to explain it easily and quickly.</p>
<h2 id="what-is-git">WHAT IS GIT?</h2>
<p>Git is software that allows you to <strong>track</strong> changes made to a project.</p>
<p>The simplest function is the one that allows you to <strong>go back</strong> to a previous version of the project you are working on.</p>
<p>Let&rsquo;s say you&rsquo;re implementing a feature, perhaps writing a couple of hours of code, but you realize you&rsquo;ve taken the wrong path. At this point, without version control software, you would have to hit <strong>ctrl+z</strong> indefinitely to find the exact point you want to return to. And what if, by chance, the cache of your IDE has stalled for some reason, and you find yourself stuck in a point where you can&rsquo;t go forward or backward?</p>
<p>Even if we were foresighted programmers and had created a backup folder for the software, we would still have to navigate through the file manager, find the folder, rename it, move and delete files, etc&hellip;</p>
<p><strong>With Git, you just enter a command</strong>, and your project magically returns to how it was before! Fantastic!</p>
<p>It is also possible to keep open <strong>different development paths</strong>, perhaps testing a feature from one base and another from the same base, and then decide which one is the best, all without creating thousands of folders and subfolders that will surely end up making everything very confusing.</p>
<p>With Git, it is also possible to <strong>upload our project online</strong>, on <strong>GitHub</strong>, a wonderful code-sharing platform.</p>
<p>This way, we can download our code from any computer anywhere in the world.</p>
<h2 id="git-for-small-projects">GIT FOR SMALL PROJECTS</h2>
<p>Certainly, Git was developed for very large projects, but it is such a <strong>fast and simple</strong> software (git in the US means <em>idiot</em>&hellip;) that it can also be used for small things, to keep track of our work, make small changes, or run tests. Furthermore, the ability to &ldquo;ship&rdquo; everything online is very useful in case we need to access the code from a new location!</p>
<h2 id="command-line">COMMAND LINE</h2>
<p>Git is software that works through the <strong>CLI</strong>, the command line.</p>
<p>If you are not familiar with this tool, <strong>it&rsquo;s time to start</strong> getting used to it. <strong>Don&rsquo;t be scared</strong> by the absence of icons, graphics, and a mouse; in reality, it is much faster than the interfaces we have been accustomed to in recent years!</p>
<p>And you are a programmer, right? The mouse is more of an embellishment for the desk; <strong>the work is done with ten fingers on the keyboard</strong>!!!</p>
<p>There is also a Desktop version of the software, but the classic one works so well that I have never thought of testing it.</p>
<p>If you work on <strong>Windows</strong> (like me!!!), you can also download <strong>Git Bash</strong>, a very nice command line created to facilitate Git operations.</p>
<p>Soon, I will <a href="/blog/come-usare-git/">write a brief guide on basic Git commands</a>, so you can start using it.</p>
<p>I&rsquo;m sure you won&rsquo;t be able to do without it anymore!</p>
<p><em>Happy coding! Bye!!!</em></p>
]]></content>
		</item>
		
	</channel>
</rss>
