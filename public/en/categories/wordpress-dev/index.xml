<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>WordPress DEV on Alberto Reineri</title>
		<link>https://albertoreineri.it/en/categories/wordpress-dev/</link>
		<description>Recent content in WordPress DEV on Alberto Reineri</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en</language>
		<lastBuildDate>Mon, 27 Jun 2022 00:00:00 +0000</lastBuildDate>
		<atom:link href="https://albertoreineri.it/en/categories/wordpress-dev/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Usare la riga di comando con WordPress grazie a WP-CLI</title>
			<link>https://albertoreineri.it/en/blog/usare-la-riga-di-comando-con-wordpress-grazie-a-wp-cli/</link>
			<pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/usare-la-riga-di-comando-con-wordpress-grazie-a-wp-cli/</guid>
			<description>Se sei uno sviluppatore WordPress, probabilmente hai installato il CMS, l&amp;rsquo;hai aggiornato e hai attivato temi e plugin centinaia di volte. E sebbene queste attività di routine di sviluppo e manutenzione siano abbastanza facili da eseguire con l&amp;rsquo;interfaccia utente grafica di WordPress, eseguirle più e più volte non è molto efficiente.
La buona notizia è che puoi velocizzare facilmente ed efficacemente lo sviluppo e la manutenzione di WordPress con l&amp;rsquo;interfaccia a riga di comando di WordPress (WP-CLI) .</description>
			<content type="html"><![CDATA[<p>Se sei uno sviluppatore WordPress, probabilmente hai installato il CMS, l&rsquo;hai aggiornato e hai attivato temi e plugin centinaia di volte. E sebbene queste attività di routine di sviluppo e manutenzione siano abbastanza facili da eseguire con l&rsquo;interfaccia utente grafica di WordPress, eseguirle più e più volte non è molto efficiente.</p>
<p>La buona notizia è che puoi velocizzare facilmente ed efficacemente lo sviluppo e la manutenzione di <a href="http://wp-cli.org/">WordPress con l&rsquo;interfaccia a riga di comando di WordPress (WP-CLI)</a> . In questo post esploreremo i diversi modi in cui puoi utilizzare WP-CLI e vedremo alcuni utili comandi WP-CLI per aiutarti a iniziare con un passo nella giusta direzione.</p>
<h2 id="unintroduzione-a-wp-cli">UN&rsquo;INTRODUZIONE A WP-CLI</h2>
<p>Se sei nello sviluppo web da un po&rsquo; di tempo, probabilmente hai familiarità con l&rsquo;interfaccia da riga di comando. WP-CLI è l&rsquo;interfaccia della riga di comando di WordPress. E per quelli di voi che non si sono dilettati molto nella programmazione, WP-CLI è uno strumento che consente di gestire le installazioni di WordPress senza utilizzare un browser web.</p>
<p>WP-CLI ti consente di fare qualsiasi cosa, dall&rsquo;installazione del CMS WordPress su un sito Web nuovo di zecca all&rsquo;esecuzione di operazioni a livello di sito su un sito Web WordPress esistente. E la parte migliore è che l&rsquo;insieme di passaggi che devi seguire per completare tali attività sarà, nella maggior parte dei casi, ridotto a una singola riga di codice .</p>
<p>Ora che abbiamo visto a grandi linee cos&rsquo;è WP-CLI e come può aiutarti ad accelerare lo sviluppo del tuo prossimo progetto, diamo un&rsquo;occhiata a come puoi iniziare con questo potente strumento.</p>
<h2 id="installazione-di-wp-cli-sul-tuo-ambiente-di-hosting">INSTALLAZIONE DI WP-CLI SUL TUO AMBIENTE DI HOSTING</h2>
<p>La prima cosa che devi fare per iniziare con WP-CLI è assicurarti che il tuo ambiente di hosting soddisfi i requisiti minimi:</p>
<ul>
<li>
<p>Ambiente UNIX.</p>
</li>
<li>
<p>PHP 5.3.29 (o successivo).</p>
</li>
<li>
<p>WordPress 3.7 (o successivo).</p>
</li>
<li>
<p>Secure Shell (SSH) abilitato sul tuo server web.</p>
</li>
</ul>
<p>Dopo aver verificato quegli elementi essenziali, vai avanti e scarica il file <em>wp-cli.phar</em> usando il seguente comando:</p>
<pre tabindex="0"><code>$ curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
</code></pre><p>E voilà! WP-CLI dovrebbe ora essere installato nel tuo ambiente di hosting. Se desideri assicurarti che funzioni correttamente, esegui semplicemente il seguente comando:</p>
<pre tabindex="0"><code>$ php wp-cli.phar -info
</code></pre><p>Se tutto va bene, dovresti vedere qualcosa di simile sulla riga di comando che specifica quale versione di WP-CLI è in esecuzione nel tuo ambiente di hosting:</p>
<pre tabindex="0"><code>PHP binary: /usr/bin/php5
PHP version: 5.5.9-1ubuntu4.14
php.ini used: /etc/php5/cli/php.ini
WP-CLI root dir: /home/wp-cli/.wp-cli
WP-CLI packages dir: /home/wp-cli/.wp-cli/packages/
WP-CLI global config: /home/wp-cli/.wp-cli/config.yml
WP-CLI project config:
WP-CLI version: 1.3.0
</code></pre><p>Tuttavia, se scopri che WP-CLI non è stato installato correttamente sul tuo sistema, ti consiglio di controllare alcuni metodi di <a href="https://make.wordpress.org/cli/handbook/installing/#alternative-installation-methods">installazione alternativi</a> per ulteriori informazioni su come configurarlo.</p>
<p>Infine, creeremo un file eseguibile per WP-CLI e lo sposteremo nella sua directory in modo da poterlo eseguire da qualsiasi luogo:</p>
<pre tabindex="0"><code>$ chmod +x wp-cli.phar
$ sudo mv wp-cli.phar /usr/local/bin/wp
</code></pre><p>Per semplicità, abbiamo chiamato la directory <em>wp</em> . Ora, ogni volta che devi usare WP-CLI, tutto ciò che devi fare è eseguire il comando <em>wp</em> dalla riga di comando.</p>
<h2 id="sviluppo-wordpress-e-manutenzione-del-sito-con-wp-cli">SVILUPPO WORDPRESS E MANUTENZIONE DEL SITO CON WP-CLI</h2>
<p>Ora che WP-CLI è installato e pronto per l&rsquo;uso, esaminiamo alcune delle cose più utili che puoi fare per accelerare le attività di routine di sviluppo e manutenzione di WordPress.</p>
<h3 id="installazione-di-wordpress">INSTALLAZIONE DI WORDPRESS</h3>
<p>Entra nella directory in cui desideri installare il CMS WordPress ed esegui la seguente riga di codice:</p>
<pre tabindex="0"><code>$ wp core download
</code></pre><p>Dovrai creare un file <em>wp-config.php</em> per proseguire con la tua installazione. Ecco come puoi farlo:</p>
<pre tabindex="0"><code>$ wp core config --dbname=databasename --dbuser=databaseuser --dbpass=databasepassword --dbhost=localhost --dbprefix=prfx_
</code></pre><p><em>(Ho utilizzato del testo di esempio per il nome del database e le credenziali dell&rsquo;utente del database. Assicurati di sostituirli con le informazioni del tuo database prima di eseguire il codice.)</em></p>
<p>Infine, puoi iniziare l&rsquo;installazione vera e propria eseguendo il comando di <em>installazione principale</em> indicato di seguito. Ricorda di sostituire i parametri di esempio con le informazioni del tuo sito prima di eseguire il codice.</p>
<pre tabindex="0"><code>$ wp core install –-url=yoursite.com -–title=&#34;Your WordPress Site&#39;s Title&#34; –-admin_user=admin_username –-admin_password=admin_password –-admin_email=admin@yoursite.com
</code></pre><h3 id="aggiornamento-di-wordpress">AGGIORNAMENTO DI WORDPRESS</h3>
<p>Prima o poi verrà lanciata una nuova versione di WordPress e dovrai aggiornare la tua installazione all&rsquo;ultima versione. Se non sei sicuro di quale versione di WordPress è attualmente in esecuzione sul tuo sito, esegui semplicemente il seguente comando:</p>
<pre tabindex="0"><code>$ wp core version
</code></pre><p>Se ritieni che il tuo sito abbia effettivamente bisogno di essere aggiornato, è meglio eseguire un backup completo del suo database prima di procedere. Ecco come puoi farlo con WP-CLI:</p>
<pre tabindex="0"><code>$ wp db export my-db-backup.sql
</code></pre><p>L&rsquo;esecuzione di questo comando creerà un backup completo del database del tuo sito e lo salverà nella directory principale in un file chiamato <em>my-db-backup.sql</em> .</p>
<p>Infine, puoi aggiornare i file core del tuo sito e il relativo database eseguendo le seguenti righe di codice:</p>
<pre tabindex="0"><code>$ wp core update
$ wp core update –db
</code></pre><p>Per quelli di voi che gestiscono più siti o reti multisito, eseguire il seguente script per aggiornare tutti i siti in una volta sola:</p>
<pre tabindex="0"><code>$ declare -a sites_to_update=(&#39;/var/www/wordpress_site_1&#39; &#39;/var/www/wordpress_site_2&#39; &#39;/var/www/wordpress_site_n&#39;)
for site in &#34;${sites_to_update[@]}&#34;;
do
wp --path=$site core update
done
</code></pre><p><em>(Ricordati di sostituire il testo di esempio con i nomi delle directory principali dei tuoi siti Web WordPress.)</em></p>
<h3 id="gestione-di-temi-e-plugin">GESTIONE DI TEMI E PLUGIN</h3>
<p>Una delle cose migliori di WP-CLI è che collega il tuo server web alle directory ufficiali di WordPress <a href="https://wordpress.org/themes/">Theme</a> e <a href="https://wordpress.org/plugins/">Plugin</a>. Ciò significa che puoi gestire le installazioni di temi e plug-in utilizzando solo la riga di comando.</p>
<p><strong>Comandi del tema WordPress:</strong></p>
<ul>
<li>
<p><strong>Per installare un tema:</strong> <strong>wp theme install theme_name</strong></p>
</li>
<li>
<p><strong>Per attivare un tema installato:</strong> <strong>wp theme activate theme_name</strong></p>
</li>
<li>
<p><strong>Per aggiornare un tema installato:</strong> <strong>wp theme update theme_name</strong></p>
</li>
<li>
<p><strong>Per aggiornare tutti i temi installati:</strong> <strong>wp theme update –all</strong></p>
</li>
</ul>
<p><strong>Comandi del plugin di WordPress:</strong></p>
<ul>
<li>
<p><strong>Per installare un plugin:</strong> <strong>wp plugin install plugin_name</strong></p>
</li>
<li>
<p><strong>Per attivare un plugin installato:</strong> <strong>wp plugin activate plugin_name</strong></p>
</li>
<li>
<p><strong>Per aggiornare un plugin installato:</strong> <strong>wp plugin update plugin_name</strong></p>
</li>
<li>
<p><strong>Per aggiornare tutti i plugin installati:</strong> <strong>wp plugin update –all</strong></p>
</li>
</ul>
<p><em>(Ricordati di sostituire il testo di esempio con il nome del tema o del plugin con cui desideri interagire.)</em></p>
<h3 id="creazione-di-custom-post-personalizzati">CREAZIONE DI CUSTOM POST PERSONALIZZATI</h3>
<p>WP-CLI elimina il lavoro pesante dalla creazione di custom post type in WordPress e lo riduce a una semplice riga di codice. Invece di scaricare un plug-in per aiutarti a portare a termine il lavoro, perché non provare la seguente riga di codice:</p>
<pre tabindex="0"><code>$ wp scaffold post-type cpt_slug --label=CPT_Label --theme=theme_name
</code></pre><p>Tutto quello che devi fare è sostituire il testo di esempio con lo slug, l&rsquo;etichetta e il nome del tema del tuo custom post type e voilà!</p>
<h3 id="creazione-di-temi-child">CREAZIONE DI TEMI CHILD</h3>
<p>Se ti è già capitato di creare un tema child, avrai dovuto accedere al pannello di controllo e creareti cartella e file relativi dentro al sito. WP-CLI ti consente di creare un tema child con una singola riga di codice:</p>
<pre tabindex="0"><code>$ wp scaffold child-theme name-of-child-theme --parent_theme=name_of_parent_theme --theme_name=&#39;My Child Theme&#39; --author=&#39;Your Name&#39; --author_uri=http://www.yoursite.com --theme_uri=http://www.themesite.com --activate
</code></pre><p><em>(Come sempre, ricorda di sostituire il testo di esempio con il tema child e le informazioni sul tema genitore.)</em></p>
<h2 id="conclusione">CONCLUSIONE</h2>
<p>Con WP-CLI puoi ottenere di più facendo di meno. Se desideri aumentare la tua produttività accelerando le operazioni di routine di sviluppo e manutenzione di WordPress, allora vale sicuramente la pena provare WP-CLI.</p>
<p>Ti ho mostrato come installare lo strumento nel tuo ambiente di hosting e abbiamo visto alcuni scenari in cui WP-CLI batte la GUI di WordPress in termini di efficienza. Ora non ti resta che provarlo!</p>
<p>Ah, sembra scontato, ma NON FARE MAI TEST IN AMBIENTE DI PRODUZIONE, usa lo STAGING o falli in LOCALE.</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Remove Virus from WordPress</title>
			<link>https://albertoreineri.it/en/blog/remove-virus-from-wordpress/</link>
			<pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/remove-virus-from-wordpress/</guid>
			<description>WordPress is one of the most widely used platforms in the world for creating websites, but sometimes it can be easy to encounter a virus. But how can they be removed?
WordPress allows anyone to set up a functioning website in very little time and with very low costs.
However, this also means having many websites created by non-professionals who install themes and plugins randomly without really knowing what they are doing.</description>
			<content type="html"><![CDATA[<p>WordPress is one of the most widely used platforms in the world for creating websites, but sometimes it can be easy to encounter a virus. But how can they be removed?</p>
<p>WordPress allows anyone to set up a functioning website in very little time and with very low costs.</p>
<p>However, this also means having many websites created by non-professionals who install themes and plugins randomly without really knowing what they are doing. As long as the site is small and has a small number of users, there&rsquo;s no problem. However, when it reaches a larger audience, the probability of being targeted by hackers becomes higher.</p>
<p>It is estimated that at least 30% of WordPress websites have vulnerabilities. Considering that more than 75 million websites use this platform, the vulnerabilities are numerous.</p>
<p>Let&rsquo;s now see how to keep your WordPress site secure and how to eliminate any viruses.</p>
<h2 id="securing-wordpress">Securing WordPress</h2>
<p>WordPress uses a very intelligent system of themes and plugins, but it is necessary to be careful about what is installed.</p>
<p>There are some fundamental rules:</p>
<ul>
<li><strong>Check the source of themes and plugins</strong></li>
<li><strong>Install as few plugins as possible</strong></li>
<li><strong>Have good hosting</strong></li>
</ul>
<h3 id="1-check-the-source-of-themes-and-plugins">1. Check the Source of Themes and Plugins</h3>
<p>Every time something is installed on a WordPress site, code is added to the project. If the code is well written, it will bring useful functionality and improve the site. However, if it is poorly written or contains bugs, it can cause many problems.</p>
<p>When installing something on WordPress, it is crucial to pay very close attention to the source.</p>
<p><strong>NEVER</strong> install plugins or themes downloaded from unclear sources.</p>
<p>The best thing is to stick to the official WordPress repository or trusted large stores.</p>
<h3 id="2-install-as-few-plugins-as-possible">2. Install as Few Plugins as Possible</h3>
<p>There are plugins for everything nowadays, but each plugin is an additional object to manage and maintain.</p>
<p>Having plugins specific to almost useless functionalities risks bringing vulnerabilities to the system and unnecessarily burdening the site.</p>
<p>Installing 20 plugins managed by different developers significantly increases the risk of attacks. If one of these developers does not fix a bug or a vulnerability is discovered, the entire site is at risk.</p>
<p><strong>The trick is this: &ldquo;Few but good.&rdquo;</strong></p>
<h3 id="3-have-good-hosting">3. Have Good Hosting</h3>
<p>We are talking about hosting and not a server because the vast majority of websites are hosted on shared hosting. These services have improved a lot and offer services that were previously available only on dedicated servers, such as SSH access, caching, and security.</p>
<p>Being able to rely on a good service is very important to protect against attacks and manage them in the unfortunate event of an infection.</p>
<h2 id="removing-a-virus-from-a-wordpress-site">Removing a Virus from a WordPress Site</h2>
<p>There is no single way to remove a virus because they act very differently from each other.</p>
<p>This complicates things a little&hellip; So, it is difficult to explain how to remove a virus in a simple article, but I will try to indicate some ways to manage the problem.</p>
<h3 id="1-look-for-backups-before-the-attack">1. Look for Backups Before the Attack</h3>
<p>If you have good hosting, you will certainly have daily or at least weekly backups. The first thing to do is download one of these backups and keep it aside to have a &ldquo;pre-virus&rdquo; situation.</p>
<p>If the site is static, without updatable sections like a blog or portfolio, you can simply restore the backup to the pre-attack version, and the job is done.</p>
<p>If, on the other hand, the site has undergone updates that you do not want to lose, it is advisable to keep a pre-virus copy for safety and go look for infected files.</p>
<h3 id="2-scan-the-website-with-online-tools">2. Scan the Website with Online Tools</h3>
<p>There are many online tools capable of analyzing the site and identifying critical issues.</p>
<p>You can also use some plugins developed to manage security, such as WordFence or Sucuri, and use their scan to analyze all files on the site.</p>
<p>These do not guarantee a 100% optimal result, but it is still a good starting point.</p>
<p>Here are some useful links for scanning:</p>
<ul>
<li><a href="https://wpsec.com/">WPsec</a></li>
<li><a href="https://sitecheck.sucuri.net/">Sucuri SiteCheck</a></li>
<li><a href="https://hackertarget.com/wordpress-security-scan/">HackerTarget WordPress Security Scan</a></li>
<li><a href="https://wprecon.com/">WPrecon</a></li>
<li><a href="https://firstsiteguide.com/tools/free-fsg/wordpress-security-online-scanner/">FirstSiteGuide WordPress Security Online Scanner</a></li>
</ul>
<p>If you are comfortable with the CLI, you can also use <a href="https://wpscan.org/">WP Scan</a>, the software par excellence for testing the security of a WordPress site.</p>
<h3 id="disable-themes-and-plugins">Disable Themes and Plugins</h3>
<p>To try to isolate the virus, it can be useful to proceed with disabling themes and plugins.</p>
<p>If the site works without plugins and with the default WordPress theme, you can reactivate them one by one and figure out where the infection is.</p>
<h3 id="copy-original-theme-and-plugin-files">Copy Original Theme and Plugin Files</h3>
<p><strong>CAUTION!!!</strong> Be very careful when implementing this point. If you are not experienced, you could do more damage than what is already present! If a theme or a plugin has been infected, one solution to remove the virus from the WordPress site is to overwrite the folders containing the theme and plugins with versions downloaded from official sources.</p>
<p>In this case, if the virus was present in the folder, it will be overwritten.</p>
<h3 id="analyze-wordpress-structure">Analyze WordPress Structure</h3>
<p>Lastly, you can <strong>analyze the file and folder structure of WordPress</strong> to check that there are no strange files not present in the original installation.</p>
<p>If strange files are found, they should be deleted, always paying close attention to what is being done.</p>
<h2 id="conclusion">Conclusion</h2>
<p>These are some generic steps to check the status of a website.</p>
<p>Unfortunately, <strong>every virus is different</strong>, some act on the database, others directly on the system files, and still others in ways we cannot even imagine.</p>
<p>In this article, I have tried to give you <strong>some basic advice</strong> to try to remove a virus from WordPress. I hope this could be helpful to you!</p>
]]></content>
		</item>
		
	</channel>
</rss>
