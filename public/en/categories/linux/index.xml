<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Linux on Alberto Reineri</title>
		<link>https://albertoreineri.it/en/categories/linux/</link>
		<description>Recent content in Linux on Alberto Reineri</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en</language>
		<lastBuildDate>Mon, 27 Jun 2022 00:00:00 +0000</lastBuildDate>
		<atom:link href="https://albertoreineri.it/en/categories/linux/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Nano Editor, Guida per principianti</title>
			<link>https://albertoreineri.it/en/blog/nano-editor-guida-per-principianti/</link>
			<pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/nano-editor-guida-per-principianti/</guid>
			<description>Gli utenti Linux hanno molte opzioni tra cui scegliere quando si tratta di editor di testo. Da base ad avanzato, esistono un sacco di editor di testo, ma alcuni come Vim ed Emacs possono risultare molto complicati per gli utenti meno avanzati.
In questo casi ci viene in aiuto Nano, forse il miglior editor di testo per principianti.
Nano: Nano è un editor di testo semplice e leggero sviluppato appositamente per sistemi UNIX e ambienti desktop che utilizzano un&amp;rsquo;interfaccia a riga di comando.</description>
			<content type="html"><![CDATA[<p>Gli utenti <a href="/argomento/linux/">Linux</a> hanno molte opzioni tra cui scegliere quando si tratta di editor di testo. Da base ad avanzato, esistono un sacco di editor di testo, ma alcuni come Vim ed Emacs possono risultare molto complicati per gli utenti meno avanzati.</p>
<p>In questo casi ci viene in aiuto Nano, forse il miglior editor di testo per principianti.</p>
<h2 id="nano">Nano:</h2>
<p>Nano è un editor di testo semplice e leggero sviluppato appositamente per sistemi UNIX e ambienti desktop che utilizzano un&rsquo;interfaccia a riga di comando. Nano è concesso in licenza sotto la GNU General Public License ed emula l&rsquo;editor di testo Pico.</p>
<h2 id="come-installare-nano">Come installare Nano:</h2>
<p>Sto usando Ubuntu per questo tutorial e il processo di installazione sarà lo stesso su altre distribuzioni Linux.</p>
<p>Prima di procedere con il processo di installazione, sarebbe una buona idea verificare se l&rsquo;editor di testo Nano è già installato o meno sul tuo sistema. Alcune distribuzioni Linux vengono fornite con l&rsquo;editor Nano preinstallato.</p>
<p>Per controllare, esegui il seguente comando in Terminale.</p>
<pre tabindex="0"><code>$ nano --version
</code></pre><p>Se ottieni un output con l&rsquo;attuale versione di nano, puoi saltare l&rsquo;installazione poiché l&rsquo;editor di testo Nano è già installato sul tuo sistema.</p>
<p>L&rsquo;installazione di Nano Text Editor è semplice, basta eseguire il seguente comando da Terminale e attendere il completamento dell&rsquo;installazione.</p>
<pre tabindex="0"><code>$ sudo apt-get install nano
</code></pre><p>Gli utenti CentOS/Red Hat Enterprise Linux (RHEL) possono utilizzare il comando seguente per installare l&rsquo;editor Nano.</p>
<pre tabindex="0"><code>$ yum installa nano
</code></pre><p>Ora che l&rsquo;editor nano è stato installato correttamente sul tuo sistema e pronto per l&rsquo;uso, possiamo iniziare con una guida per principianti all&rsquo;uso dell&rsquo;editor di testo Nano.</p>
<h2 id="guida-alluso-delleditor-di-testo-nano">Guida all&rsquo;uso dell&rsquo;editor di testo Nano</h2>
<p>Vediamo ora come utilizzare l&rsquo;editor di testo Nano.</p>
<h3 id="come-aprirechiudere-il-nano-text-editor">Come aprire/chiudere il Nano Text Editor</h3>
<p>Il comando per aprire l&rsquo;editor di testo Nano è il seguente.</p>
<pre tabindex="0"><code>$ nano nomefile 
</code></pre><p>Puoi aprire vari tipi di file nell&rsquo;editor di testo Nano, inclusi .txt, .php, .html e molti altri. Devi solo digitare il nome del file seguito da un&rsquo;estensione per aprire il file particolare nell&rsquo;editor Nano. Ad esempio, supponiamo di dover aprire il file denominato il_mio_file.txt, il comando sarà il seguente.</p>
<pre tabindex="0"><code>$ nano il_mio_file.txt
</code></pre><p>Devi assicurarti di essere nella directory in cui è stato salvato il file. Se il file non è presente nella directory, l&rsquo;editor di testo Nano creerà un nuovo file nella directory attuale.</p>
<p>Una volta aperto il file noterai che l&rsquo;interfaccia nano presenta il nome del file nella parte superiore, mentre nella parte inferiore noterai principalmente scorciatoie come taglia, sostituisci, vai alla riga e giustifica. Qui ˄ significa il tasto <strong>CTRL</strong> sulla tastiera.</p>
<p>Ad esempio, per <strong>scrivere</strong> o salvare le modifiche, devi premere i pulsanti CTRL + O sulla tastiera.</p>
<p>Se stai aprendo un file di configurazione, assicurati di utilizzare l&rsquo; opzione <strong>–w</strong> , questo comanderà a Nano editor di aprire il file di configurazione in un formato standard. Se non si utilizza questa opzione, l&rsquo;editor Nano avvolgerà il testo del file per adattarlo alla finestra, che alla fine sarà difficile da leggere.</p>
<h2 id="come-cercare--sostituire-il-testo">Come cercare / sostituire il testo</h2>
<p><strong>CTRL + W</strong> è la scorciatoia per cercare la parola nell&rsquo;editor. Ora devi inserire il testo che vuoi cercare e quindi premere il tasto Invio. Per continuare a cercare lo stesso testo, usa il tasto <strong>ALT + W.</strong></p>
<p>Per sostituire il testo, devi usare <strong>CTRL + R</strong>, l&rsquo;editor ti porterà alla prima istanza del testo che desideri sostituire; per sostituire tutto il testo, devi premere <strong>A</strong> . Ma se vuoi sostituire un solo testo, devi premere <strong>Y</strong>.</p>
<h2 id="come-copiare-e-incollare-il-testo">Come copiare e incollare il testo</h2>
<p>L&rsquo;operazione di copia incolla non è così semplice come altri editor di testo nell&rsquo;editor Nano. Se desideri tagliare e incollare una riga particolare, devi prima portare il cursore all&rsquo;inizio di quella riga.</p>
<p>Ora devi premere <strong>CTRL + K</strong> per tagliare la linea, quindi spostare il cursore nel punto in cui vuoi incollarlo, ora infine, premere <strong>CTRL + U</strong> per incollare la linea.</p>
<p>Per copiare e incollare una particolare stringa o parola, devi selezionare quella parola o stringa premendo <strong>CTRL + 6</strong> o <strong>ALT + A</strong> , assicurati che il cursore sia all&rsquo;inizio della parola.</p>
<p>Ora puoi usare <strong>CTRL + K</strong> e <strong>CTRL + U</strong> per tagliare e incollare la parola o la stringa.</p>
<p>Ecco come puoi iniziare a utilizzare l&rsquo;editor di testo Nano. Modificare un file di testo utilizzando la riga di comando non è facile, ma l&rsquo;editor di testo Nano lo rende più semplice. È affidabile e uno degli strumenti più facili da usare.</p>
<p>Dagli utenti inesperti ai professionisti, tutti trovano l&rsquo;editor di testo Nano un utile strumento da riga di comando. Spero che questa guida ti abbia sicuramente aiutato a iniziare con l&rsquo;editor Nano.</p>
<p>Di seguito ti lascio una serie di comandi spesso utilizzati:</p>
<h2 id="scoriatoie-utili-per-nano">Scoriatoie utili per nano:</h2>
<table>
<thead>
<tr>
<th>Command</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td>CTRL + A</td>
<td>Vai all&rsquo;inizio della riga</td>
</tr>
<tr>
<td>CTRL + E</td>
<td>Vai alla fine della riga</td>
</tr>
<tr>
<td>CTRL + Y</td>
<td>Scorri in basso nella pagina</td>
</tr>
<tr>
<td>CTRL + V</td>
<td>Scorri in alto nella pagina</td>
</tr>
<tr>
<td>CTRL + _</td>
<td>Scorri fino alla riga speficina</td>
</tr>
<tr>
<td>CTRL + C</td>
<td>Scopri dov&rsquo;è il cursore</td>
</tr>
<tr>
<td>CTRL + V</td>
<td>Scorri verso l&rsquo;alto</td>
</tr>
<tr>
<td>CTRL + W</td>
<td>Cerca un testo</td>
</tr>
<tr>
<td>CTRL + D</td>
<td>Cancella il carattere sotto al cursore</td>
</tr>
<tr>
<td>CTRL + K</td>
<td>Cancella l&rsquo;intera riga</td>
</tr>
<tr>
<td>CTRL + \</td>
<td>Sostituisci una stringa</td>
</tr>
<tr>
<td>CTRL + O</td>
<td>Salva il contenuto senza uscire</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
		</item>
		
		<item>
			<title>Come installare una LAMP stack (Linux, Apache, MySQL, PHP) su Ubuntu</title>
			<link>https://albertoreineri.it/en/blog/come-installare-una-lamp-stack-linux-apache-mysql-php-su-ubuntu/</link>
			<pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/come-installare-una-lamp-stack-linux-apache-mysql-php-su-ubuntu/</guid>
			<description>Introduzione Uno stack &amp;ldquo;LAMP&amp;rdquo; è un gruppo di software open source che viene generalmente installato insieme per consentire a un server di ospitare siti Web dinamici e app Web. Questo termine è in realtà un acronimo che rappresenta il sistema operativo Linux, con il web server Apache**.** I dati del sito vengono archiviati in un database MySQL e il contenuto dinamico viene elaborato da PHP.
In questa guida, installeremo uno stack LAMP su un server Ubuntu.</description>
			<content type="html"><![CDATA[<h2 id="introduzione">Introduzione</h2>
<p>Uno stack &ldquo;LAMP&rdquo; è un gruppo di software open source che viene generalmente installato insieme per consentire a un server di ospitare siti Web dinamici e app Web. Questo termine è in realtà un acronimo che rappresenta il sistema operativo <strong>L</strong>inux, con il web server <strong>A</strong>pache**.** I dati del sito vengono archiviati in un database <strong>M</strong>ySQL e il contenuto dinamico viene elaborato da <strong>P</strong>HP.</p>
<p>In questa guida, installeremo uno stack LAMP su un server Ubuntu.</p>
<h2 id="prerequisiti">Prerequisiti</h2>
<p>Questo tutorial è creato su Ubuntu, ma funziona su tutte le distro basate su Debian, come Pop!_OS, Elementary OS, Linux Mint etc.</p>
<h2 id="passaggio-1-installazione-di-apache">Passaggio 1: installazione di Apache</h2>
<p>Il server Web Apache è un popolare server Web open source che può essere utilizzato insieme a <a href="/blog/le-basi-di-php/">PHP</a> per ospitare siti Web dinamici. È ben documentato ed è stato ampiamente utilizzato per gran parte della storia del web.</p>
<p>Innanzitutto, assicurati che la tua <code>apt</code> cache sia aggiornata con:</p>
<pre tabindex="0"><code>sudo apt update
</code></pre><p>Se è la prima volta che lo utilizzi <code>sudo</code> in questa sessione, ti verrà chiesto di fornire la password dell&rsquo;utente per convalidare le tue autorizzazioni.</p>
<p>Una volta aggiornata la cache, puoi installare Apache lanciando:</p>
<pre tabindex="0"><code>sudo apt install apache2
</code></pre><p>Dopo aver inserito questo comando, <code>apt</code> ti dirà quali pacchetti intende installare e quanto spazio su disco occuperà. Premi S (o Y se hai configurati il sistema in lingua inglese) e poi premi <code>ENTER</code> per confermare e l&rsquo;installazione procederà.</p>
<hr>
<p>N.B.: in questa guida utilizzerò &lsquo;<em>Y</em>&rsquo; per procedere con l&rsquo;installazione, perché ho l&rsquo;abitudine di installare sempre Linux in inglese&hellip; Se usi l&rsquo;italiano ricordati di premere &lsquo;<em>S</em>&rsquo;</p>
<hr>
<p>E voilà! Apache è bello che installato!</p>
<p>Puoi fare subito un controllo a campione per verificare che tutto sia andato come previsto visitando l&rsquo;indirizzo IP pubblico del tuo server nel tuo browser web. Se sei il locale ti basterà aprire il browser e scrivere nella barra degli indirizzi:</p>
<pre tabindex="0"><code>http://localhost
</code></pre><p>Se invece stai configurando un web server remoto, allora dovrai inserire il tuo indirizzo IP</p>
<pre tabindex="0"><code>http://your_server_ip
</code></pre><p>Dovresti ora vedere nel browser la pagina Web predefinita di Apache, che è disponibile a scopo informativo e di test. Dovrebbe assomigliare a qualcosa di simile a questo:</p>
<p><img src="images/small_apache_default_1804-728x1024.png" alt=""></p>
<p>Se vedi questa pagina, allora il tuo server web è ora installato correttamente e accessibile attraverso il tuo firewall.</p>
<h3 id="come-trovare-lindirizzo-ip-pubblico-del-tuo-server">Come trovare l&rsquo;indirizzo IP pubblico del tuo server</h3>
<p>Se stai configurando un web server remoto e non sai qual è l&rsquo;indirizzo IP pubblico del tuo server, ci sono diversi modi per trovarlo. Di solito è l&rsquo;indirizzo che usi per connetterti al tuo server tramite SSH.</p>
<p>Esistono diversi modi per farlo dalla riga di comando. Innanzitutto, puoi utilizzare gli strumenti <em>iproute2</em> per ottenere il tuo indirizzo IP digitando questo:</p>
<pre tabindex="0"><code>ip addr show eth0 | grep inet | awk &#39;{ print $2; }&#39; | sed &#39;s/\/.*$//&#39;
</code></pre><p>Questo ti restituirà due o tre righe. Sono tutti indirizzi corretti, ma il tuo computer potrebbe essere in grado di utilizzarne solo uno, quindi sentiti libero di provarli.</p>
<p>Un metodo alternativo consiste nell&rsquo;utilizzare l&rsquo;utility <code>curl</code> per contattare una parte esterna per dirti come <em>vede</em> il tuo server. Questo viene fatto chiedendo a un server specifico qual è il tuo indirizzo IP:</p>
<pre tabindex="0"><code>sudo apt install curl
curl http://icanhazip.com
</code></pre><p>Indipendentemente dal metodo utilizzato per ottenere il tuo indirizzo IP, digitalo nella barra degli indirizzi del tuo browser web per visualizzare la pagina Apache predefinita.</p>
<h2 id="passaggio-2-installazione-di-mysql">Passaggio 2: installazione di MySQL</h2>
<p>Ora che hai il tuo server web attivo e funzionante, è il momento di installare MySQL. MySQL è un sistema di gestione di database. Fondamentalmente, organizzerà e fornirà l&rsquo;accesso ai database in cui il tuo sito può archiviare informazioni.</p>
<p>Ancora una volta, utilizziamo <code>apt</code> per acquisire e installare questo software:</p>
<pre tabindex="0"><code>sudo apt install mysql-server
</code></pre><p><strong>Nota</strong> : in questo caso, non è necessario eseguire <code>sudo apt update</code> prima del comando. Questo perché di recente l&rsquo;hai eseguito nei comandi sopra per installare Apache. L&rsquo;indice del pacchetto sul tuo computer dovrebbe essere già aggiornato.</p>
<p>Anche questo comando ti mostrerà un elenco dei pacchetti che verranno installati, insieme alla quantità di spazio su disco che occuperanno. Entra <code>Y</code> (o <em>S</em>) per continuare.</p>
<p>Al termine dell&rsquo;installazione, esegui un semplice script di sicurezza preinstallato con MySQL che rimuoverà alcune pericolose impostazioni predefinite e bloccherà l&rsquo;accesso al tuo sistema di database (Se sei in locale non è necessario). Avvia lo script interattivo eseguendo:</p>
<pre tabindex="0"><code>sudo mysql_secure_installation
</code></pre><p>Questo ti chiederà se vuoi configurare il <code>VALIDATE PASSWORD PLUGIN</code>.</p>
<p><strong>Nota:</strong> l&rsquo;abilitazione di questa funzione è una sorta di chiamata di giudizio. Se abilitato, le password che non corrispondono ai criteri specificati verranno rifiutate da MySQL con un errore. Ciò causerà problemi se si utilizza una password debole insieme al software che configura automaticamente le credenziali utente di MySQL, come i pacchetti Ubuntu per phpMyAdmin. È sicuro lasciare la convalida disabilitata, ma dovresti sempre usare password complesse e univoche per le credenziali del database.</p>
<p>Rispondi <code>Y</code> per sì o per qualsiasi altra cosa per continuare senza abilitare.</p>
<pre tabindex="0"><code>VALIDATE PASSWORD PLUGIN can be used to test passwords
and improve security. It checks the strength of password
and allows the users to set only those passwords which are
secure enough. Would you like to setup VALIDATE PASSWORD plugin?

Press y|Y for Yes, any other key for No:
</code></pre><p>Se rispondi &ldquo;sì&rdquo;, ti verrà chiesto di selezionare un livello di convalida della password. Tieni presente che se inserisci <code>2</code>, il livello più forte, riceverai errori quando tenti di impostare una password che non contenga numeri, lettere maiuscole e minuscole e caratteri speciali o che sia basata su parole comuni del dizionario.</p>
<pre tabindex="0"><code>There are three levels of password validation policy:

LOW    Length &gt;= 8
MEDIUM Length &gt;= 8, numeric, mixed case, and special characters
STRONG Length &gt;= 8, numeric, mixed case, special characters and dictionary                  file

Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 1
</code></pre><p>Indipendentemente dal fatto che tu abbia scelto di impostare <code>VALIDATE PASSWORD PLUGIN</code>, il tuo server ti chiederà successivamente di selezionare e confermare una password per l&rsquo; utente <strong>root</strong> MySQL. Questo non deve essere confuso con il <strong>root di sistema</strong>. L&rsquo; utente <strong>root del database</strong> è un utente amministrativo con privilegi completi sul sistema del database. Anche se il metodo di autenticazione predefinito per l&rsquo;utente root MySQL dispensa l&rsquo;uso di una password, <strong>anche quando ne è impostata una</strong> , dovresti definire qui una password complessa come misura di sicurezza aggiuntiva. Ne parleremo tra un momento.</p>
<p>Se hai abilitato la convalida della password, ti verrà mostrata la sicurezza della password per la password di root che hai appena inserito e il tuo server ti chiederà se vuoi cambiare quella password. Se sei soddisfatto della tua password attuale, digita <code>N</code>:</p>
<pre tabindex="0"><code>Using existing password for root.

Estimated strength of the password: 100
Change the password for root ? ((Press y|Y for Yes, any other key for No) : n
</code></pre><p>Per il resto delle domande, premere <code>Y</code> e premere <code>ENTER</code> ad ogni prompt. Ciò rimuoverà alcuni utenti anonimi e il database di test, disabiliterà gli accessi root remoti e caricherà queste nuove regole in modo che MySQL rispetti immediatamente le modifiche apportate.</p>
<p>Al termine, verifica se riesci ad accedere alla console MySQL digitando:</p>
<pre tabindex="0"><code>sudo mysql
</code></pre><p>Questo si collegherà al server MySQL come utente <strong>root</strong> del database amministrativo, che viene dedotto dall&rsquo;uso di <code>sudo</code> quando si esegue questo comando. Dovresti vedere un output come questo:</p>
<pre tabindex="0"><code>OutputWelcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 5
Server version: 5.7.34-0ubuntu0.18.04.1 (Ubuntu)

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

mysql&gt;
</code></pre><p>Per uscire dalla console MySQL, digita:</p>
<pre tabindex="0"><code>exit
</code></pre><p>Tieni presente che non è necessario fornire una password per connettersi come utente <strong>root</strong> , anche se ne è stata definita una durante l&rsquo;esecuzione dello  <code>mysql_secure_installation</code>. Questo perché il metodo di autenticazione predefinito per l&rsquo;utente MySQL amministrativo è <code>unix_socket</code> invece di <code>password</code>. Anche se all&rsquo;inizio potrebbe sembrare un problema di sicurezza, rende il server del database più sicuro perché gli unici utenti autorizzati ad accedere come utente <strong>root</strong> MySQL sono gli utenti del sistema con privilegi sudo che si connettono dalla console o tramite un&rsquo;applicazione in esecuzione con gli stessi privilegi. In termini pratici, ciò significa che non sarai in grado di utilizzare l&rsquo;utente <strong>root</strong> del database amministrativo per connetterti dalla tua applicazione PHP. L&rsquo;account MySQL funge da salvaguardia, nel caso in cui il metodo di autenticazione predefinito venga modificato da <code>unix_socket</code> a <code>password</code>.</p>
<p>Per una maggiore sicurezza, è meglio disporre di account utente dedicati con privilegi meno estesi impostati per ogni database, soprattutto se prevedi di avere più database ospitati sul tuo server, ma su questo creerò altre guide più dettagliate in futuro.</p>
<p>Il tuo server MySQL è ora installato e protetto. Vediamo ora come installare PHP, il componente finale nello stack LAMP.</p>
<h2 id="passaggio-3-installazione-di-php">Passaggio 3: installazione di PHP</h2>
<p>PHP è il componente della configurazione che elaborerà il codice per visualizzare il contenuto dinamico. Può eseguire script, connettersi ai tuoi database MySQL per ottenere informazioni e consegnare il contenuto elaborato al tuo server web in modo che possa mostrare i risultati ai tuoi visitatori.</p>
<p>Ancora una volta, sfrutta il sistema apt per installare PHP. Oltre al pacchetto php, dovrai anche integrare libapache2-mod-php in Apache e il pacchetto php-mysql per consentire a PHP di connettersi ai database MySQL. Esegui il comando seguente per installare tutti e tre i pacchetti e le relative dipendenze:</p>
<pre tabindex="0"><code>sudo apt install php libapache2-mod-php php-mysql
</code></pre><p>Questo dovrebbe installare PHP senza problemi. Lo testeremo tra un momento.</p>
<h3 id="modifica-dellindice-della-directory-di-apache-opzionale">Modifica dell&rsquo;indice della directory di Apache (opzionale)</h3>
<p>In alcuni casi, vorrai modificare il modo in cui Apache serve i file quando viene richiesta una directory. Di default, se un utente richiede una directory dal server, Apache cercherà prima un file chiamato <code>index.html</code>. Ma noi vogliamo dire al server web di preferire i file PHP rispetto ad altri, per fare in modo che Apache cerchi <code>index.php</code> come primoo file. In caso contrario, un <code>index.html</code> inserito nella radice del documento dell&rsquo;applicazione avrà sempre la precedenza su un <code>index.php</code>.</p>
<p>Per apportare questa modifica, apri il file di configurazione <code>dir.conf</code> in un editor di testo a tua scelta. Qui useremo <code>nano</code>:</p>
<pre tabindex="0"><code>sudo nano /etc/apache2/mods-enabled/dir.conf
</code></pre><p>Dovresti vedere una cosa del genere:</p>
<pre tabindex="0"><code>&lt;IfModule mod_dir.c&gt;
    DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
&lt;/IfModule&gt;
</code></pre><p>Sposta il file di indice PHP (evidenziato sopra) nella prima posizione dopo la <code>DirectoryIndex</code>, in questo modo:</p>
<pre tabindex="0"><code>&lt;IfModule mod_dir.c&gt;
    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
&lt;/IfModule&gt;
</code></pre><p>Al termine, salva e chiudi il file premendo <code>CTRL+X</code>. Conferma il salvataggio digitando <code>Y</code> e quindi premi <code>ENTER</code> per verificare la posizione di salvataggio del file.</p>
<p>Successivamente, riavvia il server Web Apache in modo che le modifiche vengano riconosciute. Puoi farlo con il seguente comando:</p>
<pre tabindex="0"><code>sudo systemctl restart apache2
</code></pre><p>Puoi anche controllare lo stato del <code>apache2</code>servizio utilizzando <code>systemctl</code>:</p>
<pre tabindex="0"><code>sudo systemctl status apache2
</code></pre><pre tabindex="0"><code>Sample Output● apache2.service - The Apache HTTP Server
   Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)
  Drop-In: /lib/systemd/system/apache2.service.d
           └─apache2-systemd.conf
   Active: active (running) since Thu 2021-07-15 09:22:59 UTC; 1h 3min ago
 Main PID: 3719 (apache2)
    Tasks: 55 (limit: 2361)
   CGroup: /system.slice/apache2.service
           ├─3719 /usr/sbin/apache2 -k start
           ├─3721 /usr/sbin/apache2 -k start
           └─3722 /usr/sbin/apache2 -k start

Jul 15 09:22:59 ubuntu1804 systemd[1]: Starting The Apache HTTP Server...
Jul 15 09:22:59 ubuntu1804 apachectl[3694]: AH00558: apache2: Could not reliably determine the server&#39;s fully qualified domain name, using 127.0.1.1. Set the &#39;ServerName&#39; di
Jul 15 09:22:59 ubuntu1804 systemd[1]: Started The Apache HTTP Server.
</code></pre><p>Premi <code>Q</code> per uscire da questo stato.</p>
<h2 id="passaggio-4-configurazione-di-un-host-virtuale-consigliato">Passaggio 4: configurazione di un host virtuale (consigliato)</h2>
<p>Quando si utilizza il server Web Apache, è possibile utilizzare <em>host virtuali</em> per incapsulare i dettagli di configurazione e ospitare più di un dominio da un singolo server. Imposteremo ora un dominio di esempio chiamato <strong><strong>il_mio_dominio</strong></strong>, potrai sostituirlo con il nome del dominio che desideri utilizzare.</p>
<p>Apache su ha un blocco server abilitato per impostazione predefinita che è configurato per servire i documenti dalla cartella <code>/var/www/html</code>. Sebbene funzioni bene per un singolo sito, può diventare ingombrante se ospiti più siti. Invece di modificare <code>/var/www/html</code>, creiamo una struttura di directory all&rsquo;interno <code>/var/www</code> per <strong>il sito il_mio_dominio</strong>, lasciando <code>/var/www/html</code> come directory predefinita da servire se una richiesta del client non corrisponde a nessun altro sito.</p>
<p>Crea la directory per <strong><strong>il_mio_dominio</strong></strong> come segue:</p>
<pre tabindex="0"><code>sudo mkdir /var/www/il_mio_dominio
</code></pre><p>Quindi, assegna la proprietà della directory con la variabile di ambiente <code>$USER</code>, che fa riferimento all&rsquo;utente registrato corrente:</p>
<pre tabindex="0"><code>sudo chown -R $USER:$USER /var/www/il_mio_dominio
</code></pre><p>I permessi della tua directory principale web dovrebbero essere corretti se non hai modificato il suo valore umask, ma puoi comunque digitare:</p>
<pre tabindex="0"><code>sudo chmod -R 755 /var/www/il_mio_dominio
</code></pre><p>Ora crea una pagina di esempio <code>index.html</code> utilizzando <code>nano</code> o il tuo editor preferito:</p>
<pre tabindex="0"><code>nano /var/www/il_mio_dominio/index.html
</code></pre><p>All&rsquo;interno, aggiungi il seguente codice HTML di esempio:</p>
<pre tabindex="0"><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Il Mio Dominio&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Il mio dominio FUNZIONA!!!&lt;/h1&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Salva e chiudi il file quando hai finito.</p>
<p>Affinché Apache possa servire questo contenuto, è necessario creare un file host virtuale con le direttive corrette. Invece di modificare il file di configurazione predefinito che si trova <code>/etc/apache2/sites-available/000-default.conf</code> direttamente in, creiamone uno nuovo in :<code>/etc/apache2/sites-available/il_mio_dominio.conf</code></p>
<pre tabindex="0"><code>sudo nano /etc/apache2/sites-available/il_mio_dominio.conf
</code></pre><p>Incolla il seguente blocco di configurazione, che è simile a quello predefinito, ma aggiornato per la nostra nuova directory e nome di dominio:/etc/apache2/sites-available/il_mio_dominio.conf</p>
<pre tabindex="0"><code>&lt;VirtualHost *:80&gt;
    ServerAdmin webmaster@localhost
    ServerName il_mio_dominio
    ServerAlias www.il_mio_dominio
    DocumentRoot /var/www/il_mio_dominio
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
&lt;/VirtualHost&gt;
</code></pre><p>Nota che abbiamo aggiornato il <code>DocumentRoot</code> alla nostra nuova directory e <code>ServerAdmin</code> a un&rsquo;e-mail a cui l&rsquo; amministratore del sito <strong><strong>il_mio_dominio</strong></strong> può accedere. Abbiamo anche aggiunto due direttive: <code>ServerName</code>, che stabilisce il dominio di base che dovrebbe corrispondere a questa definizione di host virtuale e <code>ServerAlias</code>, che definisce altri nomi che dovrebbero corrispondere come se fossero il nome di base.</p>
<p>Salva e chiudi il file quando hai finito.</p>
<p>Abilitiamo ora il file con lo strumento <code>a2ensite</code>:</p>
<pre tabindex="0"><code>sudo a2ensite il_mio_dominio.conf
</code></pre><p>Disabilita infine il sito predefinito definito in <code>000-default.conf</code>:</p>
<pre tabindex="0"><code>sudo a2dissite 000-default.conf
</code></pre><p>Quindi, testiamo gli errori di configurazione:</p>
<pre tabindex="0"><code>sudo apache2ctl configtest
</code></pre><p>Dovresti vedere il seguente output:</p>
<pre tabindex="0"><code>OutputSyntax OK
</code></pre><p>Riavvia Apache per implementare le modifiche:</p>
<pre tabindex="0"><code>sudo systemctl restart apache2
</code></pre><p>Apache dovrebbe ora servire il tuo nome di dominio. Puoi testarlo navigando su <code>http://il_mio_dominio</code>, dovresti vedere la pagina HTML creata poco fa funzionare correttamente.</p>
<p>Con ciò, il tuo host virtuale è completamente configurato. Prima di apportare ulteriori modifiche o distribuire un&rsquo;applicazione, tuttavia, sarebbe utile testare in modo proattivo la configurazione PHP nel caso in cui ci siano problemi che dovrebbero essere risolti.</p>
<h2 id="passaggio-5-testare-lelaborazione-php-sul-server-web">Passaggio 5: testare l&rsquo;elaborazione PHP sul server Web</h2>
<p>Per verificare che il tuo sistema sia configurato correttamente per PHP, crea uno script PHP chiamato <code>info.php</code>. Affinché Apache possa trovare questo file e servirlo correttamente, deve essere salvato nella directory principale del Web.</p>
<p>Crea il file nella radice web che hai creato nel passaggio precedente eseguendo:</p>
<pre tabindex="0"><code>sudo nano /var/www/il_mio_dominio/info.php
</code></pre><p>Questo aprirà un file vuoto. Aggiungi il seguente testo, che è un codice PHP valido, all&rsquo;interno del file:</p>
<pre tabindex="0"><code>&lt;?php
phpinfo();
</code></pre><p>Al termine, salva e chiudi il file.</p>
<p>Ora puoi verificare se il tuo server web è in grado di visualizzare correttamente il contenuto generato da questo script PHP. Per provarlo, visita questa pagina nel tuo browser web. Avrai bisogno di nuovo dell&rsquo;indirizzo IP pubblico o del nome di dominio del tuo server.</p>
<p>L&rsquo;indirizzo che vorrai visitare è:</p>
<pre tabindex="0"><code>http://il_mio_dominio/info.php
</code></pre><p>La pagina a cui vieni dovrebbe assomigliare a questa:</p>
<p><img src="images/small_php_info_1804-796x1024.png" alt=""></p>
<p>Questa pagina fornisce alcune informazioni di base sul tuo server dal punto di vista di PHP. È utile per il debug e per garantire che le impostazioni vengano applicate correttamente.</p>
<p>Se riesci a vedere questa pagina nel tuo browser, il tuo PHP funziona come previsto.</p>
<p>Probabilmente vorrai rimuovere questo file dopo questo test perché potrebbe effettivamente fornire informazioni sul tuo server a utenti non autorizzati. Per fare ciò, esegui il seguente comando:</p>
<pre tabindex="0"><code>sudo rm /var/www/il_mio_dominio/info.php
</code></pre><p>Puoi sempre ricreare questa pagina se hai bisogno di accedere nuovamente alle informazioni in un secondo momento.</p>
<h2 id="conclusione">Conclusione</h2>
<p>Ora che hai installato uno stack LAMP, hai molte scelte su cosa fare dopo. Hai installato una piattaforma che ti consentirà di installare la maggior parte dei tipi di siti Web e software Web sul tuo server.</p>
<p>Non ti resta che iniziare a installare o sviluppare i tuoi siti in PHP sul tuo nuovo LAMP stack!</p>
<p>Buon codice!</p>
]]></content>
		</item>
		
		<item>
			<title>Web development on Linux</title>
			<link>https://albertoreineri.it/en/blog/web-development-on-linux/</link>
			<pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
			
			<guid>https://albertoreineri.it/en/blog/web-development-on-linux/</guid>
			<description>Development on Linux I have been developing software and websites for more than ten years now (with a break in between), and I have had the opportunity to use both Windows and Mac as well as Linux.
While I have primarily used Windows and Mac, during the last period where I worked closely with system administrators and did much more backend development than frontend, I felt the need to switch to something more performance-oriented for these activities.</description>
			<content type="html"><![CDATA[<h1 id="development-on-linux">Development on Linux</h1>
<p>I have been developing software and websites for more than ten years now (with a break in between), and I have had the opportunity to use both <a href="/blog/miglior-pc-per-sviluppatori-la-mia-esperienza/"><strong>Windows</strong></a> and <strong>Mac</strong> as well as <strong>Linux</strong>.</p>
<p>While I have primarily used <strong>Windows</strong> and <strong>Mac</strong>, during the last period where I worked closely with <strong>system administrators</strong> and did much more <strong>backend development</strong> than frontend, I felt the need to switch to something more <strong>performance-oriented</strong> for these activities.</p>
<h2 id="beginnings">Beginnings</h2>
<p>I started my career as a <strong>.NET developer.</strong> I used a PC with the marvelous <strong>Windows XP</strong>.</p>
<p>It truly was wonderful—<strong>stable</strong>, fast, capable of doing everything.</p>
<p>At that time, I used Visual Studio and developed <strong>management and CRM</strong> software for the <strong>Windows</strong> platform, so I was obliged to remain in the <strong>Microsoft</strong> environment.</p>
<p>Then I started developing some <strong>websites</strong>, always for the same company. Being proficient in .NET, we began developing with <strong>ASP</strong>, a language very similar to Visual Basic.</p>
<p>I remember that at the time, <strong>changing the operating system never even crossed my mind.</strong> Linux was still quite challenging, Mac was expensive, and neither allowed for developing software for Windows, so the matter ended there.</p>
<h2 id="my-first-mac">My first Mac</h2>
<p>With the first money I saved, I decided to buy my first Mac: a <strong>MacBook White</strong>.</p>
<p>I was fascinated by the Apple environment.</p>
<p>I made the purchase mainly to use it for <strong>recording music</strong>; I had no intention of using it for development.</p>
<p>I tried it at the beginning, but everything I was used to using didn&rsquo;t exist for Mac. Visual Studio wasn&rsquo;t available for Mac, and our sites ran on Windows servers, so there was nothing to be done.</p>
<p>I contented myself with the fantastic <strong>artistic department</strong> of the bitten apple. There was no comparison; drawing, video, and music software were decidedly on another level.</p>
<h2 id="a-period-of-pause">A period of pause</h2>
<p><strong>Then I stopped programming for a few years.</strong> I did something completely different; I graduated in a humanities subject and completely disconnected from computers.</p>
<p>I continued to use the <strong>Mac as a personal laptop</strong>, but I only used it for <strong>university</strong> and <strong>free time</strong>, and here I began to <strong>miss Windows</strong>.</p>
<p>The <strong>Office suite</strong>, the possibility of finding thousands of software for any type of problem, <strong>games</strong>, and much more were missing on the Mac&hellip;</p>
<p>So when the MacBook White finally died of old age (7 years of good service), <strong>I bought a Windows laptop.</strong></p>
<h2 id="return-to-windows">Return to Windows</h2>
<p>When I bought my current laptop, <strong>I was still studying</strong> and had not yet resumed my career as a developer, but <strong>I wanted to return to programming,</strong> to write some code, to develop something from scratch.</p>
<p>So I went to Unieuro and bought <strong>the laptop with the best value for money.</strong></p>
<h2 id="resuming-development">Resuming development</h2>
<p><strong>A year later, I started developing seriously again,</strong> and I felt great on <strong>Windows</strong>; after all, that&rsquo;s where I had started, and I felt at home.</p>
<p>Thanks to <strong>XAMPP</strong>, I could set up my own lamp stack in 5 minutes and start tinkering with <strong>WordPress</strong>, <strong>Laravel</strong>, and create my projects the way I prefer: using <strong>core PHP</strong>.</p>
<p>As I caught up with the times and learned to use the new tools, I increasingly realized that <strong>Windows was no longer the ideal choice for me.</strong></p>
<p>I was no longer creating management software but web applications, and <strong>the web runs on Linux.</strong></p>
<p>I started using <strong>Node.js</strong> and various <strong>JavaScript</strong> tools that work from the command line, and gradually, I began to discover how <strong>limiting PowerShell</strong> could be&hellip;</p>
<p>Then I expanded my skills as a backend developer, and here I had to make the leap to a <strong>more performant terminal</strong>, and that&rsquo;s when I discovered Linux.</p>
<p>I started using <strong>WSL</strong>, but it was all a bit <strong>too messy</strong> for my taste, so I switched to Linux proper.</p>
<h2 id="arrival-at-linux">Arrival at Linux</h2>
<p><strong>It wasn&rsquo;t love at first sight.</strong></p>
<p>I started installing Ubuntu as a virtual machine with <strong>VirtualBox</strong> to try to tinker a bit with the penguin.</p>
<p>The <strong>first impact</strong>, perhaps also due to a lifetime spent on other systems, was <strong>quite tragic</strong>&hellip;</p>
<p>Everything I wanted to do, I had to <strong>configure</strong>; there was very little that worked right away, and for a while, I abandoned the idea of Linux.</p>
<p>Then little by little, I <strong>reapproached it</strong>, trying to <strong>adapt my way of thinking to this system</strong>, and everything changed.</p>
<p>The trick is to <strong>stop wanting Linux to resemble Windows or Mac OS,</strong> but to try to understand what it really is; then you can appreciate its infinite qualities.</p>
<p>Installing libraries, managing components, using command-line software, <strong>everything is much easier on Linux</strong>, everything works on the first try.</p>
<p>Configuring Vagrant correctly on Windows took much more time than on Ubuntu, and so much more.</p>
<p>Most of the time, all you need to do is <strong>run a command from the terminal, and voilà</strong>, everything works perfectly.</p>
<p>As a developer from now on, I think I will only use Linux distros, leaving a partition with Windows in case I have to do specific work with Photoshop (currently happily replaced with Pixlr) or other software available only for Windows.</p>
<p>In addition to being better from a developer&rsquo;s perspective, there is also the whole issue of <strong>open source</strong> behind it, the largest community project in history, the <strong>opposition to multinational corporations</strong>, the <strong>fight against planned obsolescence of laptops</strong>, and much more, but this is not the time to address these issues.</p>
<h2 id="conclusion">Conclusion</h2>
<p>As a developer, I would suggest that anyone <strong>switch to Linux</strong> (except those developing for iOS or specifically for Windows). Certainly, <strong>the beginning is not easy</strong>; you need to tinker a bit, bump your head a few times, but once you get into the right <strong>mood</strong>, everything flows smoothly and quickly.</p>
<p>For now, I&rsquo;m getting along very well with <strong><a href="https://www.ubuntu-it.org/">Ubuntu</a></strong> because I like <strong>Gnome</strong>. I tried other distros, but in the end, there isn&rsquo;t much difference; everything can be installed on any distro. So I went for Ubuntu for its <strong>stability</strong>.</p>
<p>I have been using it as a <strong>primary system for a couple of months</strong> now, and I think it will remain so for a long time. This way, I can <strong>finally free myself from Apple&rsquo;s pressing marketing</strong>, which, to be honest, is a constant temptation but would end up making me a slave to the apple&hellip; You know that if you buy a Mac, you want an iPhone, then an iPad, and an Apple Watch, and in the end, you always use the same three apps&hellip;</p>
<p>Even <strong>Windows laptops</strong> are becoming increasingly <strong>beautiful</strong> and tempting, with hardware that seems to age faster and faster. Of course, if you put an i7 in an ultrabook without a cooling system, you either melt the PC or castrate it and turn it into an i3. In the end, it&rsquo;s all marketing&hellip;</p>
<p>With <strong>Linux</strong>, on the other hand, you can take an <strong>i5</strong> from any generation, throw in an **SSD</p>
<p>** and <strong>8GB</strong> of RAM, and you&rsquo;re good for years without performance issues and more.</p>
<p>Of course, there&rsquo;s the problem of <strong>battery life</strong>, which is not as well optimized on Linux&hellip; But in the end, I use <strong>Linux for work</strong>, connected to the power, and when I want to chill on the couch, I can use Windows and enjoy a few more hours away from the cables.</p>
]]></content>
		</item>
		
	</channel>
</rss>
